(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(e){function t(t){for(var r,l,i=t[0],s=t[1],c=t[2],d=0,m=[];d<i.length;d++)l=i[d],Object.prototype.hasOwnProperty.call(a,l)&&a[l]&&m.push(a[l][0]),a[l]=0;for(r in s)Object.prototype.hasOwnProperty.call(s,r)&&(e[r]=s[r]);for(p&&p(t);m.length;)m.shift()();return o.push.apply(o,c||[]),n()}function n(){for(var e,t=0;t<o.length;t++){for(var n=o[t],r=!0,i=1;i<n.length;i++){var s=n[i];0!==a[s]&&(r=!1)}r&&(o.splice(t--,1),e=l(l.s=n[0]))}return e}var r={},a={2:0},o=[];function l(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,l),n.l=!0,n.exports}l.e=function(e){var t=[],n=a[e];if(0!==n)if(n)t.push(n[2]);else{var r=new Promise((function(t,r){n=a[e]=[t,r]}));t.push(n[2]=r);var o,i=document.createElement("script");i.charset="utf-8",i.timeout=120,l.nc&&i.setAttribute("nonce",l.nc),i.src=function(e){return l.p+"assets/js/"+({1:"vendors~layout-Blog~layout-Layout~layout-NotFound",3:"layout-Blog",4:"layout-Layout",5:"layout-NotFound",6:"page-@property装饰器",7:"page-Arrayprototypeincludes()",8:"page-Array扩展",9:"page-BFC",10:"page-BigInt",11:"page-B端产品文案指南",12:"page-CSRF攻击",13:"page-CSS",14:"page-CSS引入方式",15:"page-CSS规范",16:"page-CSS问题",17:"page-Class",18:"page-CodeFormat工程化实践",19:"page-CodeReview",20:"page-Django",21:"page-Django+JWT实现Token认证",22:"page-Django与Celery的集成",23:"page-Django与Channels的集成",24:"page-Django与Guardian的集成",25:"page-Django内置权限系统使用",26:"page-Django内置权限系统扩展",27:"page-Django用户模型扩展重写",28:"page-Django设置Redis作为缓存",29:"page-ES6-ES12新特性",30:"page-ES中的概念与名词",31:"page-ES的安装",32:"page-ES集群性能优化小记录",33:"page-Elasticsearch",34:"page-Flexbox布局",35:"page-Function扩展",36:"page-Generator",37:"page-Git",38:"page-GitHooks工程化实践",39:"page-Git工作流—分支策略",40:"page-Git提交信息规范",41:"page-Grid布局",42:"page-HTML",43:"page-HTML基本结构",44:"page-HTML规范",45:"page-HTML问题",46:"page-HTTP错误状态码及排查路径",47:"page-Home",48:"page-IP地址",49:"page-JSON扩展",50:"page-JavaScript",51:"page-JavaScript手写函数",52:"page-JavaScript规范",53:"page-Linux系统是如何收发网络包的？",54:"page-Map",55:"page-Model字段与属性",56:"page-Module",57:"page-MySQL",58:"page-MySQL主键和自增ID",59:"page-MySQL事务的隔离性",60:"page-MySQL常用命令",61:"page-MySQL数据库设计规范",62:"page-MySQL数据类型",63:"page-MySQL的安装与卸载",64:"page-Nginx",65:"page-Nginx安全访问控制",66:"page-Nginx常用命令",67:"page-Nginx文件列表功能",68:"page-Nginx的卸载",69:"page-Nginx的安装",70:"page-Nginx设置开机自启",71:"page-Nginx部署Https安全认证",72:"page-Nginx部署前后端分离项目",73:"page-Nginx限流常用模块",74:"page-Nginx页面安全认证",75:"page-Ngixn配置文件模板",76:"page-Ngixn配置文件详解",77:"page-Number",78:"page-ORM增删改操作",79:"page-ObjectfromEntries()",80:"page-Object扩展",81:"page-PEP8风格",82:"page-Promise",83:"page-PromiseallSettled()",84:"page-Promiseany()和AggregateError",85:"page-Promiseprototypefinally()",86:"page-Proxy",87:"page-Python",88:"page-Python多版本虚拟环境共存",89:"page-React",90:"page-ReactHooks（内置）",91:"page-ReactHooks（自定义）",92:"page-ReactJSX",93:"page-Redis",94:"page-Redis常用命令",95:"page-Redis数据类型",96:"page-Redis的ACL安全策略",97:"page-Redis的安装与卸载",98:"page-Redis缓存三大问题",99:"page-Reflect",100:"page-RegExp扩展",101:"page-Set",102:"page-Signal监测model变化",103:"page-String扩展",104:"page-Symbol",105:"page-Symbol扩展",106:"page-TCP三次握手期间异常，会发生什么？",107:"page-TCP协议",108:"page-TCP协议重传机制",109:"page-TCP和UDP可以使用同一个端口吗？",110:"page-TCP四次挥手期间异常，会发生什么？",111:"page-Term查询语法",112:"page-TypeScript",113:"page-UDP协议",114:"page-UML类图",115:"page-V8引擎的工作原理",116:"page-Vue3源码中的基础工具函数",117:"page-Vuejs",118:"page-Vue项目规范",119:"page-Webpack5",120:"page-asyncawait",121:"page-clone速度过慢",122:"page-crontab命令",123:"page-filter()使用isnull参数时返回重复对象",124:"page-forawaitof",125:"page-gitrebase的两种用法",126:"page-globalThis",127:"page-let和const",128:"page-model元数据Meta",129:"page-model外键关系",130:"page-model查询检索操作",131:"page-model的继承",132:"page-npm、yarn、pnpm区别",133:"page-pull时发现代码冲突，如何解决",134:"page-super()函数",135:"page-this指向",136:"page-中介者模式",137:"page-事件循环机制，微任务和宏任务的关系",138:"page-产品与人性28个心理学效应",139:"page-享元模式",140:"page-代理模式",141:"page-代码风格",142:"page-伪元素和伪类",143:"page-作用域",144:"page-使用Celery实现任务调度",145:"page-使用Fabric执行SSH",146:"page-使用Paramiko执行SSH",147:"page-使用logging配置日志的方式",148:"page-使用openpyxl处理新版本Excel",149:"page-使用smtplib发送电子邮件",150:"page-使用subprocess执行cmd",151:"page-使用telnetlib执行Telnet",152:"page-使用xlrd处理旧版本Excel",153:"page-修订FunctionprototypetoString()",154:"page-全局解释器锁（GIL）",155:"page-全文搜索语法",156:"page-公共变量、私有变量、保护变量",157:"page-关于本站",158:"page-内置类型和类型断言",159:"page-函数与class类型",160:"page-函数参数",161:"page-函数类型",162:"page-函数组件设计模式",163:"page-函数装饰器",164:"page-分组查询语法",165:"page-分词器的原理和使用",166:"page-分页查询的三种语法",167:"page-切片",168:"page-刚刚的commit有误，想要撤回",169:"page-刚刚的push有误，想要撤回",170:"page-前端登录方案总结",171:"page-前端路由原理",172:"page-动态引入",173:"page-包管理工具",174:"page-协程",175:"page-单例模式",176:"page-原型与原型链",177:"page-原型模式",178:"page-反射",179:"page-受控组件和非受控组件",180:"page-变量与常量",181:"page-可选的CatchBinding",182:"page-可选链Optionalchaining",183:"page-同步与异步",184:"page-同源策略",185:"page-命令模式",186:"page-命令行操作",187:"page-哈喽，欢迎你来到了这个页面",188:"page-响应式原理",189:"page-回流与重绘",190:"page-垃圾回收",191:"page-基本配置",192:"page-基础入门",193:"page-基础用法要点",194:"page-基础类型（始于JS）",195:"page-声明函数的六种方式",196:"page-备忘录模式",197:"page-复杂度分析",198:"page-外观模式",199:"page-多线程、多进程",200:"page-大文件分片上传和断点续传",201:"page-如何使用GitFlow工作流进行团队协作",202:"page-如何修改commit信息",203:"page-如何修改历史commits中的用户名和邮箱",204:"page-如何参与开源项目-提交PR与更新Fork分支",205:"page-如何查看ORM对应的SQL语句",206:"page-如何迁移仓库并保留commits记录",207:"page-如何限制用户可使用的命令",208:"page-如果已经建立了连接，但是客户端突然出现故障了怎么办？",209:"page-如果已经建立了连接，但是服务端的进程崩溃会发生什么？",210:"page-子查询语法",211:"page-字面量类型",212:"page-字面量类型与枚举",213:"page-定义字段类型：Mapping",214:"page-定位（position）",215:"page-实例方法、类方法、静态方法",216:"page-实现Objectcreate方法",217:"page-实现apply方法",218:"page-实现bind方法",219:"page-实现call方法",220:"page-实现instanceof运算符",221:"page-实现new运算符",222:"page-实现单例模式",223:"page-实现对象数组去重的方法",224:"page-实现数组去重的方法",225:"page-实现数组扁平化flat方法",226:"page-实现浅拷贝（shallowClone）",227:"page-实现深拷贝（deepClone）",228:"page-实现符合PromisesA+规范的Promise",229:"page-实现节流函数（throttle）",230:"page-实现防抖函数（debounce）",231:"page-对象遍历的几种方式",232:"page-导出导入数据库表数据",233:"page-尾逗号Trailingcommas",234:"page-嵌套类型和父子文档",235:"page-工厂模式",236:"page-已commit未push，想修改代码",237:"page-已commit未push，漏提交文件",238:"page-常用命令",239:"page-常用命令清单",240:"page-幂运算符",241:"page-库和表的基本操作",242:"page-建造者模式",243:"page-性能优化-产出代码",244:"page-性能优化-构建速度",245:"page-执行migrate时报错SQLite版本过低",246:"page-执行上下文和调用栈",247:"page-抓包与分析",248:"page-抽象工厂模式",249:"page-拔掉网线几秒再插回去，原本的TCP连接还在吗？",250:"page-接口类型与类型别名",251:"page-接口设计",252:"page-搜索词自动补全语法",253:"page-数字分隔符",254:"page-数据的增删改",255:"page-数据类型",256:"page-数据结构与算法",257:"page-数据结构之数组",258:"page-数据结构之链表",259:"page-数组遍历的几种方式",260:"page-文案指南",261:"page-文档基本操作",262:"page-文档规范",263:"page-新的逻辑操作符",264:"page-更新日志",265:"page-最佳实践-通用模板",266:"page-未完待续",267:"page-条件查询语法",268:"page-枚举",269:"page-栈空间和堆空间",270:"page-核心概念",271:"page-桥接模式",272:"page-模板方法模式",273:"page-模板编译",274:"page-正向代理与反向代理",275:"page-正排索引与倒排索引",276:"page-泛型",277:"page-浅克隆与深克隆",278:"page-浏览器内核与JavaScript引擎",279:"page-浏览器宏观认识",280:"page-浏览器相关",281:"page-浏览器缓存机制",282:"page-浮动（float）",283:"page-渲染引擎的工作原理",284:"page-源码阅读与学习",285:"page-版本号定义规范",286:"page-版本控制",287:"page-状态模式",288:"page-生成器generator",289:"page-盒模型",290:"page-空值合并运算符",291:"page-策略模式",292:"page-简单查询语法",293:"page-类变量和实例变量",294:"page-类和实例",295:"page-类型创建",296:"page-类型守卫",297:"page-类型安全保护",298:"page-类型提示TypeHints",299:"page-类型提示进阶：typing模块",300:"page-类的继承",301:"page-类私有域",302:"page-类类型",303:"page-索引模板：IndexTemplate",304:"page-索引管理API",305:"page-组件渲染与更新",306:"page-组合查询语法",307:"page-组合模式",308:"page-经典布局",309:"page-统计语法：聚合查询",310:"page-继承的八种方式",311:"page-编译器与解释器",312:"page-网络分层模型",313:"page-网络安全协议（HTTPS）",314:"page-网络排查工具",315:"page-职责链模式",316:"page-联合类型与交叉类型",317:"page-虚拟DOM与diff算法",318:"page-表中列的基本属性",319:"page-表达式和函数",320:"page-装饰器模式",321:"page-观察者模式",322:"page-解决vim中文乱码问题",323:"page-解决方案",324:"page-解构赋值",325:"page-计算机网络",326:"page-认知偏差知识手册",327:"page-设计原则",328:"page-设计模式",329:"page-设计模式简介",330:"page-访问者模式和解释器模式",331:"page-语义类标签",332:"page-语法规范",333:"page-课外学习",334:"page-调用函数的四种方式",335:"page-负载均衡",336:"page-跨站脚本攻击（XSS）",337:"page-输入URL到页面展示，中间发生了什么？",338:"page-连接查询语法",339:"page-迭代器Iterator",340:"page-迭代器模式",341:"page-适配器模式",342:"page-选择器与样式优先级",343:"page-部署纯净的Ubuntu系统",344:"page-配置密钥实现免密操作",345:"page-错误和异常",346:"page-长度和单位",347:"page-闭包",348:"page-问题排查",349:"page-集群管理API",350:"page-面向对象编程",351:"page-高性能渲染大量数据（虚拟列表）",352:"page-高级用法特性",353:"page-高级配置",354:"page-高阶函数",355:"page-魔术方法（双下划线方法）",356:"vendors~layout-Layout",357:"vendors~layout-Slide"}[e]||e)+"."+{1:"134d651c",3:"f44eb002",4:"f12fcd54",5:"ad0b1265",6:"3668c600",7:"2c49f7db",8:"fc417e20",9:"8eb3c626",10:"14105ef2",11:"c7525e3c",12:"76824564",13:"c4f059c5",14:"3dbde26a",15:"fd5c9195",16:"1580a163",17:"82707b5d",18:"5894fa6e",19:"61c34158",20:"4c6635e5",21:"65995acd",22:"938fb6da",23:"d72bc634",24:"ee15353c",25:"ee42cff3",26:"e5341fbc",27:"2a54a8b2",28:"2b3e5df3",29:"1189ac8b",30:"dfdfe9c9",31:"d3ca38e3",32:"380f275d",33:"62366494",34:"916f7ccc",35:"8c70b25b",36:"8a22087a",37:"d2a32762",38:"69260301",39:"65463d44",40:"81595ae2",41:"47235a7b",42:"c8897828",43:"758c47d8",44:"8d226636",45:"85739f3b",46:"eb323cb8",47:"660c1b05",48:"12030b50",49:"e85a2008",50:"90715711",51:"c6bf0bc4",52:"93623e57",53:"f7add059",54:"22616437",55:"a306da02",56:"d80d9e3d",57:"6a0f9cd4",58:"58bdedef",59:"1fcb7a0c",60:"1a92287d",61:"6129847c",62:"42fe379a",63:"f077001c",64:"72d7a36e",65:"ac88c018",66:"459b14f8",67:"ceb021ff",68:"fc5f39f3",69:"d0b3fded",70:"72445c57",71:"17535bf0",72:"9611bdd0",73:"1e57f519",74:"bd544df8",75:"16f5e98e",76:"376060a2",77:"2a16116b",78:"6e803b89",79:"31974aaf",80:"999ea561",81:"1706308a",82:"a5b37430",83:"fe56239c",84:"43e22737",85:"44eee3aa",86:"1ef8651f",87:"49304a8f",88:"4f4e18ae",89:"def90b63",90:"e842130a",91:"4d0d13e3",92:"b61c6435",93:"13cd5b21",94:"f7284687",95:"bc88fd9f",96:"67b18044",97:"c54c897d",98:"8960f81f",99:"fee17efc",100:"b617fefb",101:"c08d3f1f",102:"bb30cb6f",103:"ffe250bb",104:"431425cf",105:"f6dab6fa",106:"acff101d",107:"d586fc56",108:"e3b252c3",109:"45e31bbc",110:"914b9904",111:"2564cfcd",112:"0fc82165",113:"9148f357",114:"187abf88",115:"77d340d3",116:"43e96174",117:"ec99fd92",118:"c17e63fa",119:"4a2dc966",120:"da9af591",121:"c03fc100",122:"22209195",123:"645b7359",124:"9c45b4cd",125:"b442449c",126:"7a049c23",127:"536a2640",128:"eefd211e",129:"1535df53",130:"972449f7",131:"2c649a95",132:"68c2c66c",133:"484eb24a",134:"2ea8f449",135:"293ff745",136:"2acc4ebe",137:"bf583045",138:"7c1b1d6e",139:"49c0ac1f",140:"e61fd3c2",141:"a5174808",142:"807c7260",143:"d57d1674",144:"e5236de4",145:"33a1e526",146:"e9bb9060",147:"72587054",148:"037aee65",149:"c05f1329",150:"e54668cf",151:"3b877f4d",152:"bf082dae",153:"fbf47e40",154:"91fd0077",155:"3ad59df3",156:"fdfdc7fb",157:"9acb253d",158:"7e165819",159:"c6985cab",160:"5bbc4782",161:"22be2134",162:"cddb5b83",163:"e5217a65",164:"b9973021",165:"a820c972",166:"1a9eeed4",167:"8cb22167",168:"bd642691",169:"7a195e4a",170:"dfa01abd",171:"069d9899",172:"640ac09d",173:"a1df03b5",174:"869c122c",175:"ec795137",176:"0cc41ac7",177:"376d2eea",178:"1569aebb",179:"d86e4f08",180:"70f9f3cf",181:"404a54a4",182:"a57d74cd",183:"405e4da7",184:"ac407a77",185:"730400e0",186:"eaf15cd2",187:"5c8140a0",188:"8e70ec27",189:"dc1dbeec",190:"3d0082a7",191:"aeb9c7d0",192:"70921f9e",193:"6cb8fcfe",194:"bc1ab59d",195:"a03075d8",196:"57194522",197:"18f32a1a",198:"9a5358ff",199:"08a9ad81",200:"6d1a9d4d",201:"094b9095",202:"c4ad88f5",203:"0f944b55",204:"87cd8e56",205:"408553ac",206:"bc2c112d",207:"dfe07738",208:"d390dc53",209:"18c0cbb3",210:"ca70d555",211:"13ab9b21",212:"2efdbc22",213:"04604985",214:"23d6229e",215:"5e797b34",216:"7a1f19ce",217:"f5ce9a75",218:"876a6d0e",219:"79582946",220:"792d0253",221:"3db85ab9",222:"b4f38d61",223:"d7740663",224:"477b0eda",225:"035af8fd",226:"adb94473",227:"45ea5f15",228:"b54af0a8",229:"f3060ba1",230:"b11fa06b",231:"84a13d95",232:"04bf2116",233:"a88a468c",234:"bd6bfc1d",235:"73746eab",236:"aca4ab71",237:"b85568c4",238:"fefd994a",239:"25968e54",240:"a71efa15",241:"c7f57870",242:"122a5c6a",243:"bab7fe4e",244:"8499e583",245:"63c5caee",246:"5fd4dbee",247:"99e5d51c",248:"6c8f1904",249:"8d834a3c",250:"b1123ebb",251:"1e496980",252:"1a482242",253:"0f211055",254:"15bd280c",255:"e092040f",256:"54a3f85f",257:"d54974fd",258:"f121c8e8",259:"c5d42b60",260:"5e7b7650",261:"38f66b58",262:"a81cdb7e",263:"a14b4a8f",264:"f70eeda4",265:"36385773",266:"411435d1",267:"622068f1",268:"27c0b8b2",269:"418c1ee0",270:"b220c974",271:"e26f553f",272:"d44779e0",273:"6cd54097",274:"d68d371b",275:"dbbb76dc",276:"8c27a5e0",277:"02c5732c",278:"b98efd14",279:"7a202370",280:"cdb3a3c3",281:"e14014c4",282:"99228a09",283:"1359a50b",284:"bfd40f73",285:"8cf01932",286:"dc5d3760",287:"1fe0ff96",288:"c93e274a",289:"c0c98c3e",290:"bcf16b29",291:"ff5bd76b",292:"1b281b2a",293:"4e2e851a",294:"538530e2",295:"e87a282c",296:"daa332c4",297:"a44d040d",298:"15adacbf",299:"b718fcd6",300:"4f0e9146",301:"ce6ff247",302:"55704110",303:"3b99c6db",304:"0b007d75",305:"5847a20d",306:"18d8f76b",307:"5f1e5d17",308:"7378d5be",309:"c3fb7323",310:"523f20bf",311:"eef95051",312:"16b68ebb",313:"3be573ab",314:"42f792a1",315:"7f4f577b",316:"11a48d32",317:"4184b331",318:"6eba9c98",319:"194171dc",320:"0c67e2f9",321:"0b4dc64a",322:"118100fd",323:"de9690ac",324:"14f5f0c4",325:"efedcfc9",326:"795cbc09",327:"1351bcce",328:"c4bb4c2f",329:"27249c9e",330:"b2677e30",331:"cf340a2a",332:"3e53196c",333:"282560ed",334:"8021bc42",335:"345446a9",336:"6b25e1aa",337:"eb667f6e",338:"1a59af17",339:"9d0b9d70",340:"3a7783e7",341:"b6dbcba7",342:"bc41c512",343:"ad3696f1",344:"5d3fa3f1",345:"6613df4d",346:"7e4611af",347:"aafdee33",348:"f4bfde52",349:"dd618e5c",350:"30fa7f63",351:"fb51a2fb",352:"5bc8463b",353:"f907a7f4",354:"c2542744",355:"ad44412e",356:"5215480c",357:"f85d9236"}[e]+".js"}(e);var s=new Error;o=function(t){i.onerror=i.onload=null,clearTimeout(c);var n=a[e];if(0!==n){if(n){var r=t&&("load"===t.type?"missing":t.type),o=t&&t.target&&t.target.src;s.message="Loading chunk "+e+" failed.\n("+r+": "+o+")",s.name="ChunkLoadError",s.type=r,s.request=o,n[1](s)}a[e]=void 0}};var c=setTimeout((function(){o({type:"timeout",target:i})}),12e4);i.onerror=i.onload=o,document.head.appendChild(i)}return Promise.all(t)},l.m=e,l.c=r,l.d=function(e,t,n){l.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},l.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,t){if(1&t&&(e=l(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(l.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)l.d(n,r,function(t){return e[t]}.bind(null,r));return n},l.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return l.d(t,"a",t),t},l.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},l.p="/",l.oe=function(e){throw console.error(e),e};var i=window.webpackJsonp=window.webpackJsonp||[],s=i.push.bind(i);i.push=t,i=i.slice();for(var c=0;c<i.length;c++)t(i[c]);var p=s;o.push([59,0]),n()}([function(e,t,n){"use strict";
/*!
 * Vue.js v2.6.14
 * (c) 2014-2021 Evan You
 * Released under the MIT License.
 */var r=Object.freeze({});function a(e){return null==e}function o(e){return null!=e}function l(e){return!0===e}function i(e){return"string"==typeof e||"number"==typeof e||"symbol"==typeof e||"boolean"==typeof e}function s(e){return null!==e&&"object"==typeof e}var c=Object.prototype.toString;function p(e){return"[object Object]"===c.call(e)}function d(e){return"[object RegExp]"===c.call(e)}function m(e){var t=parseFloat(String(e));return t>=0&&Math.floor(t)===t&&isFinite(e)}function u(e){return o(e)&&"function"==typeof e.then&&"function"==typeof e.catch}function g(e){return null==e?"":Array.isArray(e)||p(e)&&e.toString===c?JSON.stringify(e,null,2):String(e)}function h(e){var t=parseFloat(e);return isNaN(t)?e:t}function y(e,t){for(var n=Object.create(null),r=e.split(","),a=0;a<r.length;a++)n[r[a]]=!0;return t?function(e){return n[e.toLowerCase()]}:function(e){return n[e]}}y("slot,component",!0);var v=y("key,ref,slot,slot-scope,is");function f(e,t){if(e.length){var n=e.indexOf(t);if(n>-1)return e.splice(n,1)}}var b=Object.prototype.hasOwnProperty;function w(e,t){return b.call(e,t)}function k(e){var t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}var T=/-(\w)/g,x=k((function(e){return e.replace(T,(function(e,t){return t?t.toUpperCase():""}))})),S=k((function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),E=/\B([A-Z])/g,_=k((function(e){return e.replace(E,"-$1").toLowerCase()}));var P=Function.prototype.bind?function(e,t){return e.bind(t)}:function(e,t){function n(n){var r=arguments.length;return r?r>1?e.apply(t,arguments):e.call(t,n):e.call(t)}return n._length=e.length,n};function j(e,t){t=t||0;for(var n=e.length-t,r=new Array(n);n--;)r[n]=e[n+t];return r}function C(e,t){for(var n in t)e[n]=t[n];return e}function L(e){for(var t={},n=0;n<e.length;n++)e[n]&&C(t,e[n]);return t}function A(e,t,n){}var N=function(e,t,n){return!1},B=function(e){return e};function M(e,t){if(e===t)return!0;var n=s(e),r=s(t);if(!n||!r)return!n&&!r&&String(e)===String(t);try{var a=Array.isArray(e),o=Array.isArray(t);if(a&&o)return e.length===t.length&&e.every((function(e,n){return M(e,t[n])}));if(e instanceof Date&&t instanceof Date)return e.getTime()===t.getTime();if(a||o)return!1;var l=Object.keys(e),i=Object.keys(t);return l.length===i.length&&l.every((function(n){return M(e[n],t[n])}))}catch(e){return!1}}function O(e,t){for(var n=0;n<e.length;n++)if(M(e[n],t))return n;return-1}function z(e){var t=!1;return function(){t||(t=!0,e.apply(this,arguments))}}var R=["component","directive","filter"],D=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],I={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:N,isReservedAttr:N,isUnknownElement:N,getTagNamespace:A,parsePlatformTagName:B,mustUseProp:N,async:!0,_lifecycleHooks:D},q=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function $(e,t,n,r){Object.defineProperty(e,t,{value:n,enumerable:!!r,writable:!0,configurable:!0})}var H=new RegExp("[^"+q.source+".$_\\d]");var F,U="__proto__"in{},J="undefined"!=typeof window,G="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,Q=G&&WXEnvironment.platform.toLowerCase(),V=J&&window.navigator.userAgent.toLowerCase(),W=V&&/msie|trident/.test(V),X=V&&V.indexOf("msie 9.0")>0,K=V&&V.indexOf("edge/")>0,Y=(V&&V.indexOf("android"),V&&/iphone|ipad|ipod|ios/.test(V)||"ios"===Q),Z=(V&&/chrome\/\d+/.test(V),V&&/phantomjs/.test(V),V&&V.match(/firefox\/(\d+)/)),ee={}.watch,te=!1;if(J)try{var ne={};Object.defineProperty(ne,"passive",{get:function(){te=!0}}),window.addEventListener("test-passive",null,ne)}catch(e){}var re=function(){return void 0===F&&(F=!J&&!G&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),F},ae=J&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function oe(e){return"function"==typeof e&&/native code/.test(e.toString())}var le,ie="undefined"!=typeof Symbol&&oe(Symbol)&&"undefined"!=typeof Reflect&&oe(Reflect.ownKeys);le="undefined"!=typeof Set&&oe(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var se=A,ce=0,pe=function(){this.id=ce++,this.subs=[]};pe.prototype.addSub=function(e){this.subs.push(e)},pe.prototype.removeSub=function(e){f(this.subs,e)},pe.prototype.depend=function(){pe.target&&pe.target.addDep(this)},pe.prototype.notify=function(){var e=this.subs.slice();for(var t=0,n=e.length;t<n;t++)e[t].update()},pe.target=null;var de=[];function me(e){de.push(e),pe.target=e}function ue(){de.pop(),pe.target=de[de.length-1]}var ge=function(e,t,n,r,a,o,l,i){this.tag=e,this.data=t,this.children=n,this.text=r,this.elm=a,this.ns=void 0,this.context=o,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=t&&t.key,this.componentOptions=l,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=i,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},he={child:{configurable:!0}};he.child.get=function(){return this.componentInstance},Object.defineProperties(ge.prototype,he);var ye=function(e){void 0===e&&(e="");var t=new ge;return t.text=e,t.isComment=!0,t};function ve(e){return new ge(void 0,void 0,void 0,String(e))}function fe(e){var t=new ge(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return t.ns=e.ns,t.isStatic=e.isStatic,t.key=e.key,t.isComment=e.isComment,t.fnContext=e.fnContext,t.fnOptions=e.fnOptions,t.fnScopeId=e.fnScopeId,t.asyncMeta=e.asyncMeta,t.isCloned=!0,t}var be=Array.prototype,we=Object.create(be);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(e){var t=be[e];$(we,e,(function(){for(var n=[],r=arguments.length;r--;)n[r]=arguments[r];var a,o=t.apply(this,n),l=this.__ob__;switch(e){case"push":case"unshift":a=n;break;case"splice":a=n.slice(2)}return a&&l.observeArray(a),l.dep.notify(),o}))}));var ke=Object.getOwnPropertyNames(we),Te=!0;function xe(e){Te=e}var Se=function(e){this.value=e,this.dep=new pe,this.vmCount=0,$(e,"__ob__",this),Array.isArray(e)?(U?function(e,t){e.__proto__=t}(e,we):function(e,t,n){for(var r=0,a=n.length;r<a;r++){var o=n[r];$(e,o,t[o])}}(e,we,ke),this.observeArray(e)):this.walk(e)};function Ee(e,t){var n;if(s(e)&&!(e instanceof ge))return w(e,"__ob__")&&e.__ob__ instanceof Se?n=e.__ob__:Te&&!re()&&(Array.isArray(e)||p(e))&&Object.isExtensible(e)&&!e._isVue&&(n=new Se(e)),t&&n&&n.vmCount++,n}function _e(e,t,n,r,a){var o=new pe,l=Object.getOwnPropertyDescriptor(e,t);if(!l||!1!==l.configurable){var i=l&&l.get,s=l&&l.set;i&&!s||2!==arguments.length||(n=e[t]);var c=!a&&Ee(n);Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){var t=i?i.call(e):n;return pe.target&&(o.depend(),c&&(c.dep.depend(),Array.isArray(t)&&Ce(t))),t},set:function(t){var r=i?i.call(e):n;t===r||t!=t&&r!=r||i&&!s||(s?s.call(e,t):n=t,c=!a&&Ee(t),o.notify())}})}}function Pe(e,t,n){if(Array.isArray(e)&&m(t))return e.length=Math.max(e.length,t),e.splice(t,1,n),n;if(t in e&&!(t in Object.prototype))return e[t]=n,n;var r=e.__ob__;return e._isVue||r&&r.vmCount?n:r?(_e(r.value,t,n),r.dep.notify(),n):(e[t]=n,n)}function je(e,t){if(Array.isArray(e)&&m(t))e.splice(t,1);else{var n=e.__ob__;e._isVue||n&&n.vmCount||w(e,t)&&(delete e[t],n&&n.dep.notify())}}function Ce(e){for(var t=void 0,n=0,r=e.length;n<r;n++)(t=e[n])&&t.__ob__&&t.__ob__.dep.depend(),Array.isArray(t)&&Ce(t)}Se.prototype.walk=function(e){for(var t=Object.keys(e),n=0;n<t.length;n++)_e(e,t[n])},Se.prototype.observeArray=function(e){for(var t=0,n=e.length;t<n;t++)Ee(e[t])};var Le=I.optionMergeStrategies;function Ae(e,t){if(!t)return e;for(var n,r,a,o=ie?Reflect.ownKeys(t):Object.keys(t),l=0;l<o.length;l++)"__ob__"!==(n=o[l])&&(r=e[n],a=t[n],w(e,n)?r!==a&&p(r)&&p(a)&&Ae(r,a):Pe(e,n,a));return e}function Ne(e,t,n){return n?function(){var r="function"==typeof t?t.call(n,n):t,a="function"==typeof e?e.call(n,n):e;return r?Ae(r,a):a}:t?e?function(){return Ae("function"==typeof t?t.call(this,this):t,"function"==typeof e?e.call(this,this):e)}:t:e}function Be(e,t){var n=t?e?e.concat(t):Array.isArray(t)?t:[t]:e;return n?function(e){for(var t=[],n=0;n<e.length;n++)-1===t.indexOf(e[n])&&t.push(e[n]);return t}(n):n}function Me(e,t,n,r){var a=Object.create(e||null);return t?C(a,t):a}Le.data=function(e,t,n){return n?Ne(e,t,n):t&&"function"!=typeof t?e:Ne(e,t)},D.forEach((function(e){Le[e]=Be})),R.forEach((function(e){Le[e+"s"]=Me})),Le.watch=function(e,t,n,r){if(e===ee&&(e=void 0),t===ee&&(t=void 0),!t)return Object.create(e||null);if(!e)return t;var a={};for(var o in C(a,e),t){var l=a[o],i=t[o];l&&!Array.isArray(l)&&(l=[l]),a[o]=l?l.concat(i):Array.isArray(i)?i:[i]}return a},Le.props=Le.methods=Le.inject=Le.computed=function(e,t,n,r){if(!e)return t;var a=Object.create(null);return C(a,e),t&&C(a,t),a},Le.provide=Ne;var Oe=function(e,t){return void 0===t?e:t};function ze(e,t,n){if("function"==typeof t&&(t=t.options),function(e,t){var n=e.props;if(n){var r,a,o={};if(Array.isArray(n))for(r=n.length;r--;)"string"==typeof(a=n[r])&&(o[x(a)]={type:null});else if(p(n))for(var l in n)a=n[l],o[x(l)]=p(a)?a:{type:a};else 0;e.props=o}}(t),function(e,t){var n=e.inject;if(n){var r=e.inject={};if(Array.isArray(n))for(var a=0;a<n.length;a++)r[n[a]]={from:n[a]};else if(p(n))for(var o in n){var l=n[o];r[o]=p(l)?C({from:o},l):{from:l}}else 0}}(t),function(e){var t=e.directives;if(t)for(var n in t){var r=t[n];"function"==typeof r&&(t[n]={bind:r,update:r})}}(t),!t._base&&(t.extends&&(e=ze(e,t.extends,n)),t.mixins))for(var r=0,a=t.mixins.length;r<a;r++)e=ze(e,t.mixins[r],n);var o,l={};for(o in e)i(o);for(o in t)w(e,o)||i(o);function i(r){var a=Le[r]||Oe;l[r]=a(e[r],t[r],n,r)}return l}function Re(e,t,n,r){if("string"==typeof n){var a=e[t];if(w(a,n))return a[n];var o=x(n);if(w(a,o))return a[o];var l=S(o);return w(a,l)?a[l]:a[n]||a[o]||a[l]}}function De(e,t,n,r){var a=t[e],o=!w(n,e),l=n[e],i=He(Boolean,a.type);if(i>-1)if(o&&!w(a,"default"))l=!1;else if(""===l||l===_(e)){var s=He(String,a.type);(s<0||i<s)&&(l=!0)}if(void 0===l){l=function(e,t,n){if(!w(t,"default"))return;var r=t.default;0;if(e&&e.$options.propsData&&void 0===e.$options.propsData[n]&&void 0!==e._props[n])return e._props[n];return"function"==typeof r&&"Function"!==qe(t.type)?r.call(e):r}(r,a,e);var c=Te;xe(!0),Ee(l),xe(c)}return l}var Ie=/^\s*function (\w+)/;function qe(e){var t=e&&e.toString().match(Ie);return t?t[1]:""}function $e(e,t){return qe(e)===qe(t)}function He(e,t){if(!Array.isArray(t))return $e(t,e)?0:-1;for(var n=0,r=t.length;n<r;n++)if($e(t[n],e))return n;return-1}function Fe(e,t,n){me();try{if(t)for(var r=t;r=r.$parent;){var a=r.$options.errorCaptured;if(a)for(var o=0;o<a.length;o++)try{if(!1===a[o].call(r,e,t,n))return}catch(e){Je(e,r,"errorCaptured hook")}}Je(e,t,n)}finally{ue()}}function Ue(e,t,n,r,a){var o;try{(o=n?e.apply(t,n):e.call(t))&&!o._isVue&&u(o)&&!o._handled&&(o.catch((function(e){return Fe(e,r,a+" (Promise/async)")})),o._handled=!0)}catch(e){Fe(e,r,a)}return o}function Je(e,t,n){if(I.errorHandler)try{return I.errorHandler.call(null,e,t,n)}catch(t){t!==e&&Ge(t,null,"config.errorHandler")}Ge(e,t,n)}function Ge(e,t,n){if(!J&&!G||"undefined"==typeof console)throw e;console.error(e)}var Qe,Ve=!1,We=[],Xe=!1;function Ke(){Xe=!1;var e=We.slice(0);We.length=0;for(var t=0;t<e.length;t++)e[t]()}if("undefined"!=typeof Promise&&oe(Promise)){var Ye=Promise.resolve();Qe=function(){Ye.then(Ke),Y&&setTimeout(A)},Ve=!0}else if(W||"undefined"==typeof MutationObserver||!oe(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Qe="undefined"!=typeof setImmediate&&oe(setImmediate)?function(){setImmediate(Ke)}:function(){setTimeout(Ke,0)};else{var Ze=1,et=new MutationObserver(Ke),tt=document.createTextNode(String(Ze));et.observe(tt,{characterData:!0}),Qe=function(){Ze=(Ze+1)%2,tt.data=String(Ze)},Ve=!0}function nt(e,t){var n;if(We.push((function(){if(e)try{e.call(t)}catch(e){Fe(e,t,"nextTick")}else n&&n(t)})),Xe||(Xe=!0,Qe()),!e&&"undefined"!=typeof Promise)return new Promise((function(e){n=e}))}var rt=new le;function at(e){!function e(t,n){var r,a,o=Array.isArray(t);if(!o&&!s(t)||Object.isFrozen(t)||t instanceof ge)return;if(t.__ob__){var l=t.__ob__.dep.id;if(n.has(l))return;n.add(l)}if(o)for(r=t.length;r--;)e(t[r],n);else for(a=Object.keys(t),r=a.length;r--;)e(t[a[r]],n)}(e,rt),rt.clear()}var ot=k((function(e){var t="&"===e.charAt(0),n="~"===(e=t?e.slice(1):e).charAt(0),r="!"===(e=n?e.slice(1):e).charAt(0);return{name:e=r?e.slice(1):e,once:n,capture:r,passive:t}}));function lt(e,t){function n(){var e=arguments,r=n.fns;if(!Array.isArray(r))return Ue(r,null,arguments,t,"v-on handler");for(var a=r.slice(),o=0;o<a.length;o++)Ue(a[o],null,e,t,"v-on handler")}return n.fns=e,n}function it(e,t,n,r,o,i){var s,c,p,d;for(s in e)c=e[s],p=t[s],d=ot(s),a(c)||(a(p)?(a(c.fns)&&(c=e[s]=lt(c,i)),l(d.once)&&(c=e[s]=o(d.name,c,d.capture)),n(d.name,c,d.capture,d.passive,d.params)):c!==p&&(p.fns=c,e[s]=p));for(s in t)a(e[s])&&r((d=ot(s)).name,t[s],d.capture)}function st(e,t,n){var r;e instanceof ge&&(e=e.data.hook||(e.data.hook={}));var i=e[t];function s(){n.apply(this,arguments),f(r.fns,s)}a(i)?r=lt([s]):o(i.fns)&&l(i.merged)?(r=i).fns.push(s):r=lt([i,s]),r.merged=!0,e[t]=r}function ct(e,t,n,r,a){if(o(t)){if(w(t,n))return e[n]=t[n],a||delete t[n],!0;if(w(t,r))return e[n]=t[r],a||delete t[r],!0}return!1}function pt(e){return i(e)?[ve(e)]:Array.isArray(e)?function e(t,n){var r,s,c,p,d=[];for(r=0;r<t.length;r++)a(s=t[r])||"boolean"==typeof s||(c=d.length-1,p=d[c],Array.isArray(s)?s.length>0&&(dt((s=e(s,(n||"")+"_"+r))[0])&&dt(p)&&(d[c]=ve(p.text+s[0].text),s.shift()),d.push.apply(d,s)):i(s)?dt(p)?d[c]=ve(p.text+s):""!==s&&d.push(ve(s)):dt(s)&&dt(p)?d[c]=ve(p.text+s.text):(l(t._isVList)&&o(s.tag)&&a(s.key)&&o(n)&&(s.key="__vlist"+n+"_"+r+"__"),d.push(s)));return d}(e):void 0}function dt(e){return o(e)&&o(e.text)&&!1===e.isComment}function mt(e,t){if(e){for(var n=Object.create(null),r=ie?Reflect.ownKeys(e):Object.keys(e),a=0;a<r.length;a++){var o=r[a];if("__ob__"!==o){for(var l=e[o].from,i=t;i;){if(i._provided&&w(i._provided,l)){n[o]=i._provided[l];break}i=i.$parent}if(!i)if("default"in e[o]){var s=e[o].default;n[o]="function"==typeof s?s.call(t):s}else 0}}return n}}function ut(e,t){if(!e||!e.length)return{};for(var n={},r=0,a=e.length;r<a;r++){var o=e[r],l=o.data;if(l&&l.attrs&&l.attrs.slot&&delete l.attrs.slot,o.context!==t&&o.fnContext!==t||!l||null==l.slot)(n.default||(n.default=[])).push(o);else{var i=l.slot,s=n[i]||(n[i]=[]);"template"===o.tag?s.push.apply(s,o.children||[]):s.push(o)}}for(var c in n)n[c].every(gt)&&delete n[c];return n}function gt(e){return e.isComment&&!e.asyncFactory||" "===e.text}function ht(e){return e.isComment&&e.asyncFactory}function yt(e,t,n){var a,o=Object.keys(t).length>0,l=e?!!e.$stable:!o,i=e&&e.$key;if(e){if(e._normalized)return e._normalized;if(l&&n&&n!==r&&i===n.$key&&!o&&!n.$hasNormal)return n;for(var s in a={},e)e[s]&&"$"!==s[0]&&(a[s]=vt(t,s,e[s]))}else a={};for(var c in t)c in a||(a[c]=ft(t,c));return e&&Object.isExtensible(e)&&(e._normalized=a),$(a,"$stable",l),$(a,"$key",i),$(a,"$hasNormal",o),a}function vt(e,t,n){var r=function(){var e=arguments.length?n.apply(null,arguments):n({}),t=(e=e&&"object"==typeof e&&!Array.isArray(e)?[e]:pt(e))&&e[0];return e&&(!t||1===e.length&&t.isComment&&!ht(t))?void 0:e};return n.proxy&&Object.defineProperty(e,t,{get:r,enumerable:!0,configurable:!0}),r}function ft(e,t){return function(){return e[t]}}function bt(e,t){var n,r,a,l,i;if(Array.isArray(e)||"string"==typeof e)for(n=new Array(e.length),r=0,a=e.length;r<a;r++)n[r]=t(e[r],r);else if("number"==typeof e)for(n=new Array(e),r=0;r<e;r++)n[r]=t(r+1,r);else if(s(e))if(ie&&e[Symbol.iterator]){n=[];for(var c=e[Symbol.iterator](),p=c.next();!p.done;)n.push(t(p.value,n.length)),p=c.next()}else for(l=Object.keys(e),n=new Array(l.length),r=0,a=l.length;r<a;r++)i=l[r],n[r]=t(e[i],i,r);return o(n)||(n=[]),n._isVList=!0,n}function wt(e,t,n,r){var a,o=this.$scopedSlots[e];o?(n=n||{},r&&(n=C(C({},r),n)),a=o(n)||("function"==typeof t?t():t)):a=this.$slots[e]||("function"==typeof t?t():t);var l=n&&n.slot;return l?this.$createElement("template",{slot:l},a):a}function kt(e){return Re(this.$options,"filters",e)||B}function Tt(e,t){return Array.isArray(e)?-1===e.indexOf(t):e!==t}function xt(e,t,n,r,a){var o=I.keyCodes[t]||n;return a&&r&&!I.keyCodes[t]?Tt(a,r):o?Tt(o,e):r?_(r)!==t:void 0===e}function St(e,t,n,r,a){if(n)if(s(n)){var o;Array.isArray(n)&&(n=L(n));var l=function(l){if("class"===l||"style"===l||v(l))o=e;else{var i=e.attrs&&e.attrs.type;o=r||I.mustUseProp(t,i,l)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var s=x(l),c=_(l);s in o||c in o||(o[l]=n[l],a&&((e.on||(e.on={}))["update:"+l]=function(e){n[l]=e}))};for(var i in n)l(i)}else;return e}function Et(e,t){var n=this._staticTrees||(this._staticTrees=[]),r=n[e];return r&&!t||Pt(r=n[e]=this.$options.staticRenderFns[e].call(this._renderProxy,null,this),"__static__"+e,!1),r}function _t(e,t,n){return Pt(e,"__once__"+t+(n?"_"+n:""),!0),e}function Pt(e,t,n){if(Array.isArray(e))for(var r=0;r<e.length;r++)e[r]&&"string"!=typeof e[r]&&jt(e[r],t+"_"+r,n);else jt(e,t,n)}function jt(e,t,n){e.isStatic=!0,e.key=t,e.isOnce=n}function Ct(e,t){if(t)if(p(t)){var n=e.on=e.on?C({},e.on):{};for(var r in t){var a=n[r],o=t[r];n[r]=a?[].concat(a,o):o}}else;return e}function Lt(e,t,n,r){t=t||{$stable:!n};for(var a=0;a<e.length;a++){var o=e[a];Array.isArray(o)?Lt(o,t,n):o&&(o.proxy&&(o.fn.proxy=!0),t[o.key]=o.fn)}return r&&(t.$key=r),t}function At(e,t){for(var n=0;n<t.length;n+=2){var r=t[n];"string"==typeof r&&r&&(e[t[n]]=t[n+1])}return e}function Nt(e,t){return"string"==typeof e?t+e:e}function Bt(e){e._o=_t,e._n=h,e._s=g,e._l=bt,e._t=wt,e._q=M,e._i=O,e._m=Et,e._f=kt,e._k=xt,e._b=St,e._v=ve,e._e=ye,e._u=Lt,e._g=Ct,e._d=At,e._p=Nt}function Mt(e,t,n,a,o){var i,s=this,c=o.options;w(a,"_uid")?(i=Object.create(a))._original=a:(i=a,a=a._original);var p=l(c._compiled),d=!p;this.data=e,this.props=t,this.children=n,this.parent=a,this.listeners=e.on||r,this.injections=mt(c.inject,a),this.slots=function(){return s.$slots||yt(e.scopedSlots,s.$slots=ut(n,a)),s.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return yt(e.scopedSlots,this.slots())}}),p&&(this.$options=c,this.$slots=this.slots(),this.$scopedSlots=yt(e.scopedSlots,this.$slots)),c._scopeId?this._c=function(e,t,n,r){var o=$t(i,e,t,n,r,d);return o&&!Array.isArray(o)&&(o.fnScopeId=c._scopeId,o.fnContext=a),o}:this._c=function(e,t,n,r){return $t(i,e,t,n,r,d)}}function Ot(e,t,n,r,a){var o=fe(e);return o.fnContext=n,o.fnOptions=r,t.slot&&((o.data||(o.data={})).slot=t.slot),o}function zt(e,t){for(var n in t)e[x(n)]=t[n]}Bt(Mt.prototype);var Rt={init:function(e,t){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var n=e;Rt.prepatch(n,n)}else{(e.componentInstance=function(e,t){var n={_isComponent:!0,_parentVnode:e,parent:t},r=e.data.inlineTemplate;o(r)&&(n.render=r.render,n.staticRenderFns=r.staticRenderFns);return new e.componentOptions.Ctor(n)}(e,Xt)).$mount(t?e.elm:void 0,t)}},prepatch:function(e,t){var n=t.componentOptions;!function(e,t,n,a,o){0;var l=a.data.scopedSlots,i=e.$scopedSlots,s=!!(l&&!l.$stable||i!==r&&!i.$stable||l&&e.$scopedSlots.$key!==l.$key||!l&&e.$scopedSlots.$key),c=!!(o||e.$options._renderChildren||s);e.$options._parentVnode=a,e.$vnode=a,e._vnode&&(e._vnode.parent=a);if(e.$options._renderChildren=o,e.$attrs=a.data.attrs||r,e.$listeners=n||r,t&&e.$options.props){xe(!1);for(var p=e._props,d=e.$options._propKeys||[],m=0;m<d.length;m++){var u=d[m],g=e.$options.props;p[u]=De(u,g,t,e)}xe(!0),e.$options.propsData=t}n=n||r;var h=e.$options._parentListeners;e.$options._parentListeners=n,Wt(e,n,h),c&&(e.$slots=ut(o,a.context),e.$forceUpdate());0}(t.componentInstance=e.componentInstance,n.propsData,n.listeners,t,n.children)},insert:function(e){var t,n=e.context,r=e.componentInstance;r._isMounted||(r._isMounted=!0,en(r,"mounted")),e.data.keepAlive&&(n._isMounted?((t=r)._inactive=!1,nn.push(t)):Zt(r,!0))},destroy:function(e){var t=e.componentInstance;t._isDestroyed||(e.data.keepAlive?function e(t,n){if(n&&(t._directInactive=!0,Yt(t)))return;if(!t._inactive){t._inactive=!0;for(var r=0;r<t.$children.length;r++)e(t.$children[r]);en(t,"deactivated")}}(t,!0):t.$destroy())}},Dt=Object.keys(Rt);function It(e,t,n,i,c){if(!a(e)){var p=n.$options._base;if(s(e)&&(e=p.extend(e)),"function"==typeof e){var d;if(a(e.cid)&&void 0===(e=function(e,t){if(l(e.error)&&o(e.errorComp))return e.errorComp;if(o(e.resolved))return e.resolved;var n=Ft;n&&o(e.owners)&&-1===e.owners.indexOf(n)&&e.owners.push(n);if(l(e.loading)&&o(e.loadingComp))return e.loadingComp;if(n&&!o(e.owners)){var r=e.owners=[n],i=!0,c=null,p=null;n.$on("hook:destroyed",(function(){return f(r,n)}));var d=function(e){for(var t=0,n=r.length;t<n;t++)r[t].$forceUpdate();e&&(r.length=0,null!==c&&(clearTimeout(c),c=null),null!==p&&(clearTimeout(p),p=null))},m=z((function(n){e.resolved=Ut(n,t),i?r.length=0:d(!0)})),g=z((function(t){o(e.errorComp)&&(e.error=!0,d(!0))})),h=e(m,g);return s(h)&&(u(h)?a(e.resolved)&&h.then(m,g):u(h.component)&&(h.component.then(m,g),o(h.error)&&(e.errorComp=Ut(h.error,t)),o(h.loading)&&(e.loadingComp=Ut(h.loading,t),0===h.delay?e.loading=!0:c=setTimeout((function(){c=null,a(e.resolved)&&a(e.error)&&(e.loading=!0,d(!1))}),h.delay||200)),o(h.timeout)&&(p=setTimeout((function(){p=null,a(e.resolved)&&g(null)}),h.timeout)))),i=!1,e.loading?e.loadingComp:e.resolved}}(d=e,p)))return function(e,t,n,r,a){var o=ye();return o.asyncFactory=e,o.asyncMeta={data:t,context:n,children:r,tag:a},o}(d,t,n,i,c);t=t||{},xn(e),o(t.model)&&function(e,t){var n=e.model&&e.model.prop||"value",r=e.model&&e.model.event||"input";(t.attrs||(t.attrs={}))[n]=t.model.value;var a=t.on||(t.on={}),l=a[r],i=t.model.callback;o(l)?(Array.isArray(l)?-1===l.indexOf(i):l!==i)&&(a[r]=[i].concat(l)):a[r]=i}(e.options,t);var m=function(e,t,n){var r=t.options.props;if(!a(r)){var l={},i=e.attrs,s=e.props;if(o(i)||o(s))for(var c in r){var p=_(c);ct(l,s,c,p,!0)||ct(l,i,c,p,!1)}return l}}(t,e);if(l(e.options.functional))return function(e,t,n,a,l){var i=e.options,s={},c=i.props;if(o(c))for(var p in c)s[p]=De(p,c,t||r);else o(n.attrs)&&zt(s,n.attrs),o(n.props)&&zt(s,n.props);var d=new Mt(n,s,l,a,e),m=i.render.call(null,d._c,d);if(m instanceof ge)return Ot(m,n,d.parent,i,d);if(Array.isArray(m)){for(var u=pt(m)||[],g=new Array(u.length),h=0;h<u.length;h++)g[h]=Ot(u[h],n,d.parent,i,d);return g}}(e,m,t,n,i);var g=t.on;if(t.on=t.nativeOn,l(e.options.abstract)){var h=t.slot;t={},h&&(t.slot=h)}!function(e){for(var t=e.hook||(e.hook={}),n=0;n<Dt.length;n++){var r=Dt[n],a=t[r],o=Rt[r];a===o||a&&a._merged||(t[r]=a?qt(o,a):o)}}(t);var y=e.options.name||c;return new ge("vue-component-"+e.cid+(y?"-"+y:""),t,void 0,void 0,void 0,n,{Ctor:e,propsData:m,listeners:g,tag:c,children:i},d)}}}function qt(e,t){var n=function(n,r){e(n,r),t(n,r)};return n._merged=!0,n}function $t(e,t,n,r,c,p){return(Array.isArray(n)||i(n))&&(c=r,r=n,n=void 0),l(p)&&(c=2),function(e,t,n,r,i){if(o(n)&&o(n.__ob__))return ye();o(n)&&o(n.is)&&(t=n.is);if(!t)return ye();0;Array.isArray(r)&&"function"==typeof r[0]&&((n=n||{}).scopedSlots={default:r[0]},r.length=0);2===i?r=pt(r):1===i&&(r=function(e){for(var t=0;t<e.length;t++)if(Array.isArray(e[t]))return Array.prototype.concat.apply([],e);return e}(r));var c,p;if("string"==typeof t){var d;p=e.$vnode&&e.$vnode.ns||I.getTagNamespace(t),c=I.isReservedTag(t)?new ge(I.parsePlatformTagName(t),n,r,void 0,void 0,e):n&&n.pre||!o(d=Re(e.$options,"components",t))?new ge(t,n,r,void 0,void 0,e):It(d,n,e,r,t)}else c=It(t,n,e,r);return Array.isArray(c)?c:o(c)?(o(p)&&function e(t,n,r){t.ns=n,"foreignObject"===t.tag&&(n=void 0,r=!0);if(o(t.children))for(var i=0,s=t.children.length;i<s;i++){var c=t.children[i];o(c.tag)&&(a(c.ns)||l(r)&&"svg"!==c.tag)&&e(c,n,r)}}(c,p),o(n)&&function(e){s(e.style)&&at(e.style);s(e.class)&&at(e.class)}(n),c):ye()}(e,t,n,r,c)}var Ht,Ft=null;function Ut(e,t){return(e.__esModule||ie&&"Module"===e[Symbol.toStringTag])&&(e=e.default),s(e)?t.extend(e):e}function Jt(e){if(Array.isArray(e))for(var t=0;t<e.length;t++){var n=e[t];if(o(n)&&(o(n.componentOptions)||ht(n)))return n}}function Gt(e,t){Ht.$on(e,t)}function Qt(e,t){Ht.$off(e,t)}function Vt(e,t){var n=Ht;return function r(){var a=t.apply(null,arguments);null!==a&&n.$off(e,r)}}function Wt(e,t,n){Ht=e,it(t,n||{},Gt,Qt,Vt,e),Ht=void 0}var Xt=null;function Kt(e){var t=Xt;return Xt=e,function(){Xt=t}}function Yt(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function Zt(e,t){if(t){if(e._directInactive=!1,Yt(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var n=0;n<e.$children.length;n++)Zt(e.$children[n]);en(e,"activated")}}function en(e,t){me();var n=e.$options[t],r=t+" hook";if(n)for(var a=0,o=n.length;a<o;a++)Ue(n[a],e,null,e,r);e._hasHookEvent&&e.$emit("hook:"+t),ue()}var tn=[],nn=[],rn={},an=!1,on=!1,ln=0;var sn=0,cn=Date.now;if(J&&!W){var pn=window.performance;pn&&"function"==typeof pn.now&&cn()>document.createEvent("Event").timeStamp&&(cn=function(){return pn.now()})}function dn(){var e,t;for(sn=cn(),on=!0,tn.sort((function(e,t){return e.id-t.id})),ln=0;ln<tn.length;ln++)(e=tn[ln]).before&&e.before(),t=e.id,rn[t]=null,e.run();var n=nn.slice(),r=tn.slice();ln=tn.length=nn.length=0,rn={},an=on=!1,function(e){for(var t=0;t<e.length;t++)e[t]._inactive=!0,Zt(e[t],!0)}(n),function(e){var t=e.length;for(;t--;){var n=e[t],r=n.vm;r._watcher===n&&r._isMounted&&!r._isDestroyed&&en(r,"updated")}}(r),ae&&I.devtools&&ae.emit("flush")}var mn=0,un=function(e,t,n,r,a){this.vm=e,a&&(e._watcher=this),e._watchers.push(this),r?(this.deep=!!r.deep,this.user=!!r.user,this.lazy=!!r.lazy,this.sync=!!r.sync,this.before=r.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=n,this.id=++mn,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new le,this.newDepIds=new le,this.expression="","function"==typeof t?this.getter=t:(this.getter=function(e){if(!H.test(e)){var t=e.split(".");return function(e){for(var n=0;n<t.length;n++){if(!e)return;e=e[t[n]]}return e}}}(t),this.getter||(this.getter=A)),this.value=this.lazy?void 0:this.get()};un.prototype.get=function(){var e;me(this);var t=this.vm;try{e=this.getter.call(t,t)}catch(e){if(!this.user)throw e;Fe(e,t,'getter for watcher "'+this.expression+'"')}finally{this.deep&&at(e),ue(),this.cleanupDeps()}return e},un.prototype.addDep=function(e){var t=e.id;this.newDepIds.has(t)||(this.newDepIds.add(t),this.newDeps.push(e),this.depIds.has(t)||e.addSub(this))},un.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var t=this.deps[e];this.newDepIds.has(t.id)||t.removeSub(this)}var n=this.depIds;this.depIds=this.newDepIds,this.newDepIds=n,this.newDepIds.clear(),n=this.deps,this.deps=this.newDeps,this.newDeps=n,this.newDeps.length=0},un.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(e){var t=e.id;if(null==rn[t]){if(rn[t]=!0,on){for(var n=tn.length-1;n>ln&&tn[n].id>e.id;)n--;tn.splice(n+1,0,e)}else tn.push(e);an||(an=!0,nt(dn))}}(this)},un.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||s(e)||this.deep){var t=this.value;if(this.value=e,this.user){var n='callback for watcher "'+this.expression+'"';Ue(this.cb,this.vm,[e,t],this.vm,n)}else this.cb.call(this.vm,e,t)}}},un.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},un.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},un.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||f(this.vm._watchers,this);for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1}};var gn={enumerable:!0,configurable:!0,get:A,set:A};function hn(e,t,n){gn.get=function(){return this[t][n]},gn.set=function(e){this[t][n]=e},Object.defineProperty(e,n,gn)}function yn(e){e._watchers=[];var t=e.$options;t.props&&function(e,t){var n=e.$options.propsData||{},r=e._props={},a=e.$options._propKeys=[];e.$parent&&xe(!1);var o=function(o){a.push(o);var l=De(o,t,n,e);_e(r,o,l),o in e||hn(e,"_props",o)};for(var l in t)o(l);xe(!0)}(e,t.props),t.methods&&function(e,t){e.$options.props;for(var n in t)e[n]="function"!=typeof t[n]?A:P(t[n],e)}(e,t.methods),t.data?function(e){var t=e.$options.data;p(t=e._data="function"==typeof t?function(e,t){me();try{return e.call(t,t)}catch(e){return Fe(e,t,"data()"),{}}finally{ue()}}(t,e):t||{})||(t={});var n=Object.keys(t),r=e.$options.props,a=(e.$options.methods,n.length);for(;a--;){var o=n[a];0,r&&w(r,o)||(l=void 0,36!==(l=(o+"").charCodeAt(0))&&95!==l&&hn(e,"_data",o))}var l;Ee(t,!0)}(e):Ee(e._data={},!0),t.computed&&function(e,t){var n=e._computedWatchers=Object.create(null),r=re();for(var a in t){var o=t[a],l="function"==typeof o?o:o.get;0,r||(n[a]=new un(e,l||A,A,vn)),a in e||fn(e,a,o)}}(e,t.computed),t.watch&&t.watch!==ee&&function(e,t){for(var n in t){var r=t[n];if(Array.isArray(r))for(var a=0;a<r.length;a++)kn(e,n,r[a]);else kn(e,n,r)}}(e,t.watch)}var vn={lazy:!0};function fn(e,t,n){var r=!re();"function"==typeof n?(gn.get=r?bn(t):wn(n),gn.set=A):(gn.get=n.get?r&&!1!==n.cache?bn(t):wn(n.get):A,gn.set=n.set||A),Object.defineProperty(e,t,gn)}function bn(e){return function(){var t=this._computedWatchers&&this._computedWatchers[e];if(t)return t.dirty&&t.evaluate(),pe.target&&t.depend(),t.value}}function wn(e){return function(){return e.call(this,this)}}function kn(e,t,n,r){return p(n)&&(r=n,n=n.handler),"string"==typeof n&&(n=e[n]),e.$watch(t,n,r)}var Tn=0;function xn(e){var t=e.options;if(e.super){var n=xn(e.super);if(n!==e.superOptions){e.superOptions=n;var r=function(e){var t,n=e.options,r=e.sealedOptions;for(var a in n)n[a]!==r[a]&&(t||(t={}),t[a]=n[a]);return t}(e);r&&C(e.extendOptions,r),(t=e.options=ze(n,e.extendOptions)).name&&(t.components[t.name]=e)}}return t}function Sn(e){this._init(e)}function En(e){e.cid=0;var t=1;e.extend=function(e){e=e||{};var n=this,r=n.cid,a=e._Ctor||(e._Ctor={});if(a[r])return a[r];var o=e.name||n.options.name;var l=function(e){this._init(e)};return(l.prototype=Object.create(n.prototype)).constructor=l,l.cid=t++,l.options=ze(n.options,e),l.super=n,l.options.props&&function(e){var t=e.options.props;for(var n in t)hn(e.prototype,"_props",n)}(l),l.options.computed&&function(e){var t=e.options.computed;for(var n in t)fn(e.prototype,n,t[n])}(l),l.extend=n.extend,l.mixin=n.mixin,l.use=n.use,R.forEach((function(e){l[e]=n[e]})),o&&(l.options.components[o]=l),l.superOptions=n.options,l.extendOptions=e,l.sealedOptions=C({},l.options),a[r]=l,l}}function _n(e){return e&&(e.Ctor.options.name||e.tag)}function Pn(e,t){return Array.isArray(e)?e.indexOf(t)>-1:"string"==typeof e?e.split(",").indexOf(t)>-1:!!d(e)&&e.test(t)}function jn(e,t){var n=e.cache,r=e.keys,a=e._vnode;for(var o in n){var l=n[o];if(l){var i=l.name;i&&!t(i)&&Cn(n,o,r,a)}}}function Cn(e,t,n,r){var a=e[t];!a||r&&a.tag===r.tag||a.componentInstance.$destroy(),e[t]=null,f(n,t)}!function(e){e.prototype._init=function(e){var t=this;t._uid=Tn++,t._isVue=!0,e&&e._isComponent?function(e,t){var n=e.$options=Object.create(e.constructor.options),r=t._parentVnode;n.parent=t.parent,n._parentVnode=r;var a=r.componentOptions;n.propsData=a.propsData,n._parentListeners=a.listeners,n._renderChildren=a.children,n._componentTag=a.tag,t.render&&(n.render=t.render,n.staticRenderFns=t.staticRenderFns)}(t,e):t.$options=ze(xn(t.constructor),e||{},t),t._renderProxy=t,t._self=t,function(e){var t=e.$options,n=t.parent;if(n&&!t.abstract){for(;n.$options.abstract&&n.$parent;)n=n.$parent;n.$children.push(e)}e.$parent=n,e.$root=n?n.$root:e,e.$children=[],e.$refs={},e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}(t),function(e){e._events=Object.create(null),e._hasHookEvent=!1;var t=e.$options._parentListeners;t&&Wt(e,t)}(t),function(e){e._vnode=null,e._staticTrees=null;var t=e.$options,n=e.$vnode=t._parentVnode,a=n&&n.context;e.$slots=ut(t._renderChildren,a),e.$scopedSlots=r,e._c=function(t,n,r,a){return $t(e,t,n,r,a,!1)},e.$createElement=function(t,n,r,a){return $t(e,t,n,r,a,!0)};var o=n&&n.data;_e(e,"$attrs",o&&o.attrs||r,null,!0),_e(e,"$listeners",t._parentListeners||r,null,!0)}(t),en(t,"beforeCreate"),function(e){var t=mt(e.$options.inject,e);t&&(xe(!1),Object.keys(t).forEach((function(n){_e(e,n,t[n])})),xe(!0))}(t),yn(t),function(e){var t=e.$options.provide;t&&(e._provided="function"==typeof t?t.call(e):t)}(t),en(t,"created"),t.$options.el&&t.$mount(t.$options.el)}}(Sn),function(e){var t={get:function(){return this._data}},n={get:function(){return this._props}};Object.defineProperty(e.prototype,"$data",t),Object.defineProperty(e.prototype,"$props",n),e.prototype.$set=Pe,e.prototype.$delete=je,e.prototype.$watch=function(e,t,n){if(p(t))return kn(this,e,t,n);(n=n||{}).user=!0;var r=new un(this,e,t,n);if(n.immediate){var a='callback for immediate watcher "'+r.expression+'"';me(),Ue(t,this,[r.value],this,a),ue()}return function(){r.teardown()}}}(Sn),function(e){var t=/^hook:/;e.prototype.$on=function(e,n){var r=this;if(Array.isArray(e))for(var a=0,o=e.length;a<o;a++)r.$on(e[a],n);else(r._events[e]||(r._events[e]=[])).push(n),t.test(e)&&(r._hasHookEvent=!0);return r},e.prototype.$once=function(e,t){var n=this;function r(){n.$off(e,r),t.apply(n,arguments)}return r.fn=t,n.$on(e,r),n},e.prototype.$off=function(e,t){var n=this;if(!arguments.length)return n._events=Object.create(null),n;if(Array.isArray(e)){for(var r=0,a=e.length;r<a;r++)n.$off(e[r],t);return n}var o,l=n._events[e];if(!l)return n;if(!t)return n._events[e]=null,n;for(var i=l.length;i--;)if((o=l[i])===t||o.fn===t){l.splice(i,1);break}return n},e.prototype.$emit=function(e){var t=this,n=t._events[e];if(n){n=n.length>1?j(n):n;for(var r=j(arguments,1),a='event handler for "'+e+'"',o=0,l=n.length;o<l;o++)Ue(n[o],t,r,t,a)}return t}}(Sn),function(e){e.prototype._update=function(e,t){var n=this,r=n.$el,a=n._vnode,o=Kt(n);n._vnode=e,n.$el=a?n.__patch__(a,e):n.__patch__(n.$el,e,t,!1),o(),r&&(r.__vue__=null),n.$el&&(n.$el.__vue__=n),n.$vnode&&n.$parent&&n.$vnode===n.$parent._vnode&&(n.$parent.$el=n.$el)},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){en(e,"beforeDestroy"),e._isBeingDestroyed=!0;var t=e.$parent;!t||t._isBeingDestroyed||e.$options.abstract||f(t.$children,e),e._watcher&&e._watcher.teardown();for(var n=e._watchers.length;n--;)e._watchers[n].teardown();e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),en(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(Sn),function(e){Bt(e.prototype),e.prototype.$nextTick=function(e){return nt(e,this)},e.prototype._render=function(){var e,t=this,n=t.$options,r=n.render,a=n._parentVnode;a&&(t.$scopedSlots=yt(a.data.scopedSlots,t.$slots,t.$scopedSlots)),t.$vnode=a;try{Ft=t,e=r.call(t._renderProxy,t.$createElement)}catch(n){Fe(n,t,"render"),e=t._vnode}finally{Ft=null}return Array.isArray(e)&&1===e.length&&(e=e[0]),e instanceof ge||(e=ye()),e.parent=a,e}}(Sn);var Ln=[String,RegExp,Array],An={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:Ln,exclude:Ln,max:[String,Number]},methods:{cacheVNode:function(){var e=this.cache,t=this.keys,n=this.vnodeToCache,r=this.keyToCache;if(n){var a=n.tag,o=n.componentInstance,l=n.componentOptions;e[r]={name:_n(l),tag:a,componentInstance:o},t.push(r),this.max&&t.length>parseInt(this.max)&&Cn(e,t[0],t,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)Cn(this.cache,e,this.keys)},mounted:function(){var e=this;this.cacheVNode(),this.$watch("include",(function(t){jn(e,(function(e){return Pn(t,e)}))})),this.$watch("exclude",(function(t){jn(e,(function(e){return!Pn(t,e)}))}))},updated:function(){this.cacheVNode()},render:function(){var e=this.$slots.default,t=Jt(e),n=t&&t.componentOptions;if(n){var r=_n(n),a=this.include,o=this.exclude;if(a&&(!r||!Pn(a,r))||o&&r&&Pn(o,r))return t;var l=this.cache,i=this.keys,s=null==t.key?n.Ctor.cid+(n.tag?"::"+n.tag:""):t.key;l[s]?(t.componentInstance=l[s].componentInstance,f(i,s),i.push(s)):(this.vnodeToCache=t,this.keyToCache=s),t.data.keepAlive=!0}return t||e&&e[0]}}};!function(e){var t={get:function(){return I}};Object.defineProperty(e,"config",t),e.util={warn:se,extend:C,mergeOptions:ze,defineReactive:_e},e.set=Pe,e.delete=je,e.nextTick=nt,e.observable=function(e){return Ee(e),e},e.options=Object.create(null),R.forEach((function(t){e.options[t+"s"]=Object.create(null)})),e.options._base=e,C(e.options.components,An),function(e){e.use=function(e){var t=this._installedPlugins||(this._installedPlugins=[]);if(t.indexOf(e)>-1)return this;var n=j(arguments,1);return n.unshift(this),"function"==typeof e.install?e.install.apply(e,n):"function"==typeof e&&e.apply(null,n),t.push(e),this}}(e),function(e){e.mixin=function(e){return this.options=ze(this.options,e),this}}(e),En(e),function(e){R.forEach((function(t){e[t]=function(e,n){return n?("component"===t&&p(n)&&(n.name=n.name||e,n=this.options._base.extend(n)),"directive"===t&&"function"==typeof n&&(n={bind:n,update:n}),this.options[t+"s"][e]=n,n):this.options[t+"s"][e]}}))}(e)}(Sn),Object.defineProperty(Sn.prototype,"$isServer",{get:re}),Object.defineProperty(Sn.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Sn,"FunctionalRenderContext",{value:Mt}),Sn.version="2.6.14";var Nn=y("style,class"),Bn=y("input,textarea,option,select,progress"),Mn=y("contenteditable,draggable,spellcheck"),On=y("events,caret,typing,plaintext-only"),zn=y("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),Rn="http://www.w3.org/1999/xlink",Dn=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},In=function(e){return Dn(e)?e.slice(6,e.length):""},qn=function(e){return null==e||!1===e};function $n(e){for(var t=e.data,n=e,r=e;o(r.componentInstance);)(r=r.componentInstance._vnode)&&r.data&&(t=Hn(r.data,t));for(;o(n=n.parent);)n&&n.data&&(t=Hn(t,n.data));return function(e,t){if(o(e)||o(t))return Fn(e,Un(t));return""}(t.staticClass,t.class)}function Hn(e,t){return{staticClass:Fn(e.staticClass,t.staticClass),class:o(e.class)?[e.class,t.class]:t.class}}function Fn(e,t){return e?t?e+" "+t:e:t||""}function Un(e){return Array.isArray(e)?function(e){for(var t,n="",r=0,a=e.length;r<a;r++)o(t=Un(e[r]))&&""!==t&&(n&&(n+=" "),n+=t);return n}(e):s(e)?function(e){var t="";for(var n in e)e[n]&&(t&&(t+=" "),t+=n);return t}(e):"string"==typeof e?e:""}var Jn={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},Gn=y("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),Qn=y("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),Vn=function(e){return Gn(e)||Qn(e)};var Wn=Object.create(null);var Xn=y("text,number,password,search,email,tel,url");var Kn=Object.freeze({createElement:function(e,t){var n=document.createElement(e);return"select"!==e||t.data&&t.data.attrs&&void 0!==t.data.attrs.multiple&&n.setAttribute("multiple","multiple"),n},createElementNS:function(e,t){return document.createElementNS(Jn[e],t)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,t,n){e.insertBefore(t,n)},removeChild:function(e,t){e.removeChild(t)},appendChild:function(e,t){e.appendChild(t)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,t){e.textContent=t},setStyleScope:function(e,t){e.setAttribute(t,"")}}),Yn={create:function(e,t){Zn(t)},update:function(e,t){e.data.ref!==t.data.ref&&(Zn(e,!0),Zn(t))},destroy:function(e){Zn(e,!0)}};function Zn(e,t){var n=e.data.ref;if(o(n)){var r=e.context,a=e.componentInstance||e.elm,l=r.$refs;t?Array.isArray(l[n])?f(l[n],a):l[n]===a&&(l[n]=void 0):e.data.refInFor?Array.isArray(l[n])?l[n].indexOf(a)<0&&l[n].push(a):l[n]=[a]:l[n]=a}}var er=new ge("",{},[]),tr=["create","activate","update","remove","destroy"];function nr(e,t){return e.key===t.key&&e.asyncFactory===t.asyncFactory&&(e.tag===t.tag&&e.isComment===t.isComment&&o(e.data)===o(t.data)&&function(e,t){if("input"!==e.tag)return!0;var n,r=o(n=e.data)&&o(n=n.attrs)&&n.type,a=o(n=t.data)&&o(n=n.attrs)&&n.type;return r===a||Xn(r)&&Xn(a)}(e,t)||l(e.isAsyncPlaceholder)&&a(t.asyncFactory.error))}function rr(e,t,n){var r,a,l={};for(r=t;r<=n;++r)o(a=e[r].key)&&(l[a]=r);return l}var ar={create:or,update:or,destroy:function(e){or(e,er)}};function or(e,t){(e.data.directives||t.data.directives)&&function(e,t){var n,r,a,o=e===er,l=t===er,i=ir(e.data.directives,e.context),s=ir(t.data.directives,t.context),c=[],p=[];for(n in s)r=i[n],a=s[n],r?(a.oldValue=r.value,a.oldArg=r.arg,cr(a,"update",t,e),a.def&&a.def.componentUpdated&&p.push(a)):(cr(a,"bind",t,e),a.def&&a.def.inserted&&c.push(a));if(c.length){var d=function(){for(var n=0;n<c.length;n++)cr(c[n],"inserted",t,e)};o?st(t,"insert",d):d()}p.length&&st(t,"postpatch",(function(){for(var n=0;n<p.length;n++)cr(p[n],"componentUpdated",t,e)}));if(!o)for(n in i)s[n]||cr(i[n],"unbind",e,e,l)}(e,t)}var lr=Object.create(null);function ir(e,t){var n,r,a=Object.create(null);if(!e)return a;for(n=0;n<e.length;n++)(r=e[n]).modifiers||(r.modifiers=lr),a[sr(r)]=r,r.def=Re(t.$options,"directives",r.name);return a}function sr(e){return e.rawName||e.name+"."+Object.keys(e.modifiers||{}).join(".")}function cr(e,t,n,r,a){var o=e.def&&e.def[t];if(o)try{o(n.elm,e,n,r,a)}catch(r){Fe(r,n.context,"directive "+e.name+" "+t+" hook")}}var pr=[Yn,ar];function dr(e,t){var n=t.componentOptions;if(!(o(n)&&!1===n.Ctor.options.inheritAttrs||a(e.data.attrs)&&a(t.data.attrs))){var r,l,i=t.elm,s=e.data.attrs||{},c=t.data.attrs||{};for(r in o(c.__ob__)&&(c=t.data.attrs=C({},c)),c)l=c[r],s[r]!==l&&mr(i,r,l,t.data.pre);for(r in(W||K)&&c.value!==s.value&&mr(i,"value",c.value),s)a(c[r])&&(Dn(r)?i.removeAttributeNS(Rn,In(r)):Mn(r)||i.removeAttribute(r))}}function mr(e,t,n,r){r||e.tagName.indexOf("-")>-1?ur(e,t,n):zn(t)?qn(n)?e.removeAttribute(t):(n="allowfullscreen"===t&&"EMBED"===e.tagName?"true":t,e.setAttribute(t,n)):Mn(t)?e.setAttribute(t,function(e,t){return qn(t)||"false"===t?"false":"contenteditable"===e&&On(t)?t:"true"}(t,n)):Dn(t)?qn(n)?e.removeAttributeNS(Rn,In(t)):e.setAttributeNS(Rn,t,n):ur(e,t,n)}function ur(e,t,n){if(qn(n))e.removeAttribute(t);else{if(W&&!X&&"TEXTAREA"===e.tagName&&"placeholder"===t&&""!==n&&!e.__ieph){var r=function(t){t.stopImmediatePropagation(),e.removeEventListener("input",r)};e.addEventListener("input",r),e.__ieph=!0}e.setAttribute(t,n)}}var gr={create:dr,update:dr};function hr(e,t){var n=t.elm,r=t.data,l=e.data;if(!(a(r.staticClass)&&a(r.class)&&(a(l)||a(l.staticClass)&&a(l.class)))){var i=$n(t),s=n._transitionClasses;o(s)&&(i=Fn(i,Un(s))),i!==n._prevClass&&(n.setAttribute("class",i),n._prevClass=i)}}var yr,vr={create:hr,update:hr};function fr(e,t,n){var r=yr;return function a(){var o=t.apply(null,arguments);null!==o&&kr(e,a,n,r)}}var br=Ve&&!(Z&&Number(Z[1])<=53);function wr(e,t,n,r){if(br){var a=sn,o=t;t=o._wrapper=function(e){if(e.target===e.currentTarget||e.timeStamp>=a||e.timeStamp<=0||e.target.ownerDocument!==document)return o.apply(this,arguments)}}yr.addEventListener(e,t,te?{capture:n,passive:r}:n)}function kr(e,t,n,r){(r||yr).removeEventListener(e,t._wrapper||t,n)}function Tr(e,t){if(!a(e.data.on)||!a(t.data.on)){var n=t.data.on||{},r=e.data.on||{};yr=t.elm,function(e){if(o(e.__r)){var t=W?"change":"input";e[t]=[].concat(e.__r,e[t]||[]),delete e.__r}o(e.__c)&&(e.change=[].concat(e.__c,e.change||[]),delete e.__c)}(n),it(n,r,wr,kr,fr,t.context),yr=void 0}}var xr,Sr={create:Tr,update:Tr};function Er(e,t){if(!a(e.data.domProps)||!a(t.data.domProps)){var n,r,l=t.elm,i=e.data.domProps||{},s=t.data.domProps||{};for(n in o(s.__ob__)&&(s=t.data.domProps=C({},s)),i)n in s||(l[n]="");for(n in s){if(r=s[n],"textContent"===n||"innerHTML"===n){if(t.children&&(t.children.length=0),r===i[n])continue;1===l.childNodes.length&&l.removeChild(l.childNodes[0])}if("value"===n&&"PROGRESS"!==l.tagName){l._value=r;var c=a(r)?"":String(r);_r(l,c)&&(l.value=c)}else if("innerHTML"===n&&Qn(l.tagName)&&a(l.innerHTML)){(xr=xr||document.createElement("div")).innerHTML="<svg>"+r+"</svg>";for(var p=xr.firstChild;l.firstChild;)l.removeChild(l.firstChild);for(;p.firstChild;)l.appendChild(p.firstChild)}else if(r!==i[n])try{l[n]=r}catch(e){}}}}function _r(e,t){return!e.composing&&("OPTION"===e.tagName||function(e,t){var n=!0;try{n=document.activeElement!==e}catch(e){}return n&&e.value!==t}(e,t)||function(e,t){var n=e.value,r=e._vModifiers;if(o(r)){if(r.number)return h(n)!==h(t);if(r.trim)return n.trim()!==t.trim()}return n!==t}(e,t))}var Pr={create:Er,update:Er},jr=k((function(e){var t={},n=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach((function(e){if(e){var r=e.split(n);r.length>1&&(t[r[0].trim()]=r[1].trim())}})),t}));function Cr(e){var t=Lr(e.style);return e.staticStyle?C(e.staticStyle,t):t}function Lr(e){return Array.isArray(e)?L(e):"string"==typeof e?jr(e):e}var Ar,Nr=/^--/,Br=/\s*!important$/,Mr=function(e,t,n){if(Nr.test(t))e.style.setProperty(t,n);else if(Br.test(n))e.style.setProperty(_(t),n.replace(Br,""),"important");else{var r=zr(t);if(Array.isArray(n))for(var a=0,o=n.length;a<o;a++)e.style[r]=n[a];else e.style[r]=n}},Or=["Webkit","Moz","ms"],zr=k((function(e){if(Ar=Ar||document.createElement("div").style,"filter"!==(e=x(e))&&e in Ar)return e;for(var t=e.charAt(0).toUpperCase()+e.slice(1),n=0;n<Or.length;n++){var r=Or[n]+t;if(r in Ar)return r}}));function Rr(e,t){var n=t.data,r=e.data;if(!(a(n.staticStyle)&&a(n.style)&&a(r.staticStyle)&&a(r.style))){var l,i,s=t.elm,c=r.staticStyle,p=r.normalizedStyle||r.style||{},d=c||p,m=Lr(t.data.style)||{};t.data.normalizedStyle=o(m.__ob__)?C({},m):m;var u=function(e,t){var n,r={};if(t)for(var a=e;a.componentInstance;)(a=a.componentInstance._vnode)&&a.data&&(n=Cr(a.data))&&C(r,n);(n=Cr(e.data))&&C(r,n);for(var o=e;o=o.parent;)o.data&&(n=Cr(o.data))&&C(r,n);return r}(t,!0);for(i in d)a(u[i])&&Mr(s,i,"");for(i in u)(l=u[i])!==d[i]&&Mr(s,i,null==l?"":l)}}var Dr={create:Rr,update:Rr},Ir=/\s+/;function qr(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(Ir).forEach((function(t){return e.classList.add(t)})):e.classList.add(t);else{var n=" "+(e.getAttribute("class")||"")+" ";n.indexOf(" "+t+" ")<0&&e.setAttribute("class",(n+t).trim())}}function $r(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(Ir).forEach((function(t){return e.classList.remove(t)})):e.classList.remove(t),e.classList.length||e.removeAttribute("class");else{for(var n=" "+(e.getAttribute("class")||"")+" ",r=" "+t+" ";n.indexOf(r)>=0;)n=n.replace(r," ");(n=n.trim())?e.setAttribute("class",n):e.removeAttribute("class")}}function Hr(e){if(e){if("object"==typeof e){var t={};return!1!==e.css&&C(t,Fr(e.name||"v")),C(t,e),t}return"string"==typeof e?Fr(e):void 0}}var Fr=k((function(e){return{enterClass:e+"-enter",enterToClass:e+"-enter-to",enterActiveClass:e+"-enter-active",leaveClass:e+"-leave",leaveToClass:e+"-leave-to",leaveActiveClass:e+"-leave-active"}})),Ur=J&&!X,Jr="transition",Gr="transitionend",Qr="animation",Vr="animationend";Ur&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(Jr="WebkitTransition",Gr="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Qr="WebkitAnimation",Vr="webkitAnimationEnd"));var Wr=J?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function Xr(e){Wr((function(){Wr(e)}))}function Kr(e,t){var n=e._transitionClasses||(e._transitionClasses=[]);n.indexOf(t)<0&&(n.push(t),qr(e,t))}function Yr(e,t){e._transitionClasses&&f(e._transitionClasses,t),$r(e,t)}function Zr(e,t,n){var r=ta(e,t),a=r.type,o=r.timeout,l=r.propCount;if(!a)return n();var i="transition"===a?Gr:Vr,s=0,c=function(){e.removeEventListener(i,p),n()},p=function(t){t.target===e&&++s>=l&&c()};setTimeout((function(){s<l&&c()}),o+1),e.addEventListener(i,p)}var ea=/\b(transform|all)(,|$)/;function ta(e,t){var n,r=window.getComputedStyle(e),a=(r[Jr+"Delay"]||"").split(", "),o=(r[Jr+"Duration"]||"").split(", "),l=na(a,o),i=(r[Qr+"Delay"]||"").split(", "),s=(r[Qr+"Duration"]||"").split(", "),c=na(i,s),p=0,d=0;return"transition"===t?l>0&&(n="transition",p=l,d=o.length):"animation"===t?c>0&&(n="animation",p=c,d=s.length):d=(n=(p=Math.max(l,c))>0?l>c?"transition":"animation":null)?"transition"===n?o.length:s.length:0,{type:n,timeout:p,propCount:d,hasTransform:"transition"===n&&ea.test(r[Jr+"Property"])}}function na(e,t){for(;e.length<t.length;)e=e.concat(e);return Math.max.apply(null,t.map((function(t,n){return ra(t)+ra(e[n])})))}function ra(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function aa(e,t){var n=e.elm;o(n._leaveCb)&&(n._leaveCb.cancelled=!0,n._leaveCb());var r=Hr(e.data.transition);if(!a(r)&&!o(n._enterCb)&&1===n.nodeType){for(var l=r.css,i=r.type,c=r.enterClass,p=r.enterToClass,d=r.enterActiveClass,m=r.appearClass,u=r.appearToClass,g=r.appearActiveClass,y=r.beforeEnter,v=r.enter,f=r.afterEnter,b=r.enterCancelled,w=r.beforeAppear,k=r.appear,T=r.afterAppear,x=r.appearCancelled,S=r.duration,E=Xt,_=Xt.$vnode;_&&_.parent;)E=_.context,_=_.parent;var P=!E._isMounted||!e.isRootInsert;if(!P||k||""===k){var j=P&&m?m:c,C=P&&g?g:d,L=P&&u?u:p,A=P&&w||y,N=P&&"function"==typeof k?k:v,B=P&&T||f,M=P&&x||b,O=h(s(S)?S.enter:S);0;var R=!1!==l&&!X,D=ia(N),I=n._enterCb=z((function(){R&&(Yr(n,L),Yr(n,C)),I.cancelled?(R&&Yr(n,j),M&&M(n)):B&&B(n),n._enterCb=null}));e.data.show||st(e,"insert",(function(){var t=n.parentNode,r=t&&t._pending&&t._pending[e.key];r&&r.tag===e.tag&&r.elm._leaveCb&&r.elm._leaveCb(),N&&N(n,I)})),A&&A(n),R&&(Kr(n,j),Kr(n,C),Xr((function(){Yr(n,j),I.cancelled||(Kr(n,L),D||(la(O)?setTimeout(I,O):Zr(n,i,I)))}))),e.data.show&&(t&&t(),N&&N(n,I)),R||D||I()}}}function oa(e,t){var n=e.elm;o(n._enterCb)&&(n._enterCb.cancelled=!0,n._enterCb());var r=Hr(e.data.transition);if(a(r)||1!==n.nodeType)return t();if(!o(n._leaveCb)){var l=r.css,i=r.type,c=r.leaveClass,p=r.leaveToClass,d=r.leaveActiveClass,m=r.beforeLeave,u=r.leave,g=r.afterLeave,y=r.leaveCancelled,v=r.delayLeave,f=r.duration,b=!1!==l&&!X,w=ia(u),k=h(s(f)?f.leave:f);0;var T=n._leaveCb=z((function(){n.parentNode&&n.parentNode._pending&&(n.parentNode._pending[e.key]=null),b&&(Yr(n,p),Yr(n,d)),T.cancelled?(b&&Yr(n,c),y&&y(n)):(t(),g&&g(n)),n._leaveCb=null}));v?v(x):x()}function x(){T.cancelled||(!e.data.show&&n.parentNode&&((n.parentNode._pending||(n.parentNode._pending={}))[e.key]=e),m&&m(n),b&&(Kr(n,c),Kr(n,d),Xr((function(){Yr(n,c),T.cancelled||(Kr(n,p),w||(la(k)?setTimeout(T,k):Zr(n,i,T)))}))),u&&u(n,T),b||w||T())}}function la(e){return"number"==typeof e&&!isNaN(e)}function ia(e){if(a(e))return!1;var t=e.fns;return o(t)?ia(Array.isArray(t)?t[0]:t):(e._length||e.length)>1}function sa(e,t){!0!==t.data.show&&aa(t)}var ca=function(e){var t,n,r={},s=e.modules,c=e.nodeOps;for(t=0;t<tr.length;++t)for(r[tr[t]]=[],n=0;n<s.length;++n)o(s[n][tr[t]])&&r[tr[t]].push(s[n][tr[t]]);function p(e){var t=c.parentNode(e);o(t)&&c.removeChild(t,e)}function d(e,t,n,a,i,s,p){if(o(e.elm)&&o(s)&&(e=s[p]=fe(e)),e.isRootInsert=!i,!function(e,t,n,a){var i=e.data;if(o(i)){var s=o(e.componentInstance)&&i.keepAlive;if(o(i=i.hook)&&o(i=i.init)&&i(e,!1),o(e.componentInstance))return m(e,t),u(n,e.elm,a),l(s)&&function(e,t,n,a){var l,i=e;for(;i.componentInstance;)if(i=i.componentInstance._vnode,o(l=i.data)&&o(l=l.transition)){for(l=0;l<r.activate.length;++l)r.activate[l](er,i);t.push(i);break}u(n,e.elm,a)}(e,t,n,a),!0}}(e,t,n,a)){var d=e.data,h=e.children,y=e.tag;o(y)?(e.elm=e.ns?c.createElementNS(e.ns,y):c.createElement(y,e),f(e),g(e,h,t),o(d)&&v(e,t),u(n,e.elm,a)):l(e.isComment)?(e.elm=c.createComment(e.text),u(n,e.elm,a)):(e.elm=c.createTextNode(e.text),u(n,e.elm,a))}}function m(e,t){o(e.data.pendingInsert)&&(t.push.apply(t,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,h(e)?(v(e,t),f(e)):(Zn(e),t.push(e))}function u(e,t,n){o(e)&&(o(n)?c.parentNode(n)===e&&c.insertBefore(e,t,n):c.appendChild(e,t))}function g(e,t,n){if(Array.isArray(t)){0;for(var r=0;r<t.length;++r)d(t[r],n,e.elm,null,!0,t,r)}else i(e.text)&&c.appendChild(e.elm,c.createTextNode(String(e.text)))}function h(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return o(e.tag)}function v(e,n){for(var a=0;a<r.create.length;++a)r.create[a](er,e);o(t=e.data.hook)&&(o(t.create)&&t.create(er,e),o(t.insert)&&n.push(e))}function f(e){var t;if(o(t=e.fnScopeId))c.setStyleScope(e.elm,t);else for(var n=e;n;)o(t=n.context)&&o(t=t.$options._scopeId)&&c.setStyleScope(e.elm,t),n=n.parent;o(t=Xt)&&t!==e.context&&t!==e.fnContext&&o(t=t.$options._scopeId)&&c.setStyleScope(e.elm,t)}function b(e,t,n,r,a,o){for(;r<=a;++r)d(n[r],o,e,t,!1,n,r)}function w(e){var t,n,a=e.data;if(o(a))for(o(t=a.hook)&&o(t=t.destroy)&&t(e),t=0;t<r.destroy.length;++t)r.destroy[t](e);if(o(t=e.children))for(n=0;n<e.children.length;++n)w(e.children[n])}function k(e,t,n){for(;t<=n;++t){var r=e[t];o(r)&&(o(r.tag)?(T(r),w(r)):p(r.elm))}}function T(e,t){if(o(t)||o(e.data)){var n,a=r.remove.length+1;for(o(t)?t.listeners+=a:t=function(e,t){function n(){0==--n.listeners&&p(e)}return n.listeners=t,n}(e.elm,a),o(n=e.componentInstance)&&o(n=n._vnode)&&o(n.data)&&T(n,t),n=0;n<r.remove.length;++n)r.remove[n](e,t);o(n=e.data.hook)&&o(n=n.remove)?n(e,t):t()}else p(e.elm)}function x(e,t,n,r){for(var a=n;a<r;a++){var l=t[a];if(o(l)&&nr(e,l))return a}}function S(e,t,n,i,s,p){if(e!==t){o(t.elm)&&o(i)&&(t=i[s]=fe(t));var m=t.elm=e.elm;if(l(e.isAsyncPlaceholder))o(t.asyncFactory.resolved)?P(e.elm,t,n):t.isAsyncPlaceholder=!0;else if(l(t.isStatic)&&l(e.isStatic)&&t.key===e.key&&(l(t.isCloned)||l(t.isOnce)))t.componentInstance=e.componentInstance;else{var u,g=t.data;o(g)&&o(u=g.hook)&&o(u=u.prepatch)&&u(e,t);var y=e.children,v=t.children;if(o(g)&&h(t)){for(u=0;u<r.update.length;++u)r.update[u](e,t);o(u=g.hook)&&o(u=u.update)&&u(e,t)}a(t.text)?o(y)&&o(v)?y!==v&&function(e,t,n,r,l){var i,s,p,m=0,u=0,g=t.length-1,h=t[0],y=t[g],v=n.length-1,f=n[0],w=n[v],T=!l;for(0;m<=g&&u<=v;)a(h)?h=t[++m]:a(y)?y=t[--g]:nr(h,f)?(S(h,f,r,n,u),h=t[++m],f=n[++u]):nr(y,w)?(S(y,w,r,n,v),y=t[--g],w=n[--v]):nr(h,w)?(S(h,w,r,n,v),T&&c.insertBefore(e,h.elm,c.nextSibling(y.elm)),h=t[++m],w=n[--v]):nr(y,f)?(S(y,f,r,n,u),T&&c.insertBefore(e,y.elm,h.elm),y=t[--g],f=n[++u]):(a(i)&&(i=rr(t,m,g)),a(s=o(f.key)?i[f.key]:x(f,t,m,g))?d(f,r,e,h.elm,!1,n,u):nr(p=t[s],f)?(S(p,f,r,n,u),t[s]=void 0,T&&c.insertBefore(e,p.elm,h.elm)):d(f,r,e,h.elm,!1,n,u),f=n[++u]);m>g?b(e,a(n[v+1])?null:n[v+1].elm,n,u,v,r):u>v&&k(t,m,g)}(m,y,v,n,p):o(v)?(o(e.text)&&c.setTextContent(m,""),b(m,null,v,0,v.length-1,n)):o(y)?k(y,0,y.length-1):o(e.text)&&c.setTextContent(m,""):e.text!==t.text&&c.setTextContent(m,t.text),o(g)&&o(u=g.hook)&&o(u=u.postpatch)&&u(e,t)}}}function E(e,t,n){if(l(n)&&o(e.parent))e.parent.data.pendingInsert=t;else for(var r=0;r<t.length;++r)t[r].data.hook.insert(t[r])}var _=y("attrs,class,staticClass,staticStyle,key");function P(e,t,n,r){var a,i=t.tag,s=t.data,c=t.children;if(r=r||s&&s.pre,t.elm=e,l(t.isComment)&&o(t.asyncFactory))return t.isAsyncPlaceholder=!0,!0;if(o(s)&&(o(a=s.hook)&&o(a=a.init)&&a(t,!0),o(a=t.componentInstance)))return m(t,n),!0;if(o(i)){if(o(c))if(e.hasChildNodes())if(o(a=s)&&o(a=a.domProps)&&o(a=a.innerHTML)){if(a!==e.innerHTML)return!1}else{for(var p=!0,d=e.firstChild,u=0;u<c.length;u++){if(!d||!P(d,c[u],n,r)){p=!1;break}d=d.nextSibling}if(!p||d)return!1}else g(t,c,n);if(o(s)){var h=!1;for(var y in s)if(!_(y)){h=!0,v(t,n);break}!h&&s.class&&at(s.class)}}else e.data!==t.text&&(e.data=t.text);return!0}return function(e,t,n,i){if(!a(t)){var s,p=!1,m=[];if(a(e))p=!0,d(t,m);else{var u=o(e.nodeType);if(!u&&nr(e,t))S(e,t,m,null,null,i);else{if(u){if(1===e.nodeType&&e.hasAttribute("data-server-rendered")&&(e.removeAttribute("data-server-rendered"),n=!0),l(n)&&P(e,t,m))return E(t,m,!0),e;s=e,e=new ge(c.tagName(s).toLowerCase(),{},[],void 0,s)}var g=e.elm,y=c.parentNode(g);if(d(t,m,g._leaveCb?null:y,c.nextSibling(g)),o(t.parent))for(var v=t.parent,f=h(t);v;){for(var b=0;b<r.destroy.length;++b)r.destroy[b](v);if(v.elm=t.elm,f){for(var T=0;T<r.create.length;++T)r.create[T](er,v);var x=v.data.hook.insert;if(x.merged)for(var _=1;_<x.fns.length;_++)x.fns[_]()}else Zn(v);v=v.parent}o(y)?k([e],0,0):o(e.tag)&&w(e)}}return E(t,m,p),t.elm}o(e)&&w(e)}}({nodeOps:Kn,modules:[gr,vr,Sr,Pr,Dr,J?{create:sa,activate:sa,remove:function(e,t){!0!==e.data.show?oa(e,t):t()}}:{}].concat(pr)});X&&document.addEventListener("selectionchange",(function(){var e=document.activeElement;e&&e.vmodel&&va(e,"input")}));var pa={inserted:function(e,t,n,r){"select"===n.tag?(r.elm&&!r.elm._vOptions?st(n,"postpatch",(function(){pa.componentUpdated(e,t,n)})):da(e,t,n.context),e._vOptions=[].map.call(e.options,ga)):("textarea"===n.tag||Xn(e.type))&&(e._vModifiers=t.modifiers,t.modifiers.lazy||(e.addEventListener("compositionstart",ha),e.addEventListener("compositionend",ya),e.addEventListener("change",ya),X&&(e.vmodel=!0)))},componentUpdated:function(e,t,n){if("select"===n.tag){da(e,t,n.context);var r=e._vOptions,a=e._vOptions=[].map.call(e.options,ga);if(a.some((function(e,t){return!M(e,r[t])})))(e.multiple?t.value.some((function(e){return ua(e,a)})):t.value!==t.oldValue&&ua(t.value,a))&&va(e,"change")}}};function da(e,t,n){ma(e,t,n),(W||K)&&setTimeout((function(){ma(e,t,n)}),0)}function ma(e,t,n){var r=t.value,a=e.multiple;if(!a||Array.isArray(r)){for(var o,l,i=0,s=e.options.length;i<s;i++)if(l=e.options[i],a)o=O(r,ga(l))>-1,l.selected!==o&&(l.selected=o);else if(M(ga(l),r))return void(e.selectedIndex!==i&&(e.selectedIndex=i));a||(e.selectedIndex=-1)}}function ua(e,t){return t.every((function(t){return!M(t,e)}))}function ga(e){return"_value"in e?e._value:e.value}function ha(e){e.target.composing=!0}function ya(e){e.target.composing&&(e.target.composing=!1,va(e.target,"input"))}function va(e,t){var n=document.createEvent("HTMLEvents");n.initEvent(t,!0,!0),e.dispatchEvent(n)}function fa(e){return!e.componentInstance||e.data&&e.data.transition?e:fa(e.componentInstance._vnode)}var ba={model:pa,show:{bind:function(e,t,n){var r=t.value,a=(n=fa(n)).data&&n.data.transition,o=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;r&&a?(n.data.show=!0,aa(n,(function(){e.style.display=o}))):e.style.display=r?o:"none"},update:function(e,t,n){var r=t.value;!r!=!t.oldValue&&((n=fa(n)).data&&n.data.transition?(n.data.show=!0,r?aa(n,(function(){e.style.display=e.__vOriginalDisplay})):oa(n,(function(){e.style.display="none"}))):e.style.display=r?e.__vOriginalDisplay:"none")},unbind:function(e,t,n,r,a){a||(e.style.display=e.__vOriginalDisplay)}}},wa={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function ka(e){var t=e&&e.componentOptions;return t&&t.Ctor.options.abstract?ka(Jt(t.children)):e}function Ta(e){var t={},n=e.$options;for(var r in n.propsData)t[r]=e[r];var a=n._parentListeners;for(var o in a)t[x(o)]=a[o];return t}function xa(e,t){if(/\d-keep-alive$/.test(t.tag))return e("keep-alive",{props:t.componentOptions.propsData})}var Sa=function(e){return e.tag||ht(e)},Ea=function(e){return"show"===e.name},_a={name:"transition",props:wa,abstract:!0,render:function(e){var t=this,n=this.$slots.default;if(n&&(n=n.filter(Sa)).length){0;var r=this.mode;0;var a=n[0];if(function(e){for(;e=e.parent;)if(e.data.transition)return!0}(this.$vnode))return a;var o=ka(a);if(!o)return a;if(this._leaving)return xa(e,a);var l="__transition-"+this._uid+"-";o.key=null==o.key?o.isComment?l+"comment":l+o.tag:i(o.key)?0===String(o.key).indexOf(l)?o.key:l+o.key:o.key;var s=(o.data||(o.data={})).transition=Ta(this),c=this._vnode,p=ka(c);if(o.data.directives&&o.data.directives.some(Ea)&&(o.data.show=!0),p&&p.data&&!function(e,t){return t.key===e.key&&t.tag===e.tag}(o,p)&&!ht(p)&&(!p.componentInstance||!p.componentInstance._vnode.isComment)){var d=p.data.transition=C({},s);if("out-in"===r)return this._leaving=!0,st(d,"afterLeave",(function(){t._leaving=!1,t.$forceUpdate()})),xa(e,a);if("in-out"===r){if(ht(o))return c;var m,u=function(){m()};st(s,"afterEnter",u),st(s,"enterCancelled",u),st(d,"delayLeave",(function(e){m=e}))}}return a}}},Pa=C({tag:String,moveClass:String},wa);function ja(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function Ca(e){e.data.newPos=e.elm.getBoundingClientRect()}function La(e){var t=e.data.pos,n=e.data.newPos,r=t.left-n.left,a=t.top-n.top;if(r||a){e.data.moved=!0;var o=e.elm.style;o.transform=o.WebkitTransform="translate("+r+"px,"+a+"px)",o.transitionDuration="0s"}}delete Pa.mode;var Aa={Transition:_a,TransitionGroup:{props:Pa,beforeMount:function(){var e=this,t=this._update;this._update=function(n,r){var a=Kt(e);e.__patch__(e._vnode,e.kept,!1,!0),e._vnode=e.kept,a(),t.call(e,n,r)}},render:function(e){for(var t=this.tag||this.$vnode.data.tag||"span",n=Object.create(null),r=this.prevChildren=this.children,a=this.$slots.default||[],o=this.children=[],l=Ta(this),i=0;i<a.length;i++){var s=a[i];if(s.tag)if(null!=s.key&&0!==String(s.key).indexOf("__vlist"))o.push(s),n[s.key]=s,(s.data||(s.data={})).transition=l;else;}if(r){for(var c=[],p=[],d=0;d<r.length;d++){var m=r[d];m.data.transition=l,m.data.pos=m.elm.getBoundingClientRect(),n[m.key]?c.push(m):p.push(m)}this.kept=e(t,null,c),this.removed=p}return e(t,null,o)},updated:function(){var e=this.prevChildren,t=this.moveClass||(this.name||"v")+"-move";e.length&&this.hasMove(e[0].elm,t)&&(e.forEach(ja),e.forEach(Ca),e.forEach(La),this._reflow=document.body.offsetHeight,e.forEach((function(e){if(e.data.moved){var n=e.elm,r=n.style;Kr(n,t),r.transform=r.WebkitTransform=r.transitionDuration="",n.addEventListener(Gr,n._moveCb=function e(r){r&&r.target!==n||r&&!/transform$/.test(r.propertyName)||(n.removeEventListener(Gr,e),n._moveCb=null,Yr(n,t))})}})))},methods:{hasMove:function(e,t){if(!Ur)return!1;if(this._hasMove)return this._hasMove;var n=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach((function(e){$r(n,e)})),qr(n,t),n.style.display="none",this.$el.appendChild(n);var r=ta(n);return this.$el.removeChild(n),this._hasMove=r.hasTransform}}}};Sn.config.mustUseProp=function(e,t,n){return"value"===n&&Bn(e)&&"button"!==t||"selected"===n&&"option"===e||"checked"===n&&"input"===e||"muted"===n&&"video"===e},Sn.config.isReservedTag=Vn,Sn.config.isReservedAttr=Nn,Sn.config.getTagNamespace=function(e){return Qn(e)?"svg":"math"===e?"math":void 0},Sn.config.isUnknownElement=function(e){if(!J)return!0;if(Vn(e))return!1;if(e=e.toLowerCase(),null!=Wn[e])return Wn[e];var t=document.createElement(e);return e.indexOf("-")>-1?Wn[e]=t.constructor===window.HTMLUnknownElement||t.constructor===window.HTMLElement:Wn[e]=/HTMLUnknownElement/.test(t.toString())},C(Sn.options.directives,ba),C(Sn.options.components,Aa),Sn.prototype.__patch__=J?ca:A,Sn.prototype.$mount=function(e,t){return function(e,t,n){var r;return e.$el=t,e.$options.render||(e.$options.render=ye),en(e,"beforeMount"),r=function(){e._update(e._render(),n)},new un(e,r,A,{before:function(){e._isMounted&&!e._isDestroyed&&en(e,"beforeUpdate")}},!0),n=!1,null==e.$vnode&&(e._isMounted=!0,en(e,"mounted")),e}(this,e=e&&J?function(e){if("string"==typeof e){var t=document.querySelector(e);return t||document.createElement("div")}return e}(e):void 0,t)},J&&setTimeout((function(){I.devtools&&ae&&ae.emit("init",Sn)}),0),t.a=Sn},function(e,t,n){"use strict";function r(e,t,n,r,a,o,l,i){var s,c="function"==typeof e?e.options:e;if(t&&(c.render=t,c.staticRenderFns=n,c._compiled=!0),r&&(c.functional=!0),o&&(c._scopeId="data-v-"+o),l?(s=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),a&&a.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(l)},c._ssrRegister=s):a&&(s=i?function(){a.call(this,(c.functional?this.parent:this).$root.$options.shadowRoot)}:a),s)if(c.functional){c._injectStyles=s;var p=c.render;c.render=function(e,t){return s.call(t),p(e,t)}}else{var d=c.beforeCreate;c.beforeCreate=d?[].concat(d,s):[s]}return{exports:e,options:c}}n.d(t,"a",(function(){return r}))},function(e,t,n){var r=n(28),a="object"==typeof self&&self&&self.Object===Object&&self,o=r||a||Function("return this")();e.exports=o},function(e,t){var n=Array.isArray;e.exports=n},function(e,t,n){var r=n(78),a=n(81);e.exports=function(e,t){var n=a(e,t);return r(n)?n:void 0}},function(e,t){e.exports=function(e){return null!=e&&"object"==typeof e}},function(e,t,n){var r=n(2).Symbol;e.exports=r},function(e,t,n){var r=n(6),a=n(63),o=n(64),l=r?r.toStringTag:void 0;e.exports=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":l&&l in Object(e)?a(e):o(e)}},function(e,t,n){
/*!
* screenfull
* v5.2.0 - 2021-11-03
* (c) Sindre Sorhus; MIT License
*/
!function(){"use strict";var t="undefined"!=typeof window&&void 0!==window.document?window.document:{},n=e.exports,r=function(){for(var e,n=[["requestFullscreen","exitFullscreen","fullscreenElement","fullscreenEnabled","fullscreenchange","fullscreenerror"],["webkitRequestFullscreen","webkitExitFullscreen","webkitFullscreenElement","webkitFullscreenEnabled","webkitfullscreenchange","webkitfullscreenerror"],["webkitRequestFullScreen","webkitCancelFullScreen","webkitCurrentFullScreenElement","webkitCancelFullScreen","webkitfullscreenchange","webkitfullscreenerror"],["mozRequestFullScreen","mozCancelFullScreen","mozFullScreenElement","mozFullScreenEnabled","mozfullscreenchange","mozfullscreenerror"],["msRequestFullscreen","msExitFullscreen","msFullscreenElement","msFullscreenEnabled","MSFullscreenChange","MSFullscreenError"]],r=0,a=n.length,o={};r<a;r++)if((e=n[r])&&e[1]in t){for(r=0;r<e.length;r++)o[n[0][r]]=e[r];return o}return!1}(),a={change:r.fullscreenchange,error:r.fullscreenerror},o={request:function(e,n){return new Promise(function(a,o){var l=function(){this.off("change",l),a()}.bind(this);this.on("change",l);var i=(e=e||t.documentElement)[r.requestFullscreen](n);i instanceof Promise&&i.then(l).catch(o)}.bind(this))},exit:function(){return new Promise(function(e,n){if(this.isFullscreen){var a=function(){this.off("change",a),e()}.bind(this);this.on("change",a);var o=t[r.exitFullscreen]();o instanceof Promise&&o.then(a).catch(n)}else e()}.bind(this))},toggle:function(e,t){return this.isFullscreen?this.exit():this.request(e,t)},onchange:function(e){this.on("change",e)},onerror:function(e){this.on("error",e)},on:function(e,n){var r=a[e];r&&t.addEventListener(r,n,!1)},off:function(e,n){var r=a[e];r&&t.removeEventListener(r,n,!1)},raw:r};r?(Object.defineProperties(o,{isFullscreen:{get:function(){return Boolean(t[r.fullscreenElement])}},element:{enumerable:!0,get:function(){return t[r.fullscreenElement]}},isEnabled:{enumerable:!0,get:function(){return Boolean(t[r.fullscreenEnabled])}}}),n?e.exports=o:window.screenfull=o):n?e.exports={isEnabled:!1}:window.screenfull={isEnabled:!1}}()},function(e,t,n){var r=n(68),a=n(69),o=n(70),l=n(71),i=n(72);function s(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}s.prototype.clear=r,s.prototype.delete=a,s.prototype.get=o,s.prototype.has=l,s.prototype.set=i,e.exports=s},function(e,t,n){var r=n(30);e.exports=function(e,t){for(var n=e.length;n--;)if(r(e[n][0],t))return n;return-1}},function(e,t,n){var r=n(4)(Object,"create");e.exports=r},function(e,t,n){var r=n(90);e.exports=function(e,t){var n=e.__data__;return r(t)?n["string"==typeof t?"string":"hash"]:n.map}},function(e,t,n){var r=n(24);e.exports=function(e){if("string"==typeof e||r(e))return e;var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},function(e,t){var n=/^\s+|\s+$/g,r=/^[-+]0x[0-9a-f]+$/i,a=/^0b[01]+$/i,o=/^0o[0-7]+$/i,l=parseInt,i="object"==typeof global&&global&&global.Object===Object&&global,s="object"==typeof self&&self&&self.Object===Object&&self,c=i||s||Function("return this")(),p=Object.prototype.toString,d=Math.max,m=Math.min,u=function(){return c.Date.now()};function g(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}function h(e){if("number"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==p.call(e)}(e))return NaN;if(g(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=g(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(n,"");var i=a.test(e);return i||o.test(e)?l(e.slice(2),i?2:8):r.test(e)?NaN:+e}e.exports=function(e,t,n){var r,a,o,l,i,s,c=0,p=!1,y=!1,v=!0;if("function"!=typeof e)throw new TypeError("Expected a function");function f(t){var n=r,o=a;return r=a=void 0,c=t,l=e.apply(o,n)}function b(e){return c=e,i=setTimeout(k,t),p?f(e):l}function w(e){var n=e-s;return void 0===s||n>=t||n<0||y&&e-c>=o}function k(){var e=u();if(w(e))return T(e);i=setTimeout(k,function(e){var n=t-(e-s);return y?m(n,o-(e-c)):n}(e))}function T(e){return i=void 0,v&&r?f(e):(r=a=void 0,l)}function x(){var e=u(),n=w(e);if(r=arguments,a=this,s=e,n){if(void 0===i)return b(s);if(y)return i=setTimeout(k,t),f(s)}return void 0===i&&(i=setTimeout(k,t)),l}return t=h(t)||0,g(n)&&(p=!!n.leading,o=(y="maxWait"in n)?d(h(n.maxWait)||0,t):o,v="trailing"in n?!!n.trailing:v),x.cancel=function(){void 0!==i&&clearTimeout(i),c=0,r=s=a=i=void 0},x.flush=function(){return void 0===i?l:T(u())},x}},function(e,t,n){var r,a;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(a="function"==typeof(r=function(){var e,t,n={version:"0.2.0"},r=n.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function a(e,t,n){return e<t?t:e>n?n:e}function o(e){return 100*(-1+e)}n.configure=function(e){var t,n;for(t in e)void 0!==(n=e[t])&&e.hasOwnProperty(t)&&(r[t]=n);return this},n.status=null,n.set=function(e){var t=n.isStarted();e=a(e,r.minimum,1),n.status=1===e?null:e;var s=n.render(!t),c=s.querySelector(r.barSelector),p=r.speed,d=r.easing;return s.offsetWidth,l((function(t){""===r.positionUsing&&(r.positionUsing=n.getPositioningCSS()),i(c,function(e,t,n){var a;return(a="translate3d"===r.positionUsing?{transform:"translate3d("+o(e)+"%,0,0)"}:"translate"===r.positionUsing?{transform:"translate("+o(e)+"%,0)"}:{"margin-left":o(e)+"%"}).transition="all "+t+"ms "+n,a}(e,p,d)),1===e?(i(s,{transition:"none",opacity:1}),s.offsetWidth,setTimeout((function(){i(s,{transition:"all "+p+"ms linear",opacity:0}),setTimeout((function(){n.remove(),t()}),p)}),p)):setTimeout(t,p)})),this},n.isStarted=function(){return"number"==typeof n.status},n.start=function(){n.status||n.set(0);var e=function(){setTimeout((function(){n.status&&(n.trickle(),e())}),r.trickleSpeed)};return r.trickle&&e(),this},n.done=function(e){return e||n.status?n.inc(.3+.5*Math.random()).set(1):this},n.inc=function(e){var t=n.status;return t?("number"!=typeof e&&(e=(1-t)*a(Math.random()*t,.1,.95)),t=a(t+e,0,.994),n.set(t)):n.start()},n.trickle=function(){return n.inc(Math.random()*r.trickleRate)},e=0,t=0,n.promise=function(r){return r&&"resolved"!==r.state()?(0===t&&n.start(),e++,t++,r.always((function(){0==--t?(e=0,n.done()):n.set((e-t)/e)})),this):this},n.render=function(e){if(n.isRendered())return document.getElementById("nprogress");c(document.documentElement,"nprogress-busy");var t=document.createElement("div");t.id="nprogress",t.innerHTML=r.template;var a,l=t.querySelector(r.barSelector),s=e?"-100":o(n.status||0),p=document.querySelector(r.parent);return i(l,{transition:"all 0 linear",transform:"translate3d("+s+"%,0,0)"}),r.showSpinner||(a=t.querySelector(r.spinnerSelector))&&m(a),p!=document.body&&c(p,"nprogress-custom-parent"),p.appendChild(t),t},n.remove=function(){p(document.documentElement,"nprogress-busy"),p(document.querySelector(r.parent),"nprogress-custom-parent");var e=document.getElementById("nprogress");e&&m(e)},n.isRendered=function(){return!!document.getElementById("nprogress")},n.getPositioningCSS=function(){var e=document.body.style,t="WebkitTransform"in e?"Webkit":"MozTransform"in e?"Moz":"msTransform"in e?"ms":"OTransform"in e?"O":"";return t+"Perspective"in e?"translate3d":t+"Transform"in e?"translate":"margin"};var l=function(){var e=[];function t(){var n=e.shift();n&&n(t)}return function(n){e.push(n),1==e.length&&t()}}(),i=function(){var e=["Webkit","O","Moz","ms"],t={};function n(n){return n=n.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(e,t){return t.toUpperCase()})),t[n]||(t[n]=function(t){var n=document.body.style;if(t in n)return t;for(var r,a=e.length,o=t.charAt(0).toUpperCase()+t.slice(1);a--;)if((r=e[a]+o)in n)return r;return t}(n))}function r(e,t,r){t=n(t),e.style[t]=r}return function(e,t){var n,a,o=arguments;if(2==o.length)for(n in t)void 0!==(a=t[n])&&t.hasOwnProperty(n)&&r(e,n,a);else r(e,o[1],o[2])}}();function s(e,t){return("string"==typeof e?e:d(e)).indexOf(" "+t+" ")>=0}function c(e,t){var n=d(e),r=n+t;s(n,t)||(e.className=r.substring(1))}function p(e,t){var n,r=d(e);s(e,t)&&(n=r.replace(" "+t+" "," "),e.className=n.substring(1,n.length-1))}function d(e){return(" "+(e.className||"")+" ").replace(/\s+/gi," ")}function m(e){e&&e.parentNode&&e.parentNode.removeChild(e)}return n})?r.call(t,n,t,e):r)||(e.exports=a)},function(e,t,n){"use strict";t.a={render:()=>null}},function(e,t,n){var r=n(62),a=n(5),o=Object.prototype,l=o.hasOwnProperty,i=o.propertyIsEnumerable,s=r(function(){return arguments}())?r:function(e){return a(e)&&l.call(e,"callee")&&!i.call(e,"callee")};e.exports=s},function(e,t,n){var r=n(4)(n(2),"Map");e.exports=r},function(e,t){e.exports=function(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}},function(e,t,n){var r=n(82),a=n(89),o=n(91),l=n(92),i=n(93);function s(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}s.prototype.clear=r,s.prototype.delete=a,s.prototype.get=o,s.prototype.has=l,s.prototype.set=i,e.exports=s},function(e,t){e.exports=function(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=e})),n}},function(e,t){e.exports=function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}},function(e,t,n){var r=n(3),a=n(24),o=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,l=/^\w*$/;e.exports=function(e,t){if(r(e))return!1;var n=typeof e;return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=e&&!a(e))||(l.test(e)||!o.test(e)||null!=t&&e in Object(t))}},function(e,t,n){var r=n(7),a=n(5);e.exports=function(e){return"symbol"==typeof e||a(e)&&"[object Symbol]"==r(e)}},function(e,t){e.exports=function(e){return e}},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t){e.exports=function(e,t){for(var n=-1,r=t.length,a=e.length;++n<r;)e[a+n]=t[n];return e}},function(e,t){var n="object"==typeof global&&global&&global.Object===Object&&global;e.exports=n},function(e,t,n){var r=n(9),a=n(73),o=n(74),l=n(75),i=n(76),s=n(77);function c(e){var t=this.__data__=new r(e);this.size=t.size}c.prototype.clear=a,c.prototype.delete=o,c.prototype.get=l,c.prototype.has=i,c.prototype.set=s,e.exports=c},function(e,t){e.exports=function(e,t){return e===t||e!=e&&t!=t}},function(e,t,n){var r=n(7),a=n(19);e.exports=function(e){if(!a(e))return!1;var t=r(e);return"[object Function]"==t||"[object GeneratorFunction]"==t||"[object AsyncFunction]"==t||"[object Proxy]"==t}},function(e,t){var n=Function.prototype.toString;e.exports=function(e){if(null!=e){try{return n.call(e)}catch(e){}try{return e+""}catch(e){}}return""}},function(e,t,n){var r=n(94),a=n(5);e.exports=function e(t,n,o,l,i){return t===n||(null==t||null==n||!a(t)&&!a(n)?t!=t&&n!=n:r(t,n,o,l,e,i))}},function(e,t,n){var r=n(35),a=n(97),o=n(36);e.exports=function(e,t,n,l,i,s){var c=1&n,p=e.length,d=t.length;if(p!=d&&!(c&&d>p))return!1;var m=s.get(e),u=s.get(t);if(m&&u)return m==t&&u==e;var g=-1,h=!0,y=2&n?new r:void 0;for(s.set(e,t),s.set(t,e);++g<p;){var v=e[g],f=t[g];if(l)var b=c?l(f,v,g,t,e,s):l(v,f,g,e,t,s);if(void 0!==b){if(b)continue;h=!1;break}if(y){if(!a(t,(function(e,t){if(!o(y,t)&&(v===e||i(v,e,n,l,s)))return y.push(t)}))){h=!1;break}}else if(v!==f&&!i(v,f,n,l,s)){h=!1;break}}return s.delete(e),s.delete(t),h}},function(e,t,n){var r=n(20),a=n(95),o=n(96);function l(e){var t=-1,n=null==e?0:e.length;for(this.__data__=new r;++t<n;)this.add(e[t])}l.prototype.add=l.prototype.push=a,l.prototype.has=o,e.exports=l},function(e,t){e.exports=function(e,t){return e.has(t)}},function(e,t,n){var r=n(107),a=n(113),o=n(41);e.exports=function(e){return o(e)?r(e):a(e)}},function(e,t,n){(function(e){var r=n(2),a=n(109),o=t&&!t.nodeType&&t,l=o&&"object"==typeof e&&e&&!e.nodeType&&e,i=l&&l.exports===o?r.Buffer:void 0,s=(i?i.isBuffer:void 0)||a;e.exports=s}).call(this,n(26)(e))},function(e,t){var n=/^(?:0|[1-9]\d*)$/;e.exports=function(e,t){var r=typeof e;return!!(t=null==t?9007199254740991:t)&&("number"==r||"symbol"!=r&&n.test(e))&&e>-1&&e%1==0&&e<t}},function(e,t,n){var r=n(110),a=n(111),o=n(112),l=o&&o.isTypedArray,i=l?a(l):r;e.exports=i},function(e,t,n){var r=n(31),a=n(22);e.exports=function(e){return null!=e&&a(e.length)&&!r(e)}},function(e,t,n){var r=n(4)(n(2),"Set");e.exports=r},function(e,t,n){var r=n(19);e.exports=function(e){return e==e&&!r(e)}},function(e,t){e.exports=function(e,t){return function(n){return null!=n&&(n[e]===t&&(void 0!==t||e in Object(n)))}}},function(e,t,n){var r=n(46),a=n(13);e.exports=function(e,t){for(var n=0,o=(t=r(t,e)).length;null!=e&&n<o;)e=e[a(t[n++])];return n&&n==o?e:void 0}},function(e,t,n){var r=n(3),a=n(23),o=n(123),l=n(126);e.exports=function(e,t){return r(e)?e:a(e,t)?[e]:o(l(e))}},function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){var r=n(60),a=n(65),o=n(135),l=n(143),i=n(152),s=n(153),c=o((function(e){var t=s(e);return i(t)&&(t=void 0),l(r(e,1,i,!0),a(t,2))}));e.exports=c},function(e,t,n){"use strict";
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */var r=/["'&<>]/;e.exports=function(e){var t,n=""+e,a=r.exec(n);if(!a)return n;var o="",l=0,i=0;for(l=a.index;l<n.length;l++){switch(n.charCodeAt(l)){case 34:t="&quot;";break;case 38:t="&amp;";break;case 39:t="&#39;";break;case 60:t="&lt;";break;case 62:t="&gt;";break;default:continue}i!==l&&(o+=n.substring(i,l)),i=l+1,o+=t}return i!==l?o+n.substring(i,l):o}},function(e,t,n){var r=n(45);e.exports=function(e,t,n){var a=null==e?void 0:r(e,t);return void 0===a?n:a}},function(e,t,n){e.exports=n(169)},function(e,t,n){var r=n(27),a=n(61);e.exports=function e(t,n,o,l,i){var s=-1,c=t.length;for(o||(o=a),i||(i=[]);++s<c;){var p=t[s];n>0&&o(p)?n>1?e(p,n-1,o,l,i):r(i,p):l||(i[i.length]=p)}return i}},function(e,t,n){var r=n(6),a=n(17),o=n(3),l=r?r.isConcatSpreadable:void 0;e.exports=function(e){return o(e)||a(e)||!!(l&&e&&e[l])}},function(e,t,n){var r=n(7),a=n(5);e.exports=function(e){return a(e)&&"[object Arguments]"==r(e)}},function(e,t,n){var r=n(6),a=Object.prototype,o=a.hasOwnProperty,l=a.toString,i=r?r.toStringTag:void 0;e.exports=function(e){var t=o.call(e,i),n=e[i];try{e[i]=void 0;var r=!0}catch(e){}var a=l.call(e);return r&&(t?e[i]=n:delete e[i]),a}},function(e,t){var n=Object.prototype.toString;e.exports=function(e){return n.call(e)}},function(e,t,n){var r=n(66),a=n(122),o=n(25),l=n(3),i=n(132);e.exports=function(e){return"function"==typeof e?e:null==e?o:"object"==typeof e?l(e)?a(e[0],e[1]):r(e):i(e)}},function(e,t,n){var r=n(67),a=n(121),o=n(44);e.exports=function(e){var t=a(e);return 1==t.length&&t[0][2]?o(t[0][0],t[0][1]):function(n){return n===e||r(n,e,t)}}},function(e,t,n){var r=n(29),a=n(33);e.exports=function(e,t,n,o){var l=n.length,i=l,s=!o;if(null==e)return!i;for(e=Object(e);l--;){var c=n[l];if(s&&c[2]?c[1]!==e[c[0]]:!(c[0]in e))return!1}for(;++l<i;){var p=(c=n[l])[0],d=e[p],m=c[1];if(s&&c[2]){if(void 0===d&&!(p in e))return!1}else{var u=new r;if(o)var g=o(d,m,p,e,t,u);if(!(void 0===g?a(m,d,3,o,u):g))return!1}}return!0}},function(e,t){e.exports=function(){this.__data__=[],this.size=0}},function(e,t,n){var r=n(10),a=Array.prototype.splice;e.exports=function(e){var t=this.__data__,n=r(t,e);return!(n<0)&&(n==t.length-1?t.pop():a.call(t,n,1),--this.size,!0)}},function(e,t,n){var r=n(10);e.exports=function(e){var t=this.__data__,n=r(t,e);return n<0?void 0:t[n][1]}},function(e,t,n){var r=n(10);e.exports=function(e){return r(this.__data__,e)>-1}},function(e,t,n){var r=n(10);e.exports=function(e,t){var n=this.__data__,a=r(n,e);return a<0?(++this.size,n.push([e,t])):n[a][1]=t,this}},function(e,t,n){var r=n(9);e.exports=function(){this.__data__=new r,this.size=0}},function(e,t){e.exports=function(e){var t=this.__data__,n=t.delete(e);return this.size=t.size,n}},function(e,t){e.exports=function(e){return this.__data__.get(e)}},function(e,t){e.exports=function(e){return this.__data__.has(e)}},function(e,t,n){var r=n(9),a=n(18),o=n(20);e.exports=function(e,t){var n=this.__data__;if(n instanceof r){var l=n.__data__;if(!a||l.length<199)return l.push([e,t]),this.size=++n.size,this;n=this.__data__=new o(l)}return n.set(e,t),this.size=n.size,this}},function(e,t,n){var r=n(31),a=n(79),o=n(19),l=n(32),i=/^\[object .+?Constructor\]$/,s=Function.prototype,c=Object.prototype,p=s.toString,d=c.hasOwnProperty,m=RegExp("^"+p.call(d).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");e.exports=function(e){return!(!o(e)||a(e))&&(r(e)?m:i).test(l(e))}},function(e,t,n){var r,a=n(80),o=(r=/[^.]+$/.exec(a&&a.keys&&a.keys.IE_PROTO||""))?"Symbol(src)_1."+r:"";e.exports=function(e){return!!o&&o in e}},function(e,t,n){var r=n(2)["__core-js_shared__"];e.exports=r},function(e,t){e.exports=function(e,t){return null==e?void 0:e[t]}},function(e,t,n){var r=n(83),a=n(9),o=n(18);e.exports=function(){this.size=0,this.__data__={hash:new r,map:new(o||a),string:new r}}},function(e,t,n){var r=n(84),a=n(85),o=n(86),l=n(87),i=n(88);function s(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}s.prototype.clear=r,s.prototype.delete=a,s.prototype.get=o,s.prototype.has=l,s.prototype.set=i,e.exports=s},function(e,t,n){var r=n(11);e.exports=function(){this.__data__=r?r(null):{},this.size=0}},function(e,t){e.exports=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t}},function(e,t,n){var r=n(11),a=Object.prototype.hasOwnProperty;e.exports=function(e){var t=this.__data__;if(r){var n=t[e];return"__lodash_hash_undefined__"===n?void 0:n}return a.call(t,e)?t[e]:void 0}},function(e,t,n){var r=n(11),a=Object.prototype.hasOwnProperty;e.exports=function(e){var t=this.__data__;return r?void 0!==t[e]:a.call(t,e)}},function(e,t,n){var r=n(11);e.exports=function(e,t){var n=this.__data__;return this.size+=this.has(e)?0:1,n[e]=r&&void 0===t?"__lodash_hash_undefined__":t,this}},function(e,t,n){var r=n(12);e.exports=function(e){var t=r(this,e).delete(e);return this.size-=t?1:0,t}},function(e,t){e.exports=function(e){var t=typeof e;return"string"==t||"number"==t||"symbol"==t||"boolean"==t?"__proto__"!==e:null===e}},function(e,t,n){var r=n(12);e.exports=function(e){return r(this,e).get(e)}},function(e,t,n){var r=n(12);e.exports=function(e){return r(this,e).has(e)}},function(e,t,n){var r=n(12);e.exports=function(e,t){var n=r(this,e),a=n.size;return n.set(e,t),this.size+=n.size==a?0:1,this}},function(e,t,n){var r=n(29),a=n(34),o=n(98),l=n(101),i=n(117),s=n(3),c=n(38),p=n(40),d="[object Object]",m=Object.prototype.hasOwnProperty;e.exports=function(e,t,n,u,g,h){var y=s(e),v=s(t),f=y?"[object Array]":i(e),b=v?"[object Array]":i(t),w=(f="[object Arguments]"==f?d:f)==d,k=(b="[object Arguments]"==b?d:b)==d,T=f==b;if(T&&c(e)){if(!c(t))return!1;y=!0,w=!1}if(T&&!w)return h||(h=new r),y||p(e)?a(e,t,n,u,g,h):o(e,t,f,n,u,g,h);if(!(1&n)){var x=w&&m.call(e,"__wrapped__"),S=k&&m.call(t,"__wrapped__");if(x||S){var E=x?e.value():e,_=S?t.value():t;return h||(h=new r),g(E,_,n,u,h)}}return!!T&&(h||(h=new r),l(e,t,n,u,g,h))}},function(e,t){e.exports=function(e){return this.__data__.set(e,"__lodash_hash_undefined__"),this}},function(e,t){e.exports=function(e){return this.__data__.has(e)}},function(e,t){e.exports=function(e,t){for(var n=-1,r=null==e?0:e.length;++n<r;)if(t(e[n],n,e))return!0;return!1}},function(e,t,n){var r=n(6),a=n(99),o=n(30),l=n(34),i=n(100),s=n(21),c=r?r.prototype:void 0,p=c?c.valueOf:void 0;e.exports=function(e,t,n,r,c,d,m){switch(n){case"[object DataView]":if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case"[object ArrayBuffer]":return!(e.byteLength!=t.byteLength||!d(new a(e),new a(t)));case"[object Boolean]":case"[object Date]":case"[object Number]":return o(+e,+t);case"[object Error]":return e.name==t.name&&e.message==t.message;case"[object RegExp]":case"[object String]":return e==t+"";case"[object Map]":var u=i;case"[object Set]":var g=1&r;if(u||(u=s),e.size!=t.size&&!g)return!1;var h=m.get(e);if(h)return h==t;r|=2,m.set(e,t);var y=l(u(e),u(t),r,c,d,m);return m.delete(e),y;case"[object Symbol]":if(p)return p.call(e)==p.call(t)}return!1}},function(e,t,n){var r=n(2).Uint8Array;e.exports=r},function(e,t){e.exports=function(e){var t=-1,n=Array(e.size);return e.forEach((function(e,r){n[++t]=[r,e]})),n}},function(e,t,n){var r=n(102),a=Object.prototype.hasOwnProperty;e.exports=function(e,t,n,o,l,i){var s=1&n,c=r(e),p=c.length;if(p!=r(t).length&&!s)return!1;for(var d=p;d--;){var m=c[d];if(!(s?m in t:a.call(t,m)))return!1}var u=i.get(e),g=i.get(t);if(u&&g)return u==t&&g==e;var h=!0;i.set(e,t),i.set(t,e);for(var y=s;++d<p;){var v=e[m=c[d]],f=t[m];if(o)var b=s?o(f,v,m,t,e,i):o(v,f,m,e,t,i);if(!(void 0===b?v===f||l(v,f,n,o,i):b)){h=!1;break}y||(y="constructor"==m)}if(h&&!y){var w=e.constructor,k=t.constructor;w==k||!("constructor"in e)||!("constructor"in t)||"function"==typeof w&&w instanceof w&&"function"==typeof k&&k instanceof k||(h=!1)}return i.delete(e),i.delete(t),h}},function(e,t,n){var r=n(103),a=n(104),o=n(37);e.exports=function(e){return r(e,o,a)}},function(e,t,n){var r=n(27),a=n(3);e.exports=function(e,t,n){var o=t(e);return a(e)?o:r(o,n(e))}},function(e,t,n){var r=n(105),a=n(106),o=Object.prototype.propertyIsEnumerable,l=Object.getOwnPropertySymbols,i=l?function(e){return null==e?[]:(e=Object(e),r(l(e),(function(t){return o.call(e,t)})))}:a;e.exports=i},function(e,t){e.exports=function(e,t){for(var n=-1,r=null==e?0:e.length,a=0,o=[];++n<r;){var l=e[n];t(l,n,e)&&(o[a++]=l)}return o}},function(e,t){e.exports=function(){return[]}},function(e,t,n){var r=n(108),a=n(17),o=n(3),l=n(38),i=n(39),s=n(40),c=Object.prototype.hasOwnProperty;e.exports=function(e,t){var n=o(e),p=!n&&a(e),d=!n&&!p&&l(e),m=!n&&!p&&!d&&s(e),u=n||p||d||m,g=u?r(e.length,String):[],h=g.length;for(var y in e)!t&&!c.call(e,y)||u&&("length"==y||d&&("offset"==y||"parent"==y)||m&&("buffer"==y||"byteLength"==y||"byteOffset"==y)||i(y,h))||g.push(y);return g}},function(e,t){e.exports=function(e,t){for(var n=-1,r=Array(e);++n<e;)r[n]=t(n);return r}},function(e,t){e.exports=function(){return!1}},function(e,t,n){var r=n(7),a=n(22),o=n(5),l={};l["[object Float32Array]"]=l["[object Float64Array]"]=l["[object Int8Array]"]=l["[object Int16Array]"]=l["[object Int32Array]"]=l["[object Uint8Array]"]=l["[object Uint8ClampedArray]"]=l["[object Uint16Array]"]=l["[object Uint32Array]"]=!0,l["[object Arguments]"]=l["[object Array]"]=l["[object ArrayBuffer]"]=l["[object Boolean]"]=l["[object DataView]"]=l["[object Date]"]=l["[object Error]"]=l["[object Function]"]=l["[object Map]"]=l["[object Number]"]=l["[object Object]"]=l["[object RegExp]"]=l["[object Set]"]=l["[object String]"]=l["[object WeakMap]"]=!1,e.exports=function(e){return o(e)&&a(e.length)&&!!l[r(e)]}},function(e,t){e.exports=function(e){return function(t){return e(t)}}},function(e,t,n){(function(e){var r=n(28),a=t&&!t.nodeType&&t,o=a&&"object"==typeof e&&e&&!e.nodeType&&e,l=o&&o.exports===a&&r.process,i=function(){try{var e=o&&o.require&&o.require("util").types;return e||l&&l.binding&&l.binding("util")}catch(e){}}();e.exports=i}).call(this,n(26)(e))},function(e,t,n){var r=n(114),a=n(115),o=Object.prototype.hasOwnProperty;e.exports=function(e){if(!r(e))return a(e);var t=[];for(var n in Object(e))o.call(e,n)&&"constructor"!=n&&t.push(n);return t}},function(e,t){var n=Object.prototype;e.exports=function(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||n)}},function(e,t,n){var r=n(116)(Object.keys,Object);e.exports=r},function(e,t){e.exports=function(e,t){return function(n){return e(t(n))}}},function(e,t,n){var r=n(118),a=n(18),o=n(119),l=n(42),i=n(120),s=n(7),c=n(32),p=c(r),d=c(a),m=c(o),u=c(l),g=c(i),h=s;(r&&"[object DataView]"!=h(new r(new ArrayBuffer(1)))||a&&"[object Map]"!=h(new a)||o&&"[object Promise]"!=h(o.resolve())||l&&"[object Set]"!=h(new l)||i&&"[object WeakMap]"!=h(new i))&&(h=function(e){var t=s(e),n="[object Object]"==t?e.constructor:void 0,r=n?c(n):"";if(r)switch(r){case p:return"[object DataView]";case d:return"[object Map]";case m:return"[object Promise]";case u:return"[object Set]";case g:return"[object WeakMap]"}return t}),e.exports=h},function(e,t,n){var r=n(4)(n(2),"DataView");e.exports=r},function(e,t,n){var r=n(4)(n(2),"Promise");e.exports=r},function(e,t,n){var r=n(4)(n(2),"WeakMap");e.exports=r},function(e,t,n){var r=n(43),a=n(37);e.exports=function(e){for(var t=a(e),n=t.length;n--;){var o=t[n],l=e[o];t[n]=[o,l,r(l)]}return t}},function(e,t,n){var r=n(33),a=n(58),o=n(129),l=n(23),i=n(43),s=n(44),c=n(13);e.exports=function(e,t){return l(e)&&i(t)?s(c(e),t):function(n){var l=a(n,e);return void 0===l&&l===t?o(n,e):r(t,l,3)}}},function(e,t,n){var r=n(124),a=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,o=/\\(\\)?/g,l=r((function(e){var t=[];return 46===e.charCodeAt(0)&&t.push(""),e.replace(a,(function(e,n,r,a){t.push(r?a.replace(o,"$1"):n||e)})),t}));e.exports=l},function(e,t,n){var r=n(125);e.exports=function(e){var t=r(e,(function(e){return 500===n.size&&n.clear(),e})),n=t.cache;return t}},function(e,t,n){var r=n(20);function a(e,t){if("function"!=typeof e||null!=t&&"function"!=typeof t)throw new TypeError("Expected a function");var n=function(){var r=arguments,a=t?t.apply(this,r):r[0],o=n.cache;if(o.has(a))return o.get(a);var l=e.apply(this,r);return n.cache=o.set(a,l)||o,l};return n.cache=new(a.Cache||r),n}a.Cache=r,e.exports=a},function(e,t,n){var r=n(127);e.exports=function(e){return null==e?"":r(e)}},function(e,t,n){var r=n(6),a=n(128),o=n(3),l=n(24),i=r?r.prototype:void 0,s=i?i.toString:void 0;e.exports=function e(t){if("string"==typeof t)return t;if(o(t))return a(t,e)+"";if(l(t))return s?s.call(t):"";var n=t+"";return"0"==n&&1/t==-1/0?"-0":n}},function(e,t){e.exports=function(e,t){for(var n=-1,r=null==e?0:e.length,a=Array(r);++n<r;)a[n]=t(e[n],n,e);return a}},function(e,t,n){var r=n(130),a=n(131);e.exports=function(e,t){return null!=e&&a(e,t,r)}},function(e,t){e.exports=function(e,t){return null!=e&&t in Object(e)}},function(e,t,n){var r=n(46),a=n(17),o=n(3),l=n(39),i=n(22),s=n(13);e.exports=function(e,t,n){for(var c=-1,p=(t=r(t,e)).length,d=!1;++c<p;){var m=s(t[c]);if(!(d=null!=e&&n(e,m)))break;e=e[m]}return d||++c!=p?d:!!(p=null==e?0:e.length)&&i(p)&&l(m,p)&&(o(e)||a(e))}},function(e,t,n){var r=n(133),a=n(134),o=n(23),l=n(13);e.exports=function(e){return o(e)?r(l(e)):a(e)}},function(e,t){e.exports=function(e){return function(t){return null==t?void 0:t[e]}}},function(e,t,n){var r=n(45);e.exports=function(e){return function(t){return r(t,e)}}},function(e,t,n){var r=n(25),a=n(136),o=n(138);e.exports=function(e,t){return o(a(e,t,r),e+"")}},function(e,t,n){var r=n(137),a=Math.max;e.exports=function(e,t,n){return t=a(void 0===t?e.length-1:t,0),function(){for(var o=arguments,l=-1,i=a(o.length-t,0),s=Array(i);++l<i;)s[l]=o[t+l];l=-1;for(var c=Array(t+1);++l<t;)c[l]=o[l];return c[t]=n(s),r(e,this,c)}}},function(e,t){e.exports=function(e,t,n){switch(n.length){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)}},function(e,t,n){var r=n(139),a=n(142)(r);e.exports=a},function(e,t,n){var r=n(140),a=n(141),o=n(25),l=a?function(e,t){return a(e,"toString",{configurable:!0,enumerable:!1,value:r(t),writable:!0})}:o;e.exports=l},function(e,t){e.exports=function(e){return function(){return e}}},function(e,t,n){var r=n(4),a=function(){try{var e=r(Object,"defineProperty");return e({},"",{}),e}catch(e){}}();e.exports=a},function(e,t){var n=Date.now;e.exports=function(e){var t=0,r=0;return function(){var a=n(),o=16-(a-r);if(r=a,o>0){if(++t>=800)return arguments[0]}else t=0;return e.apply(void 0,arguments)}}},function(e,t,n){var r=n(35),a=n(144),o=n(149),l=n(36),i=n(150),s=n(21);e.exports=function(e,t,n){var c=-1,p=a,d=e.length,m=!0,u=[],g=u;if(n)m=!1,p=o;else if(d>=200){var h=t?null:i(e);if(h)return s(h);m=!1,p=l,g=new r}else g=t?[]:u;e:for(;++c<d;){var y=e[c],v=t?t(y):y;if(y=n||0!==y?y:0,m&&v==v){for(var f=g.length;f--;)if(g[f]===v)continue e;t&&g.push(v),u.push(y)}else p(g,v,n)||(g!==u&&g.push(v),u.push(y))}return u}},function(e,t,n){var r=n(145);e.exports=function(e,t){return!!(null==e?0:e.length)&&r(e,t,0)>-1}},function(e,t,n){var r=n(146),a=n(147),o=n(148);e.exports=function(e,t,n){return t==t?o(e,t,n):r(e,a,n)}},function(e,t){e.exports=function(e,t,n,r){for(var a=e.length,o=n+(r?1:-1);r?o--:++o<a;)if(t(e[o],o,e))return o;return-1}},function(e,t){e.exports=function(e){return e!=e}},function(e,t){e.exports=function(e,t,n){for(var r=n-1,a=e.length;++r<a;)if(e[r]===t)return r;return-1}},function(e,t){e.exports=function(e,t,n){for(var r=-1,a=null==e?0:e.length;++r<a;)if(n(t,e[r]))return!0;return!1}},function(e,t,n){var r=n(42),a=n(151),o=n(21),l=r&&1/o(new r([,-0]))[1]==1/0?function(e){return new r(e)}:a;e.exports=l},function(e,t){e.exports=function(){}},function(e,t,n){var r=n(41),a=n(5);e.exports=function(e){return a(e)&&r(e)}},function(e,t){e.exports=function(e){var t=null==e?0:e.length;return t?e[t-1]:void 0}},function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){"use strict";n(47)},function(e,t,n){"use strict";n(48)},function(e,t,n){"use strict";n(49)},function(e,t,n){"use strict";n(50)},function(e,t,n){"use strict";n(51)},function(e,t,n){"use strict";n(52)},function(e,t,n){"use strict";n(53)},function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){"use strict";n(54)},function(e,t,n){"use strict";n(55)},function(e,t,n){"use strict";n.r(t);var r=n(0);
/*!
  * vue-router v3.5.3
  * (c) 2021 Evan You
  * @license MIT
  */function a(e,t){for(var n in t)e[n]=t[n];return e}var o=/[!'()*]/g,l=function(e){return"%"+e.charCodeAt(0).toString(16)},i=/%2C/g,s=function(e){return encodeURIComponent(e).replace(o,l).replace(i,",")};function c(e){try{return decodeURIComponent(e)}catch(e){0}return e}var p=function(e){return null==e||"object"==typeof e?e:String(e)};function d(e){var t={};return(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach((function(e){var n=e.replace(/\+/g," ").split("="),r=c(n.shift()),a=n.length>0?c(n.join("=")):null;void 0===t[r]?t[r]=a:Array.isArray(t[r])?t[r].push(a):t[r]=[t[r],a]})),t):t}function m(e){var t=e?Object.keys(e).map((function(t){var n=e[t];if(void 0===n)return"";if(null===n)return s(t);if(Array.isArray(n)){var r=[];return n.forEach((function(e){void 0!==e&&(null===e?r.push(s(t)):r.push(s(t)+"="+s(e)))})),r.join("&")}return s(t)+"="+s(n)})).filter((function(e){return e.length>0})).join("&"):null;return t?"?"+t:""}var u=/\/?$/;function g(e,t,n,r){var a=r&&r.options.stringifyQuery,o=t.query||{};try{o=h(o)}catch(e){}var l={name:t.name||e&&e.name,meta:e&&e.meta||{},path:t.path||"/",hash:t.hash||"",query:o,params:t.params||{},fullPath:f(t,a),matched:e?v(e):[]};return n&&(l.redirectedFrom=f(n,a)),Object.freeze(l)}function h(e){if(Array.isArray(e))return e.map(h);if(e&&"object"==typeof e){var t={};for(var n in e)t[n]=h(e[n]);return t}return e}var y=g(null,{path:"/"});function v(e){for(var t=[];e;)t.unshift(e),e=e.parent;return t}function f(e,t){var n=e.path,r=e.query;void 0===r&&(r={});var a=e.hash;return void 0===a&&(a=""),(n||"/")+(t||m)(r)+a}function b(e,t,n){return t===y?e===t:!!t&&(e.path&&t.path?e.path.replace(u,"")===t.path.replace(u,"")&&(n||e.hash===t.hash&&w(e.query,t.query)):!(!e.name||!t.name)&&(e.name===t.name&&(n||e.hash===t.hash&&w(e.query,t.query)&&w(e.params,t.params))))}function w(e,t){if(void 0===e&&(e={}),void 0===t&&(t={}),!e||!t)return e===t;var n=Object.keys(e).sort(),r=Object.keys(t).sort();return n.length===r.length&&n.every((function(n,a){var o=e[n];if(r[a]!==n)return!1;var l=t[n];return null==o||null==l?o===l:"object"==typeof o&&"object"==typeof l?w(o,l):String(o)===String(l)}))}function k(e){for(var t=0;t<e.matched.length;t++){var n=e.matched[t];for(var r in n.instances){var a=n.instances[r],o=n.enteredCbs[r];if(a&&o){delete n.enteredCbs[r];for(var l=0;l<o.length;l++)a._isBeingDestroyed||o[l](a)}}}}var T={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(e,t){var n=t.props,r=t.children,o=t.parent,l=t.data;l.routerView=!0;for(var i=o.$createElement,s=n.name,c=o.$route,p=o._routerViewCache||(o._routerViewCache={}),d=0,m=!1;o&&o._routerRoot!==o;){var u=o.$vnode?o.$vnode.data:{};u.routerView&&d++,u.keepAlive&&o._directInactive&&o._inactive&&(m=!0),o=o.$parent}if(l.routerViewDepth=d,m){var g=p[s],h=g&&g.component;return h?(g.configProps&&x(h,l,g.route,g.configProps),i(h,l,r)):i()}var y=c.matched[d],v=y&&y.components[s];if(!y||!v)return p[s]=null,i();p[s]={component:v},l.registerRouteInstance=function(e,t){var n=y.instances[s];(t&&n!==e||!t&&n===e)&&(y.instances[s]=t)},(l.hook||(l.hook={})).prepatch=function(e,t){y.instances[s]=t.componentInstance},l.hook.init=function(e){e.data.keepAlive&&e.componentInstance&&e.componentInstance!==y.instances[s]&&(y.instances[s]=e.componentInstance),k(c)};var f=y.props&&y.props[s];return f&&(a(p[s],{route:c,configProps:f}),x(v,l,c,f)),i(v,l,r)}};function x(e,t,n,r){var o=t.props=function(e,t){switch(typeof t){case"undefined":return;case"object":return t;case"function":return t(e);case"boolean":return t?e.params:void 0;default:0}}(n,r);if(o){o=t.props=a({},o);var l=t.attrs=t.attrs||{};for(var i in o)e.props&&i in e.props||(l[i]=o[i],delete o[i])}}function S(e,t,n){var r=e.charAt(0);if("/"===r)return e;if("?"===r||"#"===r)return t+e;var a=t.split("/");n&&a[a.length-1]||a.pop();for(var o=e.replace(/^\//,"").split("/"),l=0;l<o.length;l++){var i=o[l];".."===i?a.pop():"."!==i&&a.push(i)}return""!==a[0]&&a.unshift(""),a.join("/")}function E(e){return e.replace(/\/+/g,"/")}var _=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)},P=$,j=B,C=function(e,t){return O(B(e,t),t)},L=O,A=q,N=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function B(e,t){for(var n,r=[],a=0,o=0,l="",i=t&&t.delimiter||"/";null!=(n=N.exec(e));){var s=n[0],c=n[1],p=n.index;if(l+=e.slice(o,p),o=p+s.length,c)l+=c[1];else{var d=e[o],m=n[2],u=n[3],g=n[4],h=n[5],y=n[6],v=n[7];l&&(r.push(l),l="");var f=null!=m&&null!=d&&d!==m,b="+"===y||"*"===y,w="?"===y||"*"===y,k=n[2]||i,T=g||h;r.push({name:u||a++,prefix:m||"",delimiter:k,optional:w,repeat:b,partial:f,asterisk:!!v,pattern:T?R(T):v?".*":"[^"+z(k)+"]+?"})}}return o<e.length&&(l+=e.substr(o)),l&&r.push(l),r}function M(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function O(e,t){for(var n=new Array(e.length),r=0;r<e.length;r++)"object"==typeof e[r]&&(n[r]=new RegExp("^(?:"+e[r].pattern+")$",I(t)));return function(t,r){for(var a="",o=t||{},l=(r||{}).pretty?M:encodeURIComponent,i=0;i<e.length;i++){var s=e[i];if("string"!=typeof s){var c,p=o[s.name];if(null==p){if(s.optional){s.partial&&(a+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(_(p)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(p)+"`");if(0===p.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var d=0;d<p.length;d++){if(c=l(p[d]),!n[i].test(c))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(c)+"`");a+=(0===d?s.prefix:s.delimiter)+c}}else{if(c=s.asterisk?encodeURI(p).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):l(p),!n[i].test(c))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+c+'"');a+=s.prefix+c}}else a+=s}return a}}function z(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function R(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function D(e,t){return e.keys=t,e}function I(e){return e&&e.sensitive?"":"i"}function q(e,t,n){_(t)||(n=t||n,t=[]);for(var r=(n=n||{}).strict,a=!1!==n.end,o="",l=0;l<e.length;l++){var i=e[l];if("string"==typeof i)o+=z(i);else{var s=z(i.prefix),c="(?:"+i.pattern+")";t.push(i),i.repeat&&(c+="(?:"+s+c+")*"),o+=c=i.optional?i.partial?s+"("+c+")?":"(?:"+s+"("+c+"))?":s+"("+c+")"}}var p=z(n.delimiter||"/"),d=o.slice(-p.length)===p;return r||(o=(d?o.slice(0,-p.length):o)+"(?:"+p+"(?=$))?"),o+=a?"$":r&&d?"":"(?="+p+"|$)",D(new RegExp("^"+o,I(n)),t)}function $(e,t,n){return _(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return D(e,t)}(e,t):_(e)?function(e,t,n){for(var r=[],a=0;a<e.length;a++)r.push($(e[a],t,n).source);return D(new RegExp("(?:"+r.join("|")+")",I(n)),t)}(e,t,n):function(e,t,n){return q(B(e,n),t,n)}(e,t,n)}P.parse=j,P.compile=C,P.tokensToFunction=L,P.tokensToRegExp=A;var H=Object.create(null);function F(e,t,n){t=t||{};try{var r=H[e]||(H[e]=P.compile(e));return"string"==typeof t.pathMatch&&(t[0]=t.pathMatch),r(t,{pretty:!0})}catch(e){return""}finally{delete t[0]}}function U(e,t,n,r){var o="string"==typeof e?{path:e}:e;if(o._normalized)return o;if(o.name){var l=(o=a({},e)).params;return l&&"object"==typeof l&&(o.params=a({},l)),o}if(!o.path&&o.params&&t){(o=a({},o))._normalized=!0;var i=a(a({},t.params),o.params);if(t.name)o.name=t.name,o.params=i;else if(t.matched.length){var s=t.matched[t.matched.length-1].path;o.path=F(s,i,t.path)}else 0;return o}var c=function(e){var t="",n="",r=e.indexOf("#");r>=0&&(t=e.slice(r),e=e.slice(0,r));var a=e.indexOf("?");return a>=0&&(n=e.slice(a+1),e=e.slice(0,a)),{path:e,query:n,hash:t}}(o.path||""),m=t&&t.path||"/",u=c.path?S(c.path,m,n||o.append):m,g=function(e,t,n){void 0===t&&(t={});var r,a=n||d;try{r=a(e||"")}catch(e){r={}}for(var o in t){var l=t[o];r[o]=Array.isArray(l)?l.map(p):p(l)}return r}(c.query,o.query,r&&r.options.parseQuery),h=o.hash||c.hash;return h&&"#"!==h.charAt(0)&&(h="#"+h),{_normalized:!0,path:u,query:g,hash:h}}var J,G=function(){},Q={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(e){var t=this,n=this.$router,r=this.$route,o=n.resolve(this.to,r,this.append),l=o.location,i=o.route,s=o.href,c={},p=n.options.linkActiveClass,d=n.options.linkExactActiveClass,m=null==p?"router-link-active":p,h=null==d?"router-link-exact-active":d,y=null==this.activeClass?m:this.activeClass,v=null==this.exactActiveClass?h:this.exactActiveClass,f=i.redirectedFrom?g(null,U(i.redirectedFrom),null,n):i;c[v]=b(r,f,this.exactPath),c[y]=this.exact||this.exactPath?c[v]:function(e,t){return 0===e.path.replace(u,"/").indexOf(t.path.replace(u,"/"))&&(!t.hash||e.hash===t.hash)&&function(e,t){for(var n in t)if(!(n in e))return!1;return!0}(e.query,t.query)}(r,f);var w=c[v]?this.ariaCurrentValue:null,k=function(e){V(e)&&(t.replace?n.replace(l,G):n.push(l,G))},T={click:V};Array.isArray(this.event)?this.event.forEach((function(e){T[e]=k})):T[this.event]=k;var x={class:c},S=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:s,route:i,navigate:k,isActive:c[y],isExactActive:c[v]});if(S){if(1===S.length)return S[0];if(S.length>1||!S.length)return 0===S.length?e():e("span",{},S)}if("a"===this.tag)x.on=T,x.attrs={href:s,"aria-current":w};else{var E=function e(t){var n;if(t)for(var r=0;r<t.length;r++){if("a"===(n=t[r]).tag)return n;if(n.children&&(n=e(n.children)))return n}}(this.$slots.default);if(E){E.isStatic=!1;var _=E.data=a({},E.data);for(var P in _.on=_.on||{},_.on){var j=_.on[P];P in T&&(_.on[P]=Array.isArray(j)?j:[j])}for(var C in T)C in _.on?_.on[C].push(T[C]):_.on[C]=k;var L=E.data.attrs=a({},E.data.attrs);L.href=s,L["aria-current"]=w}else x.on=T}return e(this.tag,x,this.$slots.default)}};function V(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey||e.defaultPrevented||void 0!==e.button&&0!==e.button)){if(e.currentTarget&&e.currentTarget.getAttribute){var t=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return e.preventDefault&&e.preventDefault(),!0}}var W="undefined"!=typeof window;function X(e,t,n,r,a){var o=t||[],l=n||Object.create(null),i=r||Object.create(null);e.forEach((function(e){!function e(t,n,r,a,o,l){var i=a.path,s=a.name;0;var c=a.pathToRegexpOptions||{},p=function(e,t,n){n||(e=e.replace(/\/$/,""));if("/"===e[0])return e;if(null==t)return e;return E(t.path+"/"+e)}(i,o,c.strict);"boolean"==typeof a.caseSensitive&&(c.sensitive=a.caseSensitive);var d={path:p,regex:K(p,c),components:a.components||{default:a.component},alias:a.alias?"string"==typeof a.alias?[a.alias]:a.alias:[],instances:{},enteredCbs:{},name:s,parent:o,matchAs:l,redirect:a.redirect,beforeEnter:a.beforeEnter,meta:a.meta||{},props:null==a.props?{}:a.components?a.props:{default:a.props}};a.children&&a.children.forEach((function(a){var o=l?E(l+"/"+a.path):void 0;e(t,n,r,a,d,o)}));n[d.path]||(t.push(d.path),n[d.path]=d);if(void 0!==a.alias)for(var m=Array.isArray(a.alias)?a.alias:[a.alias],u=0;u<m.length;++u){0;var g={path:m[u],children:a.children};e(t,n,r,g,o,d.path||"/")}s&&(r[s]||(r[s]=d))}(o,l,i,e,a)}));for(var s=0,c=o.length;s<c;s++)"*"===o[s]&&(o.push(o.splice(s,1)[0]),c--,s--);return{pathList:o,pathMap:l,nameMap:i}}function K(e,t){return P(e,[],t)}function Y(e,t){var n=X(e),r=n.pathList,a=n.pathMap,o=n.nameMap;function l(e,n,l){var i=U(e,n,!1,t),c=i.name;if(c){var p=o[c];if(!p)return s(null,i);var d=p.regex.keys.filter((function(e){return!e.optional})).map((function(e){return e.name}));if("object"!=typeof i.params&&(i.params={}),n&&"object"==typeof n.params)for(var m in n.params)!(m in i.params)&&d.indexOf(m)>-1&&(i.params[m]=n.params[m]);return i.path=F(p.path,i.params),s(p,i,l)}if(i.path){i.params={};for(var u=0;u<r.length;u++){var g=r[u],h=a[g];if(Z(h.regex,i.path,i.params))return s(h,i,l)}}return s(null,i)}function i(e,n){var r=e.redirect,a="function"==typeof r?r(g(e,n,null,t)):r;if("string"==typeof a&&(a={path:a}),!a||"object"!=typeof a)return s(null,n);var i=a,c=i.name,p=i.path,d=n.query,m=n.hash,u=n.params;if(d=i.hasOwnProperty("query")?i.query:d,m=i.hasOwnProperty("hash")?i.hash:m,u=i.hasOwnProperty("params")?i.params:u,c){o[c];return l({_normalized:!0,name:c,query:d,hash:m,params:u},void 0,n)}if(p){var h=function(e,t){return S(e,t.parent?t.parent.path:"/",!0)}(p,e);return l({_normalized:!0,path:F(h,u),query:d,hash:m},void 0,n)}return s(null,n)}function s(e,n,r){return e&&e.redirect?i(e,r||n):e&&e.matchAs?function(e,t,n){var r=l({_normalized:!0,path:F(n,t.params)});if(r){var a=r.matched,o=a[a.length-1];return t.params=r.params,s(o,t)}return s(null,t)}(0,n,e.matchAs):g(e,n,r,t)}return{match:l,addRoute:function(e,t){var n="object"!=typeof e?o[e]:void 0;X([t||e],r,a,o,n),n&&n.alias.length&&X(n.alias.map((function(e){return{path:e,children:[t]}})),r,a,o,n)},getRoutes:function(){return r.map((function(e){return a[e]}))},addRoutes:function(e){X(e,r,a,o)}}}function Z(e,t,n){var r=t.match(e);if(!r)return!1;if(!n)return!0;for(var a=1,o=r.length;a<o;++a){var l=e.keys[a-1];l&&(n[l.name||"pathMatch"]="string"==typeof r[a]?c(r[a]):r[a])}return!0}var ee=W&&window.performance&&window.performance.now?window.performance:Date;function te(){return ee.now().toFixed(3)}var ne=te();function re(){return ne}function ae(e){return ne=e}var oe=Object.create(null);function le(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var e=window.location.protocol+"//"+window.location.host,t=window.location.href.replace(e,""),n=a({},window.history.state);return n.key=re(),window.history.replaceState(n,"",t),window.addEventListener("popstate",ce),function(){window.removeEventListener("popstate",ce)}}function ie(e,t,n,r){if(e.app){var a=e.options.scrollBehavior;a&&e.app.$nextTick((function(){var o=function(){var e=re();if(e)return oe[e]}(),l=a.call(e,t,n,r?o:null);l&&("function"==typeof l.then?l.then((function(e){ge(e,o)})).catch((function(e){0})):ge(l,o))}))}}function se(){var e=re();e&&(oe[e]={x:window.pageXOffset,y:window.pageYOffset})}function ce(e){se(),e.state&&e.state.key&&ae(e.state.key)}function pe(e){return me(e.x)||me(e.y)}function de(e){return{x:me(e.x)?e.x:window.pageXOffset,y:me(e.y)?e.y:window.pageYOffset}}function me(e){return"number"==typeof e}var ue=/^#\d/;function ge(e,t){var n,r="object"==typeof e;if(r&&"string"==typeof e.selector){var a=ue.test(e.selector)?document.getElementById(e.selector.slice(1)):document.querySelector(e.selector);if(a){var o=e.offset&&"object"==typeof e.offset?e.offset:{};t=function(e,t){var n=document.documentElement.getBoundingClientRect(),r=e.getBoundingClientRect();return{x:r.left-n.left-t.x,y:r.top-n.top-t.y}}(a,o={x:me((n=o).x)?n.x:0,y:me(n.y)?n.y:0})}else pe(e)&&(t=de(e))}else r&&pe(e)&&(t=de(e));t&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:t.x,top:t.y,behavior:e.behavior}):window.scrollTo(t.x,t.y))}var he,ye=W&&((-1===(he=window.navigator.userAgent).indexOf("Android 2.")&&-1===he.indexOf("Android 4.0")||-1===he.indexOf("Mobile Safari")||-1!==he.indexOf("Chrome")||-1!==he.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function ve(e,t){se();var n=window.history;try{if(t){var r=a({},n.state);r.key=re(),n.replaceState(r,"",e)}else n.pushState({key:ae(te())},"",e)}catch(n){window.location[t?"replace":"assign"](e)}}function fe(e){ve(e,!0)}function be(e,t,n){var r=function(a){a>=e.length?n():e[a]?t(e[a],(function(){r(a+1)})):r(a+1)};r(0)}var we={redirected:2,aborted:4,cancelled:8,duplicated:16};function ke(e,t){return xe(e,t,we.redirected,'Redirected when going from "'+e.fullPath+'" to "'+function(e){if("string"==typeof e)return e;if("path"in e)return e.path;var t={};return Se.forEach((function(n){n in e&&(t[n]=e[n])})),JSON.stringify(t,null,2)}(t)+'" via a navigation guard.')}function Te(e,t){return xe(e,t,we.cancelled,'Navigation cancelled from "'+e.fullPath+'" to "'+t.fullPath+'" with a new navigation.')}function xe(e,t,n,r){var a=new Error(r);return a._isRouter=!0,a.from=e,a.to=t,a.type=n,a}var Se=["params","query","hash"];function Ee(e){return Object.prototype.toString.call(e).indexOf("Error")>-1}function _e(e,t){return Ee(e)&&e._isRouter&&(null==t||e.type===t)}function Pe(e){return function(t,n,r){var a=!1,o=0,l=null;je(e,(function(e,t,n,i){if("function"==typeof e&&void 0===e.cid){a=!0,o++;var s,c=Ae((function(t){var a;((a=t).__esModule||Le&&"Module"===a[Symbol.toStringTag])&&(t=t.default),e.resolved="function"==typeof t?t:J.extend(t),n.components[i]=t,--o<=0&&r()})),p=Ae((function(e){var t="Failed to resolve async component "+i+": "+e;l||(l=Ee(e)?e:new Error(t),r(l))}));try{s=e(c,p)}catch(e){p(e)}if(s)if("function"==typeof s.then)s.then(c,p);else{var d=s.component;d&&"function"==typeof d.then&&d.then(c,p)}}})),a||r()}}function je(e,t){return Ce(e.map((function(e){return Object.keys(e.components).map((function(n){return t(e.components[n],e.instances[n],e,n)}))})))}function Ce(e){return Array.prototype.concat.apply([],e)}var Le="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function Ae(e){var t=!1;return function(){for(var n=[],r=arguments.length;r--;)n[r]=arguments[r];if(!t)return t=!0,e.apply(this,n)}}var Ne=function(e,t){this.router=e,this.base=function(e){if(!e)if(W){var t=document.querySelector("base");e=(e=t&&t.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else e="/";"/"!==e.charAt(0)&&(e="/"+e);return e.replace(/\/$/,"")}(t),this.current=y,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function Be(e,t,n,r){var a=je(e,(function(e,r,a,o){var l=function(e,t){"function"!=typeof e&&(e=J.extend(e));return e.options[t]}(e,t);if(l)return Array.isArray(l)?l.map((function(e){return n(e,r,a,o)})):n(l,r,a,o)}));return Ce(r?a.reverse():a)}function Me(e,t){if(t)return function(){return e.apply(t,arguments)}}Ne.prototype.listen=function(e){this.cb=e},Ne.prototype.onReady=function(e,t){this.ready?e():(this.readyCbs.push(e),t&&this.readyErrorCbs.push(t))},Ne.prototype.onError=function(e){this.errorCbs.push(e)},Ne.prototype.transitionTo=function(e,t,n){var r,a=this;try{r=this.router.match(e,this.current)}catch(e){throw this.errorCbs.forEach((function(t){t(e)})),e}var o=this.current;this.confirmTransition(r,(function(){a.updateRoute(r),t&&t(r),a.ensureURL(),a.router.afterHooks.forEach((function(e){e&&e(r,o)})),a.ready||(a.ready=!0,a.readyCbs.forEach((function(e){e(r)})))}),(function(e){n&&n(e),e&&!a.ready&&(_e(e,we.redirected)&&o===y||(a.ready=!0,a.readyErrorCbs.forEach((function(t){t(e)}))))}))},Ne.prototype.confirmTransition=function(e,t,n){var r=this,a=this.current;this.pending=e;var o,l,i=function(e){!_e(e)&&Ee(e)&&(r.errorCbs.length?r.errorCbs.forEach((function(t){t(e)})):console.error(e)),n&&n(e)},s=e.matched.length-1,c=a.matched.length-1;if(b(e,a)&&s===c&&e.matched[s]===a.matched[c])return this.ensureURL(),e.hash&&ie(this.router,a,e,!1),i(((l=xe(o=a,e,we.duplicated,'Avoided redundant navigation to current location: "'+o.fullPath+'".')).name="NavigationDuplicated",l));var p=function(e,t){var n,r=Math.max(e.length,t.length);for(n=0;n<r&&e[n]===t[n];n++);return{updated:t.slice(0,n),activated:t.slice(n),deactivated:e.slice(n)}}(this.current.matched,e.matched),d=p.updated,m=p.deactivated,u=p.activated,g=[].concat(function(e){return Be(e,"beforeRouteLeave",Me,!0)}(m),this.router.beforeHooks,function(e){return Be(e,"beforeRouteUpdate",Me)}(d),u.map((function(e){return e.beforeEnter})),Pe(u)),h=function(t,n){if(r.pending!==e)return i(Te(a,e));try{t(e,a,(function(t){!1===t?(r.ensureURL(!0),i(function(e,t){return xe(e,t,we.aborted,'Navigation aborted from "'+e.fullPath+'" to "'+t.fullPath+'" via a navigation guard.')}(a,e))):Ee(t)?(r.ensureURL(!0),i(t)):"string"==typeof t||"object"==typeof t&&("string"==typeof t.path||"string"==typeof t.name)?(i(ke(a,e)),"object"==typeof t&&t.replace?r.replace(t):r.push(t)):n(t)}))}catch(e){i(e)}};be(g,h,(function(){be(function(e){return Be(e,"beforeRouteEnter",(function(e,t,n,r){return function(e,t,n){return function(r,a,o){return e(r,a,(function(e){"function"==typeof e&&(t.enteredCbs[n]||(t.enteredCbs[n]=[]),t.enteredCbs[n].push(e)),o(e)}))}}(e,n,r)}))}(u).concat(r.router.resolveHooks),h,(function(){if(r.pending!==e)return i(Te(a,e));r.pending=null,t(e),r.router.app&&r.router.app.$nextTick((function(){k(e)}))}))}))},Ne.prototype.updateRoute=function(e){this.current=e,this.cb&&this.cb(e)},Ne.prototype.setupListeners=function(){},Ne.prototype.teardown=function(){this.listeners.forEach((function(e){e()})),this.listeners=[],this.current=y,this.pending=null};var Oe=function(e){function t(t,n){e.call(this,t,n),this._startLocation=ze(this.base)}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router,n=t.options.scrollBehavior,r=ye&&n;r&&this.listeners.push(le());var a=function(){var n=e.current,a=ze(e.base);e.current===y&&a===e._startLocation||e.transitionTo(a,(function(e){r&&ie(t,e,n,!0)}))};window.addEventListener("popstate",a),this.listeners.push((function(){window.removeEventListener("popstate",a)}))}},t.prototype.go=function(e){window.history.go(e)},t.prototype.push=function(e,t,n){var r=this,a=this.current;this.transitionTo(e,(function(e){ve(E(r.base+e.fullPath)),ie(r.router,e,a,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var r=this,a=this.current;this.transitionTo(e,(function(e){fe(E(r.base+e.fullPath)),ie(r.router,e,a,!1),t&&t(e)}),n)},t.prototype.ensureURL=function(e){if(ze(this.base)!==this.current.fullPath){var t=E(this.base+this.current.fullPath);e?ve(t):fe(t)}},t.prototype.getCurrentLocation=function(){return ze(this.base)},t}(Ne);function ze(e){var t=window.location.pathname,n=t.toLowerCase(),r=e.toLowerCase();return!e||n!==r&&0!==n.indexOf(E(r+"/"))||(t=t.slice(e.length)),(t||"/")+window.location.search+window.location.hash}var Re=function(e){function t(t,n,r){e.call(this,t,n),r&&function(e){var t=ze(e);if(!/^\/#/.test(t))return window.location.replace(E(e+"/#"+t)),!0}(this.base)||De()}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router.options.scrollBehavior,n=ye&&t;n&&this.listeners.push(le());var r=function(){var t=e.current;De()&&e.transitionTo(Ie(),(function(r){n&&ie(e.router,r,t,!0),ye||He(r.fullPath)}))},a=ye?"popstate":"hashchange";window.addEventListener(a,r),this.listeners.push((function(){window.removeEventListener(a,r)}))}},t.prototype.push=function(e,t,n){var r=this,a=this.current;this.transitionTo(e,(function(e){$e(e.fullPath),ie(r.router,e,a,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var r=this,a=this.current;this.transitionTo(e,(function(e){He(e.fullPath),ie(r.router,e,a,!1),t&&t(e)}),n)},t.prototype.go=function(e){window.history.go(e)},t.prototype.ensureURL=function(e){var t=this.current.fullPath;Ie()!==t&&(e?$e(t):He(t))},t.prototype.getCurrentLocation=function(){return Ie()},t}(Ne);function De(){var e=Ie();return"/"===e.charAt(0)||(He("/"+e),!1)}function Ie(){var e=window.location.href,t=e.indexOf("#");return t<0?"":e=e.slice(t+1)}function qe(e){var t=window.location.href,n=t.indexOf("#");return(n>=0?t.slice(0,n):t)+"#"+e}function $e(e){ye?ve(qe(e)):window.location.hash=e}function He(e){ye?fe(qe(e)):window.location.replace(qe(e))}var Fe=function(e){function t(t,n){e.call(this,t,n),this.stack=[],this.index=-1}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.push=function(e,t,n){var r=this;this.transitionTo(e,(function(e){r.stack=r.stack.slice(0,r.index+1).concat(e),r.index++,t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var r=this;this.transitionTo(e,(function(e){r.stack=r.stack.slice(0,r.index).concat(e),t&&t(e)}),n)},t.prototype.go=function(e){var t=this,n=this.index+e;if(!(n<0||n>=this.stack.length)){var r=this.stack[n];this.confirmTransition(r,(function(){var e=t.current;t.index=n,t.updateRoute(r),t.router.afterHooks.forEach((function(t){t&&t(r,e)}))}),(function(e){_e(e,we.duplicated)&&(t.index=n)}))}},t.prototype.getCurrentLocation=function(){var e=this.stack[this.stack.length-1];return e?e.fullPath:"/"},t.prototype.ensureURL=function(){},t}(Ne),Ue=function(e){void 0===e&&(e={}),this.app=null,this.apps=[],this.options=e,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Y(e.routes||[],this);var t=e.mode||"hash";switch(this.fallback="history"===t&&!ye&&!1!==e.fallback,this.fallback&&(t="hash"),W||(t="abstract"),this.mode=t,t){case"history":this.history=new Oe(this,e.base);break;case"hash":this.history=new Re(this,e.base,this.fallback);break;case"abstract":this.history=new Fe(this,e.base);break;default:0}},Je={currentRoute:{configurable:!0}};function Ge(e,t){return e.push(t),function(){var n=e.indexOf(t);n>-1&&e.splice(n,1)}}Ue.prototype.match=function(e,t,n){return this.matcher.match(e,t,n)},Je.currentRoute.get=function(){return this.history&&this.history.current},Ue.prototype.init=function(e){var t=this;if(this.apps.push(e),e.$once("hook:destroyed",(function(){var n=t.apps.indexOf(e);n>-1&&t.apps.splice(n,1),t.app===e&&(t.app=t.apps[0]||null),t.app||t.history.teardown()})),!this.app){this.app=e;var n=this.history;if(n instanceof Oe||n instanceof Re){var r=function(e){n.setupListeners(),function(e){var r=n.current,a=t.options.scrollBehavior;ye&&a&&"fullPath"in e&&ie(t,e,r,!1)}(e)};n.transitionTo(n.getCurrentLocation(),r,r)}n.listen((function(e){t.apps.forEach((function(t){t._route=e}))}))}},Ue.prototype.beforeEach=function(e){return Ge(this.beforeHooks,e)},Ue.prototype.beforeResolve=function(e){return Ge(this.resolveHooks,e)},Ue.prototype.afterEach=function(e){return Ge(this.afterHooks,e)},Ue.prototype.onReady=function(e,t){this.history.onReady(e,t)},Ue.prototype.onError=function(e){this.history.onError(e)},Ue.prototype.push=function(e,t,n){var r=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){r.history.push(e,t,n)}));this.history.push(e,t,n)},Ue.prototype.replace=function(e,t,n){var r=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){r.history.replace(e,t,n)}));this.history.replace(e,t,n)},Ue.prototype.go=function(e){this.history.go(e)},Ue.prototype.back=function(){this.go(-1)},Ue.prototype.forward=function(){this.go(1)},Ue.prototype.getMatchedComponents=function(e){var t=e?e.matched?e:this.resolve(e).route:this.currentRoute;return t?[].concat.apply([],t.matched.map((function(e){return Object.keys(e.components).map((function(t){return e.components[t]}))}))):[]},Ue.prototype.resolve=function(e,t,n){var r=U(e,t=t||this.history.current,n,this),a=this.match(r,t),o=a.redirectedFrom||a.fullPath;return{location:r,route:a,href:function(e,t,n){var r="hash"===n?"#"+t:t;return e?E(e+"/"+r):r}(this.history.base,o,this.mode),normalizedTo:r,resolved:a}},Ue.prototype.getRoutes=function(){return this.matcher.getRoutes()},Ue.prototype.addRoute=function(e,t){this.matcher.addRoute(e,t),this.history.current!==y&&this.history.transitionTo(this.history.getCurrentLocation())},Ue.prototype.addRoutes=function(e){this.matcher.addRoutes(e),this.history.current!==y&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(Ue.prototype,Je),Ue.install=function e(t){if(!e.installed||J!==t){e.installed=!0,J=t;var n=function(e){return void 0!==e},r=function(e,t){var r=e.$options._parentVnode;n(r)&&n(r=r.data)&&n(r=r.registerRouteInstance)&&r(e,t)};t.mixin({beforeCreate:function(){n(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),t.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,r(this,this)},destroyed:function(){r(this)}}),Object.defineProperty(t.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(t.prototype,"$route",{get:function(){return this._routerRoot._route}}),t.component("RouterView",T),t.component("RouterLink",Q);var a=t.config.optionMergeStrategies;a.beforeRouteEnter=a.beforeRouteLeave=a.beforeRouteUpdate=a.created}},Ue.version="3.5.3",Ue.isNavigationFailure=_e,Ue.NavigationFailureType=we,Ue.START_LOCATION=y,W&&window.Vue&&window.Vue.use(Ue);var Qe=Ue;var Ve={NotFound:()=>Promise.all([n.e(0),n.e(1),n.e(5)]).then(n.bind(null,722)),Blog:()=>Promise.all([n.e(0),n.e(1),n.e(3)]).then(n.bind(null,723)),Layout:()=>Promise.all([n.e(0),n.e(1),n.e(356),n.e(4)]).then(n.bind(null,720)),Slide:()=>Promise.all([n.e(0),n.e(357)]).then(n.bind(null,721))},We={"v-0e842015":()=>n.e(205).then(n.bind(null,724)),"v-327d49ab":()=>n.e(26).then(n.bind(null,725)),"v-79b90a63":()=>n.e(22).then(n.bind(null,726)),"v-2b75aaf2":()=>n.e(23).then(n.bind(null,727)),"v-362d23a8":()=>n.e(20).then(n.bind(null,728)),"v-72468eb8":()=>n.e(47).then(n.bind(null,729)),"v-2da9c0e2":()=>n.e(25).then(n.bind(null,730)),"v-92c8304a":()=>n.e(78).then(n.bind(null,731)),"v-6c3f197d":()=>n.e(24).then(n.bind(null,732)),"v-58746afa":()=>n.e(21).then(n.bind(null,733)),"v-9b039b76":()=>n.e(123).then(n.bind(null,734)),"v-005b6f03":()=>n.e(131).then(n.bind(null,735)),"v-6f1be10d":()=>n.e(128).then(n.bind(null,736)),"v-3d637bce":()=>n.e(232).then(n.bind(null,737)),"v-f0f7f0ba":()=>n.e(55).then(n.bind(null,738)),"v-3e546fa7":()=>n.e(129).then(n.bind(null,739)),"v-11e26243":()=>n.e(28).then(n.bind(null,740)),"v-f02a652e":()=>n.e(186).then(n.bind(null,741)),"v-73cd580f":()=>n.e(102).then(n.bind(null,742)),"v-559892cb":()=>n.e(245).then(n.bind(null,743)),"v-28404c8a":()=>n.e(33).then(n.bind(null,744)),"v-bc70d2c2":()=>n.e(130).then(n.bind(null,745)),"v-1b1a11ed":()=>n.e(27).then(n.bind(null,746)),"v-404e32ca":()=>n.e(309).then(n.bind(null,747)),"v-4dce6749":()=>n.e(349).then(n.bind(null,748)),"v-312772c9":()=>n.e(30).then(n.bind(null,749)),"v-81fbd59e":()=>n.e(165).then(n.bind(null,750)),"v-7a2d1431":()=>n.e(306).then(n.bind(null,751)),"v-3f2e3dee":()=>n.e(261).then(n.bind(null,752)),"v-1804cde6":()=>n.e(275).then(n.bind(null,753)),"v-e813e86e":()=>n.e(31).then(n.bind(null,754)),"v-22651a49":()=>n.e(304).then(n.bind(null,755)),"v-160bd749":()=>n.e(213).then(n.bind(null,756)),"v-ddd5867e":()=>n.e(343).then(n.bind(null,757)),"v-f398acae":()=>n.e(32).then(n.bind(null,758)),"v-33fe5ed3":()=>n.e(303).then(n.bind(null,759)),"v-4614f32f":()=>n.e(166).then(n.bind(null,760)),"v-01783f6e":()=>n.e(234).then(n.bind(null,761)),"v-7097e589":()=>n.e(155).then(n.bind(null,762)),"v-233e6ee9":()=>n.e(60).then(n.bind(null,763)),"v-1ee32809":()=>n.e(252).then(n.bind(null,764)),"v-6fe23f2f":()=>n.e(111).then(n.bind(null,765)),"v-13ed0380":()=>n.e(57).then(n.bind(null,766)),"v-728921a9":()=>n.e(254).then(n.bind(null,767)),"v-72a2eca9":()=>n.e(318).then(n.bind(null,768)),"v-7b121b09":()=>n.e(241).then(n.bind(null,769)),"v-3eecbc5b":()=>n.e(62).then(n.bind(null,770)),"v-981ca15e":()=>n.e(61).then(n.bind(null,771)),"v-a85ebfee":()=>n.e(319).then(n.bind(null,772)),"v-6f2d9569":()=>n.e(164).then(n.bind(null,773)),"v-7a9b3b89":()=>n.e(63).then(n.bind(null,774)),"v-03e047af":()=>n.e(267).then(n.bind(null,775)),"v-2864dc37":()=>n.e(58).then(n.bind(null,776)),"v-411acacd":()=>n.e(59).then(n.bind(null,777)),"v-24763dad":()=>n.e(292).then(n.bind(null,778)),"v-6ad7b709":()=>n.e(210).then(n.bind(null,779)),"v-5cb68f69":()=>n.e(306).then(n.bind(null,780)),"v-0e0dfebd":()=>n.e(338).then(n.bind(null,781)),"v-13e73f3a":()=>n.e(294).then(n.bind(null,782)),"v-1fc940de":()=>n.e(174).then(n.bind(null,783)),"v-19dae748":()=>n.e(87).then(n.bind(null,784)),"v-ff454952":()=>n.e(300).then(n.bind(null,785)),"v-9e7abe3a":()=>n.e(293).then(n.bind(null,786)),"v-59e8fc63":()=>n.e(311).then(n.bind(null,787)),"v-e8930e32":()=>n.e(163).then(n.bind(null,788)),"v-6cc7a823":()=>n.e(255).then(n.bind(null,789)),"v-56e80b43":()=>n.e(6).then(n.bind(null,790)),"v-7fd1659b":()=>n.e(288).then(n.bind(null,791)),"v-5675388b":()=>n.e(160).then(n.bind(null,792)),"v-eb78c31e":()=>n.e(154).then(n.bind(null,793)),"v-3b15f9e6":()=>n.e(215).then(n.bind(null,794)),"v-66e0c13a":()=>n.e(339).then(n.bind(null,795)),"v-6b030fa3":()=>n.e(88).then(n.bind(null,796)),"v-7b14be73":()=>n.e(332).then(n.bind(null,797)),"v-35ed2a9d":()=>n.e(355).then(n.bind(null,798)),"v-5fe961c3":()=>n.e(134).then(n.bind(null,799)),"v-27d5863e":()=>n.e(350).then(n.bind(null,800)),"v-3e6bd7cb":()=>n.e(144).then(n.bind(null,801)),"v-3f385d76":()=>n.e(145).then(n.bind(null,802)),"v-2144be23":()=>n.e(156).then(n.bind(null,803)),"v-36b3e67e":()=>n.e(148).then(n.bind(null,804)),"v-04fed7e3":()=>n.e(81).then(n.bind(null,805)),"v-7aea9dba":()=>n.e(147).then(n.bind(null,806)),"v-6486f24f":()=>n.e(146).then(n.bind(null,807)),"v-19357323":()=>n.e(149).then(n.bind(null,808)),"v-176614b1":()=>n.e(150).then(n.bind(null,809)),"v-35f8a663":()=>n.e(151).then(n.bind(null,810)),"v-2fd89afa":()=>n.e(199).then(n.bind(null,811)),"v-e66dc57a":()=>n.e(152).then(n.bind(null,812)),"v-800e54fa":()=>n.e(298).then(n.bind(null,813)),"v-2c71b823":()=>n.e(167).then(n.bind(null,814)),"v-21ac67c7":()=>n.e(345).then(n.bind(null,815)),"v-3b9606a5":()=>n.e(222).then(n.bind(null,816)),"v-2add6272":()=>n.e(178).then(n.bind(null,817)),"v-45b64eee":()=>n.e(94).then(n.bind(null,818)),"v-44a3541b":()=>n.e(299).then(n.bind(null,819)),"v-7ac1e1ae":()=>n.e(96).then(n.bind(null,820)),"v-4ccfcde4":()=>n.e(93).then(n.bind(null,821)),"v-fabc368a":()=>n.e(180).then(n.bind(null,822)),"v-6cd390a3":()=>n.e(238).then(n.bind(null,823)),"v-53a29949":()=>n.e(97).then(n.bind(null,824)),"v-c5551166":()=>n.e(95).then(n.bind(null,825)),"v-f6be187a":()=>n.e(192).then(n.bind(null,826)),"v-3b869ec6":()=>n.e(98).then(n.bind(null,827)),"v-2dd43e4e":()=>n.e(37).then(n.bind(null,828)),"v-f423683a":()=>n.e(344).then(n.bind(null,829)),"v-4ba7a82b":()=>n.e(239).then(n.bind(null,830)),"v-f7989906":()=>n.e(125).then(n.bind(null,831)),"v-01e60a86":()=>n.e(203).then(n.bind(null,832)),"v-03679ac6":()=>n.e(121).then(n.bind(null,833)),"v-543328d2":()=>n.e(133).then(n.bind(null,834)),"v-c3e2068a":()=>n.e(201).then(n.bind(null,835)),"v-5a39e85e":()=>n.e(202).then(n.bind(null,836)),"v-fdbba342":()=>n.e(206).then(n.bind(null,837)),"v-58f56406":()=>n.e(236).then(n.bind(null,838)),"v-5b0dcf12":()=>n.e(204).then(n.bind(null,839)),"v-66b80c9d":()=>n.e(169).then(n.bind(null,840)),"v-403f895d":()=>n.e(207).then(n.bind(null,841)),"v-3f6a91fd":()=>n.e(237).then(n.bind(null,842)),"v-abdcc626":()=>n.e(122).then(n.bind(null,843)),"v-b5ddddb2":()=>n.e(238).then(n.bind(null,844)),"v-c29d15c6":()=>n.e(322).then(n.bind(null,845)),"v-760d2186":()=>n.e(168).then(n.bind(null,846)),"v-2a97d151":()=>n.e(109).then(n.bind(null,847)),"v-9cbb4264":()=>n.e(325).then(n.bind(null,848)),"v-21a21a5d":()=>n.e(208).then(n.bind(null,849)),"v-faf4fa46":()=>n.e(48).then(n.bind(null,850)),"v-581e8b5d":()=>n.e(209).then(n.bind(null,851)),"v-7be5d826":()=>n.e(312).then(n.bind(null,852)),"v-e9272f96":()=>n.e(314).then(n.bind(null,853)),"v-548f02fd":()=>n.e(108).then(n.bind(null,854)),"v-47ca231d":()=>n.e(53).then(n.bind(null,855)),"v-eec8ac46":()=>n.e(249).then(n.bind(null,856)),"v-25658fa6":()=>n.e(106).then(n.bind(null,857)),"v-78264d06":()=>n.e(110).then(n.bind(null,858)),"v-5df8d485":()=>n.e(107).then(n.bind(null,859)),"v-544f9676":()=>n.e(113).then(n.bind(null,860)),"v-901822ba":()=>n.e(247).then(n.bind(null,861)),"v-7798e04a":()=>n.e(66).then(n.bind(null,862)),"v-7c3f8bce":()=>n.e(64).then(n.bind(null,863)),"v-47365006":()=>n.e(71).then(n.bind(null,864)),"v-479859c6":()=>n.e(75).then(n.bind(null,865)),"v-23f2a5bd":()=>n.e(337).then(n.bind(null,866)),"v-94b49fc6":()=>n.e(76).then(n.bind(null,867)),"v-1a1a0446":()=>n.e(335).then(n.bind(null,868)),"v-2325a081":()=>n.e(69).then(n.bind(null,869)),"v-ed1db946":()=>n.e(65).then(n.bind(null,870)),"v-fcb07306":()=>n.e(74).then(n.bind(null,871)),"v-717482e3":()=>n.e(274).then(n.bind(null,872)),"v-cb1acac6":()=>n.e(70).then(n.bind(null,873)),"v-28a3d59d":()=>n.e(72).then(n.bind(null,874)),"v-10366655":()=>n.e(67).then(n.bind(null,875)),"v-6b061873":()=>n.e(68).then(n.bind(null,876)),"v-c1b26806":()=>n.e(73).then(n.bind(null,877)),"v-0cd29e7b":()=>n.e(333).then(n.bind(null,878)),"v-fac24aa4":()=>n.e(173).then(n.bind(null,879)),"v-05709ce5":()=>n.e(132).then(n.bind(null,880)),"v-06e7a0b8":()=>n.e(326).then(n.bind(null,881)),"v-694a7b4e":()=>n.e(89).then(n.bind(null,882)),"v-63bf2382":()=>n.e(138).then(n.bind(null,883)),"v-6705783d":()=>n.e(179).then(n.bind(null,884)),"v-a3a9d506":()=>n.e(162).then(n.bind(null,885)),"v-0c3c129d":()=>n.e(90).then(n.bind(null,886)),"v-47ab994e":()=>n.e(117).then(n.bind(null,887)),"v-5e31ed35":()=>n.e(92).then(n.bind(null,888)),"v-45e0b4dd":()=>n.e(91).then(n.bind(null,889)),"v-1a231c5d":()=>n.e(352).then(n.bind(null,890)),"v-739d8c0b":()=>n.e(305).then(n.bind(null,891)),"v-ed653f4a":()=>n.e(188).then(n.bind(null,892)),"v-eb23c6f2":()=>n.e(193).then(n.bind(null,893)),"v-680c045d":()=>n.e(273).then(n.bind(null,894)),"v-059a1edd":()=>n.e(317).then(n.bind(null,895)),"v-7d2b53c6":()=>n.e(171).then(n.bind(null,896)),"v-ab5f66e4":()=>n.e(119).then(n.bind(null,897)),"v-6b031946":()=>n.e(270).then(n.bind(null,898)),"v-18a132fe":()=>n.e(353).then(n.bind(null,899)),"v-65afe81d":()=>n.e(265).then(n.bind(null,900)),"v-505d9089":()=>n.e(244).then(n.bind(null,901)),"v-546b7ffd":()=>n.e(191).then(n.bind(null,902)),"v-7efb1b43":()=>n.e(281).then(n.bind(null,903)),"v-7437241d":()=>n.e(243).then(n.bind(null,904)),"v-4c6063e4":()=>n.e(280).then(n.bind(null,905)),"v-03b19106":()=>n.e(115).then(n.bind(null,906)),"v-33a93d86":()=>n.e(189).then(n.bind(null,907)),"v-24fb6add":()=>n.e(283).then(n.bind(null,908)),"v-5582f1c2":()=>n.e(279).then(n.bind(null,909)),"v-0e07050e":()=>n.e(313).then(n.bind(null,910)),"v-665456c6":()=>n.e(12).then(n.bind(null,911)),"v-2a023ec6":()=>n.e(278).then(n.bind(null,912)),"v-394f5f1f":()=>n.e(336).then(n.bind(null,913)),"v-31e2f21d":()=>n.e(184).then(n.bind(null,914)),"v-29f419ae":()=>n.e(13).then(n.bind(null,915)),"v-5f81eedb":()=>n.e(9).then(n.bind(null,916)),"v-0c4becb5":()=>n.e(34).then(n.bind(null,917)),"v-0a10528b":()=>n.e(289).then(n.bind(null,918)),"v-5f9c817d":()=>n.e(41).then(n.bind(null,919)),"v-3363b27d":()=>n.e(282).then(n.bind(null,920)),"v-7c0e9667":()=>n.e(214).then(n.bind(null,921)),"v-f4039486":()=>n.e(142).then(n.bind(null,922)),"v-386ea74f":()=>n.e(266).then(n.bind(null,923)),"v-7eb00dfd":()=>n.e(308).then(n.bind(null,924)),"v-9667b206":()=>n.e(346).then(n.bind(null,925)),"v-9720d3da":()=>n.e(342).then(n.bind(null,926)),"v-14a93986":()=>n.e(14).then(n.bind(null,927)),"v-7e62023a":()=>n.e(153).then(n.bind(null,928)),"v-39a6f80b":()=>n.e(8).then(n.bind(null,929)),"v-cafb3472":()=>n.e(181).then(n.bind(null,930)),"v-45202a8a":()=>n.e(29).then(n.bind(null,931)),"v-453dbd63":()=>n.e(49).then(n.bind(null,932)),"v-10574b7a":()=>n.e(79).then(n.bind(null,933)),"v-7ab1e5ba":()=>n.e(105).then(n.bind(null,934)),"v-208c7c03":()=>n.e(103).then(n.bind(null,935)),"v-35870b3a":()=>n.e(10).then(n.bind(null,936)),"v-0b0d83e3":()=>n.e(182).then(n.bind(null,937)),"v-1b16eba3":()=>n.e(126).then(n.bind(null,938)),"v-2102823a":()=>n.e(172).then(n.bind(null,939)),"v-f8ef68e6":()=>n.e(290).then(n.bind(null,940)),"v-5879ea85":()=>n.e(83).then(n.bind(null,941)),"v-da87dd7a":()=>n.e(253).then(n.bind(null,942)),"v-b9641bba":()=>n.e(103).then(n.bind(null,943)),"v-20d339b2":()=>n.e(263).then(n.bind(null,944)),"v-4a297d23":()=>n.e(301).then(n.bind(null,945)),"v-8e8e8ffa":()=>n.e(84).then(n.bind(null,946)),"v-cab12aba":()=>n.e(324).then(n.bind(null,947)),"v-f0c48a3a":()=>n.e(8).then(n.bind(null,948)),"v-260f6843":()=>n.e(103).then(n.bind(null,949)),"v-6b27567a":()=>n.e(17).then(n.bind(null,950)),"v-8cfd387a":()=>n.e(35).then(n.bind(null,951)),"v-4f7d6f63":()=>n.e(127).then(n.bind(null,952)),"v-a905e97a":()=>n.e(54).then(n.bind(null,953)),"v-72aadeca":()=>n.e(56).then(n.bind(null,954)),"v-6f0552ba":()=>n.e(36).then(n.bind(null,955)),"v-c648fe96":()=>n.e(80).then(n.bind(null,956)),"v-05647921":()=>n.e(77).then(n.bind(null,957)),"v-711f0f83":()=>n.e(86).then(n.bind(null,958)),"v-1b5bfd3a":()=>n.e(82).then(n.bind(null,959)),"v-38936923":()=>n.e(99).then(n.bind(null,960)),"v-5f2c9991":()=>n.e(103).then(n.bind(null,961)),"v-bff5a5fa":()=>n.e(7).then(n.bind(null,962)),"v-18c44fba":()=>n.e(240).then(n.bind(null,963)),"v-2f51ada1":()=>n.e(100).then(n.bind(null,964)),"v-4daab143":()=>n.e(104).then(n.bind(null,965)),"v-0a1f7183":()=>n.e(101).then(n.bind(null,966)),"v-d075148a":()=>n.e(80).then(n.bind(null,967)),"v-45ad2263":()=>n.e(120).then(n.bind(null,968)),"v-2266628e":()=>n.e(80).then(n.bind(null,969)),"v-9dc430d6":()=>n.e(103).then(n.bind(null,970)),"v-aef22cba":()=>n.e(233).then(n.bind(null,971)),"v-7299eb03":()=>n.e(85).then(n.bind(null,972)),"v-2a3ba2a7":()=>n.e(100).then(n.bind(null,973)),"v-70390f55":()=>n.e(124).then(n.bind(null,974)),"v-e11fbe3a":()=>n.e(266).then(n.bind(null,975)),"v-a2c108f0":()=>n.e(42).then(n.bind(null,976)),"v-0238470e":()=>n.e(51).then(n.bind(null,977)),"v-4df0eedb":()=>n.e(43).then(n.bind(null,978)),"v-a3152afa":()=>n.e(331).then(n.bind(null,979)),"v-15cc0077":()=>n.e(217).then(n.bind(null,980)),"v-43dc59f6":()=>n.e(228).then(n.bind(null,981)),"v-739f5645":()=>n.e(218).then(n.bind(null,982)),"v-5e7e13f7":()=>n.e(216).then(n.bind(null,983)),"v-22f7f0e7":()=>n.e(220).then(n.bind(null,984)),"v-20c183b2":()=>n.e(226).then(n.bind(null,985)),"v-622086fa":()=>n.e(219).then(n.bind(null,986)),"v-ea969468":()=>n.e(225).then(n.bind(null,987)),"v-1a6e3889":()=>n.e(221).then(n.bind(null,988)),"v-b4c26c1e":()=>n.e(227).then(n.bind(null,989)),"v-4494d5b3":()=>n.e(224).then(n.bind(null,990)),"v-9fc93546":()=>n.e(223).then(n.bind(null,991)),"v-6a2812dd":()=>n.e(229).then(n.bind(null,992)),"v-6d4fb105":()=>n.e(230).then(n.bind(null,993)),"v-7a464378":()=>n.e(50).then(n.bind(null,994)),"v-282459e3":()=>n.e(347).then(n.bind(null,995)),"v-75d3c752":()=>n.e(255).then(n.bind(null,996)),"v-50058523":()=>n.e(334).then(n.bind(null,997)),"v-e2210dba":()=>n.e(259).then(n.bind(null,998)),"v-3ca07f56":()=>n.e(137).then(n.bind(null,999)),"v-cd34276a":()=>n.e(190).then(n.bind(null,1e3)),"v-55fcc299":()=>n.e(195).then(n.bind(null,1001)),"v-70dcb4e3":()=>n.e(354).then(n.bind(null,1002)),"v-66c39183":()=>n.e(246).then(n.bind(null,1003)),"v-8e98abfa":()=>n.e(310).then(n.bind(null,1004)),"v-57094fc3":()=>n.e(143).then(n.bind(null,1005)),"v-0efbf7e6":()=>n.e(277).then(n.bind(null,1006)),"v-db069a36":()=>n.e(231).then(n.bind(null,1007)),"v-2b78bbe3":()=>n.e(176).then(n.bind(null,1008)),"v-2322ccba":()=>n.e(266).then(n.bind(null,1009)),"v-0954de35":()=>n.e(269).then(n.bind(null,1010)),"v-f780d94a":()=>n.e(183).then(n.bind(null,1011)),"v-543f93d8":()=>n.e(112).then(n.bind(null,1012)),"v-48b70e8f":()=>n.e(135).then(n.bind(null,1013)),"v-7cc38343":()=>n.e(158).then(n.bind(null,1014)),"v-208b2b43":()=>n.e(302).then(n.bind(null,1015)),"v-0080c103":()=>n.e(194).then(n.bind(null,1016)),"v-41c08831":()=>n.e(268).then(n.bind(null,1017)),"v-439a9f59":()=>n.e(159).then(n.bind(null,1018)),"v-024046a3":()=>n.e(276).then(n.bind(null,1019)),"v-0791c683":()=>n.e(161).then(n.bind(null,1020)),"v-416261aa":()=>n.e(250).then(n.bind(null,1021)),"v-4b7b453b":()=>n.e(276).then(n.bind(null,1022)),"v-5fa486a3":()=>n.e(266).then(n.bind(null,1023)),"v-36d0e289":()=>n.e(212).then(n.bind(null,1024)),"v-729f9ffa":()=>n.e(297).then(n.bind(null,1025)),"v-c49ec73a":()=>n.e(211).then(n.bind(null,1026)),"v-3d2f9041":()=>n.e(295).then(n.bind(null,1027)),"v-65707fe2":()=>n.e(296).then(n.bind(null,1028)),"v-20752c79":()=>n.e(316).then(n.bind(null,1029)),"v-2f6665e0":()=>n.e(256).then(n.bind(null,1030)),"v-1a4c311b":()=>n.e(264).then(n.bind(null,1031)),"v-6a22c26e":()=>n.e(257).then(n.bind(null,1032)),"v-37752409":()=>n.e(197).then(n.bind(null,1033)),"v-63fe585f":()=>n.e(327).then(n.bind(null,1034)),"v-3eafe449":()=>n.e(266).then(n.bind(null,1035)),"v-5acdc02e":()=>n.e(329).then(n.bind(null,1036)),"v-40447ab9":()=>n.e(248).then(n.bind(null,1037)),"v-33e88869":()=>n.e(258).then(n.bind(null,1038)),"v-429ee0ee":()=>n.e(341).then(n.bind(null,1039)),"v-7756c8e5":()=>n.e(271).then(n.bind(null,1040)),"v-739cafee":()=>n.e(242).then(n.bind(null,1041)),"v-00ab83ec":()=>n.e(328).then(n.bind(null,1042)),"v-7a02cc2e":()=>n.e(315).then(n.bind(null,1043)),"v-672138ee":()=>n.e(307).then(n.bind(null,1044)),"v-652fae09":()=>n.e(320).then(n.bind(null,1045)),"v-814446fa":()=>n.e(198).then(n.bind(null,1046)),"v-5aa12c09":()=>n.e(139).then(n.bind(null,1047)),"v-e2540bee":()=>n.e(185).then(n.bind(null,1048)),"v-b03316ca":()=>n.e(340).then(n.bind(null,1049)),"v-77713591":()=>n.e(136).then(n.bind(null,1050)),"v-607e1ca9":()=>n.e(235).then(n.bind(null,1051)),"v-d2510d6e":()=>n.e(196).then(n.bind(null,1052)),"v-43544fcb":()=>n.e(321).then(n.bind(null,1053)),"v-42b299e9":()=>n.e(177).then(n.bind(null,1054)),"v-6a1c1c91":()=>n.e(291).then(n.bind(null,1055)),"v-32d6f809":()=>n.e(175).then(n.bind(null,1056)),"v-78b0322e":()=>n.e(330).then(n.bind(null,1057)),"v-28dc6ce9":()=>n.e(140).then(n.bind(null,1058)),"v-5c048169":()=>n.e(272).then(n.bind(null,1059)),"v-5fa6c5e9":()=>n.e(114).then(n.bind(null,1060)),"v-01b2a5c9":()=>n.e(287).then(n.bind(null,1061)),"v-7192c809":()=>n.e(266).then(n.bind(null,1062)),"v-6d8cc174":()=>n.e(16).then(n.bind(null,1063)),"v-20056230":()=>n.e(284).then(n.bind(null,1064)),"v-1ff08130":()=>n.e(323).then(n.bind(null,1065)),"v-be21c10c":()=>n.e(157).then(n.bind(null,1066)),"v-48615196":()=>n.e(116).then(n.bind(null,1067)),"v-1fa66330":()=>n.e(348).then(n.bind(null,1068)),"v-43114c30":()=>n.e(45).then(n.bind(null,1069)),"v-0f1977c0":()=>n.e(187).then(n.bind(null,1070)),"v-bbdb8dee":()=>n.e(18).then(n.bind(null,1071)),"v-2b19575f":()=>n.e(351).then(n.bind(null,1072)),"v-20b735a9":()=>n.e(200).then(n.bind(null,1073)),"v-0b0a36ba":()=>n.e(46).then(n.bind(null,1074)),"v-4780d56e":()=>n.e(38).then(n.bind(null,1075)),"v-8501a46e":()=>n.e(170).then(n.bind(null,1076)),"v-07c26ec8":()=>n.e(251).then(n.bind(null,1077)),"v-5884bff0":()=>n.e(262).then(n.bind(null,1078)),"v-6c8c1530":()=>n.e(260).then(n.bind(null,1079)),"v-12719409":()=>n.e(19).then(n.bind(null,1080)),"v-1145cc49":()=>n.e(11).then(n.bind(null,1081)),"v-34deb206":()=>n.e(141).then(n.bind(null,1082)),"v-74993e37":()=>n.e(15).then(n.bind(null,1083)),"v-37a94c69":()=>n.e(44).then(n.bind(null,1084)),"v-55273769":()=>n.e(52).then(n.bind(null,1085)),"v-4c5e9d84":()=>n.e(286).then(n.bind(null,1086)),"v-4db8740f":()=>n.e(118).then(n.bind(null,1087)),"v-0fff6bb1":()=>n.e(40).then(n.bind(null,1088)),"v-3c8c0ce6":()=>n.e(285).then(n.bind(null,1089)),"v-6aa1cc15":()=>n.e(39).then(n.bind(null,1090))};function Xe(e){const t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}const Ke=/-(\w)/g,Ye=Xe(e=>e.replace(Ke,(e,t)=>t?t.toUpperCase():"")),Ze=/\B([A-Z])/g,et=Xe(e=>e.replace(Ze,"-$1").toLowerCase()),tt=Xe(e=>e.charAt(0).toUpperCase()+e.slice(1));function nt(e,t){if(!t)return;if(e(t))return e(t);return t.includes("-")?e(tt(Ye(t))):e(tt(t))||e(et(t))}const rt=Object.assign({},Ve,We),at=e=>rt[e],ot=e=>We[e],lt=e=>Ve[e],it=e=>r.a.component(e);function st(e){return nt(ot,e)}function ct(e){return nt(lt,e)}function pt(e){return nt(at,e)}function dt(e){return nt(it,e)}function mt(...e){return Promise.all(e.filter(e=>e).map(async e=>{if(!dt(e)&&pt(e)){const t=await pt(e)();r.a.component(e,t.default)}}))}function ut(e,t){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[e]=t)}var gt=n(56),ht=n.n(gt),yt=n(57),vt=n.n(yt),ft={created(){if(this.siteMeta=this.$site.headTags.filter(([e])=>"meta"===e).map(([e,t])=>t),this.$ssrContext){const t=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(e=t)?e.map(e=>{let t="<meta";return Object.keys(e).forEach(n=>{t+=` ${n}="${vt()(e[n])}"`}),t+">"}).join("\n    "):"",this.$ssrContext.canonicalLink=wt(this.$canonicalUrl)}var e},mounted(){this.currentMetaTags=[...document.querySelectorAll("meta")],this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta(){document.title=this.$title,document.documentElement.lang=this.$lang;const e=this.getMergedMetaTags();this.currentMetaTags=kt(e,this.currentMetaTags)},getMergedMetaTags(){const e=this.$page.frontmatter.meta||[];return ht()([{name:"description",content:this.$description}],e,this.siteMeta,Tt)},updateCanonicalLink(){bt(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",wt(this.$canonicalUrl))}},watch:{$page(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy(){kt(null,this.currentMetaTags),bt()}};function bt(){const e=document.querySelector("link[rel='canonical']");e&&e.remove()}function wt(e=""){return e?`<link href="${e}" rel="canonical" />`:""}function kt(e,t){if(t&&[...t].filter(e=>e.parentNode===document.head).forEach(e=>document.head.removeChild(e)),e)return e.map(e=>{const t=document.createElement("meta");return Object.keys(e).forEach(n=>{t.setAttribute(n,e[n])}),document.head.appendChild(t),t})}function Tt(e){for(const t of["name","property","itemprop"])if(e.hasOwnProperty(t))return e[t]+t;return JSON.stringify(e)}var xt=n(15),St=n.n(xt),Et={mounted(){St.a.configure({showSpinner:!1}),this.$router.beforeEach((e,t,n)=>{e.path===t.path||r.a.component(e.name)||St.a.start(),n()}),this.$router.afterEach(()=>{St.a.done(),this.isSidebarOpen=!1})}},_t=n(14),Pt=n.n(_t);let jt;var Ct=r.a.extend({mounted(){jt=Pt()(()=>{this.setActiveHash()},300),window.addEventListener("scroll",jt)},beforeDestroy(){window.removeEventListener("scroll",jt)},methods:{setActiveHash(){const e=Array.from(document.querySelectorAll(".sidebar-link")),t=Array.from(document.querySelectorAll(".header-anchor")).filter(t=>0===e.length||e.some(e=>e.hash===t.hash)),n=document.querySelector(".theme-default-content").offsetTop,r=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),a=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),o=window.innerHeight+r,l=decodeURIComponent(this.$route.hash),i=(e,n)=>{if(o===a)for(let e=n+1;e<t.length;e++)if(l===decodeURIComponent(t[e].hash))return;this.$vuepress.$set("disableScrollBehavior",!0),this.$router.replace(decodeURIComponent(e),()=>{this.$nextTick(()=>{this.$vuepress.$set("disableScrollBehavior",!1)})})};if(r-n<0&&l)i("#",-1);else for(let e=0;e<t.length;e++){const a=t[e],o=t[e+1];if(r-n>=a.parentElement.offsetTop+0&&(!o||r-n<o.parentElement.offsetTop+0)&&l!==decodeURIComponent(a.hash))return void i(a.hash,e)}}}});n(154),n(155);class Lt{constructor(){this.containerEl=document.getElementById("message-container"),this.containerEl||(this.containerEl=document.createElement("div"),this.containerEl.id="message-container",document.body.appendChild(this.containerEl))}show({text:e="",duration:t=3e3}){let n=document.createElement("div");n.className="message move-in",n.innerHTML=`\n      <i style="fill: #06a35a;font-size: 14px;display:inline-flex;align-items: center;">\n        <svg style="fill: #06a35a;font-size: 14px;" t="1572421810237" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="2323" width="16" height="16"><path d="M822.811993 824.617989c-83.075838 81.99224-188.546032 124.613757-316.049383 127.86455-122.085362-3.250794-223.943563-45.87231-305.935802-127.86455s-124.613757-184.21164-127.86455-305.935802c3.250794-127.503351 45.87231-232.973545 127.86455-316.049383 81.99224-83.075838 184.21164-126.058554 305.935802-129.309347 127.503351 3.250794 232.973545 46.23351 316.049383 129.309347 83.075838 83.075838 126.058554 188.546032 129.309347 316.049383C949.231746 640.406349 905.887831 742.62575 822.811993 824.617989zM432.716755 684.111464c3.973192 3.973192 8.307584 5.779189 13.364374 6.140388 5.05679 0.361199 9.752381-1.444797 13.364374-5.417989l292.571429-287.514638c3.973192-3.973192 5.779189-8.307584 5.779189-13.364374 0-5.05679-1.805996-9.752381-5.779189-13.364374l1.805996 1.805996c-3.973192-3.973192-8.668783-5.779189-14.086772-6.140388-5.417989-0.361199-10.47478 1.444797-14.809171 5.417989l-264.397884 220.33157c-3.973192 3.250794-8.668783 4.695591-14.447972 4.695591-5.779189 0-10.835979-1.444797-15.53157-3.973192l-94.273016-72.962257c-4.334392-3.250794-9.391182-4.334392-14.447972-3.973192s-9.391182 3.250794-12.641975 7.585185l-2.889594 3.973192c-3.250794 4.334392-4.334392 9.391182-3.973192 14.809171 0.722399 5.417989 2.528395 10.11358 5.779189 14.086772L432.716755 684.111464z" p-id="2324"></path></svg>\n      </i>\n      <div class="text">${e}</div>\n    `,this.containerEl.appendChild(n),t>0&&setTimeout(()=>{this.close(n)},t)}close(e){e.className=e.className.replace("move-in",""),e.className+="move-out",e.addEventListener("animationend",()=>{e.remove()})}}var At=[ft,Et,Ct,{mounted(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},updated(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},methods:{updateCopy(){setTimeout(()=>{(['div[class*="language-"] pre','div[class*="aside-code"] aside']instanceof Array||Array.isArray(['div[class*="language-"] pre','div[class*="aside-code"] aside']))&&['div[class*="language-"] pre','div[class*="aside-code"] aside'].forEach(e=>{document.querySelectorAll(e).forEach(this.generateCopyButton)})},1e3)},generateCopyButton(e){if(e.classList.contains("codecopy-enabled"))return;const t=document.createElement("i");t.className="code-copy",t.innerHTML='<svg  style="color:#aaa;font-size:14px" t="1572422231464" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3201" width="14" height="14"><path d="M866.461538 39.384615H354.461538c-43.323077 0-78.769231 35.446154-78.76923 78.769231v39.384616h472.615384c43.323077 0 78.769231 35.446154 78.769231 78.76923v551.384616h39.384615c43.323077 0 78.769231-35.446154 78.769231-78.769231V118.153846c0-43.323077-35.446154-78.769231-78.769231-78.769231z m-118.153846 275.692308c0-43.323077-35.446154-78.769231-78.76923-78.769231H157.538462c-43.323077 0-78.769231 35.446154-78.769231 78.769231v590.769231c0 43.323077 35.446154 78.769231 78.769231 78.769231h512c43.323077 0 78.769231-35.446154 78.76923-78.769231V315.076923z m-354.461538 137.846154c0 11.815385-7.876923 19.692308-19.692308 19.692308h-157.538461c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h157.538461c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z m157.538461 315.076923c0 11.815385-7.876923 19.692308-19.692307 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h315.076923c11.815385 0 19.692308 7.876923 19.692307 19.692308v39.384615z m78.769231-157.538462c0 11.815385-7.876923 19.692308-19.692308 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h393.846153c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z" p-id="3202"></path></svg>',t.title="Copy to clipboard",t.addEventListener("click",()=>{this.copyToClipboard(e.innerText)}),e.appendChild(t),e.classList.add("codecopy-enabled")},copyToClipboard(e){const t=document.createElement("textarea");t.value=e,t.setAttribute("readonly",""),t.style.position="absolute",t.style.left="-9999px",document.body.appendChild(t);const n=document.getSelection().rangeCount>0&&document.getSelection().getRangeAt(0);t.select(),document.execCommand("copy");(new Lt).show({text:"Copied successfully!",duration:3e3}),document.body.removeChild(t),n&&(document.getSelection().removeAllRanges(),document.getSelection().addRange(n))}}}],Nt={name:"GlobalLayout",computed:{layout(){const e=this.getLayout();return ut("layout",e),r.a.component(e)}},methods:{getLayout(){if(this.$page.path){const e=this.$page.frontmatter.layout;return e&&(this.$vuepress.getLayoutAsyncComponent(e)||this.$vuepress.getVueComponent(e))?e:"Layout"}return"NotFound"}}},Bt=n(1),Mt=Object(Bt.a)(Nt,(function(){var e=this.$createElement;return(this._self._c||e)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(e,t,n){switch(t){case"components":e[t]||(e[t]={}),Object.assign(e[t],n);break;case"mixins":e[t]||(e[t]=[]),e[t].push(...n);break;default:throw new Error("Unknown option name.")}}(Mt,"mixins",At);const Ot=[{name:"v-0e842015",path:"/backend-knowledge/django/convert-django-orm-to-sql/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-0e842015").then(n)}},{path:"/backend-knowledge/django/convert-django-orm-to-sql/index.html",redirect:"/backend-knowledge/django/convert-django-orm-to-sql/"},{path:"/backend-knowledge/django/convert-django-orm-to-sql.html",redirect:"/backend-knowledge/django/convert-django-orm-to-sql/"},{name:"v-327d49ab",path:"/backend-knowledge/django/django-auth-extension/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-327d49ab").then(n)}},{path:"/backend-knowledge/django/django-auth-extension/index.html",redirect:"/backend-knowledge/django/django-auth-extension/"},{path:"/backend-knowledge/django/django-auth-extension.html",redirect:"/backend-knowledge/django/django-auth-extension/"},{name:"v-79b90a63",path:"/backend-knowledge/django/django-integrate-celery/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-79b90a63").then(n)}},{path:"/backend-knowledge/django/django-integrate-celery/index.html",redirect:"/backend-knowledge/django/django-integrate-celery/"},{path:"/backend-knowledge/django/django-integrate-celery.html",redirect:"/backend-knowledge/django/django-integrate-celery/"},{name:"v-2b75aaf2",path:"/backend-knowledge/django/django-integrate-channels/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-2b75aaf2").then(n)}},{path:"/backend-knowledge/django/django-integrate-channels/index.html",redirect:"/backend-knowledge/django/django-integrate-channels/"},{path:"/backend-knowledge/django/django-integrate-channels.html",redirect:"/backend-knowledge/django/django-integrate-channels/"},{name:"v-362d23a8",path:"/backend-knowledge/django/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-362d23a8").then(n)}},{path:"/backend-knowledge/django/index.html",redirect:"/backend-knowledge/django/"},{name:"v-72468eb8",path:"/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-72468eb8").then(n)}},{path:"/index.html",redirect:"/"},{name:"v-2da9c0e2",path:"/backend-knowledge/django/django-auth/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-2da9c0e2").then(n)}},{path:"/backend-knowledge/django/django-auth/index.html",redirect:"/backend-knowledge/django/django-auth/"},{path:"/backend-knowledge/django/django-auth.html",redirect:"/backend-knowledge/django/django-auth/"},{name:"v-92c8304a",path:"/backend-knowledge/django/django-model-create-update-delete/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-92c8304a").then(n)}},{path:"/backend-knowledge/django/django-model-create-update-delete/index.html",redirect:"/backend-knowledge/django/django-model-create-update-delete/"},{path:"/backend-knowledge/django/django-model-create-update-delete.html",redirect:"/backend-knowledge/django/django-model-create-update-delete/"},{name:"v-6c3f197d",path:"/backend-knowledge/django/django-guardian/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-6c3f197d").then(n)}},{path:"/backend-knowledge/django/django-guardian/index.html",redirect:"/backend-knowledge/django/django-guardian/"},{path:"/backend-knowledge/django/django-guardian.html",redirect:"/backend-knowledge/django/django-guardian/"},{name:"v-58746afa",path:"/backend-knowledge/django/django-jwt-auth/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-58746afa").then(n)}},{path:"/backend-knowledge/django/django-jwt-auth/index.html",redirect:"/backend-knowledge/django/django-jwt-auth/"},{path:"/backend-knowledge/django/django-jwt-auth.html",redirect:"/backend-knowledge/django/django-jwt-auth/"},{name:"v-9b039b76",path:"/backend-knowledge/django/filter-returns-duplicated-objects/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-9b039b76").then(n)}},{path:"/backend-knowledge/django/filter-returns-duplicated-objects/index.html",redirect:"/backend-knowledge/django/filter-returns-duplicated-objects/"},{path:"/backend-knowledge/django/filter-returns-duplicated-objects.html",redirect:"/backend-knowledge/django/filter-returns-duplicated-objects/"},{name:"v-005b6f03",path:"/backend-knowledge/django/django-model-inheritance/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-005b6f03").then(n)}},{path:"/backend-knowledge/django/django-model-inheritance/index.html",redirect:"/backend-knowledge/django/django-model-inheritance/"},{path:"/backend-knowledge/django/django-model-inheritance.html",redirect:"/backend-knowledge/django/django-model-inheritance/"},{name:"v-6f1be10d",path:"/backend-knowledge/django/django-model-meta/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-6f1be10d").then(n)}},{path:"/backend-knowledge/django/django-model-meta/index.html",redirect:"/backend-knowledge/django/django-model-meta/"},{path:"/backend-knowledge/django/django-model-meta.html",redirect:"/backend-knowledge/django/django-model-meta/"},{name:"v-3d637bce",path:"/backend-knowledge/django/dumpdata-and-loaddata/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-3d637bce").then(n)}},{path:"/backend-knowledge/django/dumpdata-and-loaddata/index.html",redirect:"/backend-knowledge/django/dumpdata-and-loaddata/"},{path:"/backend-knowledge/django/dumpdata-and-loaddata.html",redirect:"/backend-knowledge/django/dumpdata-and-loaddata/"},{name:"v-f0f7f0ba",path:"/backend-knowledge/django/django-model/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-f0f7f0ba").then(n)}},{path:"/backend-knowledge/django/django-model/index.html",redirect:"/backend-knowledge/django/django-model/"},{path:"/backend-knowledge/django/django-model.html",redirect:"/backend-knowledge/django/django-model/"},{name:"v-3e546fa7",path:"/backend-knowledge/django/django-model-relationship/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-3e546fa7").then(n)}},{path:"/backend-knowledge/django/django-model-relationship/index.html",redirect:"/backend-knowledge/django/django-model-relationship/"},{path:"/backend-knowledge/django/django-model-relationship.html",redirect:"/backend-knowledge/django/django-model-relationship/"},{name:"v-11e26243",path:"/backend-knowledge/django/django-redis-cache/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-11e26243").then(n)}},{path:"/backend-knowledge/django/django-redis-cache/index.html",redirect:"/backend-knowledge/django/django-redis-cache/"},{path:"/backend-knowledge/django/django-redis-cache.html",redirect:"/backend-knowledge/django/django-redis-cache/"},{name:"v-f02a652e",path:"/backend-knowledge/elasticsearch/command-with-curl/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-f02a652e").then(n)}},{path:"/backend-knowledge/elasticsearch/command-with-curl/index.html",redirect:"/backend-knowledge/elasticsearch/command-with-curl/"},{path:"/backend-knowledge/elasticsearch/command-with-curl.html",redirect:"/backend-knowledge/elasticsearch/command-with-curl/"},{name:"v-73cd580f",path:"/backend-knowledge/django/django-signal/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-73cd580f").then(n)}},{path:"/backend-knowledge/django/django-signal/index.html",redirect:"/backend-knowledge/django/django-signal/"},{path:"/backend-knowledge/django/django-signal.html",redirect:"/backend-knowledge/django/django-signal/"},{name:"v-559892cb",path:"/backend-knowledge/django/migrate-error-caused-by-sqlite3/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-559892cb").then(n)}},{path:"/backend-knowledge/django/migrate-error-caused-by-sqlite3/index.html",redirect:"/backend-knowledge/django/migrate-error-caused-by-sqlite3/"},{path:"/backend-knowledge/django/migrate-error-caused-by-sqlite3.html",redirect:"/backend-knowledge/django/migrate-error-caused-by-sqlite3/"},{name:"v-28404c8a",path:"/backend-knowledge/elasticsearch/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-28404c8a").then(n)}},{path:"/backend-knowledge/elasticsearch/index.html",redirect:"/backend-knowledge/elasticsearch/"},{name:"v-bc70d2c2",path:"/backend-knowledge/django/django-model-retrieve/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-bc70d2c2").then(n)}},{path:"/backend-knowledge/django/django-model-retrieve/index.html",redirect:"/backend-knowledge/django/django-model-retrieve/"},{path:"/backend-knowledge/django/django-model-retrieve.html",redirect:"/backend-knowledge/django/django-model-retrieve/"},{name:"v-1b1a11ed",path:"/backend-knowledge/django/django-user-model-extension/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-1b1a11ed").then(n)}},{path:"/backend-knowledge/django/django-user-model-extension/index.html",redirect:"/backend-knowledge/django/django-user-model-extension/"},{path:"/backend-knowledge/django/django-user-model-extension.html",redirect:"/backend-knowledge/django/django-user-model-extension/"},{name:"v-404e32ca",path:"/backend-knowledge/elasticsearch/aggregations/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-404e32ca").then(n)}},{path:"/backend-knowledge/elasticsearch/aggregations/index.html",redirect:"/backend-knowledge/elasticsearch/aggregations/"},{path:"/backend-knowledge/elasticsearch/aggregations.html",redirect:"/backend-knowledge/elasticsearch/aggregations/"},{name:"v-4dce6749",path:"/backend-knowledge/elasticsearch/cluster-manage-apis/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-4dce6749").then(n)}},{path:"/backend-knowledge/elasticsearch/cluster-manage-apis/index.html",redirect:"/backend-knowledge/elasticsearch/cluster-manage-apis/"},{path:"/backend-knowledge/elasticsearch/cluster-manage-apis.html",redirect:"/backend-knowledge/elasticsearch/cluster-manage-apis/"},{name:"v-312772c9",path:"/backend-knowledge/elasticsearch/concepts-and-noun/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-312772c9").then(n)}},{path:"/backend-knowledge/elasticsearch/concepts-and-noun/index.html",redirect:"/backend-knowledge/elasticsearch/concepts-and-noun/"},{path:"/backend-knowledge/elasticsearch/concepts-and-noun.html",redirect:"/backend-knowledge/elasticsearch/concepts-and-noun/"},{name:"v-81fbd59e",path:"/backend-knowledge/elasticsearch/analyzer/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-81fbd59e").then(n)}},{path:"/backend-knowledge/elasticsearch/analyzer/index.html",redirect:"/backend-knowledge/elasticsearch/analyzer/"},{path:"/backend-knowledge/elasticsearch/analyzer.html",redirect:"/backend-knowledge/elasticsearch/analyzer/"},{name:"v-7a2d1431",path:"/backend-knowledge/elasticsearch/compound-query/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-7a2d1431").then(n)}},{path:"/backend-knowledge/elasticsearch/compound-query/index.html",redirect:"/backend-knowledge/elasticsearch/compound-query/"},{path:"/backend-knowledge/elasticsearch/compound-query.html",redirect:"/backend-knowledge/elasticsearch/compound-query/"},{name:"v-3f2e3dee",path:"/backend-knowledge/elasticsearch/document-crud/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-3f2e3dee").then(n)}},{path:"/backend-knowledge/elasticsearch/document-crud/index.html",redirect:"/backend-knowledge/elasticsearch/document-crud/"},{path:"/backend-knowledge/elasticsearch/document-crud.html",redirect:"/backend-knowledge/elasticsearch/document-crud/"},{name:"v-1804cde6",path:"/backend-knowledge/elasticsearch/forward-and-inverted-index/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-1804cde6").then(n)}},{path:"/backend-knowledge/elasticsearch/forward-and-inverted-index/index.html",redirect:"/backend-knowledge/elasticsearch/forward-and-inverted-index/"},{path:"/backend-knowledge/elasticsearch/forward-and-inverted-index.html",redirect:"/backend-knowledge/elasticsearch/forward-and-inverted-index/"},{name:"v-e813e86e",path:"/backend-knowledge/elasticsearch/installation-of-elasticsearch/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-e813e86e").then(n)}},{path:"/backend-knowledge/elasticsearch/installation-of-elasticsearch/index.html",redirect:"/backend-knowledge/elasticsearch/installation-of-elasticsearch/"},{path:"/backend-knowledge/elasticsearch/installation-of-elasticsearch.html",redirect:"/backend-knowledge/elasticsearch/installation-of-elasticsearch/"},{name:"v-22651a49",path:"/backend-knowledge/elasticsearch/index-manage-apis/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-22651a49").then(n)}},{path:"/backend-knowledge/elasticsearch/index-manage-apis/index.html",redirect:"/backend-knowledge/elasticsearch/index-manage-apis/"},{path:"/backend-knowledge/elasticsearch/index-manage-apis.html",redirect:"/backend-knowledge/elasticsearch/index-manage-apis/"},{name:"v-160bd749",path:"/backend-knowledge/elasticsearch/mapping/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-160bd749").then(n)}},{path:"/backend-knowledge/elasticsearch/mapping/index.html",redirect:"/backend-knowledge/elasticsearch/mapping/"},{path:"/backend-knowledge/elasticsearch/mapping.html",redirect:"/backend-knowledge/elasticsearch/mapping/"},{name:"v-ddd5867e",path:"/basic-skills/docker/deploy-pure-ubuntu/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-ddd5867e").then(n)}},{path:"/basic-skills/docker/deploy-pure-ubuntu/index.html",redirect:"/basic-skills/docker/deploy-pure-ubuntu/"},{path:"/basic-skills/docker/deploy-pure-ubuntu.html",redirect:"/basic-skills/docker/deploy-pure-ubuntu/"},{name:"v-f398acae",path:"/backend-knowledge/elasticsearch/performance-optimization/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-f398acae").then(n)}},{path:"/backend-knowledge/elasticsearch/performance-optimization/index.html",redirect:"/backend-knowledge/elasticsearch/performance-optimization/"},{path:"/backend-knowledge/elasticsearch/performance-optimization.html",redirect:"/backend-knowledge/elasticsearch/performance-optimization/"},{name:"v-33fe5ed3",path:"/backend-knowledge/elasticsearch/index-template/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-33fe5ed3").then(n)}},{path:"/backend-knowledge/elasticsearch/index-template/index.html",redirect:"/backend-knowledge/elasticsearch/index-template/"},{path:"/backend-knowledge/elasticsearch/index-template.html",redirect:"/backend-knowledge/elasticsearch/index-template/"},{name:"v-4614f32f",path:"/backend-knowledge/elasticsearch/paging-query/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-4614f32f").then(n)}},{path:"/backend-knowledge/elasticsearch/paging-query/index.html",redirect:"/backend-knowledge/elasticsearch/paging-query/"},{path:"/backend-knowledge/elasticsearch/paging-query.html",redirect:"/backend-knowledge/elasticsearch/paging-query/"},{name:"v-01783f6e",path:"/backend-knowledge/elasticsearch/nested-and-join/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-01783f6e").then(n)}},{path:"/backend-knowledge/elasticsearch/nested-and-join/index.html",redirect:"/backend-knowledge/elasticsearch/nested-and-join/"},{path:"/backend-knowledge/elasticsearch/nested-and-join.html",redirect:"/backend-knowledge/elasticsearch/nested-and-join/"},{name:"v-7097e589",path:"/backend-knowledge/elasticsearch/match-query/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-7097e589").then(n)}},{path:"/backend-knowledge/elasticsearch/match-query/index.html",redirect:"/backend-knowledge/elasticsearch/match-query/"},{path:"/backend-knowledge/elasticsearch/match-query.html",redirect:"/backend-knowledge/elasticsearch/match-query/"},{name:"v-233e6ee9",path:"/backend-knowledge/mysql/common-commands/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-233e6ee9").then(n)}},{path:"/backend-knowledge/mysql/common-commands/index.html",redirect:"/backend-knowledge/mysql/common-commands/"},{path:"/backend-knowledge/mysql/common-commands.html",redirect:"/backend-knowledge/mysql/common-commands/"},{name:"v-1ee32809",path:"/backend-knowledge/elasticsearch/suggester-query/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-1ee32809").then(n)}},{path:"/backend-knowledge/elasticsearch/suggester-query/index.html",redirect:"/backend-knowledge/elasticsearch/suggester-query/"},{path:"/backend-knowledge/elasticsearch/suggester-query.html",redirect:"/backend-knowledge/elasticsearch/suggester-query/"},{name:"v-6fe23f2f",path:"/backend-knowledge/elasticsearch/term-query/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-6fe23f2f").then(n)}},{path:"/backend-knowledge/elasticsearch/term-query/index.html",redirect:"/backend-knowledge/elasticsearch/term-query/"},{path:"/backend-knowledge/elasticsearch/term-query.html",redirect:"/backend-knowledge/elasticsearch/term-query/"},{name:"v-13ed0380",path:"/backend-knowledge/mysql/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-13ed0380").then(n)}},{path:"/backend-knowledge/mysql/index.html",redirect:"/backend-knowledge/mysql/"},{name:"v-728921a9",path:"/backend-knowledge/mysql/data-insert-delete-update/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-728921a9").then(n)}},{path:"/backend-knowledge/mysql/data-insert-delete-update/index.html",redirect:"/backend-knowledge/mysql/data-insert-delete-update/"},{path:"/backend-knowledge/mysql/data-insert-delete-update.html",redirect:"/backend-knowledge/mysql/data-insert-delete-update/"},{name:"v-72a2eca9",path:"/backend-knowledge/mysql/column-properties/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-72a2eca9").then(n)}},{path:"/backend-knowledge/mysql/column-properties/index.html",redirect:"/backend-knowledge/mysql/column-properties/"},{path:"/backend-knowledge/mysql/column-properties.html",redirect:"/backend-knowledge/mysql/column-properties/"},{name:"v-7b121b09",path:"/backend-knowledge/mysql/database-and-table-operations/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-7b121b09").then(n)}},{path:"/backend-knowledge/mysql/database-and-table-operations/index.html",redirect:"/backend-knowledge/mysql/database-and-table-operations/"},{path:"/backend-knowledge/mysql/database-and-table-operations.html",redirect:"/backend-knowledge/mysql/database-and-table-operations/"},{name:"v-3eecbc5b",path:"/backend-knowledge/mysql/data-types/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-3eecbc5b").then(n)}},{path:"/backend-knowledge/mysql/data-types/index.html",redirect:"/backend-knowledge/mysql/data-types/"},{path:"/backend-knowledge/mysql/data-types.html",redirect:"/backend-knowledge/mysql/data-types/"},{name:"v-981ca15e",path:"/backend-knowledge/mysql/db-design-spec/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-981ca15e").then(n)}},{path:"/backend-knowledge/mysql/db-design-spec/index.html",redirect:"/backend-knowledge/mysql/db-design-spec/"},{path:"/backend-knowledge/mysql/db-design-spec.html",redirect:"/backend-knowledge/mysql/db-design-spec/"},{name:"v-a85ebfee",path:"/backend-knowledge/mysql/expressions-and-functions/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-a85ebfee").then(n)}},{path:"/backend-knowledge/mysql/expressions-and-functions/index.html",redirect:"/backend-knowledge/mysql/expressions-and-functions/"},{path:"/backend-knowledge/mysql/expressions-and-functions.html",redirect:"/backend-knowledge/mysql/expressions-and-functions/"},{name:"v-6f2d9569",path:"/backend-knowledge/mysql/group-query/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-6f2d9569").then(n)}},{path:"/backend-knowledge/mysql/group-query/index.html",redirect:"/backend-knowledge/mysql/group-query/"},{path:"/backend-knowledge/mysql/group-query.html",redirect:"/backend-knowledge/mysql/group-query/"},{name:"v-7a9b3b89",path:"/backend-knowledge/mysql/installation-of-mysql/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-7a9b3b89").then(n)}},{path:"/backend-knowledge/mysql/installation-of-mysql/index.html",redirect:"/backend-knowledge/mysql/installation-of-mysql/"},{path:"/backend-knowledge/mysql/installation-of-mysql.html",redirect:"/backend-knowledge/mysql/installation-of-mysql/"},{name:"v-03e047af",path:"/backend-knowledge/mysql/query-by-search-conditions/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-03e047af").then(n)}},{path:"/backend-knowledge/mysql/query-by-search-conditions/index.html",redirect:"/backend-knowledge/mysql/query-by-search-conditions/"},{path:"/backend-knowledge/mysql/query-by-search-conditions.html",redirect:"/backend-knowledge/mysql/query-by-search-conditions/"},{name:"v-2864dc37",path:"/backend-knowledge/mysql/primary-key-and-increment-id/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-2864dc37").then(n)}},{path:"/backend-knowledge/mysql/primary-key-and-increment-id/index.html",redirect:"/backend-knowledge/mysql/primary-key-and-increment-id/"},{path:"/backend-knowledge/mysql/primary-key-and-increment-id.html",redirect:"/backend-knowledge/mysql/primary-key-and-increment-id/"},{name:"v-411acacd",path:"/backend-knowledge/mysql/transaction-isolation-levels/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-411acacd").then(n)}},{path:"/backend-knowledge/mysql/transaction-isolation-levels/index.html",redirect:"/backend-knowledge/mysql/transaction-isolation-levels/"},{path:"/backend-knowledge/mysql/transaction-isolation-levels.html",redirect:"/backend-knowledge/mysql/transaction-isolation-levels/"},{name:"v-24763dad",path:"/backend-knowledge/mysql/simple-query/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-24763dad").then(n)}},{path:"/backend-knowledge/mysql/simple-query/index.html",redirect:"/backend-knowledge/mysql/simple-query/"},{path:"/backend-knowledge/mysql/simple-query.html",redirect:"/backend-knowledge/mysql/simple-query/"},{name:"v-6ad7b709",path:"/backend-knowledge/mysql/sub-query/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-6ad7b709").then(n)}},{path:"/backend-knowledge/mysql/sub-query/index.html",redirect:"/backend-knowledge/mysql/sub-query/"},{path:"/backend-knowledge/mysql/sub-query.html",redirect:"/backend-knowledge/mysql/sub-query/"},{name:"v-5cb68f69",path:"/backend-knowledge/mysql/union-query/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-5cb68f69").then(n)}},{path:"/backend-knowledge/mysql/union-query/index.html",redirect:"/backend-knowledge/mysql/union-query/"},{path:"/backend-knowledge/mysql/union-query.html",redirect:"/backend-knowledge/mysql/union-query/"},{name:"v-0e0dfebd",path:"/backend-knowledge/mysql/join-query/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-0e0dfebd").then(n)}},{path:"/backend-knowledge/mysql/join-query/index.html",redirect:"/backend-knowledge/mysql/join-query/"},{path:"/backend-knowledge/mysql/join-query.html",redirect:"/backend-knowledge/mysql/join-query/"},{name:"v-13e73f3a",path:"/backend-knowledge/python/class-and-instance/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-13e73f3a").then(n)}},{path:"/backend-knowledge/python/class-and-instance/index.html",redirect:"/backend-knowledge/python/class-and-instance/"},{path:"/backend-knowledge/python/class-and-instance.html",redirect:"/backend-knowledge/python/class-and-instance/"},{name:"v-1fc940de",path:"/backend-knowledge/python/coroutine/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-1fc940de").then(n)}},{path:"/backend-knowledge/python/coroutine/index.html",redirect:"/backend-knowledge/python/coroutine/"},{path:"/backend-knowledge/python/coroutine.html",redirect:"/backend-knowledge/python/coroutine/"},{name:"v-19dae748",path:"/backend-knowledge/python/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-19dae748").then(n)}},{path:"/backend-knowledge/python/index.html",redirect:"/backend-knowledge/python/"},{name:"v-ff454952",path:"/backend-knowledge/python/class-inheritance/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-ff454952").then(n)}},{path:"/backend-knowledge/python/class-inheritance/index.html",redirect:"/backend-knowledge/python/class-inheritance/"},{path:"/backend-knowledge/python/class-inheritance.html",redirect:"/backend-knowledge/python/class-inheritance/"},{name:"v-9e7abe3a",path:"/backend-knowledge/python/class-variables-and-instance-variables/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-9e7abe3a").then(n)}},{path:"/backend-knowledge/python/class-variables-and-instance-variables/index.html",redirect:"/backend-knowledge/python/class-variables-and-instance-variables/"},{path:"/backend-knowledge/python/class-variables-and-instance-variables.html",redirect:"/backend-knowledge/python/class-variables-and-instance-variables/"},{name:"v-59e8fc63",path:"/backend-knowledge/python/compiler-and-interpreter/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-59e8fc63").then(n)}},{path:"/backend-knowledge/python/compiler-and-interpreter/index.html",redirect:"/backend-knowledge/python/compiler-and-interpreter/"},{path:"/backend-knowledge/python/compiler-and-interpreter.html",redirect:"/backend-knowledge/python/compiler-and-interpreter/"},{name:"v-e8930e32",path:"/backend-knowledge/python/function-decorators/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-e8930e32").then(n)}},{path:"/backend-knowledge/python/function-decorators/index.html",redirect:"/backend-knowledge/python/function-decorators/"},{path:"/backend-knowledge/python/function-decorators.html",redirect:"/backend-knowledge/python/function-decorators/"},{name:"v-6cc7a823",path:"/backend-knowledge/python/data-types/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-6cc7a823").then(n)}},{path:"/backend-knowledge/python/data-types/index.html",redirect:"/backend-knowledge/python/data-types/"},{path:"/backend-knowledge/python/data-types.html",redirect:"/backend-knowledge/python/data-types/"},{name:"v-56e80b43",path:"/backend-knowledge/python/decorator-property/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-56e80b43").then(n)}},{path:"/backend-knowledge/python/decorator-property/index.html",redirect:"/backend-knowledge/python/decorator-property/"},{path:"/backend-knowledge/python/decorator-property.html",redirect:"/backend-knowledge/python/decorator-property/"},{name:"v-7fd1659b",path:"/backend-knowledge/python/generator/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-7fd1659b").then(n)}},{path:"/backend-knowledge/python/generator/index.html",redirect:"/backend-knowledge/python/generator/"},{path:"/backend-knowledge/python/generator.html",redirect:"/backend-knowledge/python/generator/"},{name:"v-5675388b",path:"/backend-knowledge/python/function-params/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-5675388b").then(n)}},{path:"/backend-knowledge/python/function-params/index.html",redirect:"/backend-knowledge/python/function-params/"},{path:"/backend-knowledge/python/function-params.html",redirect:"/backend-knowledge/python/function-params/"},{name:"v-eb78c31e",path:"/backend-knowledge/python/global-interpreter-lock/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-eb78c31e").then(n)}},{path:"/backend-knowledge/python/global-interpreter-lock/index.html",redirect:"/backend-knowledge/python/global-interpreter-lock/"},{path:"/backend-knowledge/python/global-interpreter-lock.html",redirect:"/backend-knowledge/python/global-interpreter-lock/"},{name:"v-3b15f9e6",path:"/backend-knowledge/python/instancemethod-classmethod-staticmethod/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-3b15f9e6").then(n)}},{path:"/backend-knowledge/python/instancemethod-classmethod-staticmethod/index.html",redirect:"/backend-knowledge/python/instancemethod-classmethod-staticmethod/"},{path:"/backend-knowledge/python/instancemethod-classmethod-staticmethod.html",redirect:"/backend-knowledge/python/instancemethod-classmethod-staticmethod/"},{name:"v-66e0c13a",path:"/backend-knowledge/python/iterator/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-66e0c13a").then(n)}},{path:"/backend-knowledge/python/iterator/index.html",redirect:"/backend-knowledge/python/iterator/"},{path:"/backend-knowledge/python/iterator.html",redirect:"/backend-knowledge/python/iterator/"},{name:"v-6b030fa3",path:"/backend-knowledge/python/multiple-python-install-on-linux/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-6b030fa3").then(n)}},{path:"/backend-knowledge/python/multiple-python-install-on-linux/index.html",redirect:"/backend-knowledge/python/multiple-python-install-on-linux/"},{path:"/backend-knowledge/python/multiple-python-install-on-linux.html",redirect:"/backend-knowledge/python/multiple-python-install-on-linux/"},{name:"v-7b14be73",path:"/backend-knowledge/python/grammar/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-7b14be73").then(n)}},{path:"/backend-knowledge/python/grammar/index.html",redirect:"/backend-knowledge/python/grammar/"},{path:"/backend-knowledge/python/grammar.html",redirect:"/backend-knowledge/python/grammar/"},{name:"v-35ed2a9d",path:"/backend-knowledge/python/magic-methods/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-35ed2a9d").then(n)}},{path:"/backend-knowledge/python/magic-methods/index.html",redirect:"/backend-knowledge/python/magic-methods/"},{path:"/backend-knowledge/python/magic-methods.html",redirect:"/backend-knowledge/python/magic-methods/"},{name:"v-5fe961c3",path:"/backend-knowledge/python/method-super/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-5fe961c3").then(n)}},{path:"/backend-knowledge/python/method-super/index.html",redirect:"/backend-knowledge/python/method-super/"},{path:"/backend-knowledge/python/method-super.html",redirect:"/backend-knowledge/python/method-super/"},{name:"v-27d5863e",path:"/backend-knowledge/python/oop/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-27d5863e").then(n)}},{path:"/backend-knowledge/python/oop/index.html",redirect:"/backend-knowledge/python/oop/"},{path:"/backend-knowledge/python/oop.html",redirect:"/backend-knowledge/python/oop/"},{name:"v-3e6bd7cb",path:"/backend-knowledge/python/python-lib-celery/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-3e6bd7cb").then(n)}},{path:"/backend-knowledge/python/python-lib-celery/index.html",redirect:"/backend-knowledge/python/python-lib-celery/"},{path:"/backend-knowledge/python/python-lib-celery.html",redirect:"/backend-knowledge/python/python-lib-celery/"},{name:"v-3f385d76",path:"/backend-knowledge/python/python-lib-fabric/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-3f385d76").then(n)}},{path:"/backend-knowledge/python/python-lib-fabric/index.html",redirect:"/backend-knowledge/python/python-lib-fabric/"},{path:"/backend-knowledge/python/python-lib-fabric.html",redirect:"/backend-knowledge/python/python-lib-fabric/"},{name:"v-2144be23",path:"/backend-knowledge/python/public-private-protected/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-2144be23").then(n)}},{path:"/backend-knowledge/python/public-private-protected/index.html",redirect:"/backend-knowledge/python/public-private-protected/"},{path:"/backend-knowledge/python/public-private-protected.html",redirect:"/backend-knowledge/python/public-private-protected/"},{name:"v-36b3e67e",path:"/backend-knowledge/python/python-lib-openpyxl/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-36b3e67e").then(n)}},{path:"/backend-knowledge/python/python-lib-openpyxl/index.html",redirect:"/backend-knowledge/python/python-lib-openpyxl/"},{path:"/backend-knowledge/python/python-lib-openpyxl.html",redirect:"/backend-knowledge/python/python-lib-openpyxl/"},{name:"v-04fed7e3",path:"/backend-knowledge/python/pep-0008/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-04fed7e3").then(n)}},{path:"/backend-knowledge/python/pep-0008/index.html",redirect:"/backend-knowledge/python/pep-0008/"},{path:"/backend-knowledge/python/pep-0008.html",redirect:"/backend-knowledge/python/pep-0008/"},{name:"v-7aea9dba",path:"/backend-knowledge/python/python-lib-logging/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-7aea9dba").then(n)}},{path:"/backend-knowledge/python/python-lib-logging/index.html",redirect:"/backend-knowledge/python/python-lib-logging/"},{path:"/backend-knowledge/python/python-lib-logging.html",redirect:"/backend-knowledge/python/python-lib-logging/"},{name:"v-6486f24f",path:"/backend-knowledge/python/python-lib-paramiko/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-6486f24f").then(n)}},{path:"/backend-knowledge/python/python-lib-paramiko/index.html",redirect:"/backend-knowledge/python/python-lib-paramiko/"},{path:"/backend-knowledge/python/python-lib-paramiko.html",redirect:"/backend-knowledge/python/python-lib-paramiko/"},{name:"v-19357323",path:"/backend-knowledge/python/python-lib-smtplib/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-19357323").then(n)}},{path:"/backend-knowledge/python/python-lib-smtplib/index.html",redirect:"/backend-knowledge/python/python-lib-smtplib/"},{path:"/backend-knowledge/python/python-lib-smtplib.html",redirect:"/backend-knowledge/python/python-lib-smtplib/"},{name:"v-176614b1",path:"/backend-knowledge/python/python-lib-subprocess/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-176614b1").then(n)}},{path:"/backend-knowledge/python/python-lib-subprocess/index.html",redirect:"/backend-knowledge/python/python-lib-subprocess/"},{path:"/backend-knowledge/python/python-lib-subprocess.html",redirect:"/backend-knowledge/python/python-lib-subprocess/"},{name:"v-35f8a663",path:"/backend-knowledge/python/python-lib-telnetlib/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-35f8a663").then(n)}},{path:"/backend-knowledge/python/python-lib-telnetlib/index.html",redirect:"/backend-knowledge/python/python-lib-telnetlib/"},{path:"/backend-knowledge/python/python-lib-telnetlib.html",redirect:"/backend-knowledge/python/python-lib-telnetlib/"},{name:"v-2fd89afa",path:"/backend-knowledge/python/threading-and-multiprocess/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-2fd89afa").then(n)}},{path:"/backend-knowledge/python/threading-and-multiprocess/index.html",redirect:"/backend-knowledge/python/threading-and-multiprocess/"},{path:"/backend-knowledge/python/threading-and-multiprocess.html",redirect:"/backend-knowledge/python/threading-and-multiprocess/"},{name:"v-e66dc57a",path:"/backend-knowledge/python/python-lib-xlrd/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-e66dc57a").then(n)}},{path:"/backend-knowledge/python/python-lib-xlrd/index.html",redirect:"/backend-knowledge/python/python-lib-xlrd/"},{path:"/backend-knowledge/python/python-lib-xlrd.html",redirect:"/backend-knowledge/python/python-lib-xlrd/"},{name:"v-800e54fa",path:"/backend-knowledge/python/type-hints/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-800e54fa").then(n)}},{path:"/backend-knowledge/python/type-hints/index.html",redirect:"/backend-knowledge/python/type-hints/"},{path:"/backend-knowledge/python/type-hints.html",redirect:"/backend-knowledge/python/type-hints/"},{name:"v-2c71b823",path:"/backend-knowledge/python/slicing/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-2c71b823").then(n)}},{path:"/backend-knowledge/python/slicing/index.html",redirect:"/backend-knowledge/python/slicing/"},{path:"/backend-knowledge/python/slicing.html",redirect:"/backend-knowledge/python/slicing/"},{name:"v-21ac67c7",path:"/backend-knowledge/python/try-exception/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-21ac67c7").then(n)}},{path:"/backend-knowledge/python/try-exception/index.html",redirect:"/backend-knowledge/python/try-exception/"},{path:"/backend-knowledge/python/try-exception.html",redirect:"/backend-knowledge/python/try-exception/"},{name:"v-3b9606a5",path:"/backend-knowledge/python/singleton-pattern/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-3b9606a5").then(n)}},{path:"/backend-knowledge/python/singleton-pattern/index.html",redirect:"/backend-knowledge/python/singleton-pattern/"},{path:"/backend-knowledge/python/singleton-pattern.html",redirect:"/backend-knowledge/python/singleton-pattern/"},{name:"v-2add6272",path:"/backend-knowledge/python/reflect/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-2add6272").then(n)}},{path:"/backend-knowledge/python/reflect/index.html",redirect:"/backend-knowledge/python/reflect/"},{path:"/backend-knowledge/python/reflect.html",redirect:"/backend-knowledge/python/reflect/"},{name:"v-45b64eee",path:"/backend-knowledge/redis/common-commands/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-45b64eee").then(n)}},{path:"/backend-knowledge/redis/common-commands/index.html",redirect:"/backend-knowledge/redis/common-commands/"},{path:"/backend-knowledge/redis/common-commands.html",redirect:"/backend-knowledge/redis/common-commands/"},{name:"v-44a3541b",path:"/backend-knowledge/python/typing-for-type-hints/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-44a3541b").then(n)}},{path:"/backend-knowledge/python/typing-for-type-hints/index.html",redirect:"/backend-knowledge/python/typing-for-type-hints/"},{path:"/backend-knowledge/python/typing-for-type-hints.html",redirect:"/backend-knowledge/python/typing-for-type-hints/"},{name:"v-7ac1e1ae",path:"/backend-knowledge/redis/access-control-list/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-7ac1e1ae").then(n)}},{path:"/backend-knowledge/redis/access-control-list/index.html",redirect:"/backend-knowledge/redis/access-control-list/"},{path:"/backend-knowledge/redis/access-control-list.html",redirect:"/backend-knowledge/redis/access-control-list/"},{name:"v-4ccfcde4",path:"/backend-knowledge/redis/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-4ccfcde4").then(n)}},{path:"/backend-knowledge/redis/index.html",redirect:"/backend-knowledge/redis/"},{name:"v-fabc368a",path:"/backend-knowledge/python/variables-and-constants/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-fabc368a").then(n)}},{path:"/backend-knowledge/python/variables-and-constants/index.html",redirect:"/backend-knowledge/python/variables-and-constants/"},{path:"/backend-knowledge/python/variables-and-constants.html",redirect:"/backend-knowledge/python/variables-and-constants/"},{name:"v-6cd390a3",path:"/basic-skills/docker/common-commands/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-6cd390a3").then(n)}},{path:"/basic-skills/docker/common-commands/index.html",redirect:"/basic-skills/docker/common-commands/"},{path:"/basic-skills/docker/common-commands.html",redirect:"/basic-skills/docker/common-commands/"},{name:"v-53a29949",path:"/backend-knowledge/redis/installation-of-redis/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-53a29949").then(n)}},{path:"/backend-knowledge/redis/installation-of-redis/index.html",redirect:"/backend-knowledge/redis/installation-of-redis/"},{path:"/backend-knowledge/redis/installation-of-redis.html",redirect:"/backend-knowledge/redis/installation-of-redis/"},{name:"v-c5551166",path:"/backend-knowledge/redis/data-types/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-c5551166").then(n)}},{path:"/backend-knowledge/redis/data-types/index.html",redirect:"/backend-knowledge/redis/data-types/"},{path:"/backend-knowledge/redis/data-types.html",redirect:"/backend-knowledge/redis/data-types/"},{name:"v-f6be187a",path:"/basic-skills/docker/docker-tutorial/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-f6be187a").then(n)}},{path:"/basic-skills/docker/docker-tutorial/index.html",redirect:"/basic-skills/docker/docker-tutorial/"},{path:"/basic-skills/docker/docker-tutorial.html",redirect:"/basic-skills/docker/docker-tutorial/"},{name:"v-3b869ec6",path:"/backend-knowledge/redis/three-cache-problems/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-3b869ec6").then(n)}},{path:"/backend-knowledge/redis/three-cache-problems/index.html",redirect:"/backend-knowledge/redis/three-cache-problems/"},{path:"/backend-knowledge/redis/three-cache-problems.html",redirect:"/backend-knowledge/redis/three-cache-problems/"},{name:"v-2dd43e4e",path:"/basic-skills/git/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-2dd43e4e").then(n)}},{path:"/basic-skills/git/index.html",redirect:"/basic-skills/git/"},{name:"v-f423683a",path:"/basic-skills/git/add-ssh-key/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-f423683a").then(n)}},{path:"/basic-skills/git/add-ssh-key/index.html",redirect:"/basic-skills/git/add-ssh-key/"},{path:"/basic-skills/git/add-ssh-key.html",redirect:"/basic-skills/git/add-ssh-key/"},{name:"v-4ba7a82b",path:"/basic-skills/git/common-command-manual/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-4ba7a82b").then(n)}},{path:"/basic-skills/git/common-command-manual/index.html",redirect:"/basic-skills/git/common-command-manual/"},{path:"/basic-skills/git/common-command-manual.html",redirect:"/basic-skills/git/common-command-manual/"},{name:"v-f7989906",path:"/basic-skills/git/git-rebase/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-f7989906").then(n)}},{path:"/basic-skills/git/git-rebase/index.html",redirect:"/basic-skills/git/git-rebase/"},{path:"/basic-skills/git/git-rebase.html",redirect:"/basic-skills/git/git-rebase/"},{name:"v-01e60a86",path:"/basic-skills/git/solution-to-change-name-and-email-in-history-commits/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-01e60a86").then(n)}},{path:"/basic-skills/git/solution-to-change-name-and-email-in-history-commits/index.html",redirect:"/basic-skills/git/solution-to-change-name-and-email-in-history-commits/"},{path:"/basic-skills/git/solution-to-change-name-and-email-in-history-commits.html",redirect:"/basic-skills/git/solution-to-change-name-and-email-in-history-commits/"},{name:"v-03679ac6",path:"/basic-skills/git/solution-to-clone-too-slow/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-03679ac6").then(n)}},{path:"/basic-skills/git/solution-to-clone-too-slow/index.html",redirect:"/basic-skills/git/solution-to-clone-too-slow/"},{path:"/basic-skills/git/solution-to-clone-too-slow.html",redirect:"/basic-skills/git/solution-to-clone-too-slow/"},{name:"v-543328d2",path:"/basic-skills/git/solution-to-code-conflict/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-543328d2").then(n)}},{path:"/basic-skills/git/solution-to-code-conflict/index.html",redirect:"/basic-skills/git/solution-to-code-conflict/"},{path:"/basic-skills/git/solution-to-code-conflict.html",redirect:"/basic-skills/git/solution-to-code-conflict/"},{name:"v-c3e2068a",path:"/basic-skills/git/solution-to-gitflow/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-c3e2068a").then(n)}},{path:"/basic-skills/git/solution-to-gitflow/index.html",redirect:"/basic-skills/git/solution-to-gitflow/"},{path:"/basic-skills/git/solution-to-gitflow.html",redirect:"/basic-skills/git/solution-to-gitflow/"},{name:"v-5a39e85e",path:"/basic-skills/git/solution-to-commit-info-mistake/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-5a39e85e").then(n)}},{path:"/basic-skills/git/solution-to-commit-info-mistake/index.html",redirect:"/basic-skills/git/solution-to-commit-info-mistake/"},{path:"/basic-skills/git/solution-to-commit-info-mistake.html",redirect:"/basic-skills/git/solution-to-commit-info-mistake/"},{name:"v-fdbba342",path:"/basic-skills/git/solution-to-migrate-repository-without-losing-history-commits/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-fdbba342").then(n)}},{path:"/basic-skills/git/solution-to-migrate-repository-without-losing-history-commits/index.html",redirect:"/basic-skills/git/solution-to-migrate-repository-without-losing-history-commits/"},{path:"/basic-skills/git/solution-to-migrate-repository-without-losing-history-commits.html",redirect:"/basic-skills/git/solution-to-migrate-repository-without-losing-history-commits/"},{name:"v-58f56406",path:"/basic-skills/git/solution-to-last-commit-code-mistake/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-58f56406").then(n)}},{path:"/basic-skills/git/solution-to-last-commit-code-mistake/index.html",redirect:"/basic-skills/git/solution-to-last-commit-code-mistake/"},{path:"/basic-skills/git/solution-to-last-commit-code-mistake.html",redirect:"/basic-skills/git/solution-to-last-commit-code-mistake/"},{name:"v-5b0dcf12",path:"/basic-skills/git/solution-to-participate-in-open-source-projects/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-5b0dcf12").then(n)}},{path:"/basic-skills/git/solution-to-participate-in-open-source-projects/index.html",redirect:"/basic-skills/git/solution-to-participate-in-open-source-projects/"},{path:"/basic-skills/git/solution-to-participate-in-open-source-projects.html",redirect:"/basic-skills/git/solution-to-participate-in-open-source-projects/"},{name:"v-66b80c9d",path:"/basic-skills/git/solution-to-withdraw-last-push/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-66b80c9d").then(n)}},{path:"/basic-skills/git/solution-to-withdraw-last-push/index.html",redirect:"/basic-skills/git/solution-to-withdraw-last-push/"},{path:"/basic-skills/git/solution-to-withdraw-last-push.html",redirect:"/basic-skills/git/solution-to-withdraw-last-push/"},{name:"v-403f895d",path:"/basic-skills/linux/restricted-shell/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-403f895d").then(n)}},{path:"/basic-skills/linux/restricted-shell/index.html",redirect:"/basic-skills/linux/restricted-shell/"},{path:"/basic-skills/linux/restricted-shell.html",redirect:"/basic-skills/linux/restricted-shell/"},{name:"v-3f6a91fd",path:"/basic-skills/git/solution-to-missed-file-in-last-commit/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-3f6a91fd").then(n)}},{path:"/basic-skills/git/solution-to-missed-file-in-last-commit/index.html",redirect:"/basic-skills/git/solution-to-missed-file-in-last-commit/"},{path:"/basic-skills/git/solution-to-missed-file-in-last-commit.html",redirect:"/basic-skills/git/solution-to-missed-file-in-last-commit/"},{name:"v-abdcc626",path:"/basic-skills/linux/crontab/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-abdcc626").then(n)}},{path:"/basic-skills/linux/crontab/index.html",redirect:"/basic-skills/linux/crontab/"},{path:"/basic-skills/linux/crontab.html",redirect:"/basic-skills/linux/crontab/"},{name:"v-b5ddddb2",path:"/basic-skills/linux/common-commands/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-b5ddddb2").then(n)}},{path:"/basic-skills/linux/common-commands/index.html",redirect:"/basic-skills/linux/common-commands/"},{path:"/basic-skills/linux/common-commands.html",redirect:"/basic-skills/linux/common-commands/"},{name:"v-c29d15c6",path:"/basic-skills/linux/solution-to-vim-encoding/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-c29d15c6").then(n)}},{path:"/basic-skills/linux/solution-to-vim-encoding/index.html",redirect:"/basic-skills/linux/solution-to-vim-encoding/"},{path:"/basic-skills/linux/solution-to-vim-encoding.html",redirect:"/basic-skills/linux/solution-to-vim-encoding/"},{name:"v-760d2186",path:"/basic-skills/git/solution-to-withdraw-last-commit/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-760d2186").then(n)}},{path:"/basic-skills/git/solution-to-withdraw-last-commit/index.html",redirect:"/basic-skills/git/solution-to-withdraw-last-commit/"},{path:"/basic-skills/git/solution-to-withdraw-last-commit.html",redirect:"/basic-skills/git/solution-to-withdraw-last-commit/"},{name:"v-2a97d151",path:"/basic-skills/network/can-tcp-and-udp-use-the-same-port/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-2a97d151").then(n)}},{path:"/basic-skills/network/can-tcp-and-udp-use-the-same-port/index.html",redirect:"/basic-skills/network/can-tcp-and-udp-use-the-same-port/"},{path:"/basic-skills/network/can-tcp-and-udp-use-the-same-port.html",redirect:"/basic-skills/network/can-tcp-and-udp-use-the-same-port/"},{name:"v-9cbb4264",path:"/basic-skills/network/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-9cbb4264").then(n)}},{path:"/basic-skills/network/index.html",redirect:"/basic-skills/network/"},{name:"v-21a21a5d",path:"/basic-skills/network/tcp-connection-after-client-break-down/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-21a21a5d").then(n)}},{path:"/basic-skills/network/tcp-connection-after-client-break-down/index.html",redirect:"/basic-skills/network/tcp-connection-after-client-break-down/"},{path:"/basic-skills/network/tcp-connection-after-client-break-down.html",redirect:"/basic-skills/network/tcp-connection-after-client-break-down/"},{name:"v-faf4fa46",path:"/basic-skills/network/ip-address/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-faf4fa46").then(n)}},{path:"/basic-skills/network/ip-address/index.html",redirect:"/basic-skills/network/ip-address/"},{path:"/basic-skills/network/ip-address.html",redirect:"/basic-skills/network/ip-address/"},{name:"v-581e8b5d",path:"/basic-skills/network/tcp-connection-after-server-break-down/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-581e8b5d").then(n)}},{path:"/basic-skills/network/tcp-connection-after-server-break-down/index.html",redirect:"/basic-skills/network/tcp-connection-after-server-break-down/"},{path:"/basic-skills/network/tcp-connection-after-server-break-down.html",redirect:"/basic-skills/network/tcp-connection-after-server-break-down/"},{name:"v-7be5d826",path:"/basic-skills/network/layered-network-model/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-7be5d826").then(n)}},{path:"/basic-skills/network/layered-network-model/index.html",redirect:"/basic-skills/network/layered-network-model/"},{path:"/basic-skills/network/layered-network-model.html",redirect:"/basic-skills/network/layered-network-model/"},{name:"v-e9272f96",path:"/basic-skills/network/network-troubleshooting-tools/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-e9272f96").then(n)}},{path:"/basic-skills/network/network-troubleshooting-tools/index.html",redirect:"/basic-skills/network/network-troubleshooting-tools/"},{path:"/basic-skills/network/network-troubleshooting-tools.html",redirect:"/basic-skills/network/network-troubleshooting-tools/"},{name:"v-548f02fd",path:"/basic-skills/network/tcp-retransmission/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-548f02fd").then(n)}},{path:"/basic-skills/network/tcp-retransmission/index.html",redirect:"/basic-skills/network/tcp-retransmission/"},{path:"/basic-skills/network/tcp-retransmission.html",redirect:"/basic-skills/network/tcp-retransmission/"},{name:"v-47ca231d",path:"/basic-skills/network/how-os-deal-with-network-packets/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-47ca231d").then(n)}},{path:"/basic-skills/network/how-os-deal-with-network-packets/index.html",redirect:"/basic-skills/network/how-os-deal-with-network-packets/"},{path:"/basic-skills/network/how-os-deal-with-network-packets.html",redirect:"/basic-skills/network/how-os-deal-with-network-packets/"},{name:"v-eec8ac46",path:"/basic-skills/network/tcp-connection-after-unpluging-network-cable/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-eec8ac46").then(n)}},{path:"/basic-skills/network/tcp-connection-after-unpluging-network-cable/index.html",redirect:"/basic-skills/network/tcp-connection-after-unpluging-network-cable/"},{path:"/basic-skills/network/tcp-connection-after-unpluging-network-cable.html",redirect:"/basic-skills/network/tcp-connection-after-unpluging-network-cable/"},{name:"v-25658fa6",path:"/basic-skills/network/tcp-handshake-exception/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-25658fa6").then(n)}},{path:"/basic-skills/network/tcp-handshake-exception/index.html",redirect:"/basic-skills/network/tcp-handshake-exception/"},{path:"/basic-skills/network/tcp-handshake-exception.html",redirect:"/basic-skills/network/tcp-handshake-exception/"},{name:"v-78264d06",path:"/basic-skills/network/tcp-wave-exception/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-78264d06").then(n)}},{path:"/basic-skills/network/tcp-wave-exception/index.html",redirect:"/basic-skills/network/tcp-wave-exception/"},{path:"/basic-skills/network/tcp-wave-exception.html",redirect:"/basic-skills/network/tcp-wave-exception/"},{name:"v-5df8d485",path:"/basic-skills/network/tcp/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-5df8d485").then(n)}},{path:"/basic-skills/network/tcp/index.html",redirect:"/basic-skills/network/tcp/"},{path:"/basic-skills/network/tcp.html",redirect:"/basic-skills/network/tcp/"},{name:"v-544f9676",path:"/basic-skills/network/udp/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-544f9676").then(n)}},{path:"/basic-skills/network/udp/index.html",redirect:"/basic-skills/network/udp/"},{path:"/basic-skills/network/udp.html",redirect:"/basic-skills/network/udp/"},{name:"v-901822ba",path:"/basic-skills/network/tcpdump-and-wireshark/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-901822ba").then(n)}},{path:"/basic-skills/network/tcpdump-and-wireshark/index.html",redirect:"/basic-skills/network/tcpdump-and-wireshark/"},{path:"/basic-skills/network/tcpdump-and-wireshark.html",redirect:"/basic-skills/network/tcpdump-and-wireshark/"},{name:"v-7798e04a",path:"/basic-skills/nginx/common-commands/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-7798e04a").then(n)}},{path:"/basic-skills/nginx/common-commands/index.html",redirect:"/basic-skills/nginx/common-commands/"},{path:"/basic-skills/nginx/common-commands.html",redirect:"/basic-skills/nginx/common-commands/"},{name:"v-7c3f8bce",path:"/basic-skills/nginx/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-7c3f8bce").then(n)}},{path:"/basic-skills/nginx/index.html",redirect:"/basic-skills/nginx/"},{name:"v-47365006",path:"/basic-skills/nginx/deploy-https-security-auth/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-47365006").then(n)}},{path:"/basic-skills/nginx/deploy-https-security-auth/index.html",redirect:"/basic-skills/nginx/deploy-https-security-auth/"},{path:"/basic-skills/nginx/deploy-https-security-auth.html",redirect:"/basic-skills/nginx/deploy-https-security-auth/"},{name:"v-479859c6",path:"/basic-skills/nginx/config-file-generic-template/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-479859c6").then(n)}},{path:"/basic-skills/nginx/config-file-generic-template/index.html",redirect:"/basic-skills/nginx/config-file-generic-template/"},{path:"/basic-skills/nginx/config-file-generic-template.html",redirect:"/basic-skills/nginx/config-file-generic-template/"},{name:"v-23f2a5bd",path:"/basic-skills/network/what-happens-after-url/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-23f2a5bd").then(n)}},{path:"/basic-skills/network/what-happens-after-url/index.html",redirect:"/basic-skills/network/what-happens-after-url/"},{path:"/basic-skills/network/what-happens-after-url.html",redirect:"/basic-skills/network/what-happens-after-url/"},{name:"v-94b49fc6",path:"/basic-skills/nginx/config-file-params-explanation/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-94b49fc6").then(n)}},{path:"/basic-skills/nginx/config-file-params-explanation/index.html",redirect:"/basic-skills/nginx/config-file-params-explanation/"},{path:"/basic-skills/nginx/config-file-params-explanation.html",redirect:"/basic-skills/nginx/config-file-params-explanation/"},{name:"v-1a1a0446",path:"/basic-skills/nginx/load-balancing/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-1a1a0446").then(n)}},{path:"/basic-skills/nginx/load-balancing/index.html",redirect:"/basic-skills/nginx/load-balancing/"},{path:"/basic-skills/nginx/load-balancing.html",redirect:"/basic-skills/nginx/load-balancing/"},{name:"v-2325a081",path:"/basic-skills/nginx/installation-of-nginx/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-2325a081").then(n)}},{path:"/basic-skills/nginx/installation-of-nginx/index.html",redirect:"/basic-skills/nginx/installation-of-nginx/"},{path:"/basic-skills/nginx/installation-of-nginx.html",redirect:"/basic-skills/nginx/installation-of-nginx/"},{name:"v-ed1db946",path:"/basic-skills/nginx/ngx-http-access-module/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-ed1db946").then(n)}},{path:"/basic-skills/nginx/ngx-http-access-module/index.html",redirect:"/basic-skills/nginx/ngx-http-access-module/"},{path:"/basic-skills/nginx/ngx-http-access-module.html",redirect:"/basic-skills/nginx/ngx-http-access-module/"},{name:"v-fcb07306",path:"/basic-skills/nginx/ngx-http-auth-basic-module/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-fcb07306").then(n)}},{path:"/basic-skills/nginx/ngx-http-auth-basic-module/index.html",redirect:"/basic-skills/nginx/ngx-http-auth-basic-module/"},{path:"/basic-skills/nginx/ngx-http-auth-basic-module.html",redirect:"/basic-skills/nginx/ngx-http-auth-basic-module/"},{name:"v-717482e3",path:"/basic-skills/nginx/forward-proxy-and-reverse-proxy/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-717482e3").then(n)}},{path:"/basic-skills/nginx/forward-proxy-and-reverse-proxy/index.html",redirect:"/basic-skills/nginx/forward-proxy-and-reverse-proxy/"},{path:"/basic-skills/nginx/forward-proxy-and-reverse-proxy.html",redirect:"/basic-skills/nginx/forward-proxy-and-reverse-proxy/"},{name:"v-cb1acac6",path:"/basic-skills/nginx/set-auto-start-after-server-reboot/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-cb1acac6").then(n)}},{path:"/basic-skills/nginx/set-auto-start-after-server-reboot/index.html",redirect:"/basic-skills/nginx/set-auto-start-after-server-reboot/"},{path:"/basic-skills/nginx/set-auto-start-after-server-reboot.html",redirect:"/basic-skills/nginx/set-auto-start-after-server-reboot/"},{name:"v-28a3d59d",path:"/basic-skills/nginx/practice-in-front-end-separation-project/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-28a3d59d").then(n)}},{path:"/basic-skills/nginx/practice-in-front-end-separation-project/index.html",redirect:"/basic-skills/nginx/practice-in-front-end-separation-project/"},{path:"/basic-skills/nginx/practice-in-front-end-separation-project.html",redirect:"/basic-skills/nginx/practice-in-front-end-separation-project/"},{name:"v-10366655",path:"/basic-skills/nginx/ngx-http-autoindex-module/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-10366655").then(n)}},{path:"/basic-skills/nginx/ngx-http-autoindex-module/index.html",redirect:"/basic-skills/nginx/ngx-http-autoindex-module/"},{path:"/basic-skills/nginx/ngx-http-autoindex-module.html",redirect:"/basic-skills/nginx/ngx-http-autoindex-module/"},{name:"v-6b061873",path:"/basic-skills/nginx/uninstallation-of-nginx/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-6b061873").then(n)}},{path:"/basic-skills/nginx/uninstallation-of-nginx/index.html",redirect:"/basic-skills/nginx/uninstallation-of-nginx/"},{path:"/basic-skills/nginx/uninstallation-of-nginx.html",redirect:"/basic-skills/nginx/uninstallation-of-nginx/"},{name:"v-c1b26806",path:"/basic-skills/nginx/traffic-limiting-modules/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-c1b26806").then(n)}},{path:"/basic-skills/nginx/traffic-limiting-modules/index.html",redirect:"/basic-skills/nginx/traffic-limiting-modules/"},{path:"/basic-skills/nginx/traffic-limiting-modules.html",redirect:"/basic-skills/nginx/traffic-limiting-modules/"},{name:"v-0cd29e7b",path:"/extracurricular/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-0cd29e7b").then(n)}},{path:"/extracurricular/index.html",redirect:"/extracurricular/"},{name:"v-fac24aa4",path:"/frontend-engineering/package/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-fac24aa4").then(n)}},{path:"/frontend-engineering/package/index.html",redirect:"/frontend-engineering/package/"},{name:"v-05709ce5",path:"/frontend-engineering/package/npm-yarn-pnpm/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-05709ce5").then(n)}},{path:"/frontend-engineering/package/npm-yarn-pnpm/index.html",redirect:"/frontend-engineering/package/npm-yarn-pnpm/"},{path:"/frontend-engineering/package/npm-yarn-pnpm.html",redirect:"/frontend-engineering/package/npm-yarn-pnpm/"},{name:"v-06e7a0b8",path:"/extracurricular/cognitive-biases/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-06e7a0b8").then(n)}},{path:"/extracurricular/cognitive-biases/index.html",redirect:"/extracurricular/cognitive-biases/"},{path:"/extracurricular/cognitive-biases.html",redirect:"/extracurricular/cognitive-biases/"},{name:"v-694a7b4e",path:"/frontend-engineering/react/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-694a7b4e").then(n)}},{path:"/frontend-engineering/react/index.html",redirect:"/frontend-engineering/react/"},{name:"v-63bf2382",path:"/extracurricular/product-and-humanity/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-63bf2382").then(n)}},{path:"/extracurricular/product-and-humanity/index.html",redirect:"/extracurricular/product-and-humanity/"},{path:"/extracurricular/product-and-humanity.html",redirect:"/extracurricular/product-and-humanity/"},{name:"v-6705783d",path:"/frontend-engineering/react/controlled-and-uncontrolled-components/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-6705783d").then(n)}},{path:"/frontend-engineering/react/controlled-and-uncontrolled-components/index.html",redirect:"/frontend-engineering/react/controlled-and-uncontrolled-components/"},{path:"/frontend-engineering/react/controlled-and-uncontrolled-components.html",redirect:"/frontend-engineering/react/controlled-and-uncontrolled-components/"},{name:"v-a3a9d506",path:"/frontend-engineering/react/function-component-design-patterns/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-a3a9d506").then(n)}},{path:"/frontend-engineering/react/function-component-design-patterns/index.html",redirect:"/frontend-engineering/react/function-component-design-patterns/"},{path:"/frontend-engineering/react/function-component-design-patterns.html",redirect:"/frontend-engineering/react/function-component-design-patterns/"},{name:"v-0c3c129d",path:"/frontend-engineering/react/react-internal-hooks/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-0c3c129d").then(n)}},{path:"/frontend-engineering/react/react-internal-hooks/index.html",redirect:"/frontend-engineering/react/react-internal-hooks/"},{path:"/frontend-engineering/react/react-internal-hooks.html",redirect:"/frontend-engineering/react/react-internal-hooks/"},{name:"v-47ab994e",path:"/frontend-engineering/vuejs/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-47ab994e").then(n)}},{path:"/frontend-engineering/vuejs/index.html",redirect:"/frontend-engineering/vuejs/"},{name:"v-5e31ed35",path:"/frontend-engineering/react/react-jsx/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-5e31ed35").then(n)}},{path:"/frontend-engineering/react/react-jsx/index.html",redirect:"/frontend-engineering/react/react-jsx/"},{path:"/frontend-engineering/react/react-jsx.html",redirect:"/frontend-engineering/react/react-jsx/"},{name:"v-45e0b4dd",path:"/frontend-engineering/react/react-custom-hooks/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-45e0b4dd").then(n)}},{path:"/frontend-engineering/react/react-custom-hooks/index.html",redirect:"/frontend-engineering/react/react-custom-hooks/"},{path:"/frontend-engineering/react/react-custom-hooks.html",redirect:"/frontend-engineering/react/react-custom-hooks/"},{name:"v-1a231c5d",path:"/frontend-engineering/vuejs/advanced-use/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-1a231c5d").then(n)}},{path:"/frontend-engineering/vuejs/advanced-use/index.html",redirect:"/frontend-engineering/vuejs/advanced-use/"},{path:"/frontend-engineering/vuejs/advanced-use.html",redirect:"/frontend-engineering/vuejs/advanced-use/"},{name:"v-739d8c0b",path:"/frontend-engineering/vuejs/component-render-and-update/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-739d8c0b").then(n)}},{path:"/frontend-engineering/vuejs/component-render-and-update/index.html",redirect:"/frontend-engineering/vuejs/component-render-and-update/"},{path:"/frontend-engineering/vuejs/component-render-and-update.html",redirect:"/frontend-engineering/vuejs/component-render-and-update/"},{name:"v-ed653f4a",path:"/frontend-engineering/vuejs/reactive-data/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-ed653f4a").then(n)}},{path:"/frontend-engineering/vuejs/reactive-data/index.html",redirect:"/frontend-engineering/vuejs/reactive-data/"},{path:"/frontend-engineering/vuejs/reactive-data.html",redirect:"/frontend-engineering/vuejs/reactive-data/"},{name:"v-eb23c6f2",path:"/frontend-engineering/vuejs/basic-use/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-eb23c6f2").then(n)}},{path:"/frontend-engineering/vuejs/basic-use/index.html",redirect:"/frontend-engineering/vuejs/basic-use/"},{path:"/frontend-engineering/vuejs/basic-use.html",redirect:"/frontend-engineering/vuejs/basic-use/"},{name:"v-680c045d",path:"/frontend-engineering/vuejs/template-compile/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-680c045d").then(n)}},{path:"/frontend-engineering/vuejs/template-compile/index.html",redirect:"/frontend-engineering/vuejs/template-compile/"},{path:"/frontend-engineering/vuejs/template-compile.html",redirect:"/frontend-engineering/vuejs/template-compile/"},{name:"v-059a1edd",path:"/frontend-engineering/vuejs/virtual-dom-and-diff/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-059a1edd").then(n)}},{path:"/frontend-engineering/vuejs/virtual-dom-and-diff/index.html",redirect:"/frontend-engineering/vuejs/virtual-dom-and-diff/"},{path:"/frontend-engineering/vuejs/virtual-dom-and-diff.html",redirect:"/frontend-engineering/vuejs/virtual-dom-and-diff/"},{name:"v-7d2b53c6",path:"/frontend-engineering/vuejs/vue-router/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-7d2b53c6").then(n)}},{path:"/frontend-engineering/vuejs/vue-router/index.html",redirect:"/frontend-engineering/vuejs/vue-router/"},{path:"/frontend-engineering/vuejs/vue-router.html",redirect:"/frontend-engineering/vuejs/vue-router/"},{name:"v-ab5f66e4",path:"/frontend-engineering/webpack/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-ab5f66e4").then(n)}},{path:"/frontend-engineering/webpack/index.html",redirect:"/frontend-engineering/webpack/"},{name:"v-6b031946",path:"/frontend-engineering/webpack/core-concept/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-6b031946").then(n)}},{path:"/frontend-engineering/webpack/core-concept/index.html",redirect:"/frontend-engineering/webpack/core-concept/"},{path:"/frontend-engineering/webpack/core-concept.html",redirect:"/frontend-engineering/webpack/core-concept/"},{name:"v-18a132fe",path:"/frontend-engineering/webpack/advanced-config/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-18a132fe").then(n)}},{path:"/frontend-engineering/webpack/advanced-config/index.html",redirect:"/frontend-engineering/webpack/advanced-config/"},{path:"/frontend-engineering/webpack/advanced-config.html",redirect:"/frontend-engineering/webpack/advanced-config/"},{name:"v-65afe81d",path:"/frontend-engineering/webpack/generic-template/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-65afe81d").then(n)}},{path:"/frontend-engineering/webpack/generic-template/index.html",redirect:"/frontend-engineering/webpack/generic-template/"},{path:"/frontend-engineering/webpack/generic-template.html",redirect:"/frontend-engineering/webpack/generic-template/"},{name:"v-505d9089",path:"/frontend-engineering/webpack/performance-optimization-in-build/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-505d9089").then(n)}},{path:"/frontend-engineering/webpack/performance-optimization-in-build/index.html",redirect:"/frontend-engineering/webpack/performance-optimization-in-build/"},{path:"/frontend-engineering/webpack/performance-optimization-in-build.html",redirect:"/frontend-engineering/webpack/performance-optimization-in-build/"},{name:"v-546b7ffd",path:"/frontend-engineering/webpack/basic-config/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-546b7ffd").then(n)}},{path:"/frontend-engineering/webpack/basic-config/index.html",redirect:"/frontend-engineering/webpack/basic-config/"},{path:"/frontend-engineering/webpack/basic-config.html",redirect:"/frontend-engineering/webpack/basic-config/"},{name:"v-7efb1b43",path:"/frontend-knowledge/browser/browser-caching-mechanism/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-7efb1b43").then(n)}},{path:"/frontend-knowledge/browser/browser-caching-mechanism/index.html",redirect:"/frontend-knowledge/browser/browser-caching-mechanism/"},{path:"/frontend-knowledge/browser/browser-caching-mechanism.html",redirect:"/frontend-knowledge/browser/browser-caching-mechanism/"},{name:"v-7437241d",path:"/frontend-engineering/webpack/performance-optimization-in-output/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-7437241d").then(n)}},{path:"/frontend-engineering/webpack/performance-optimization-in-output/index.html",redirect:"/frontend-engineering/webpack/performance-optimization-in-output/"},{path:"/frontend-engineering/webpack/performance-optimization-in-output.html",redirect:"/frontend-engineering/webpack/performance-optimization-in-output/"},{name:"v-4c6063e4",path:"/frontend-knowledge/browser/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-4c6063e4").then(n)}},{path:"/frontend-knowledge/browser/index.html",redirect:"/frontend-knowledge/browser/"},{name:"v-03b19106",path:"/frontend-knowledge/browser/execution-details-of-v8-engine/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-03b19106").then(n)}},{path:"/frontend-knowledge/browser/execution-details-of-v8-engine/index.html",redirect:"/frontend-knowledge/browser/execution-details-of-v8-engine/"},{path:"/frontend-knowledge/browser/execution-details-of-v8-engine.html",redirect:"/frontend-knowledge/browser/execution-details-of-v8-engine/"},{name:"v-33a93d86",path:"/frontend-knowledge/browser/reflow-and-repaint/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-33a93d86").then(n)}},{path:"/frontend-knowledge/browser/reflow-and-repaint/index.html",redirect:"/frontend-knowledge/browser/reflow-and-repaint/"},{path:"/frontend-knowledge/browser/reflow-and-repaint.html",redirect:"/frontend-knowledge/browser/reflow-and-repaint/"},{name:"v-24fb6add",path:"/frontend-knowledge/browser/execution-details-of-rendering-process/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-24fb6add").then(n)}},{path:"/frontend-knowledge/browser/execution-details-of-rendering-process/index.html",redirect:"/frontend-knowledge/browser/execution-details-of-rendering-process/"},{path:"/frontend-knowledge/browser/execution-details-of-rendering-process.html",redirect:"/frontend-knowledge/browser/execution-details-of-rendering-process/"},{name:"v-5582f1c2",path:"/frontend-knowledge/browser/browser-macro-knowledge/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-5582f1c2").then(n)}},{path:"/frontend-knowledge/browser/browser-macro-knowledge/index.html",redirect:"/frontend-knowledge/browser/browser-macro-knowledge/"},{path:"/frontend-knowledge/browser/browser-macro-knowledge.html",redirect:"/frontend-knowledge/browser/browser-macro-knowledge/"},{name:"v-0e07050e",path:"/frontend-knowledge/browser/https/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-0e07050e").then(n)}},{path:"/frontend-knowledge/browser/https/index.html",redirect:"/frontend-knowledge/browser/https/"},{path:"/frontend-knowledge/browser/https.html",redirect:"/frontend-knowledge/browser/https/"},{name:"v-665456c6",path:"/frontend-knowledge/browser/csrf/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-665456c6").then(n)}},{path:"/frontend-knowledge/browser/csrf/index.html",redirect:"/frontend-knowledge/browser/csrf/"},{path:"/frontend-knowledge/browser/csrf.html",redirect:"/frontend-knowledge/browser/csrf/"},{name:"v-2a023ec6",path:"/frontend-knowledge/browser/kernel-and-javascript-engine/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-2a023ec6").then(n)}},{path:"/frontend-knowledge/browser/kernel-and-javascript-engine/index.html",redirect:"/frontend-knowledge/browser/kernel-and-javascript-engine/"},{path:"/frontend-knowledge/browser/kernel-and-javascript-engine.html",redirect:"/frontend-knowledge/browser/kernel-and-javascript-engine/"},{name:"v-394f5f1f",path:"/frontend-knowledge/browser/xss/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-394f5f1f").then(n)}},{path:"/frontend-knowledge/browser/xss/index.html",redirect:"/frontend-knowledge/browser/xss/"},{path:"/frontend-knowledge/browser/xss.html",redirect:"/frontend-knowledge/browser/xss/"},{name:"v-31e2f21d",path:"/frontend-knowledge/browser/same-origin-policy/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-31e2f21d").then(n)}},{path:"/frontend-knowledge/browser/same-origin-policy/index.html",redirect:"/frontend-knowledge/browser/same-origin-policy/"},{path:"/frontend-knowledge/browser/same-origin-policy.html",redirect:"/frontend-knowledge/browser/same-origin-policy/"},{name:"v-29f419ae",path:"/frontend-knowledge/css/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-29f419ae").then(n)}},{path:"/frontend-knowledge/css/index.html",redirect:"/frontend-knowledge/css/"},{name:"v-5f81eedb",path:"/frontend-knowledge/css/bfc/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-5f81eedb").then(n)}},{path:"/frontend-knowledge/css/bfc/index.html",redirect:"/frontend-knowledge/css/bfc/"},{path:"/frontend-knowledge/css/bfc.html",redirect:"/frontend-knowledge/css/bfc/"},{name:"v-0c4becb5",path:"/frontend-knowledge/css/flexbox/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-0c4becb5").then(n)}},{path:"/frontend-knowledge/css/flexbox/index.html",redirect:"/frontend-knowledge/css/flexbox/"},{path:"/frontend-knowledge/css/flexbox.html",redirect:"/frontend-knowledge/css/flexbox/"},{name:"v-0a10528b",path:"/frontend-knowledge/css/box-model/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-0a10528b").then(n)}},{path:"/frontend-knowledge/css/box-model/index.html",redirect:"/frontend-knowledge/css/box-model/"},{path:"/frontend-knowledge/css/box-model.html",redirect:"/frontend-knowledge/css/box-model/"},{name:"v-5f9c817d",path:"/frontend-knowledge/css/grid/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-5f9c817d").then(n)}},{path:"/frontend-knowledge/css/grid/index.html",redirect:"/frontend-knowledge/css/grid/"},{path:"/frontend-knowledge/css/grid.html",redirect:"/frontend-knowledge/css/grid/"},{name:"v-3363b27d",path:"/frontend-knowledge/css/float-property/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-3363b27d").then(n)}},{path:"/frontend-knowledge/css/float-property/index.html",redirect:"/frontend-knowledge/css/float-property/"},{path:"/frontend-knowledge/css/float-property.html",redirect:"/frontend-knowledge/css/float-property/"},{name:"v-7c0e9667",path:"/frontend-knowledge/css/position-property/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-7c0e9667").then(n)}},{path:"/frontend-knowledge/css/position-property/index.html",redirect:"/frontend-knowledge/css/position-property/"},{path:"/frontend-knowledge/css/position-property.html",redirect:"/frontend-knowledge/css/position-property/"},{name:"v-f4039486",path:"/frontend-knowledge/css/pseudo-elements-and-pseudo-classes/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-f4039486").then(n)}},{path:"/frontend-knowledge/css/pseudo-elements-and-pseudo-classes/index.html",redirect:"/frontend-knowledge/css/pseudo-elements-and-pseudo-classes/"},{path:"/frontend-knowledge/css/pseudo-elements-and-pseudo-classes.html",redirect:"/frontend-knowledge/css/pseudo-elements-and-pseudo-classes/"},{name:"v-386ea74f",path:"/frontend-knowledge/css/to-be-continued/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-386ea74f").then(n)}},{path:"/frontend-knowledge/css/to-be-continued/index.html",redirect:"/frontend-knowledge/css/to-be-continued/"},{path:"/frontend-knowledge/css/to-be-continued.html",redirect:"/frontend-knowledge/css/to-be-continued/"},{name:"v-7eb00dfd",path:"/frontend-knowledge/css/layout/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-7eb00dfd").then(n)}},{path:"/frontend-knowledge/css/layout/index.html",redirect:"/frontend-knowledge/css/layout/"},{path:"/frontend-knowledge/css/layout.html",redirect:"/frontend-knowledge/css/layout/"},{name:"v-9667b206",path:"/frontend-knowledge/css/length-and-units/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-9667b206").then(n)}},{path:"/frontend-knowledge/css/length-and-units/index.html",redirect:"/frontend-knowledge/css/length-and-units/"},{path:"/frontend-knowledge/css/length-and-units.html",redirect:"/frontend-knowledge/css/length-and-units/"},{name:"v-9720d3da",path:"/frontend-knowledge/css/selectors-and-selector-priority/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-9720d3da").then(n)}},{path:"/frontend-knowledge/css/selectors-and-selector-priority/index.html",redirect:"/frontend-knowledge/css/selectors-and-selector-priority/"},{path:"/frontend-knowledge/css/selectors-and-selector-priority.html",redirect:"/frontend-knowledge/css/selectors-and-selector-priority/"},{name:"v-14a93986",path:"/frontend-knowledge/css/ways-to-insert-css/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-14a93986").then(n)}},{path:"/frontend-knowledge/css/ways-to-insert-css/index.html",redirect:"/frontend-knowledge/css/ways-to-insert-css/"},{path:"/frontend-knowledge/css/ways-to-insert-css.html",redirect:"/frontend-knowledge/css/ways-to-insert-css/"},{name:"v-7e62023a",path:"/frontend-knowledge/es6-and-beyond/es10-function/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-7e62023a").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es10-function/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es10-function/"},{path:"/frontend-knowledge/es6-and-beyond/es10-function.html",redirect:"/frontend-knowledge/es6-and-beyond/es10-function/"},{name:"v-39a6f80b",path:"/frontend-knowledge/es6-and-beyond/es10-array/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-39a6f80b").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es10-array/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es10-array/"},{path:"/frontend-knowledge/es6-and-beyond/es10-array.html",redirect:"/frontend-knowledge/es6-and-beyond/es10-array/"},{name:"v-cafb3472",path:"/frontend-knowledge/es6-and-beyond/es10-catch/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-cafb3472").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es10-catch/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es10-catch/"},{path:"/frontend-knowledge/es6-and-beyond/es10-catch.html",redirect:"/frontend-knowledge/es6-and-beyond/es10-catch/"},{name:"v-45202a8a",path:"/frontend-knowledge/es6-and-beyond/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-45202a8a").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/index.html",redirect:"/frontend-knowledge/es6-and-beyond/"},{name:"v-453dbd63",path:"/frontend-knowledge/es6-and-beyond/es10-json/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-453dbd63").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es10-json/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es10-json/"},{path:"/frontend-knowledge/es6-and-beyond/es10-json.html",redirect:"/frontend-knowledge/es6-and-beyond/es10-json/"},{name:"v-10574b7a",path:"/frontend-knowledge/es6-and-beyond/es10-object/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-10574b7a").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es10-object/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es10-object/"},{path:"/frontend-knowledge/es6-and-beyond/es10-object.html",redirect:"/frontend-knowledge/es6-and-beyond/es10-object/"},{name:"v-7ab1e5ba",path:"/frontend-knowledge/es6-and-beyond/es10-symbol/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-7ab1e5ba").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es10-symbol/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es10-symbol/"},{path:"/frontend-knowledge/es6-and-beyond/es10-symbol.html",redirect:"/frontend-knowledge/es6-and-beyond/es10-symbol/"},{name:"v-208c7c03",path:"/frontend-knowledge/es6-and-beyond/es10-string/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-208c7c03").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es10-string/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es10-string/"},{path:"/frontend-knowledge/es6-and-beyond/es10-string.html",redirect:"/frontend-knowledge/es6-and-beyond/es10-string/"},{name:"v-35870b3a",path:"/frontend-knowledge/es6-and-beyond/es11-bigint/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-35870b3a").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es11-bigint/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es11-bigint/"},{path:"/frontend-knowledge/es6-and-beyond/es11-bigint.html",redirect:"/frontend-knowledge/es6-and-beyond/es11-bigint/"},{name:"v-0b0d83e3",path:"/frontend-knowledge/es6-and-beyond/es11-chaining/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-0b0d83e3").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es11-chaining/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es11-chaining/"},{path:"/frontend-knowledge/es6-and-beyond/es11-chaining.html",redirect:"/frontend-knowledge/es6-and-beyond/es11-chaining/"},{name:"v-1b16eba3",path:"/frontend-knowledge/es6-and-beyond/es11-globalthis/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-1b16eba3").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es11-globalthis/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es11-globalthis/"},{path:"/frontend-knowledge/es6-and-beyond/es11-globalthis.html",redirect:"/frontend-knowledge/es6-and-beyond/es11-globalthis/"},{name:"v-2102823a",path:"/frontend-knowledge/es6-and-beyond/es11-dynamic-import/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-2102823a").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es11-dynamic-import/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es11-dynamic-import/"},{path:"/frontend-knowledge/es6-and-beyond/es11-dynamic-import.html",redirect:"/frontend-knowledge/es6-and-beyond/es11-dynamic-import/"},{name:"v-f8ef68e6",path:"/frontend-knowledge/es6-and-beyond/es11-nullish/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-f8ef68e6").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es11-nullish/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es11-nullish/"},{path:"/frontend-knowledge/es6-and-beyond/es11-nullish.html",redirect:"/frontend-knowledge/es6-and-beyond/es11-nullish/"},{name:"v-5879ea85",path:"/frontend-knowledge/es6-and-beyond/es11-promise/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-5879ea85").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es11-promise/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es11-promise/"},{path:"/frontend-knowledge/es6-and-beyond/es11-promise.html",redirect:"/frontend-knowledge/es6-and-beyond/es11-promise/"},{name:"v-da87dd7a",path:"/frontend-knowledge/es6-and-beyond/es12-number/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-da87dd7a").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es12-number/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es12-number/"},{path:"/frontend-knowledge/es6-and-beyond/es12-number.html",redirect:"/frontend-knowledge/es6-and-beyond/es12-number/"},{name:"v-b9641bba",path:"/frontend-knowledge/es6-and-beyond/es11-string/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-b9641bba").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es11-string/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es11-string/"},{path:"/frontend-knowledge/es6-and-beyond/es11-string.html",redirect:"/frontend-knowledge/es6-and-beyond/es11-string/"},{name:"v-20d339b2",path:"/frontend-knowledge/es6-and-beyond/es12-logical/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-20d339b2").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es12-logical/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es12-logical/"},{path:"/frontend-knowledge/es6-and-beyond/es12-logical.html",redirect:"/frontend-knowledge/es6-and-beyond/es12-logical/"},{name:"v-4a297d23",path:"/frontend-knowledge/es6-and-beyond/es12-private-class-fields/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-4a297d23").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es12-private-class-fields/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es12-private-class-fields/"},{path:"/frontend-knowledge/es6-and-beyond/es12-private-class-fields.html",redirect:"/frontend-knowledge/es6-and-beyond/es12-private-class-fields/"},{name:"v-8e8e8ffa",path:"/frontend-knowledge/es6-and-beyond/es12-promise/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-8e8e8ffa").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es12-promise/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es12-promise/"},{path:"/frontend-knowledge/es6-and-beyond/es12-promise.html",redirect:"/frontend-knowledge/es6-and-beyond/es12-promise/"},{name:"v-cab12aba",path:"/frontend-knowledge/es6-and-beyond/es6-destructuring/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-cab12aba").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es6-destructuring/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es6-destructuring/"},{path:"/frontend-knowledge/es6-and-beyond/es6-destructuring.html",redirect:"/frontend-knowledge/es6-and-beyond/es6-destructuring/"},{name:"v-f0c48a3a",path:"/frontend-knowledge/es6-and-beyond/es6-array/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-f0c48a3a").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es6-array/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es6-array/"},{path:"/frontend-knowledge/es6-and-beyond/es6-array.html",redirect:"/frontend-knowledge/es6-and-beyond/es6-array/"},{name:"v-260f6843",path:"/frontend-knowledge/es6-and-beyond/es12-string/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-260f6843").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es12-string/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es12-string/"},{path:"/frontend-knowledge/es6-and-beyond/es12-string.html",redirect:"/frontend-knowledge/es6-and-beyond/es12-string/"},{name:"v-6b27567a",path:"/frontend-knowledge/es6-and-beyond/es6-class/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-6b27567a").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es6-class/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es6-class/"},{path:"/frontend-knowledge/es6-and-beyond/es6-class.html",redirect:"/frontend-knowledge/es6-and-beyond/es6-class/"},{name:"v-8cfd387a",path:"/frontend-knowledge/es6-and-beyond/es6-function/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-8cfd387a").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es6-function/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es6-function/"},{path:"/frontend-knowledge/es6-and-beyond/es6-function.html",redirect:"/frontend-knowledge/es6-and-beyond/es6-function/"},{name:"v-4f7d6f63",path:"/frontend-knowledge/es6-and-beyond/es6-let-const/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-4f7d6f63").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es6-let-const/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es6-let-const/"},{path:"/frontend-knowledge/es6-and-beyond/es6-let-const.html",redirect:"/frontend-knowledge/es6-and-beyond/es6-let-const/"},{name:"v-a905e97a",path:"/frontend-knowledge/es6-and-beyond/es6-map/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-a905e97a").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es6-map/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es6-map/"},{path:"/frontend-knowledge/es6-and-beyond/es6-map.html",redirect:"/frontend-knowledge/es6-and-beyond/es6-map/"},{name:"v-72aadeca",path:"/frontend-knowledge/es6-and-beyond/es6-module/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-72aadeca").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es6-module/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es6-module/"},{path:"/frontend-knowledge/es6-and-beyond/es6-module.html",redirect:"/frontend-knowledge/es6-and-beyond/es6-module/"},{name:"v-6f0552ba",path:"/frontend-knowledge/es6-and-beyond/es6-generator/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-6f0552ba").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es6-generator/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es6-generator/"},{path:"/frontend-knowledge/es6-and-beyond/es6-generator.html",redirect:"/frontend-knowledge/es6-and-beyond/es6-generator/"},{name:"v-c648fe96",path:"/frontend-knowledge/es6-and-beyond/es6-object/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-c648fe96").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es6-object/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es6-object/"},{path:"/frontend-knowledge/es6-and-beyond/es6-object.html",redirect:"/frontend-knowledge/es6-and-beyond/es6-object/"},{name:"v-05647921",path:"/frontend-knowledge/es6-and-beyond/es6-number/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-05647921").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es6-number/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es6-number/"},{path:"/frontend-knowledge/es6-and-beyond/es6-number.html",redirect:"/frontend-knowledge/es6-and-beyond/es6-number/"},{name:"v-711f0f83",path:"/frontend-knowledge/es6-and-beyond/es6-proxy/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-711f0f83").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es6-proxy/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es6-proxy/"},{path:"/frontend-knowledge/es6-and-beyond/es6-proxy.html",redirect:"/frontend-knowledge/es6-and-beyond/es6-proxy/"},{name:"v-1b5bfd3a",path:"/frontend-knowledge/es6-and-beyond/es6-promise/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-1b5bfd3a").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es6-promise/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es6-promise/"},{path:"/frontend-knowledge/es6-and-beyond/es6-promise.html",redirect:"/frontend-knowledge/es6-and-beyond/es6-promise/"},{name:"v-38936923",path:"/frontend-knowledge/es6-and-beyond/es6-reflect/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-38936923").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es6-reflect/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es6-reflect/"},{path:"/frontend-knowledge/es6-and-beyond/es6-reflect.html",redirect:"/frontend-knowledge/es6-and-beyond/es6-reflect/"},{name:"v-5f2c9991",path:"/frontend-knowledge/es6-and-beyond/es6-string/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-5f2c9991").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es6-string/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es6-string/"},{path:"/frontend-knowledge/es6-and-beyond/es6-string.html",redirect:"/frontend-knowledge/es6-and-beyond/es6-string/"},{name:"v-bff5a5fa",path:"/frontend-knowledge/es6-and-beyond/es7-array/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-bff5a5fa").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es7-array/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es7-array/"},{path:"/frontend-knowledge/es6-and-beyond/es7-array.html",redirect:"/frontend-knowledge/es6-and-beyond/es7-array/"},{name:"v-18c44fba",path:"/frontend-knowledge/es6-and-beyond/es7-pow/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-18c44fba").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es7-pow/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es7-pow/"},{path:"/frontend-knowledge/es6-and-beyond/es7-pow.html",redirect:"/frontend-knowledge/es6-and-beyond/es7-pow/"},{name:"v-2f51ada1",path:"/frontend-knowledge/es6-and-beyond/es6-regexp/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-2f51ada1").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es6-regexp/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es6-regexp/"},{path:"/frontend-knowledge/es6-and-beyond/es6-regexp.html",redirect:"/frontend-knowledge/es6-and-beyond/es6-regexp/"},{name:"v-4daab143",path:"/frontend-knowledge/es6-and-beyond/es6-symbol/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-4daab143").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es6-symbol/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es6-symbol/"},{path:"/frontend-knowledge/es6-and-beyond/es6-symbol.html",redirect:"/frontend-knowledge/es6-and-beyond/es6-symbol/"},{name:"v-0a1f7183",path:"/frontend-knowledge/es6-and-beyond/es6-set/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-0a1f7183").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es6-set/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es6-set/"},{path:"/frontend-knowledge/es6-and-beyond/es6-set.html",redirect:"/frontend-knowledge/es6-and-beyond/es6-set/"},{name:"v-d075148a",path:"/frontend-knowledge/es6-and-beyond/es9-object/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-d075148a").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es9-object/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es9-object/"},{path:"/frontend-knowledge/es6-and-beyond/es9-object.html",redirect:"/frontend-knowledge/es6-and-beyond/es9-object/"},{name:"v-45ad2263",path:"/frontend-knowledge/es6-and-beyond/es8-async-await/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-45ad2263").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es8-async-await/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es8-async-await/"},{path:"/frontend-knowledge/es6-and-beyond/es8-async-await.html",redirect:"/frontend-knowledge/es6-and-beyond/es8-async-await/"},{name:"v-2266628e",path:"/frontend-knowledge/es6-and-beyond/es8-object/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-2266628e").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es8-object/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es8-object/"},{path:"/frontend-knowledge/es6-and-beyond/es8-object.html",redirect:"/frontend-knowledge/es6-and-beyond/es8-object/"},{name:"v-9dc430d6",path:"/frontend-knowledge/es6-and-beyond/es8-string/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-9dc430d6").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es8-string/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es8-string/"},{path:"/frontend-knowledge/es6-and-beyond/es8-string.html",redirect:"/frontend-knowledge/es6-and-beyond/es8-string/"},{name:"v-aef22cba",path:"/frontend-knowledge/es6-and-beyond/es8-trailing-commas/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-aef22cba").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es8-trailing-commas/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es8-trailing-commas/"},{path:"/frontend-knowledge/es6-and-beyond/es8-trailing-commas.html",redirect:"/frontend-knowledge/es6-and-beyond/es8-trailing-commas/"},{name:"v-7299eb03",path:"/frontend-knowledge/es6-and-beyond/es9-promise/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-7299eb03").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es9-promise/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es9-promise/"},{path:"/frontend-knowledge/es6-and-beyond/es9-promise.html",redirect:"/frontend-knowledge/es6-and-beyond/es9-promise/"},{name:"v-2a3ba2a7",path:"/frontend-knowledge/es6-and-beyond/es9-regexp/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-2a3ba2a7").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es9-regexp/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es9-regexp/"},{path:"/frontend-knowledge/es6-and-beyond/es9-regexp.html",redirect:"/frontend-knowledge/es6-and-beyond/es9-regexp/"},{name:"v-70390f55",path:"/frontend-knowledge/es6-and-beyond/es9-for-await-of/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-70390f55").then(n)}},{path:"/frontend-knowledge/es6-and-beyond/es9-for-await-of/index.html",redirect:"/frontend-knowledge/es6-and-beyond/es9-for-await-of/"},{path:"/frontend-knowledge/es6-and-beyond/es9-for-await-of.html",redirect:"/frontend-knowledge/es6-and-beyond/es9-for-await-of/"},{name:"v-e11fbe3a",path:"/frontend-knowledge/html/to-be-continued/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-e11fbe3a").then(n)}},{path:"/frontend-knowledge/html/to-be-continued/index.html",redirect:"/frontend-knowledge/html/to-be-continued/"},{path:"/frontend-knowledge/html/to-be-continued.html",redirect:"/frontend-knowledge/html/to-be-continued/"},{name:"v-a2c108f0",path:"/frontend-knowledge/html/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-a2c108f0").then(n)}},{path:"/frontend-knowledge/html/index.html",redirect:"/frontend-knowledge/html/"},{name:"v-0238470e",path:"/frontend-knowledge/javascript-handwritten/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-0238470e").then(n)}},{path:"/frontend-knowledge/javascript-handwritten/index.html",redirect:"/frontend-knowledge/javascript-handwritten/"},{name:"v-4df0eedb",path:"/frontend-knowledge/html/html-basic-structure/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-4df0eedb").then(n)}},{path:"/frontend-knowledge/html/html-basic-structure/index.html",redirect:"/frontend-knowledge/html/html-basic-structure/"},{path:"/frontend-knowledge/html/html-basic-structure.html",redirect:"/frontend-knowledge/html/html-basic-structure/"},{name:"v-a3152afa",path:"/frontend-knowledge/html/semantic-elements/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-a3152afa").then(n)}},{path:"/frontend-knowledge/html/semantic-elements/index.html",redirect:"/frontend-knowledge/html/semantic-elements/"},{path:"/frontend-knowledge/html/semantic-elements.html",redirect:"/frontend-knowledge/html/semantic-elements/"},{name:"v-15cc0077",path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0apply%E6%96%B9%E6%B3%95/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-15cc0077").then(n)}},{path:"/frontend-knowledge/javascript-handwritten/实现apply方法/",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0apply%E6%96%B9%E6%B3%95/"},{path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0apply%E6%96%B9%E6%B3%95/index.html",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0apply%E6%96%B9%E6%B3%95/"},{path:"/frontend-knowledge/javascript-handwritten/实现apply方法.html",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0apply%E6%96%B9%E6%B3%95/"},{name:"v-43dc59f6",path:"/frontend-knowledge/javascript-handwritten/my-promise/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-43dc59f6").then(n)}},{path:"/frontend-knowledge/javascript-handwritten/my-promise/index.html",redirect:"/frontend-knowledge/javascript-handwritten/my-promise/"},{path:"/frontend-knowledge/javascript-handwritten/my-promise.html",redirect:"/frontend-knowledge/javascript-handwritten/my-promise/"},{name:"v-739f5645",path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0bind%E6%96%B9%E6%B3%95/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-739f5645").then(n)}},{path:"/frontend-knowledge/javascript-handwritten/实现bind方法/",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0bind%E6%96%B9%E6%B3%95/"},{path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0bind%E6%96%B9%E6%B3%95/index.html",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0bind%E6%96%B9%E6%B3%95/"},{path:"/frontend-knowledge/javascript-handwritten/实现bind方法.html",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0bind%E6%96%B9%E6%B3%95/"},{name:"v-5e7e13f7",path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0object-create%E6%96%B9%E6%B3%95/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-5e7e13f7").then(n)}},{path:"/frontend-knowledge/javascript-handwritten/实现object-create方法/",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0object-create%E6%96%B9%E6%B3%95/"},{path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0object-create%E6%96%B9%E6%B3%95/index.html",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0object-create%E6%96%B9%E6%B3%95/"},{path:"/frontend-knowledge/javascript-handwritten/实现object-create方法.html",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0object-create%E6%96%B9%E6%B3%95/"},{name:"v-22f7f0e7",path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0instanceof%E8%BF%90%E7%AE%97%E7%AC%A6/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-22f7f0e7").then(n)}},{path:"/frontend-knowledge/javascript-handwritten/实现instanceof运算符/",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0instanceof%E8%BF%90%E7%AE%97%E7%AC%A6/"},{path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0instanceof%E8%BF%90%E7%AE%97%E7%AC%A6/index.html",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0instanceof%E8%BF%90%E7%AE%97%E7%AC%A6/"},{path:"/frontend-knowledge/javascript-handwritten/实现instanceof运算符.html",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0instanceof%E8%BF%90%E7%AE%97%E7%AC%A6/"},{name:"v-20c183b2",path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E6%B5%85%E6%8B%B7%E8%B4%9D-shallow-clone/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-20c183b2").then(n)}},{path:"/frontend-knowledge/javascript-handwritten/实现浅拷贝-shallow-clone/",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E6%B5%85%E6%8B%B7%E8%B4%9D-shallow-clone/"},{path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E6%B5%85%E6%8B%B7%E8%B4%9D-shallow-clone/index.html",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E6%B5%85%E6%8B%B7%E8%B4%9D-shallow-clone/"},{path:"/frontend-knowledge/javascript-handwritten/实现浅拷贝-shallow-clone.html",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E6%B5%85%E6%8B%B7%E8%B4%9D-shallow-clone/"},{name:"v-622086fa",path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0call%E6%96%B9%E6%B3%95/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-622086fa").then(n)}},{path:"/frontend-knowledge/javascript-handwritten/实现call方法/",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0call%E6%96%B9%E6%B3%95/"},{path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0call%E6%96%B9%E6%B3%95/index.html",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0call%E6%96%B9%E6%B3%95/"},{path:"/frontend-knowledge/javascript-handwritten/实现call方法.html",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0call%E6%96%B9%E6%B3%95/"},{name:"v-ea969468",path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E6%95%B0%E7%BB%84%E6%89%81%E5%B9%B3%E5%8C%96flat%E6%96%B9%E6%B3%95/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-ea969468").then(n)}},{path:"/frontend-knowledge/javascript-handwritten/实现数组扁平化flat方法/",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E6%95%B0%E7%BB%84%E6%89%81%E5%B9%B3%E5%8C%96flat%E6%96%B9%E6%B3%95/"},{path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E6%95%B0%E7%BB%84%E6%89%81%E5%B9%B3%E5%8C%96flat%E6%96%B9%E6%B3%95/index.html",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E6%95%B0%E7%BB%84%E6%89%81%E5%B9%B3%E5%8C%96flat%E6%96%B9%E6%B3%95/"},{path:"/frontend-knowledge/javascript-handwritten/实现数组扁平化flat方法.html",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E6%95%B0%E7%BB%84%E6%89%81%E5%B9%B3%E5%8C%96flat%E6%96%B9%E6%B3%95/"},{name:"v-1a6e3889",path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0new%E8%BF%90%E7%AE%97%E7%AC%A6/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-1a6e3889").then(n)}},{path:"/frontend-knowledge/javascript-handwritten/实现new运算符/",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0new%E8%BF%90%E7%AE%97%E7%AC%A6/"},{path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0new%E8%BF%90%E7%AE%97%E7%AC%A6/index.html",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0new%E8%BF%90%E7%AE%97%E7%AC%A6/"},{path:"/frontend-knowledge/javascript-handwritten/实现new运算符.html",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0new%E8%BF%90%E7%AE%97%E7%AC%A6/"},{name:"v-b4c26c1e",path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E6%B7%B1%E6%8B%B7%E8%B4%9D-deep-clone/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-b4c26c1e").then(n)}},{path:"/frontend-knowledge/javascript-handwritten/实现深拷贝-deep-clone/",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E6%B7%B1%E6%8B%B7%E8%B4%9D-deep-clone/"},{path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E6%B7%B1%E6%8B%B7%E8%B4%9D-deep-clone/index.html",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E6%B7%B1%E6%8B%B7%E8%B4%9D-deep-clone/"},{path:"/frontend-knowledge/javascript-handwritten/实现深拷贝-deep-clone.html",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E6%B7%B1%E6%8B%B7%E8%B4%9D-deep-clone/"},{name:"v-4494d5b3",path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D%E7%9A%84%E6%96%B9%E6%B3%95/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-4494d5b3").then(n)}},{path:"/frontend-knowledge/javascript-handwritten/实现数组去重的方法/",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D%E7%9A%84%E6%96%B9%E6%B3%95/"},{path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D%E7%9A%84%E6%96%B9%E6%B3%95/index.html",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D%E7%9A%84%E6%96%B9%E6%B3%95/"},{path:"/frontend-knowledge/javascript-handwritten/实现数组去重的方法.html",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D%E7%9A%84%E6%96%B9%E6%B3%95/"},{name:"v-9fc93546",path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E5%AF%B9%E8%B1%A1%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D%E7%9A%84%E6%96%B9%E6%B3%95/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-9fc93546").then(n)}},{path:"/frontend-knowledge/javascript-handwritten/实现对象数组去重的方法/",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E5%AF%B9%E8%B1%A1%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D%E7%9A%84%E6%96%B9%E6%B3%95/"},{path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E5%AF%B9%E8%B1%A1%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D%E7%9A%84%E6%96%B9%E6%B3%95/index.html",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E5%AF%B9%E8%B1%A1%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D%E7%9A%84%E6%96%B9%E6%B3%95/"},{path:"/frontend-knowledge/javascript-handwritten/实现对象数组去重的方法.html",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E5%AF%B9%E8%B1%A1%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D%E7%9A%84%E6%96%B9%E6%B3%95/"},{name:"v-6a2812dd",path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E8%8A%82%E6%B5%81%E5%87%BD%E6%95%B0-throttle/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-6a2812dd").then(n)}},{path:"/frontend-knowledge/javascript-handwritten/实现节流函数-throttle/",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E8%8A%82%E6%B5%81%E5%87%BD%E6%95%B0-throttle/"},{path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E8%8A%82%E6%B5%81%E5%87%BD%E6%95%B0-throttle/index.html",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E8%8A%82%E6%B5%81%E5%87%BD%E6%95%B0-throttle/"},{path:"/frontend-knowledge/javascript-handwritten/实现节流函数-throttle.html",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E8%8A%82%E6%B5%81%E5%87%BD%E6%95%B0-throttle/"},{name:"v-6d4fb105",path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E9%98%B2%E6%8A%96%E5%87%BD%E6%95%B0-debounce/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-6d4fb105").then(n)}},{path:"/frontend-knowledge/javascript-handwritten/实现防抖函数-debounce/",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E9%98%B2%E6%8A%96%E5%87%BD%E6%95%B0-debounce/"},{path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E9%98%B2%E6%8A%96%E5%87%BD%E6%95%B0-debounce/index.html",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E9%98%B2%E6%8A%96%E5%87%BD%E6%95%B0-debounce/"},{path:"/frontend-knowledge/javascript-handwritten/实现防抖函数-debounce.html",redirect:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E9%98%B2%E6%8A%96%E5%87%BD%E6%95%B0-debounce/"},{name:"v-7a464378",path:"/frontend-knowledge/javascript/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-7a464378").then(n)}},{path:"/frontend-knowledge/javascript/index.html",redirect:"/frontend-knowledge/javascript/"},{name:"v-282459e3",path:"/frontend-knowledge/javascript/closure/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-282459e3").then(n)}},{path:"/frontend-knowledge/javascript/closure/index.html",redirect:"/frontend-knowledge/javascript/closure/"},{path:"/frontend-knowledge/javascript/closure.html",redirect:"/frontend-knowledge/javascript/closure/"},{name:"v-75d3c752",path:"/frontend-knowledge/javascript/data-types/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-75d3c752").then(n)}},{path:"/frontend-knowledge/javascript/data-types/index.html",redirect:"/frontend-knowledge/javascript/data-types/"},{path:"/frontend-knowledge/javascript/data-types.html",redirect:"/frontend-knowledge/javascript/data-types/"},{name:"v-50058523",path:"/frontend-knowledge/javascript/function-invocation/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-50058523").then(n)}},{path:"/frontend-knowledge/javascript/function-invocation/index.html",redirect:"/frontend-knowledge/javascript/function-invocation/"},{path:"/frontend-knowledge/javascript/function-invocation.html",redirect:"/frontend-knowledge/javascript/function-invocation/"},{name:"v-e2210dba",path:"/frontend-knowledge/javascript/array-iteration/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-e2210dba").then(n)}},{path:"/frontend-knowledge/javascript/array-iteration/index.html",redirect:"/frontend-knowledge/javascript/array-iteration/"},{path:"/frontend-knowledge/javascript/array-iteration.html",redirect:"/frontend-knowledge/javascript/array-iteration/"},{name:"v-3ca07f56",path:"/frontend-knowledge/javascript/event-loop/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-3ca07f56").then(n)}},{path:"/frontend-knowledge/javascript/event-loop/index.html",redirect:"/frontend-knowledge/javascript/event-loop/"},{path:"/frontend-knowledge/javascript/event-loop.html",redirect:"/frontend-knowledge/javascript/event-loop/"},{name:"v-cd34276a",path:"/frontend-knowledge/javascript/gc/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-cd34276a").then(n)}},{path:"/frontend-knowledge/javascript/gc/index.html",redirect:"/frontend-knowledge/javascript/gc/"},{path:"/frontend-knowledge/javascript/gc.html",redirect:"/frontend-knowledge/javascript/gc/"},{name:"v-55fcc299",path:"/frontend-knowledge/javascript/function-declare/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-55fcc299").then(n)}},{path:"/frontend-knowledge/javascript/function-declare/index.html",redirect:"/frontend-knowledge/javascript/function-declare/"},{path:"/frontend-knowledge/javascript/function-declare.html",redirect:"/frontend-knowledge/javascript/function-declare/"},{name:"v-70dcb4e3",path:"/frontend-knowledge/javascript/higher-order-function/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-70dcb4e3").then(n)}},{path:"/frontend-knowledge/javascript/higher-order-function/index.html",redirect:"/frontend-knowledge/javascript/higher-order-function/"},{path:"/frontend-knowledge/javascript/higher-order-function.html",redirect:"/frontend-knowledge/javascript/higher-order-function/"},{name:"v-66c39183",path:"/frontend-knowledge/javascript/execution-context/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-66c39183").then(n)}},{path:"/frontend-knowledge/javascript/execution-context/index.html",redirect:"/frontend-knowledge/javascript/execution-context/"},{path:"/frontend-knowledge/javascript/execution-context.html",redirect:"/frontend-knowledge/javascript/execution-context/"},{name:"v-8e98abfa",path:"/frontend-knowledge/javascript/inheritance/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-8e98abfa").then(n)}},{path:"/frontend-knowledge/javascript/inheritance/index.html",redirect:"/frontend-knowledge/javascript/inheritance/"},{path:"/frontend-knowledge/javascript/inheritance.html",redirect:"/frontend-knowledge/javascript/inheritance/"},{name:"v-57094fc3",path:"/frontend-knowledge/javascript/scope/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-57094fc3").then(n)}},{path:"/frontend-knowledge/javascript/scope/index.html",redirect:"/frontend-knowledge/javascript/scope/"},{path:"/frontend-knowledge/javascript/scope.html",redirect:"/frontend-knowledge/javascript/scope/"},{name:"v-0efbf7e6",path:"/frontend-knowledge/javascript/shallow-clone-and-deep-clone/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-0efbf7e6").then(n)}},{path:"/frontend-knowledge/javascript/shallow-clone-and-deep-clone/index.html",redirect:"/frontend-knowledge/javascript/shallow-clone-and-deep-clone/"},{path:"/frontend-knowledge/javascript/shallow-clone-and-deep-clone.html",redirect:"/frontend-knowledge/javascript/shallow-clone-and-deep-clone/"},{name:"v-db069a36",path:"/frontend-knowledge/javascript/object-iteration/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-db069a36").then(n)}},{path:"/frontend-knowledge/javascript/object-iteration/index.html",redirect:"/frontend-knowledge/javascript/object-iteration/"},{path:"/frontend-knowledge/javascript/object-iteration.html",redirect:"/frontend-knowledge/javascript/object-iteration/"},{name:"v-2b78bbe3",path:"/frontend-knowledge/javascript/prototype-and-prototype-chain/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-2b78bbe3").then(n)}},{path:"/frontend-knowledge/javascript/prototype-and-prototype-chain/index.html",redirect:"/frontend-knowledge/javascript/prototype-and-prototype-chain/"},{path:"/frontend-knowledge/javascript/prototype-and-prototype-chain.html",redirect:"/frontend-knowledge/javascript/prototype-and-prototype-chain/"},{name:"v-2322ccba",path:"/frontend-knowledge/javascript/to-be-continued/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-2322ccba").then(n)}},{path:"/frontend-knowledge/javascript/to-be-continued/index.html",redirect:"/frontend-knowledge/javascript/to-be-continued/"},{path:"/frontend-knowledge/javascript/to-be-continued.html",redirect:"/frontend-knowledge/javascript/to-be-continued/"},{name:"v-0954de35",path:"/frontend-knowledge/javascript/stack-and-heap/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-0954de35").then(n)}},{path:"/frontend-knowledge/javascript/stack-and-heap/index.html",redirect:"/frontend-knowledge/javascript/stack-and-heap/"},{path:"/frontend-knowledge/javascript/stack-and-heap.html",redirect:"/frontend-knowledge/javascript/stack-and-heap/"},{name:"v-f780d94a",path:"/frontend-knowledge/javascript/sync-and-async/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-f780d94a").then(n)}},{path:"/frontend-knowledge/javascript/sync-and-async/index.html",redirect:"/frontend-knowledge/javascript/sync-and-async/"},{path:"/frontend-knowledge/javascript/sync-and-async.html",redirect:"/frontend-knowledge/javascript/sync-and-async/"},{name:"v-543f93d8",path:"/frontend-knowledge/typescript/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-543f93d8").then(n)}},{path:"/frontend-knowledge/typescript/index.html",redirect:"/frontend-knowledge/typescript/"},{name:"v-48b70e8f",path:"/frontend-knowledge/javascript/this-keyword/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-48b70e8f").then(n)}},{path:"/frontend-knowledge/javascript/this-keyword/index.html",redirect:"/frontend-knowledge/javascript/this-keyword/"},{path:"/frontend-knowledge/javascript/this-keyword.html",redirect:"/frontend-knowledge/javascript/this-keyword/"},{name:"v-7cc38343",path:"/frontend-knowledge/typescript/any-unknown-never/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-7cc38343").then(n)}},{path:"/frontend-knowledge/typescript/any-unknown-never/index.html",redirect:"/frontend-knowledge/typescript/any-unknown-never/"},{path:"/frontend-knowledge/typescript/any-unknown-never.html",redirect:"/frontend-knowledge/typescript/any-unknown-never/"},{name:"v-208b2b43",path:"/frontend-knowledge/typescript/class/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-208b2b43").then(n)}},{path:"/frontend-knowledge/typescript/class/index.html",redirect:"/frontend-knowledge/typescript/class/"},{path:"/frontend-knowledge/typescript/class.html",redirect:"/frontend-knowledge/typescript/class/"},{name:"v-0080c103",path:"/frontend-knowledge/typescript/basic-types/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-0080c103").then(n)}},{path:"/frontend-knowledge/typescript/basic-types/index.html",redirect:"/frontend-knowledge/typescript/basic-types/"},{path:"/frontend-knowledge/typescript/basic-types.html",redirect:"/frontend-knowledge/typescript/basic-types/"},{name:"v-41c08831",path:"/frontend-knowledge/typescript/enum/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-41c08831").then(n)}},{path:"/frontend-knowledge/typescript/enum/index.html",redirect:"/frontend-knowledge/typescript/enum/"},{path:"/frontend-knowledge/typescript/enum.html",redirect:"/frontend-knowledge/typescript/enum/"},{name:"v-439a9f59",path:"/frontend-knowledge/typescript/function-and-class/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-439a9f59").then(n)}},{path:"/frontend-knowledge/typescript/function-and-class/index.html",redirect:"/frontend-knowledge/typescript/function-and-class/"},{path:"/frontend-knowledge/typescript/function-and-class.html",redirect:"/frontend-knowledge/typescript/function-and-class/"},{name:"v-024046a3",path:"/frontend-knowledge/typescript/generic-types/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-024046a3").then(n)}},{path:"/frontend-knowledge/typescript/generic-types/index.html",redirect:"/frontend-knowledge/typescript/generic-types/"},{path:"/frontend-knowledge/typescript/generic-types.html",redirect:"/frontend-knowledge/typescript/generic-types/"},{name:"v-0791c683",path:"/frontend-knowledge/typescript/function/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-0791c683").then(n)}},{path:"/frontend-knowledge/typescript/function/index.html",redirect:"/frontend-knowledge/typescript/function/"},{path:"/frontend-knowledge/typescript/function.html",redirect:"/frontend-knowledge/typescript/function/"},{name:"v-416261aa",path:"/frontend-knowledge/typescript/interface-and-type/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-416261aa").then(n)}},{path:"/frontend-knowledge/typescript/interface-and-type/index.html",redirect:"/frontend-knowledge/typescript/interface-and-type/"},{path:"/frontend-knowledge/typescript/interface-and-type.html",redirect:"/frontend-knowledge/typescript/interface-and-type/"},{name:"v-4b7b453b",path:"/frontend-knowledge/typescript/generics/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-4b7b453b").then(n)}},{path:"/frontend-knowledge/typescript/generics/index.html",redirect:"/frontend-knowledge/typescript/generics/"},{path:"/frontend-knowledge/typescript/generics.html",redirect:"/frontend-knowledge/typescript/generics/"},{name:"v-5fa486a3",path:"/frontend-knowledge/typescript/to-be-continued/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-5fa486a3").then(n)}},{path:"/frontend-knowledge/typescript/to-be-continued/index.html",redirect:"/frontend-knowledge/typescript/to-be-continued/"},{path:"/frontend-knowledge/typescript/to-be-continued.html",redirect:"/frontend-knowledge/typescript/to-be-continued/"},{name:"v-36d0e289",path:"/frontend-knowledge/typescript/literal-and-enum/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-36d0e289").then(n)}},{path:"/frontend-knowledge/typescript/literal-and-enum/index.html",redirect:"/frontend-knowledge/typescript/literal-and-enum/"},{path:"/frontend-knowledge/typescript/literal-and-enum.html",redirect:"/frontend-knowledge/typescript/literal-and-enum/"},{name:"v-729f9ffa",path:"/frontend-knowledge/typescript/to-protect-type/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-729f9ffa").then(n)}},{path:"/frontend-knowledge/typescript/to-protect-type/index.html",redirect:"/frontend-knowledge/typescript/to-protect-type/"},{path:"/frontend-knowledge/typescript/to-protect-type.html",redirect:"/frontend-knowledge/typescript/to-protect-type/"},{name:"v-c49ec73a",path:"/frontend-knowledge/typescript/literal/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-c49ec73a").then(n)}},{path:"/frontend-knowledge/typescript/literal/index.html",redirect:"/frontend-knowledge/typescript/literal/"},{path:"/frontend-knowledge/typescript/literal.html",redirect:"/frontend-knowledge/typescript/literal/"},{name:"v-3d2f9041",path:"/frontend-knowledge/typescript/to-create-type/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-3d2f9041").then(n)}},{path:"/frontend-knowledge/typescript/to-create-type/index.html",redirect:"/frontend-knowledge/typescript/to-create-type/"},{path:"/frontend-knowledge/typescript/to-create-type.html",redirect:"/frontend-knowledge/typescript/to-create-type/"},{name:"v-65707fe2",path:"/frontend-knowledge/typescript/type-guard/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-65707fe2").then(n)}},{path:"/frontend-knowledge/typescript/type-guard/index.html",redirect:"/frontend-knowledge/typescript/type-guard/"},{path:"/frontend-knowledge/typescript/type-guard.html",redirect:"/frontend-knowledge/typescript/type-guard/"},{name:"v-20752c79",path:"/frontend-knowledge/typescript/union-and-intersection/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-20752c79").then(n)}},{path:"/frontend-knowledge/typescript/union-and-intersection/index.html",redirect:"/frontend-knowledge/typescript/union-and-intersection/"},{path:"/frontend-knowledge/typescript/union-and-intersection.html",redirect:"/frontend-knowledge/typescript/union-and-intersection/"},{name:"v-2f6665e0",path:"/in-depth-learning/algorithm/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-2f6665e0").then(n)}},{path:"/in-depth-learning/algorithm/index.html",redirect:"/in-depth-learning/algorithm/"},{name:"v-1a4c311b",path:"/history/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-1a4c311b").then(n)}},{path:"/history/index.html",redirect:"/history/"},{name:"v-6a22c26e",path:"/in-depth-learning/algorithm/array/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-6a22c26e").then(n)}},{path:"/in-depth-learning/algorithm/array/index.html",redirect:"/in-depth-learning/algorithm/array/"},{path:"/in-depth-learning/algorithm/array.html",redirect:"/in-depth-learning/algorithm/array/"},{name:"v-37752409",path:"/in-depth-learning/algorithm/complexity-analysis/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-37752409").then(n)}},{path:"/in-depth-learning/algorithm/complexity-analysis/index.html",redirect:"/in-depth-learning/algorithm/complexity-analysis/"},{path:"/in-depth-learning/algorithm/complexity-analysis.html",redirect:"/in-depth-learning/algorithm/complexity-analysis/"},{name:"v-63fe585f",path:"/in-depth-learning/design-patterns/5-principles/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-63fe585f").then(n)}},{path:"/in-depth-learning/design-patterns/5-principles/index.html",redirect:"/in-depth-learning/design-patterns/5-principles/"},{path:"/in-depth-learning/design-patterns/5-principles.html",redirect:"/in-depth-learning/design-patterns/5-principles/"},{name:"v-3eafe449",path:"/in-depth-learning/algorithm/to-be-continued/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-3eafe449").then(n)}},{path:"/in-depth-learning/algorithm/to-be-continued/index.html",redirect:"/in-depth-learning/algorithm/to-be-continued/"},{path:"/in-depth-learning/algorithm/to-be-continued.html",redirect:"/in-depth-learning/algorithm/to-be-continued/"},{name:"v-5acdc02e",path:"/in-depth-learning/design-patterns/23-patterns/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-5acdc02e").then(n)}},{path:"/in-depth-learning/design-patterns/23-patterns/index.html",redirect:"/in-depth-learning/design-patterns/23-patterns/"},{path:"/in-depth-learning/design-patterns/23-patterns.html",redirect:"/in-depth-learning/design-patterns/23-patterns/"},{name:"v-40447ab9",path:"/in-depth-learning/design-patterns/abstract-factory-pattern/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-40447ab9").then(n)}},{path:"/in-depth-learning/design-patterns/abstract-factory-pattern/index.html",redirect:"/in-depth-learning/design-patterns/abstract-factory-pattern/"},{path:"/in-depth-learning/design-patterns/abstract-factory-pattern.html",redirect:"/in-depth-learning/design-patterns/abstract-factory-pattern/"},{name:"v-33e88869",path:"/in-depth-learning/algorithm/linked-list/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-33e88869").then(n)}},{path:"/in-depth-learning/algorithm/linked-list/index.html",redirect:"/in-depth-learning/algorithm/linked-list/"},{path:"/in-depth-learning/algorithm/linked-list.html",redirect:"/in-depth-learning/algorithm/linked-list/"},{name:"v-429ee0ee",path:"/in-depth-learning/design-patterns/adapter-pattern/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-429ee0ee").then(n)}},{path:"/in-depth-learning/design-patterns/adapter-pattern/index.html",redirect:"/in-depth-learning/design-patterns/adapter-pattern/"},{path:"/in-depth-learning/design-patterns/adapter-pattern.html",redirect:"/in-depth-learning/design-patterns/adapter-pattern/"},{name:"v-7756c8e5",path:"/in-depth-learning/design-patterns/bridge-pattern/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-7756c8e5").then(n)}},{path:"/in-depth-learning/design-patterns/bridge-pattern/index.html",redirect:"/in-depth-learning/design-patterns/bridge-pattern/"},{path:"/in-depth-learning/design-patterns/bridge-pattern.html",redirect:"/in-depth-learning/design-patterns/bridge-pattern/"},{name:"v-739cafee",path:"/in-depth-learning/design-patterns/builder-pattern/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-739cafee").then(n)}},{path:"/in-depth-learning/design-patterns/builder-pattern/index.html",redirect:"/in-depth-learning/design-patterns/builder-pattern/"},{path:"/in-depth-learning/design-patterns/builder-pattern.html",redirect:"/in-depth-learning/design-patterns/builder-pattern/"},{name:"v-00ab83ec",path:"/in-depth-learning/design-patterns/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-00ab83ec").then(n)}},{path:"/in-depth-learning/design-patterns/index.html",redirect:"/in-depth-learning/design-patterns/"},{name:"v-7a02cc2e",path:"/in-depth-learning/design-patterns/chain-of-responsibility-pattern/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-7a02cc2e").then(n)}},{path:"/in-depth-learning/design-patterns/chain-of-responsibility-pattern/index.html",redirect:"/in-depth-learning/design-patterns/chain-of-responsibility-pattern/"},{path:"/in-depth-learning/design-patterns/chain-of-responsibility-pattern.html",redirect:"/in-depth-learning/design-patterns/chain-of-responsibility-pattern/"},{name:"v-672138ee",path:"/in-depth-learning/design-patterns/composite-pattern/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-672138ee").then(n)}},{path:"/in-depth-learning/design-patterns/composite-pattern/index.html",redirect:"/in-depth-learning/design-patterns/composite-pattern/"},{path:"/in-depth-learning/design-patterns/composite-pattern.html",redirect:"/in-depth-learning/design-patterns/composite-pattern/"},{name:"v-652fae09",path:"/in-depth-learning/design-patterns/decorator-pattern/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-652fae09").then(n)}},{path:"/in-depth-learning/design-patterns/decorator-pattern/index.html",redirect:"/in-depth-learning/design-patterns/decorator-pattern/"},{path:"/in-depth-learning/design-patterns/decorator-pattern.html",redirect:"/in-depth-learning/design-patterns/decorator-pattern/"},{name:"v-814446fa",path:"/in-depth-learning/design-patterns/facade-pattern/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-814446fa").then(n)}},{path:"/in-depth-learning/design-patterns/facade-pattern/index.html",redirect:"/in-depth-learning/design-patterns/facade-pattern/"},{path:"/in-depth-learning/design-patterns/facade-pattern.html",redirect:"/in-depth-learning/design-patterns/facade-pattern/"},{name:"v-5aa12c09",path:"/in-depth-learning/design-patterns/flyweight-pattern/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-5aa12c09").then(n)}},{path:"/in-depth-learning/design-patterns/flyweight-pattern/index.html",redirect:"/in-depth-learning/design-patterns/flyweight-pattern/"},{path:"/in-depth-learning/design-patterns/flyweight-pattern.html",redirect:"/in-depth-learning/design-patterns/flyweight-pattern/"},{name:"v-e2540bee",path:"/in-depth-learning/design-patterns/command-pattern/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-e2540bee").then(n)}},{path:"/in-depth-learning/design-patterns/command-pattern/index.html",redirect:"/in-depth-learning/design-patterns/command-pattern/"},{path:"/in-depth-learning/design-patterns/command-pattern.html",redirect:"/in-depth-learning/design-patterns/command-pattern/"},{name:"v-b03316ca",path:"/in-depth-learning/design-patterns/iterator-pattern/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-b03316ca").then(n)}},{path:"/in-depth-learning/design-patterns/iterator-pattern/index.html",redirect:"/in-depth-learning/design-patterns/iterator-pattern/"},{path:"/in-depth-learning/design-patterns/iterator-pattern.html",redirect:"/in-depth-learning/design-patterns/iterator-pattern/"},{name:"v-77713591",path:"/in-depth-learning/design-patterns/mediator-pattern/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-77713591").then(n)}},{path:"/in-depth-learning/design-patterns/mediator-pattern/index.html",redirect:"/in-depth-learning/design-patterns/mediator-pattern/"},{path:"/in-depth-learning/design-patterns/mediator-pattern.html",redirect:"/in-depth-learning/design-patterns/mediator-pattern/"},{name:"v-607e1ca9",path:"/in-depth-learning/design-patterns/factory-pattern/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-607e1ca9").then(n)}},{path:"/in-depth-learning/design-patterns/factory-pattern/index.html",redirect:"/in-depth-learning/design-patterns/factory-pattern/"},{path:"/in-depth-learning/design-patterns/factory-pattern.html",redirect:"/in-depth-learning/design-patterns/factory-pattern/"},{name:"v-d2510d6e",path:"/in-depth-learning/design-patterns/memento-pattern/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-d2510d6e").then(n)}},{path:"/in-depth-learning/design-patterns/memento-pattern/index.html",redirect:"/in-depth-learning/design-patterns/memento-pattern/"},{path:"/in-depth-learning/design-patterns/memento-pattern.html",redirect:"/in-depth-learning/design-patterns/memento-pattern/"},{name:"v-43544fcb",path:"/in-depth-learning/design-patterns/observer-pattern/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-43544fcb").then(n)}},{path:"/in-depth-learning/design-patterns/observer-pattern/index.html",redirect:"/in-depth-learning/design-patterns/observer-pattern/"},{path:"/in-depth-learning/design-patterns/observer-pattern.html",redirect:"/in-depth-learning/design-patterns/observer-pattern/"},{name:"v-42b299e9",path:"/in-depth-learning/design-patterns/prototype-pattern/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-42b299e9").then(n)}},{path:"/in-depth-learning/design-patterns/prototype-pattern/index.html",redirect:"/in-depth-learning/design-patterns/prototype-pattern/"},{path:"/in-depth-learning/design-patterns/prototype-pattern.html",redirect:"/in-depth-learning/design-patterns/prototype-pattern/"},{name:"v-6a1c1c91",path:"/in-depth-learning/design-patterns/strategy-pattern/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-6a1c1c91").then(n)}},{path:"/in-depth-learning/design-patterns/strategy-pattern/index.html",redirect:"/in-depth-learning/design-patterns/strategy-pattern/"},{path:"/in-depth-learning/design-patterns/strategy-pattern.html",redirect:"/in-depth-learning/design-patterns/strategy-pattern/"},{name:"v-32d6f809",path:"/in-depth-learning/design-patterns/singleton-pattern/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-32d6f809").then(n)}},{path:"/in-depth-learning/design-patterns/singleton-pattern/index.html",redirect:"/in-depth-learning/design-patterns/singleton-pattern/"},{path:"/in-depth-learning/design-patterns/singleton-pattern.html",redirect:"/in-depth-learning/design-patterns/singleton-pattern/"},{name:"v-78b0322e",path:"/in-depth-learning/design-patterns/visitor-pattern-and-interpreter-pattern/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-78b0322e").then(n)}},{path:"/in-depth-learning/design-patterns/visitor-pattern-and-interpreter-pattern/index.html",redirect:"/in-depth-learning/design-patterns/visitor-pattern-and-interpreter-pattern/"},{path:"/in-depth-learning/design-patterns/visitor-pattern-and-interpreter-pattern.html",redirect:"/in-depth-learning/design-patterns/visitor-pattern-and-interpreter-pattern/"},{name:"v-28dc6ce9",path:"/in-depth-learning/design-patterns/proxy-pattern/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-28dc6ce9").then(n)}},{path:"/in-depth-learning/design-patterns/proxy-pattern/index.html",redirect:"/in-depth-learning/design-patterns/proxy-pattern/"},{path:"/in-depth-learning/design-patterns/proxy-pattern.html",redirect:"/in-depth-learning/design-patterns/proxy-pattern/"},{name:"v-5c048169",path:"/in-depth-learning/design-patterns/template-method-pattern/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-5c048169").then(n)}},{path:"/in-depth-learning/design-patterns/template-method-pattern/index.html",redirect:"/in-depth-learning/design-patterns/template-method-pattern/"},{path:"/in-depth-learning/design-patterns/template-method-pattern.html",redirect:"/in-depth-learning/design-patterns/template-method-pattern/"},{name:"v-5fa6c5e9",path:"/in-depth-learning/design-patterns/uml-class-diagram/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-5fa6c5e9").then(n)}},{path:"/in-depth-learning/design-patterns/uml-class-diagram/index.html",redirect:"/in-depth-learning/design-patterns/uml-class-diagram/"},{path:"/in-depth-learning/design-patterns/uml-class-diagram.html",redirect:"/in-depth-learning/design-patterns/uml-class-diagram/"},{name:"v-01b2a5c9",path:"/in-depth-learning/design-patterns/state-pattern/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-01b2a5c9").then(n)}},{path:"/in-depth-learning/design-patterns/state-pattern/index.html",redirect:"/in-depth-learning/design-patterns/state-pattern/"},{path:"/in-depth-learning/design-patterns/state-pattern.html",redirect:"/in-depth-learning/design-patterns/state-pattern/"},{name:"v-7192c809",path:"/in-depth-learning/source-code/to-be-continued/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-7192c809").then(n)}},{path:"/in-depth-learning/source-code/to-be-continued/index.html",redirect:"/in-depth-learning/source-code/to-be-continued/"},{path:"/in-depth-learning/source-code/to-be-continued.html",redirect:"/in-depth-learning/source-code/to-be-continued/"},{name:"v-6d8cc174",path:"/interview/css/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-6d8cc174").then(n)}},{path:"/interview/css/index.html",redirect:"/interview/css/"},{name:"v-20056230",path:"/in-depth-learning/source-code/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-20056230").then(n)}},{path:"/in-depth-learning/source-code/index.html",redirect:"/in-depth-learning/source-code/"},{name:"v-1ff08130",path:"/project/solutions/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-1ff08130").then(n)}},{path:"/project/solutions/index.html",redirect:"/project/solutions/"},{name:"v-be21c10c",path:"/others/about/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-be21c10c").then(n)}},{path:"/others/about/index.html",redirect:"/others/about/"},{path:"/others/about.html",redirect:"/others/about/"},{name:"v-48615196",path:"/in-depth-learning/source-code/vue3-utils/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-48615196").then(n)}},{path:"/in-depth-learning/source-code/vue3-utils/index.html",redirect:"/in-depth-learning/source-code/vue3-utils/"},{path:"/in-depth-learning/source-code/vue3-utils.html",redirect:"/in-depth-learning/source-code/vue3-utils/"},{name:"v-1fa66330",path:"/project/troubleshooting/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-1fa66330").then(n)}},{path:"/project/troubleshooting/index.html",redirect:"/project/troubleshooting/"},{name:"v-43114c30",path:"/interview/html/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-43114c30").then(n)}},{path:"/interview/html/index.html",redirect:"/interview/html/"},{name:"v-0f1977c0",path:"/others/sponsor/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-0f1977c0").then(n)}},{path:"/others/sponsor/index.html",redirect:"/others/sponsor/"},{path:"/others/sponsor.html",redirect:"/others/sponsor/"},{name:"v-bbdb8dee",path:"/project/solutions/code-format/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-bbdb8dee").then(n)}},{path:"/project/solutions/code-format/index.html",redirect:"/project/solutions/code-format/"},{path:"/project/solutions/code-format.html",redirect:"/project/solutions/code-format/"},{name:"v-2b19575f",path:"/project/solutions/virtual-list/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-2b19575f").then(n)}},{path:"/project/solutions/virtual-list/index.html",redirect:"/project/solutions/virtual-list/"},{path:"/project/solutions/virtual-list.html",redirect:"/project/solutions/virtual-list/"},{name:"v-20b735a9",path:"/project/solutions/file-upload/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-20b735a9").then(n)}},{path:"/project/solutions/file-upload/index.html",redirect:"/project/solutions/file-upload/"},{path:"/project/solutions/file-upload.html",redirect:"/project/solutions/file-upload/"},{name:"v-0b0a36ba",path:"/project/troubleshooting/http-error-status-code/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-0b0a36ba").then(n)}},{path:"/project/troubleshooting/http-error-status-code/index.html",redirect:"/project/troubleshooting/http-error-status-code/"},{path:"/project/troubleshooting/http-error-status-code.html",redirect:"/project/troubleshooting/http-error-status-code/"},{name:"v-4780d56e",path:"/project/solutions/git-hooks/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-4780d56e").then(n)}},{path:"/project/solutions/git-hooks/index.html",redirect:"/project/solutions/git-hooks/"},{path:"/project/solutions/git-hooks.html",redirect:"/project/solutions/git-hooks/"},{name:"v-8501a46e",path:"/project/solutions/login/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-8501a46e").then(n)}},{path:"/project/solutions/login/index.html",redirect:"/project/solutions/login/"},{path:"/project/solutions/login.html",redirect:"/project/solutions/login/"},{name:"v-07c26ec8",path:"/style-guide/apis/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-07c26ec8").then(n)}},{path:"/style-guide/apis/index.html",redirect:"/style-guide/apis/"},{name:"v-5884bff0",path:"/style-guide/document/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-5884bff0").then(n)}},{path:"/style-guide/document/index.html",redirect:"/style-guide/document/"},{name:"v-6c8c1530",path:"/style-guide/product/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-6c8c1530").then(n)}},{path:"/style-guide/product/index.html",redirect:"/style-guide/product/"},{name:"v-12719409",path:"/style-guide/program/code-review/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-12719409").then(n)}},{path:"/style-guide/program/code-review/index.html",redirect:"/style-guide/program/code-review/"},{path:"/style-guide/program/code-review.html",redirect:"/style-guide/program/code-review/"},{name:"v-1145cc49",path:"/style-guide/product/tob/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-1145cc49").then(n)}},{path:"/style-guide/product/tob/index.html",redirect:"/style-guide/product/tob/"},{path:"/style-guide/product/tob.html",redirect:"/style-guide/product/tob/"},{name:"v-34deb206",path:"/style-guide/program/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-34deb206").then(n)}},{path:"/style-guide/program/index.html",redirect:"/style-guide/program/"},{name:"v-74993e37",path:"/style-guide/program/css-spec/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-74993e37").then(n)}},{path:"/style-guide/program/css-spec/index.html",redirect:"/style-guide/program/css-spec/"},{path:"/style-guide/program/css-spec.html",redirect:"/style-guide/program/css-spec/"},{name:"v-37a94c69",path:"/style-guide/program/html-spec/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-37a94c69").then(n)}},{path:"/style-guide/program/html-spec/index.html",redirect:"/style-guide/program/html-spec/"},{path:"/style-guide/program/html-spec.html",redirect:"/style-guide/program/html-spec/"},{name:"v-55273769",path:"/style-guide/program/javascript-spec/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-55273769").then(n)}},{path:"/style-guide/program/javascript-spec/index.html",redirect:"/style-guide/program/javascript-spec/"},{path:"/style-guide/program/javascript-spec.html",redirect:"/style-guide/program/javascript-spec/"},{name:"v-4c5e9d84",path:"/style-guide/version-control/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-4c5e9d84").then(n)}},{path:"/style-guide/version-control/index.html",redirect:"/style-guide/version-control/"},{name:"v-4db8740f",path:"/style-guide/program/vuejs-spec/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-4db8740f").then(n)}},{path:"/style-guide/program/vuejs-spec/index.html",redirect:"/style-guide/program/vuejs-spec/"},{path:"/style-guide/program/vuejs-spec.html",redirect:"/style-guide/program/vuejs-spec/"},{name:"v-0fff6bb1",path:"/style-guide/version-control/git-commit-message/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-0fff6bb1").then(n)}},{path:"/style-guide/version-control/git-commit-message/index.html",redirect:"/style-guide/version-control/git-commit-message/"},{path:"/style-guide/version-control/git-commit-message.html",redirect:"/style-guide/version-control/git-commit-message/"},{name:"v-3c8c0ce6",path:"/style-guide/version-control/version-number/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-3c8c0ce6").then(n)}},{path:"/style-guide/version-control/version-number/index.html",redirect:"/style-guide/version-control/version-number/"},{path:"/style-guide/version-control/version-number.html",redirect:"/style-guide/version-control/version-number/"},{name:"v-6aa1cc15",path:"/style-guide/version-control/git-workflow/",component:Mt,beforeEnter:(e,t,n)=>{mt("Layout","v-6aa1cc15").then(n)}},{path:"/style-guide/version-control/git-workflow/index.html",redirect:"/style-guide/version-control/git-workflow/"},{path:"/style-guide/version-control/git-workflow.html",redirect:"/style-guide/version-control/git-workflow/"},{path:"*",component:Mt}],zt={title:"前端修炼小册",description:"Wenyuan's Front-End Development Book",base:"/",headTags:[["link",{rel:"icon",href:"/img/favicon.png"}],["link",{rel:"stylesheet",href:"/css/style.css"}],["script",{charset:"utf-8",src:"https://unpkg.com/sweetalert/dist/sweetalert.min.js"}],["script",{charset:"utf-8",src:"/js/main.js"}],["link",{rel:"alternate",type:"application/atom+xml",href:"https://www.fedbook.cn/atom.xml",title:"前端修炼小册 Atom Feed"}],["link",{rel:"alternate",type:"application/json",href:"https://www.fedbook.cn/feed.json",title:"前端修炼小册 JSON Feed"}],["link",{rel:"alternate",type:"application/rss+xml",href:"https://www.fedbook.cn/rss.xml",title:"前端修炼小册 RSS Feed"}]],pages:[{title:"如何查看 ORM 对应的 SQL 语句",frontmatter:{summary:"如何查看 ORM 对应的 SQL 语句 问题描述 在开发时，有时需要查看 Django ORM 语法对应的原始 SQL 语句。 方案一 当是查询语句且查询结果是 QuerySet 对象时，可以使用 QuerySet 的 query 属性查看转化成的 SQL 语句，如下： 方案二\r在 Django 项目的 settings.py 文件中，找到日志配置 LOGG",meta:[{property:"og:url",content:"/backend-knowledge/django/convert-django-orm-to-sql.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"如何查看 ORM 对应的 SQL 语句"},{property:"og:description",content:"如何查看 ORM 对应的 SQL 语句 问题描述 在开发时，有时需要查看 Django ORM 语法对应的原始 SQL 语句。 方案一 当是查询语句且查询结果是 QuerySet 对象时，可以使用 QuerySet 的 query 属性查看转化成的 SQL 语句，如下： 方案二\r在 Django 项目的 settings.py 文件中，找到日志配置 LOGG"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/django/convert-django-orm-to-sql.html",relativePath:"backend-knowledge/django/convert-django-orm-to-sql.md",key:"v-0e842015",path:"/backend-knowledge/django/convert-django-orm-to-sql/",headers:[{level:2,title:"问题描述",slug:"问题描述"},{level:2,title:"方案一",slug:"方案一"},{level:2,title:"方案二",slug:"方案二"}],readingTime:{minutes:.83,words:250},updateTime:"2023年6月8日 16:17",updateTimeStamp:1686212253e3,createTime:"2023年6月8日 16:17",createTimeStamp:1686212253e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"Django 内置权限系统扩展",frontmatter:{summary:"Django 内置权限系统扩展 背景介绍 Django 内置权限系统是基于 model 层做控制的，新的 model 创建后会默认新建三个权限，分别为：add、change、delete，如果给用户或组赋予 delete 的权限，那么用户将可以删除这个 model 下的所有数据。 这个时候来了一个新的需求，用户 A 只能操作表中特定的数据，用户 B 也只能操",meta:[{property:"og:url",content:"/backend-knowledge/django/django-auth-extension.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Django 内置权限系统扩展"},{property:"og:description",content:"Django 内置权限系统扩展 背景介绍 Django 内置权限系统是基于 model 层做控制的，新的 model 创建后会默认新建三个权限，分别为：add、change、delete，如果给用户或组赋予 delete 的权限，那么用户将可以删除这个 model 下的所有数据。 这个时候来了一个新的需求，用户 A 只能操作表中特定的数据，用户 B 也只能操"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/django/django-auth-extension.html",relativePath:"backend-knowledge/django/django-auth-extension.md",key:"v-327d49ab",path:"/backend-knowledge/django/django-auth-extension/",headers:[{level:2,title:"背景介绍",slug:"背景介绍"},{level:2,title:"实现过程",slug:"实现过程"},{level:2,title:"查询接口权限控制",slug:"查询接口权限控制"},{level:2,title:"编辑接口权限控制",slug:"编辑接口权限控制"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:4.59,words:1376},updateTime:"2022年10月12日 16:16",updateTimeStamp:1665562592e3,createTime:"2022年10月12日 10:16",createTimeStamp:1665540982e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"Django 与 Celery 的集成",frontmatter:{summary:'Django 与 Celery 的集成 " 本项目的环境为：" "" " * CentOS 7" " * Python 3.8" " * Django 4" " * Celery 5" " * Redis 7" " " " 虽然是 Django 4，但没有使用什么新的特性和语法，所以同样适用于 Django 3 和 2。对于 Django 1，只有少部分路由',meta:[{property:"og:url",content:"/backend-knowledge/django/django-integrate-celery.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Django 与 Celery 的集成"},{property:"og:description",content:'Django 与 Celery 的集成 " 本项目的环境为：" "" " * CentOS 7" " * Python 3.8" " * Django 4" " * Celery 5" " * Redis 7" " " " 虽然是 Django 4，但没有使用什么新的特性和语法，所以同样适用于 Django 3 和 2。对于 Django 1，只有少部分路由'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/django/django-integrate-celery.html",relativePath:"backend-knowledge/django/django-integrate-celery.md",key:"v-79b90a63",path:"/backend-knowledge/django/django-integrate-celery/",headers:[{level:2,title:"背景",slug:"背景"},{level:2,title:"工作流程",slug:"工作流程"},{level:2,title:"初始化项目",slug:"初始化项目"},{level:3,title:"初始化 Django 工程",slug:"初始化-django-工程"},{level:3,title:"配置 Celery 和插件",slug:"配置-celery-和插件"},{level:2,title:"创建异步任务",slug:"创建异步任务"},{level:3,title:"编写 tasks.py 模块",slug:"编写-tasks-py-模块"},{level:3,title:"编写任务调用接口",slug:"编写任务调用接口"},{level:3,title:"编写 url 路由",slug:"编写-url-路由"},{level:2,title:"查看异步任务执行",slug:"查看异步任务执行"},{level:3,title:"首次运行初始化",slug:"首次运行初始化"},{level:3,title:"运行 Django 工程",slug:"运行-django-工程"},{level:3,title:"启动 worker",slug:"启动-worker"},{level:3,title:"执行一次异步任务",slug:"执行一次异步任务"},{level:3,title:"查看存储的任务结果",slug:"查看存储的任务结果"},{level:2,title:"创建定时任务",slug:"创建定时任务"},{level:3,title:"编写一些任务",slug:"编写一些任务"},{level:3,title:"定时任务配置",slug:"定时任务配置"},{level:3,title:"增加定时任务计划",slug:"增加定时任务计划"},{level:2,title:"查看异步任务执行",slug:"查看异步任务执行-2"},{level:3,title:"运行 Django 工程",slug:"运行-django-工程-2"},{level:3,title:"启动 worker",slug:"启动-worker-2"},{level:3,title:"启动 beat",slug:"启动-beat"},{level:3,title:"观察定时任务执行",slug:"观察定时任务执行"},{level:2,title:"可视化监控 worker 状态",slug:"可视化监控-worker-状态"},{level:2,title:"使用 supervisor 进行管理",slug:"使用-supervisor-进行管理"},{level:2,title:"完整代码",slug:"完整代码"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:13.43,words:4028},updateTime:"2023年8月21日 10:02",updateTimeStamp:1692583371e3,createTime:"2022年10月26日 16:45",createTimeStamp:1666773927e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"Django 与 Channels 的集成",frontmatter:{summary:'Django 与 Channels 的集成\r" 本项目的环境为："\r""\r" * CentOS 7"\r" * Python 3.8"\r" * Django 4"\r" * Channels 3.x"\r" * Redis 7"\r""\r" 虽然是 Django 4，但没有使用什么新的特性和语法，所以同样适用于 Django 3 和 2。对于 Django 1，只有',meta:[{property:"og:url",content:"/backend-knowledge/django/django-integrate-channels.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Django 与 Channels 的集成"},{property:"og:description",content:'Django 与 Channels 的集成\r" 本项目的环境为："\r""\r" * CentOS 7"\r" * Python 3.8"\r" * Django 4"\r" * Channels 3.x"\r" * Redis 7"\r""\r" 虽然是 Django 4，但没有使用什么新的特性和语法，所以同样适用于 Django 3 和 2。对于 Django 1，只有'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/django/django-integrate-channels.html",relativePath:"backend-knowledge/django/django-integrate-channels.md",key:"v-2b75aaf2",path:"/backend-knowledge/django/django-integrate-channels/",headers:[{level:2,title:"背景",slug:"背景"},{level:2,title:"初始化项目",slug:"初始化项目"},{level:2,title:"集成 Channels",slug:"集成-channels"},{level:2,title:"增加聊天室的视图",slug:"增加聊天室的视图"},{level:2,title:"编写消费者",slug:"编写消费者"},{level:2,title:"编写路由",slug:"编写路由"},{level:2,title:"完善 asgi.py",slug:"完善-asgi-py"},{level:2,title:"启用 Channel Layer",slug:"启用-channel-layer"},{level:2,title:"修改为异步",slug:"修改为异步"},{level:2,title:"完整代码",slug:"完整代码"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:10.97,words:3292},updateTime:"2022年10月26日 16:45",updateTimeStamp:1666773927e3,createTime:"2022年10月26日 16:45",createTimeStamp:1666773927e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"Django",frontmatter:{summary:'Django " 本系列主要基于 Python 3.8 和 Django 3.x 进行知识点梳理。" " " " 但因为 Django 新版本会引入很多强大的功能，并且基础功能都是向前兼容的，很少有 Breaking Change（优点），所以本系列也会随着新的版本升级而持续更新。" Django 是基于 Python 语言开发的一套重量级 Web 框架，其',meta:[{property:"og:url",content:"/backend-knowledge/django/"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Django"},{property:"og:description",content:'Django " 本系列主要基于 Python 3.8 和 Django 3.x 进行知识点梳理。" " " " 但因为 Django 新版本会引入很多强大的功能，并且基础功能都是向前兼容的，很少有 Breaking Change（优点），所以本系列也会随着新的版本升级而持续更新。" Django 是基于 Python 语言开发的一套重量级 Web 框架，其'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/django/",relativePath:"backend-knowledge/django/README.md",key:"v-362d23a8",path:"/backend-knowledge/django/",readingTime:{minutes:2.81,words:843},updateTime:"2022年10月2日 17:20",updateTimeStamp:1664702459e3,createTime:"2022年9月26日 16:24",createTimeStamp:1664180653e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:4}]},{title:"Home",frontmatter:{home:!0,heroImage:"/img/skills.png",action:[{text:"快速开始",link:"/style-guide/document/",type:"primary"},{text:"关于小册",link:"/others/about",type:"default"}],features:[{title:"夯实基础",details:"不积跬步无以至千里，仰望星空更要脚踏实地。"},{title:"构建体系",details:"告别碎片化学习方式，构建出自己的知识体系。"},{title:"持续学习",details:"以前端开发为背景，涵盖前后端与运维等知识。"}],footer:"MIT Licensed | Copyright © 2020-present Wenyuan Xu",copyrightText:!1,summary:"我的技术栈",meta:[{property:"og:url",content:"/"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Home"},{property:"og:description",content:"我的技术栈"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/",relativePath:"README.md",key:"v-72468eb8",path:"/",readingTime:{minutes:25.26,words:7577},updateTime:"2022年9月27日 11:26",updateTimeStamp:1664249176e3,createTime:"2020年8月8日 17:13",createTimeStamp:1596878038e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:28},{name:"winyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"Django 内置权限系统使用",frontmatter:{summary:"Django 内置权限系统使用 功能简介 当 Django 配置文件中的 INSTALL_APPS 包含了 django.contrib.auth 时，就默认启用了一个简单的权限系统，提供了为用户或组分配权限的方法。 默认的权限系统比较简单，主要包括这些功能： 基于表的控制，权限最小粒度是表。; 也就是说，假如有一个 Article 表，我们可以赋予用户或组",meta:[{property:"og:url",content:"/backend-knowledge/django/django-auth.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Django 内置权限系统使用"},{property:"og:description",content:"Django 内置权限系统使用 功能简介 当 Django 配置文件中的 INSTALL_APPS 包含了 django.contrib.auth 时，就默认启用了一个简单的权限系统，提供了为用户或组分配权限的方法。 默认的权限系统比较简单，主要包括这些功能： 基于表的控制，权限最小粒度是表。; 也就是说，假如有一个 Article 表，我们可以赋予用户或组"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/django/django-auth.html",relativePath:"backend-knowledge/django/django-auth.md",key:"v-2da9c0e2",path:"/backend-knowledge/django/django-auth/",headers:[{level:2,title:"功能简介",slug:"功能简介"},{level:2,title:"默认权限",slug:"默认权限"},{level:2,title:"自定义权限",slug:"自定义权限"},{level:2,title:"权限修改",slug:"权限修改"},{level:3,title:"用户权限修改方法",slug:"用户权限修改方法"},{level:3,title:"组权限修改方法",slug:"组权限修改方法"},{level:2,title:"权限查看",slug:"权限查看"},{level:2,title:"权限校验",slug:"权限校验"},{level:3,title:"后端 View 校验权限",slug:"后端-view-校验权限"},{level:3,title:"前端 Template 中校验权限",slug:"前端-template-中校验权限"}],readingTime:{minutes:5.05,words:1516},updateTime:"2022年10月13日 18:04",updateTimeStamp:1665655457e3,createTime:"2022年10月10日 15:00",createTimeStamp:1665385221e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:5}]},{title:"ORM 增删改操作",frontmatter:{summary:"ORM 增删改操作 增删改查是数据库基本操作，Django 自动为所有的模型提供了一套完善、方便、高效的 API。其中「查」是比较复杂的、功能也最多，所以后面单独整理。 增加数据 save() 创建一个模型实例，然后显式地调用 save() 方法。该方法没有返回值。 用法示例： 常见需求： 有时候出于业务需要，我们会重写 save 方法，添加自己的业务逻辑，",meta:[{property:"og:url",content:"/backend-knowledge/django/django-model-create-update-delete.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"ORM 增删改操作"},{property:"og:description",content:"ORM 增删改操作 增删改查是数据库基本操作，Django 自动为所有的模型提供了一套完善、方便、高效的 API。其中「查」是比较复杂的、功能也最多，所以后面单独整理。 增加数据 save() 创建一个模型实例，然后显式地调用 save() 方法。该方法没有返回值。 用法示例： 常见需求： 有时候出于业务需要，我们会重写 save 方法，添加自己的业务逻辑，"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/django/django-model-create-update-delete.html",relativePath:"backend-knowledge/django/django-model-create-update-delete.md",key:"v-92c8304a",path:"/backend-knowledge/django/django-model-create-update-delete/",headers:[{level:2,title:"增加数据",slug:"增加数据"},{level:3,title:"save()",slug:"save"},{level:3,title:"create()",slug:"create"},{level:3,title:"getorcreate()",slug:"get-or-create"},{level:3,title:"updateorcreate()",slug:"update-or-create"},{level:3,title:"bulk_create()",slug:"bulk-create"},{level:2,title:"删除数据",slug:"删除数据"},{level:3,title:"delete()",slug:"delete"},{level:2,title:"修改数据",slug:"修改数据"},{level:3,title:"save()",slug:"save-2"},{level:3,title:"update()",slug:"update"},{level:3,title:"bulk_update()",slug:"bulk-update"}],readingTime:{minutes:10.68,words:3203},updateTime:"2023年4月14日 18:31",updateTimeStamp:1681468262e3,createTime:"2022年10月7日 14:17",createTimeStamp:1665123451e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:5}]},{title:"Django 与 Guardian 的集成",frontmatter:{summary:"Django 与 Guardian 的集成 背景 Django 自带的权限机制中，权限分配的最小粒度是表，也就是说一旦我们给了用户某个表的修改权限，那么用户就可以修改表中所有数据，这在某些情况下是无法满足需求的，例如对于一个 Article 文章表来说，我们规定用户只能修改自己的文章，而不能修改别人的文章，Django 的默认权限机制就无法做到。 当然了，简",meta:[{property:"og:url",content:"/backend-knowledge/django/django-guardian.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Django 与 Guardian 的集成"},{property:"og:description",content:"Django 与 Guardian 的集成 背景 Django 自带的权限机制中，权限分配的最小粒度是表，也就是说一旦我们给了用户某个表的修改权限，那么用户就可以修改表中所有数据，这在某些情况下是无法满足需求的，例如对于一个 Article 文章表来说，我们规定用户只能修改自己的文章，而不能修改别人的文章，Django 的默认权限机制就无法做到。 当然了，简"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/django/django-guardian.html",relativePath:"backend-knowledge/django/django-guardian.md",key:"v-6c3f197d",path:"/backend-knowledge/django/django-guardian/",headers:[{level:2,title:"背景",slug:"背景"},{level:2,title:"安装配置",slug:"安装配置"},{level:2,title:"权限分配",slug:"权限分配"},{level:2,title:"去除权限",slug:"去除权限"},{level:2,title:"根据用户和对象获取权限",slug:"根据用户和对象获取权限"},{level:2,title:"根据对象和权限获取用户",slug:"根据对象和权限获取用户"},{level:2,title:"根据用户和权限获取对象",slug:"根据用户和权限获取对象"},{level:2,title:"装饰器的使用",slug:"装饰器的使用"},{level:2,title:"模板中使用",slug:"模板中使用"}],readingTime:{minutes:10.33,words:3098},updateTime:"2022年10月14日 10:56",updateTimeStamp:1665716179e3,createTime:"2022年10月13日 18:05",createTimeStamp:1665655532e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"Django+JWT 实现 Token 认证",frontmatter:{summary:'Django+JWT 实现 Token 认证 背景\r" 几种主流的登录认证方案原理可以查看这篇文章：前端登录方案总结。" Django 默认采用传统的登录鉴权方式：当前端提交登录表单后，会发送请求给服务器，服务器对发送过来的账号密码进行验证鉴权，验证鉴权通过后，把用户信息记录在服务器端（django_session 表中），同时返回给浏览器一个 sessio',meta:[{property:"og:url",content:"/backend-knowledge/django/django-jwt-auth.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Django+JWT 实现 Token 认证"},{property:"og:description",content:'Django+JWT 实现 Token 认证 背景\r" 几种主流的登录认证方案原理可以查看这篇文章：前端登录方案总结。" Django 默认采用传统的登录鉴权方式：当前端提交登录表单后，会发送请求给服务器，服务器对发送过来的账号密码进行验证鉴权，验证鉴权通过后，把用户信息记录在服务器端（django_session 表中），同时返回给浏览器一个 sessio'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/django/django-jwt-auth.html",relativePath:"backend-knowledge/django/django-jwt-auth.md",key:"v-58746afa",path:"/backend-knowledge/django/django-jwt-auth/",headers:[{level:2,title:"背景",slug:"背景"},{level:2,title:"需求分析",slug:"需求分析"},{level:2,title:"PyJWT介绍",slug:"pyjwt介绍"},{level:3,title:"安装 PyJWT",slug:"安装-pyjwt"},{level:3,title:"利用 PyJWT 生成 Token",slug:"利用-pyjwt-生成-token"},{level:3,title:"查看生成的 Token",slug:"查看生成的-token"},{level:3,title:"解密 Token",slug:"解密-token"},{level:2,title:"Django 案例",slug:"django-案例"}],readingTime:{minutes:6.76,words:2027},updateTime:"2022年10月21日 09:01",updateTimeStamp:1666314063e3,createTime:"2022年10月21日 09:01",createTimeStamp:1666314063e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:".filter() 使用 isnull 参数时返回重复对象",frontmatter:{summary:".filter() 使用 isnull 参数时返回重复对象 问题描述 有两张这样的表： 当我使用下面的语法来查询时： 发现会返回完全相同的对象（重复的 device 实例）。 原因剖析 templates__isnull 导致的问题。 查询时跨越多个表，在计算 QuerySet 时可能会得到重复的结果。比如在上面的查询中，与 Template 表进行了关联（",meta:[{property:"og:url",content:"/backend-knowledge/django/filter-returns-duplicated-objects.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:".filter() 使用 isnull 参数时返回重复对象"},{property:"og:description",content:".filter() 使用 isnull 参数时返回重复对象 问题描述 有两张这样的表： 当我使用下面的语法来查询时： 发现会返回完全相同的对象（重复的 device 实例）。 原因剖析 templates__isnull 导致的问题。 查询时跨越多个表，在计算 QuerySet 时可能会得到重复的结果。比如在上面的查询中，与 Template 表进行了关联（"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/django/filter-returns-duplicated-objects.html",relativePath:"backend-knowledge/django/filter-returns-duplicated-objects.md",key:"v-9b039b76",path:"/backend-knowledge/django/filter-returns-duplicated-objects/",headers:[{level:2,title:"问题描述",slug:"问题描述"},{level:2,title:"原因剖析",slug:"原因剖析"},{level:2,title:"解决方案",slug:"解决方案"}],readingTime:{minutes:.93,words:279},updateTime:"2023年6月7日 14:45",updateTimeStamp:1686120333e3,createTime:"2023年6月7日 14:45",createTimeStamp:1686120333e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"model 的继承",frontmatter:{summary:"model 的继承 Django 中所有的模型都必须直接或间接地继承自 django.db.models.Model。 而在实际开发中，对于 model 的继承我们需要决定，父模型是否是一个在数据库中创建数据表的模型，还是一个只用来保存子模型共有内容、并不实际创建数据表的抽象模型。 基于不同的需求，在 Django 中有三种继承方式：\r抽象基类（Abstra",meta:[{property:"og:url",content:"/backend-knowledge/django/django-model-inheritance.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"model 的继承"},{property:"og:description",content:"model 的继承 Django 中所有的模型都必须直接或间接地继承自 django.db.models.Model。 而在实际开发中，对于 model 的继承我们需要决定，父模型是否是一个在数据库中创建数据表的模型，还是一个只用来保存子模型共有内容、并不实际创建数据表的抽象模型。 基于不同的需求，在 Django 中有三种继承方式：\r抽象基类（Abstra"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/django/django-model-inheritance.html",relativePath:"backend-knowledge/django/django-model-inheritance.md",key:"v-005b6f03",path:"/backend-knowledge/django/django-model-inheritance/",headers:[{level:2,title:"抽象基类",slug:"抽象基类"},{level:3,title:"用法示例",slug:"用法示例"},{level:3,title:"Meta 数据",slug:"meta-数据"},{level:3,title:"relatedname 和 relatedquery_name",slug:"related-name-和-related-query-name"},{level:2,title:"多表继承",slug:"多表继承"},{level:3,title:"用法示例",slug:"用法示例-2"},{level:3,title:"Meta 和多表继承",slug:"meta-和多表继承"},{level:3,title:"多表继承和反向关联",slug:"多表继承和反向关联"},{level:2,title:"代理模型",slug:"代理模型"},{level:3,title:"用法示例",slug:"用法示例-3"},{level:3,title:"一些约束",slug:"一些约束"},{level:3,title:"代理模型的管理器",slug:"代理模型的管理器"},{level:2,title:"多重继承",slug:"多重继承"},{level:2,title:"用包来组织模型",slug:"用包来组织模型"}],readingTime:{minutes:11.07,words:3322},updateTime:"2022年10月6日 14:36",updateTimeStamp:1665038186e3,createTime:"2022年10月6日 14:36",createTimeStamp:1665038186e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"model 元数据 Meta",frontmatter:{summary:"model 元数据 Meta 在一个模型中，除了定义 model 的字段外还能定义一些其他属性，比如排序方式、数据库表名、人类可读的单数或者复数名等等，这些统称元数据。 元数据不是必须的。但有些元数据选项在实际使用中具有重要的作用。 元数据的写法 元数据对于 models 来说是一个内部类 Meta，名字是固定，然后在这个 Meta 类下面增加各种元数据选项",meta:[{property:"og:url",content:"/backend-knowledge/django/django-model-meta.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"model 元数据 Meta"},{property:"og:description",content:"model 元数据 Meta 在一个模型中，除了定义 model 的字段外还能定义一些其他属性，比如排序方式、数据库表名、人类可读的单数或者复数名等等，这些统称元数据。 元数据不是必须的。但有些元数据选项在实际使用中具有重要的作用。 元数据的写法 元数据对于 models 来说是一个内部类 Meta，名字是固定，然后在这个 Meta 类下面增加各种元数据选项"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/django/django-model-meta.html",relativePath:"backend-knowledge/django/django-model-meta.md",key:"v-6f1be10d",path:"/backend-knowledge/django/django-model-meta/",headers:[{level:2,title:"元数据的写法",slug:"元数据的写法"},{level:2,title:"Meta 选项说明",slug:"meta-选项说明"}],readingTime:{minutes:7.73,words:2319},updateTime:"2022年10月5日 11:50",updateTimeStamp:1664941824e3,createTime:"2022年10月5日 11:50",createTimeStamp:1664941824e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"导出/导入数据库表数据",frontmatter:{summary:"导出/导入数据库表数据 使用 Django 自带的管理命令，可以用来备份你的模型实例和数据库表数据。\rmanage.py dumpdata; \rmanage.py loaddata; dumpdata 导出数据 通过 python manage.py dumpdata -h 可以查看相关参数：\r-h 查看帮助文档; \r--format 格式化输出导出的数据，",meta:[{property:"og:url",content:"/backend-knowledge/django/dumpdata-and-loaddata.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"导出/导入数据库表数据"},{property:"og:description",content:"导出/导入数据库表数据 使用 Django 自带的管理命令，可以用来备份你的模型实例和数据库表数据。\rmanage.py dumpdata; \rmanage.py loaddata; dumpdata 导出数据 通过 python manage.py dumpdata -h 可以查看相关参数：\r-h 查看帮助文档; \r--format 格式化输出导出的数据，"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/django/dumpdata-and-loaddata.html",relativePath:"backend-knowledge/django/dumpdata-and-loaddata.md",key:"v-3d637bce",path:"/backend-knowledge/django/dumpdata-and-loaddata/",headers:[{level:2,title:"dumpdata 导出数据",slug:"dumpdata-导出数据"},{level:2,title:"loaddata 导入数据",slug:"loaddata-导入数据"}],readingTime:{minutes:1.4,words:421},updateTime:"2022年11月16日 15:11",updateTimeStamp:1668582707e3,createTime:"2022年11月16日 15:11",createTimeStamp:1668582707e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"Model 字段与属性",frontmatter:{summary:"Model 字段与属性 前言 模型（Model）代表对数据库的操作，通常一个 Model 会映射为一张数据库中的表，包含了数据的字段和操作方法。 以往要对数据库进行增删改查，需要借助一些第三方模块（比如连接 MySQL 的 pymysql 和 mysqlclient），但这需要我们自己手写 SQL 语句，对于大部分开发者来说既不方便也不安全。于是诞生了一个叫",meta:[{property:"og:url",content:"/backend-knowledge/django/django-model.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Model 字段与属性"},{property:"og:description",content:"Model 字段与属性 前言 模型（Model）代表对数据库的操作，通常一个 Model 会映射为一张数据库中的表，包含了数据的字段和操作方法。 以往要对数据库进行增删改查，需要借助一些第三方模块（比如连接 MySQL 的 pymysql 和 mysqlclient），但这需要我们自己手写 SQL 语句，对于大部分开发者来说既不方便也不安全。于是诞生了一个叫"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/django/django-model.html",relativePath:"backend-knowledge/django/django-model.md",key:"v-f0f7f0ba",path:"/backend-knowledge/django/django-model/",headers:[{level:2,title:"前言",slug:"前言"},{level:2,title:"Model 的定义",slug:"model-的定义"},{level:2,title:"Model 的字段",slug:"model-的字段"},{level:3,title:"字段命名约束",slug:"字段命名约束"},{level:3,title:"常用字段类型",slug:"常用字段类型"},{level:3,title:"重点字段使用详解",slug:"重点字段使用详解"},{level:2,title:"字段的参数",slug:"字段的参数"}],readingTime:{minutes:16.91,words:5072},updateTime:"2023年3月22日 13:18",updateTimeStamp:1679462339e3,createTime:"2022年9月30日 17:54",createTimeStamp:1664531641e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:6}]},{title:"model 外键关系",frontmatter:{summary:"model 外键关系 多表关联是常见的需求之一，Django 提供了一组关系类型字段，用来表示模型与模型之间的关系：ForeignKey，ManyToMany，OneToOneField。 外键/多对一（ForeignKey） 用法示例 多对一的关系，通常被称为外键，需要定义在「多」的一方。 外键需要两个位置参数，一个是关联的模型，另一个是 ondelete",meta:[{property:"og:url",content:"/backend-knowledge/django/django-model-relationship.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"model 外键关系"},{property:"og:description",content:"model 外键关系 多表关联是常见的需求之一，Django 提供了一组关系类型字段，用来表示模型与模型之间的关系：ForeignKey，ManyToMany，OneToOneField。 外键/多对一（ForeignKey） 用法示例 多对一的关系，通常被称为外键，需要定义在「多」的一方。 外键需要两个位置参数，一个是关联的模型，另一个是 ondelete"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/django/django-model-relationship.html",relativePath:"backend-knowledge/django/django-model-relationship.md",key:"v-3e546fa7",path:"/backend-knowledge/django/django-model-relationship/",headers:[{level:2,title:"外键/多对一（ForeignKey）",slug:"外键-多对一-foreignkey"},{level:3,title:"用法示例",slug:"用法示例"},{level:3,title:"参数说明",slug:"参数说明"},{level:2,title:"多对多（ManyToManyField）",slug:"多对多-manytomanyfield"},{level:3,title:"用法示例",slug:"用法示例-2"},{level:3,title:"参数说明",slug:"参数说明-2"},{level:2,title:"一对一（OneToOneField）",slug:"一对一-onetoonefield"},{level:3,title:"用法示例",slug:"用法示例-3"},{level:3,title:"参数说明",slug:"参数说明-3"}],readingTime:{minutes:7.8,words:2341},updateTime:"2022年10月4日 12:43",updateTimeStamp:1664858603e3,createTime:"2022年10月4日 12:43",createTimeStamp:1664858603e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"Django 设置 Redis 作为缓存",frontmatter:{summary:"Django 设置 Redis 作为缓存 背景 如果是工具类小项目，一般用不到缓存。因为在项目设计的过程中应当尽量减少依赖，不过度设计，以实现需求为目标，尽量让项目简单，这样协作的小伙伴看起代码来不费劲，出了问题还容易查找原因。所以正常情况下一个数据库（MySQL）就足够了。 但很多时候随着使用频率的增加，出于性能优化的考虑，数据库已无法满足需求，增加缓存就",meta:[{property:"og:url",content:"/backend-knowledge/django/django-redis-cache.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Django 设置 Redis 作为缓存"},{property:"og:description",content:"Django 设置 Redis 作为缓存 背景 如果是工具类小项目，一般用不到缓存。因为在项目设计的过程中应当尽量减少依赖，不过度设计，以实现需求为目标，尽量让项目简单，这样协作的小伙伴看起代码来不费劲，出了问题还容易查找原因。所以正常情况下一个数据库（MySQL）就足够了。 但很多时候随着使用频率的增加，出于性能优化的考虑，数据库已无法满足需求，增加缓存就"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/django/django-redis-cache.html",relativePath:"backend-knowledge/django/django-redis-cache.md",key:"v-11e26243",path:"/backend-knowledge/django/django-redis-cache/",headers:[{level:2,title:"背景",slug:"背景"},{level:2,title:"安装配置",slug:"安装配置"},{level:2,title:"全站/视图/模板缓存",slug:"全站-视图-模板缓存"},{level:2,title:"缓存 API",slug:"缓存-api"}],readingTime:{minutes:3.6,words:1080},updateTime:"2022年10月18日 18:18",updateTimeStamp:1666088283e3,createTime:"2022年10月18日 18:18",createTimeStamp:1666088283e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"命令行操作",frontmatter:{summary:'命令行操作 " 有的环境不能打开 Kibana，就需要在服务器上通过命令行，使用 curl 来进行操作。" curl 参数： -X：指定 HTTP 的请求方式，有 HEAD、GET、POST、PUT、DELETE。; -d：指定要传输的数据。; -H：指定 HTTP 的请求头信息。; " Linux 系统下换行命令是：\\。过长的单行命令需要进行换行，使用 \\',meta:[{property:"og:url",content:"/backend-knowledge/elasticsearch/command-with-curl.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"命令行操作"},{property:"og:description",content:'命令行操作 " 有的环境不能打开 Kibana，就需要在服务器上通过命令行，使用 curl 来进行操作。" curl 参数： -X：指定 HTTP 的请求方式，有 HEAD、GET、POST、PUT、DELETE。; -d：指定要传输的数据。; -H：指定 HTTP 的请求头信息。; " Linux 系统下换行命令是：\\。过长的单行命令需要进行换行，使用 \\'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/elasticsearch/command-with-curl.html",relativePath:"backend-knowledge/elasticsearch/command-with-curl.md",key:"v-f02a652e",path:"/backend-knowledge/elasticsearch/command-with-curl/",headers:[{level:2,title:"curl",slug:"curl"},{level:2,title:"集群操作",slug:"集群操作"},{level:2,title:"索引操作",slug:"索引操作"},{level:2,title:"文档操作",slug:"文档操作"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:1.43,words:429},updateTime:"2023年5月11日 09:15",updateTimeStamp:1683767715e3,createTime:"2023年5月11日 09:15",createTimeStamp:1683767715e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"Signal 监测 model 变化",frontmatter:{summary:"Signal 监测 model 变化 signal 是 Django 自带的一个信号调度程序。它和 Git 的 hooks 有点类似，通俗来说就是当你的程序产生一个事件时，会通过 signal 自动触发其他的事件。比如在论坛中，帖子得到回复时，通知楼主；在工单系统中，当工单状态产生变化时自动发送邮件给相关人。 事实上，通知就是 signal 最常用的场景之一",meta:[{property:"og:url",content:"/backend-knowledge/django/django-signal.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Signal 监测 model 变化"},{property:"og:description",content:"Signal 监测 model 变化 signal 是 Django 自带的一个信号调度程序。它和 Git 的 hooks 有点类似，通俗来说就是当你的程序产生一个事件时，会通过 signal 自动触发其他的事件。比如在论坛中，帖子得到回复时，通知楼主；在工单系统中，当工单状态产生变化时自动发送邮件给相关人。 事实上，通知就是 signal 最常用的场景之一"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/django/django-signal.html",relativePath:"backend-knowledge/django/django-signal.md",key:"v-73cd580f",path:"/backend-knowledge/django/django-signal/",headers:[{level:2,title:"内置信号",slug:"内置信号"},{level:3,title:"model signals",slug:"model-signals"},{level:3,title:"management signals",slug:"management-signals"},{level:3,title:"request/response signals",slug:"request-response-signals"},{level:3,title:"test signals",slug:"test-signals"},{level:3,title:"Database Wrappers",slug:"database-wrappers"},{level:2,title:"使用实例",slug:"使用实例"},{level:3,title:"model 定义",slug:"model-定义"},{level:3,title:"编写通知类",slug:"编写通知类"},{level:3,title:"signal 定义",slug:"signal-定义"},{level:3,title:"加载 signal",slug:"加载-signal"}],readingTime:{minutes:4.29,words:1288},updateTime:"2022年10月10日 15:38",updateTimeStamp:1665387491e3,createTime:"2022年10月10日 11:07",createTimeStamp:1665371263e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"执行 migrate 时报错 SQLite 版本过低",frontmatter:{summary:"执行 migrate 时报错 SQLite 版本过低 问题描述 这个问题目前只会出现在较高版本的 Django 中，且数据库使用默认的 SQLite 的情况，在运行时会报出类似下面的错误提示：\rdjango.core.exceptions.ImproperlyConfigured: SQLite 3.9.0 or later is required (fou",meta:[{property:"og:url",content:"/backend-knowledge/django/migrate-error-caused-by-sqlite3.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"执行 migrate 时报错 SQLite 版本过低"},{property:"og:description",content:"执行 migrate 时报错 SQLite 版本过低 问题描述 这个问题目前只会出现在较高版本的 Django 中，且数据库使用默认的 SQLite 的情况，在运行时会报出类似下面的错误提示：\rdjango.core.exceptions.ImproperlyConfigured: SQLite 3.9.0 or later is required (fou"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/django/migrate-error-caused-by-sqlite3.html",relativePath:"backend-knowledge/django/migrate-error-caused-by-sqlite3.md",key:"v-559892cb",path:"/backend-knowledge/django/migrate-error-caused-by-sqlite3/",headers:[{level:2,title:"问题描述",slug:"问题描述"},{level:2,title:"查看 SQLite 版本",slug:"查看-sqlite-版本"},{level:2,title:"解决方案",slug:"解决方案"},{level:3,title:"升级系统里的 SQLite 版本",slug:"升级系统里的-sqlite-版本"},{level:3,title:"第一种：修改源码里检测的版本",slug:"第一种-修改源码里检测的版本"},{level:3,title:"第二种：使用第三方包运行 SQLite",slug:"第二种-使用第三方包运行-sqlite"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:3.22,words:966},updateTime:"2022年9月29日 13:10",updateTimeStamp:1664428235e3,createTime:"2022年9月29日 13:10",createTimeStamp:1664428235e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"Elasticsearch",frontmatter:{summary:'Elasticsearch " 本系列以 Elasticsearch 7.x 作为安装版本进行知识点梳理，最早接触的是 5.x 版本，其跟 2.x 前后相差还是挺大的。但 5.x 往后的便很少有 breaking changes 了。" Elasticsearch 简介： Elasticsearch 是一个分布式、RESTful 风格的搜索和数据分析引擎。除',meta:[{property:"og:url",content:"/backend-knowledge/elasticsearch/"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Elasticsearch"},{property:"og:description",content:'Elasticsearch " 本系列以 Elasticsearch 7.x 作为安装版本进行知识点梳理，最早接触的是 5.x 版本，其跟 2.x 前后相差还是挺大的。但 5.x 往后的便很少有 breaking changes 了。" Elasticsearch 简介： Elasticsearch 是一个分布式、RESTful 风格的搜索和数据分析引擎。除'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/elasticsearch/",relativePath:"backend-knowledge/elasticsearch/README.md",key:"v-28404c8a",path:"/backend-knowledge/elasticsearch/",readingTime:{minutes:3.3,words:989},updateTime:"2022年9月26日 17:43",updateTimeStamp:1664185395e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"model 查询/检索操作",frontmatter:{summary:"model 查询/检索操作 查询结果集 QuerySet 是什么 想要从数据库内检索对象，需要基于模型类，通过管理器（Manager）操作数据库并返回一个查询结果集（QuerySet）。 每个 QuerySet 代表一些数据库对象的集合。它可以包含零个、一个或多个过滤器（filters）。Filters 能够缩小查询结果的范围。在 SQL 语法中，一个 Qu",meta:[{property:"og:url",content:"/backend-knowledge/django/django-model-retrieve.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"model 查询/检索操作"},{property:"og:description",content:"model 查询/检索操作 查询结果集 QuerySet 是什么 想要从数据库内检索对象，需要基于模型类，通过管理器（Manager）操作数据库并返回一个查询结果集（QuerySet）。 每个 QuerySet 代表一些数据库对象的集合。它可以包含零个、一个或多个过滤器（filters）。Filters 能够缩小查询结果的范围。在 SQL 语法中，一个 Qu"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/django/django-model-retrieve.html",relativePath:"backend-knowledge/django/django-model-retrieve.md",key:"v-bc70d2c2",path:"/backend-knowledge/django/django-model-retrieve/",headers:[{level:2,title:"查询结果集",slug:"查询结果集"},{level:3,title:"QuerySet 是什么",slug:"queryset-是什么"},{level:3,title:"QuerySet 惰性特点",slug:"queryset-惰性特点"},{level:3,title:"QuerySet 何时被提交",slug:"queryset-何时被提交"},{level:2,title:"基本操作",slug:"基本操作"},{level:2,title:"常用操作",slug:"常用操作"},{level:3,title:"操作语法",slug:"操作语法"},{level:3,title:"字段查询参数",slug:"字段查询参数"},{level:2,title:"进阶操作",slug:"进阶操作"},{level:2,title:"时间字段",slug:"时间字段"},{level:2,title:"Q 对象",slug:"q-对象"},{level:2,title:"F 表达式",slug:"f-表达式"},{level:2,title:"外键：ForeignKey",slug:"外键-foreignkey"},{level:2,title:"M2M：ManyToManyField",slug:"m2m-manytomanyfield"},{level:2,title:"get_object_or_404",slug:"get-object-or-404"},{level:2,title:"get_or_create",slug:"get-or-create"},{level:2,title:"执行原生 SQL",slug:"执行原生-sql"},{level:2,title:"pk",slug:"pk"},{level:2,title:"转义百分符号和下划线",slug:"转义百分符号和下划线"},{level:2,title:"缓存与查询集",slug:"缓存与查询集"}],readingTime:{minutes:43.68,words:13105},updateTime:"2022年10月7日 16:20",updateTimeStamp:1665130832e3,createTime:"2022年10月7日 16:20",createTimeStamp:1665130832e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"Django 用户模型扩展/重写",frontmatter:{summary:"Django 用户模型扩展/重写 内置 User 模型 Django 自带的 User 模型是这个框架的核心部分，它的完整的路径是在 django.contrib.auth.models.User。 内置的 User 模型拥有以下的字段： username：用户名。150 个字符以内。可以包含数字和英文字符，以及 _、@、+、. 和 - 字符。不能为空，且必",meta:[{property:"og:url",content:"/backend-knowledge/django/django-user-model-extension.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Django 用户模型扩展/重写"},{property:"og:description",content:"Django 用户模型扩展/重写 内置 User 模型 Django 自带的 User 模型是这个框架的核心部分，它的完整的路径是在 django.contrib.auth.models.User。 内置的 User 模型拥有以下的字段： username：用户名。150 个字符以内。可以包含数字和英文字符，以及 _、@、+、. 和 - 字符。不能为空，且必"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/django/django-user-model-extension.html",relativePath:"backend-knowledge/django/django-user-model-extension.md",key:"v-1b1a11ed",path:"/backend-knowledge/django/django-user-model-extension/",headers:[{level:2,title:"内置 User 模型",slug:"内置-user-模型"},{level:2,title:"第一种：设置 Proxy 模型",slug:"第一种-设置-proxy-模型"},{level:2,title:"第二种：一对一外键",slug:"第二种-一对一外键"},{level:2,title:"第三种：继承 AbstractUser",slug:"第三种-继承-abstractuser"},{level:3,title:"创建模型",slug:"创建模型"},{level:3,title:"重新定义 UserManager",slug:"重新定义-usermanager"},{level:3,title:"配置 settings 文件",slug:"配置-settings-文件"},{level:3,title:"在 admin 中注册模型",slug:"在-admin-中注册模型"},{level:3,title:"使用自定义的模型",slug:"使用自定义的模型"},{level:2,title:"第四种：继承 AbstractBaseUser",slug:"第四种-继承-abstractbaseuser"},{level:3,title:"创建模型",slug:"创建模型-2"},{level:3,title:"重新定义 UserManager",slug:"重新定义-usermanager-2"},{level:3,title:"配置 settings 文件",slug:"配置-settings-文件-2"},{level:3,title:"在 admin 中注册模型",slug:"在-admin-中注册模型-2"},{level:3,title:"使用自定义的模型",slug:"使用自定义的模型-2"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:10.47,words:3140},updateTime:"2022年10月14日 15:31",updateTimeStamp:1665732685e3,createTime:"2022年10月14日 15:31",createTimeStamp:1665732685e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"统计语法：聚合查询",frontmatter:{summary:"统计语法：聚合查询 前言 聚合就是按照某些条件从数据集合中统计一些信息，例如统计销量前十的书本、统计每个出版社书本的数量、统计有多少个出版社等。 可以使用 ES 提供的聚合计算 API，来满足对数据进行统计分析的需求。 ES 中聚合的类型主要有以下 3 种： Metric Aggregations：提供求 sum（求总和）、average（求平均数） 等数学",meta:[{property:"og:url",content:"/backend-knowledge/elasticsearch/aggregations.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"统计语法：聚合查询"},{property:"og:description",content:"统计语法：聚合查询 前言 聚合就是按照某些条件从数据集合中统计一些信息，例如统计销量前十的书本、统计每个出版社书本的数量、统计有多少个出版社等。 可以使用 ES 提供的聚合计算 API，来满足对数据进行统计分析的需求。 ES 中聚合的类型主要有以下 3 种： Metric Aggregations：提供求 sum（求总和）、average（求平均数） 等数学"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/elasticsearch/aggregations.html",relativePath:"backend-knowledge/elasticsearch/aggregations.md",key:"v-404e32ca",path:"/backend-knowledge/elasticsearch/aggregations/",headers:[{level:2,title:"前言",slug:"前言"},{level:2,title:"Metric Aggregations",slug:"metric-aggregations"},{level:3,title:"查看最高售价",slug:"查看最高售价"},{level:3,title:"同时查看最高售价、最低售价、平均售价",slug:"同时查看最高售价、最低售价、平均售价"},{level:3,title:"统计出版社的数量",slug:"统计出版社的数量"},{level:2,title:"Bucket Aggregations",slug:"bucket-aggregations"},{level:3,title:"统计每个出版社的书本数量",slug:"统计每个出版社的书本数量"},{level:3,title:"统计每个价格区间的书本数量",slug:"统计每个价格区间的书本数量"},{level:3,title:"统计每个出版社书本的销售量",slug:"统计每个出版社书本的销售量"},{level:2,title:"Pipeline Aggregations",slug:"pipeline-aggregations"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:8.09,words:2427},updateTime:"2022年9月26日 17:43",updateTimeStamp:1664185395e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"集群管理 API",frontmatter:{summary:"集群管理 API 前言 Cerebro 为我们提供了简单的集群管理功能，这些监控、管理的功能本质上也都是通过 ES 提供的 API 来实现的。 cat APIs _cat APIs 提供查看集群相关信息的同时，其特别之处在于它返回的结果不是 JSON，而是非常适合人类阅读的格式。 当使用 _cat 时其后面不跟任何子节点，返回结果是各个 API 的目录（UR",meta:[{property:"og:url",content:"/backend-knowledge/elasticsearch/cluster-manage-apis.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"集群管理 API"},{property:"og:description",content:"集群管理 API 前言 Cerebro 为我们提供了简单的集群管理功能，这些监控、管理的功能本质上也都是通过 ES 提供的 API 来实现的。 cat APIs _cat APIs 提供查看集群相关信息的同时，其特别之处在于它返回的结果不是 JSON，而是非常适合人类阅读的格式。 当使用 _cat 时其后面不跟任何子节点，返回结果是各个 API 的目录（UR"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/elasticsearch/cluster-manage-apis.html",relativePath:"backend-knowledge/elasticsearch/cluster-manage-apis.md",key:"v-4dce6749",path:"/backend-knowledge/elasticsearch/cluster-manage-apis/",headers:[{level:2,title:"前言",slug:"前言"},{level:2,title:"cat APIs",slug:"cat-apis"},{level:3,title:"查看索引文档总数和整个集群文档总数",slug:"查看索引文档总数和整个集群文档总数"},{level:3,title:"查看集群健康状态",slug:"查看集群健康状态"},{level:3,title:"查看磁盘使用情况",slug:"查看磁盘使用情况"},{level:2,title:"集群管理 API",slug:"集群管理-api-2"},{level:3,title:"集群节点过滤",slug:"集群节点过滤"},{level:3,title:"查看集群信息",slug:"查看集群信息"},{level:3,title:"查看节点信息",slug:"查看节点信息"},{level:3,title:"更新集群设置",slug:"更新集群设置"},{level:3,title:"重置路由",slug:"重置路由"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:4.5,words:1350},updateTime:"2022年9月26日 17:43",updateTimeStamp:1664185395e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"ES 中的概念与名词",frontmatter:{summary:"ES 中的概念与名词 下面将自上而下介绍几个 ES 中常用的概念与名词。 集群层面的基本概念 集群（Cluster） 一台服务器安装一个 ES 称为单机 ES，因为它是支持分布式的，多个协同工作的 ES 实例就组合成了集群。分布式的 ES 集群可以存储海量的数据，也可以从容地面对更高的并发量。 得益于分布式系统的架构设计，使得 ES 集群拥有高可用性和可扩展",meta:[{property:"og:url",content:"/backend-knowledge/elasticsearch/concepts-and-noun.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"ES 中的概念与名词"},{property:"og:description",content:"ES 中的概念与名词 下面将自上而下介绍几个 ES 中常用的概念与名词。 集群层面的基本概念 集群（Cluster） 一台服务器安装一个 ES 称为单机 ES，因为它是支持分布式的，多个协同工作的 ES 实例就组合成了集群。分布式的 ES 集群可以存储海量的数据，也可以从容地面对更高的并发量。 得益于分布式系统的架构设计，使得 ES 集群拥有高可用性和可扩展"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/elasticsearch/concepts-and-noun.html",relativePath:"backend-knowledge/elasticsearch/concepts-and-noun.md",key:"v-312772c9",path:"/backend-knowledge/elasticsearch/concepts-and-noun/",headers:[{level:2,title:"集群层面的基本概念",slug:"集群层面的基本概念"},{level:3,title:"集群（Cluster）",slug:"集群-cluster"},{level:3,title:"节点（Node）",slug:"节点-node"},{level:3,title:"分片（Shard）",slug:"分片-shard"},{level:3,title:"副本（Replica）",slug:"副本-replica"},{level:3,title:"集群健康状态",slug:"集群健康状态"},{level:2,title:"数据层面的基本概念",slug:"数据层面的基本概念"},{level:3,title:"索引（Index）",slug:"索引-index"},{level:3,title:"Mapping",slug:"mapping"},{level:3,title:"文档（Doc）",slug:"文档-doc"},{level:3,title:"字段（Field）",slug:"字段-field"},{level:3,title:"词项（Term）",slug:"词项-term"},{level:3,title:"倒排索引与正排索引",slug:"倒排索引与正排索引"},{level:2,title:"系统层面上的基本概念",slug:"系统层面上的基本概念"},{level:3,title:"近实时系统",slug:"近实时系统"},{level:3,title:"Lucene 与 ES 的关系",slug:"lucene-与-es-的关系"}],readingTime:{minutes:11.04,words:3313},updateTime:"2022年11月24日 09:23",updateTimeStamp:1669253032e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"分词器的原理和使用",frontmatter:{summary:"分词器的原理和使用 前言 我们存储到 ES 中的数据大致可以分为以下两种： 全文本，例如文章内容、通知内容等。; 精确值，如实体 ID 等。; 在对这两类值进行查询的时候，精确值类型会比较它们的二进制值，其结果只有相等或者不相等。而对全文本类型进行等值比较是不太现实的，一是用相关性评分来评估两个文本是否相似。而要得到相关性评分，我们就需要对全文本进行分词处理",meta:[{property:"og:url",content:"/backend-knowledge/elasticsearch/analyzer.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"分词器的原理和使用"},{property:"og:description",content:"分词器的原理和使用 前言 我们存储到 ES 中的数据大致可以分为以下两种： 全文本，例如文章内容、通知内容等。; 精确值，如实体 ID 等。; 在对这两类值进行查询的时候，精确值类型会比较它们的二进制值，其结果只有相等或者不相等。而对全文本类型进行等值比较是不太现实的，一是用相关性评分来评估两个文本是否相似。而要得到相关性评分，我们就需要对全文本进行分词处理"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/elasticsearch/analyzer.html",relativePath:"backend-knowledge/elasticsearch/analyzer.md",key:"v-81fbd59e",path:"/backend-knowledge/elasticsearch/analyzer/",headers:[{level:2,title:"前言",slug:"前言"},{level:2,title:"分词与分词器",slug:"分词与分词器"},{level:2,title:"分词器的组成",slug:"分词器的组成"},{level:2,title:"ES 内置的分词器",slug:"es-内置的分词器"},{level:3,title:"_analyze API",slug:"analyze-api"},{level:3,title:"分词器工作流程",slug:"分词器工作流程"},{level:2,title:"自定义分词器",slug:"自定义分词器"},{level:2,title:"中文分词器",slug:"中文分词器"},{level:3,title:"analysis-icu 分词器",slug:"analysis-icu-分词器"},{level:3,title:"IK 分词器",slug:"ik-分词器"}],readingTime:{minutes:16.89,words:5067},updateTime:"2022年9月26日 17:43",updateTimeStamp:1664185395e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"组合查询语法",frontmatter:{summary:"组合查询语法 前言 复杂的搜索需求往往需要组合各种搜索 API 来进行操作。 带有组合功能的 API 有以下几个： Bool Query：布尔查询，可以组合多个过滤语句来过滤文档。; Boosting Query：在 positive 块中指定匹配文档的语句，同时降低在 negative 块中也匹配的文档的得分，提供调整相关性算分的能力。; Constant",meta:[{property:"og:url",content:"/backend-knowledge/elasticsearch/compound-query.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"组合查询语法"},{property:"og:description",content:"组合查询语法 前言 复杂的搜索需求往往需要组合各种搜索 API 来进行操作。 带有组合功能的 API 有以下几个： Bool Query：布尔查询，可以组合多个过滤语句来过滤文档。; Boosting Query：在 positive 块中指定匹配文档的语句，同时降低在 negative 块中也匹配的文档的得分，提供调整相关性算分的能力。; Constant"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/elasticsearch/compound-query.html",relativePath:"backend-knowledge/elasticsearch/compound-query.md",key:"v-7a2d1431",path:"/backend-knowledge/elasticsearch/compound-query/",headers:[{level:2,title:"前言",slug:"前言"},{level:2,title:"Bool Query",slug:"bool-query"},{level:2,title:"Boosting Query",slug:"boosting-query"},{level:2,title:"Constant Score Query",slug:"constant-score-query"},{level:2,title:"Dis Max Query",slug:"dis-max-query"},{level:2,title:"Function Score Query",slug:"function-score-query"},{level:3,title:"fieldvaluefactor",slug:"field-value-factor"},{level:3,title:"random_score",slug:"random-score"},{level:3,title:"其他算分函数",slug:"其他算分函数"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:6.81,words:2044},updateTime:"2022年9月26日 17:43",updateTimeStamp:1664185395e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"文档基本操作",frontmatter:{summary:'文档基本操作 " 在 Kibana 的 Dev Tools 中，以在线书店业务为例，展示 DSL 语法。" 索引管理 文档是存在于索引里面的，所以要先创建一个索引并定义其 Mapping（就像使用 MySQL 数据库插入数据前，肯定要先创建表）。 现在定义如下 Mapping，并且创建索引（主要字段：书本的 ID、名字、作者、简介）： 上述操作创建了 boo',meta:[{property:"og:url",content:"/backend-knowledge/elasticsearch/document-crud.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"文档基本操作"},{property:"og:description",content:'文档基本操作 " 在 Kibana 的 Dev Tools 中，以在线书店业务为例，展示 DSL 语法。" 索引管理 文档是存在于索引里面的，所以要先创建一个索引并定义其 Mapping（就像使用 MySQL 数据库插入数据前，肯定要先创建表）。 现在定义如下 Mapping，并且创建索引（主要字段：书本的 ID、名字、作者、简介）： 上述操作创建了 boo'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/elasticsearch/document-crud.html",relativePath:"backend-knowledge/elasticsearch/document-crud.md",key:"v-3f2e3dee",path:"/backend-knowledge/elasticsearch/document-crud/",headers:[{level:2,title:"索引管理",slug:"索引管理"},{level:2,title:"新建文档",slug:"新建文档"},{level:3,title:"使用 Index API 索引文档",slug:"使用-index-api-索引文档"},{level:3,title:"使用 Create API 创建文档",slug:"使用-create-api-创建文档"},{level:3,title:"总结三种创建文档方式",slug:"总结三种创建文档方式"},{level:2,title:"获取文档",slug:"获取文档"},{level:3,title:"使用 GET API 获取单个文档",slug:"使用-get-api-获取单个文档"},{level:3,title:"使用 MGET API 获取多个文档",slug:"使用-mget-api-获取多个文档"},{level:2,title:"更新文档",slug:"更新文档"},{level:2,title:"删除文档",slug:"删除文档"},{level:2,title:"批量操作文档",slug:"批量操作文档"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:9.04,words:2712},updateTime:"2022年9月26日 17:43",updateTimeStamp:1664185395e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"正排索引与倒排索引",frontmatter:{summary:"正排索引与倒排索引 索引 索引从本质来讲就是一种为了加快检索数据的存储结构，就像书的目录一样，可以很快地帮助我们查找到某个章节所在的位置。而 ES 正是通过正排索引和倒排索引来提供高效的数据获取和检索能力的。 比如在背诵古诗词的比赛中，有两个比赛项目： 一个是给定诗词的名称，请你背诵诗词的内容; 一个是给定多个词语，请你说出同时带有这些词语的古诗词的名称，并",meta:[{property:"og:url",content:"/backend-knowledge/elasticsearch/forward-and-inverted-index.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"正排索引与倒排索引"},{property:"og:description",content:"正排索引与倒排索引 索引 索引从本质来讲就是一种为了加快检索数据的存储结构，就像书的目录一样，可以很快地帮助我们查找到某个章节所在的位置。而 ES 正是通过正排索引和倒排索引来提供高效的数据获取和检索能力的。 比如在背诵古诗词的比赛中，有两个比赛项目： 一个是给定诗词的名称，请你背诵诗词的内容; 一个是给定多个词语，请你说出同时带有这些词语的古诗词的名称，并"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/elasticsearch/forward-and-inverted-index.html",relativePath:"backend-knowledge/elasticsearch/forward-and-inverted-index.md",key:"v-1804cde6",path:"/backend-knowledge/elasticsearch/forward-and-inverted-index/",headers:[{level:2,title:"索引",slug:"索引"},{level:2,title:"正排索引",slug:"正排索引"},{level:3,title:"哈希表",slug:"哈希表"},{level:3,title:"有序数组",slug:"有序数组"},{level:3,title:"B+ 树",slug:"b-树"},{level:2,title:"倒排索引",slug:"倒排索引"}],readingTime:{minutes:52.63,words:15790},updateTime:"2022年9月26日 17:43",updateTimeStamp:1664185395e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"ES 的安装",frontmatter:{summary:"ES 的安装 Ubuntu 下安装 ES 下载、解压 ES 安装包 可以在官方下载页面进行下载，然后上传到服务器。 也可以在 Ubuntu 上使用 wget 指令进行下载，然后解压： 解压后可以看到 ES 的文件目录结构如下： 修改 ES 服务配置 虽然 ES 可以开箱即用，但这里我们还是需要修改部分配置的。ES 的配置文件在 config 目录内，我们主要",meta:[{property:"og:url",content:"/backend-knowledge/elasticsearch/installation-of-elasticsearch.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"ES 的安装"},{property:"og:description",content:"ES 的安装 Ubuntu 下安装 ES 下载、解压 ES 安装包 可以在官方下载页面进行下载，然后上传到服务器。 也可以在 Ubuntu 上使用 wget 指令进行下载，然后解压： 解压后可以看到 ES 的文件目录结构如下： 修改 ES 服务配置 虽然 ES 可以开箱即用，但这里我们还是需要修改部分配置的。ES 的配置文件在 config 目录内，我们主要"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/elasticsearch/installation-of-elasticsearch.html",relativePath:"backend-knowledge/elasticsearch/installation-of-elasticsearch.md",key:"v-e813e86e",path:"/backend-knowledge/elasticsearch/installation-of-elasticsearch/",headers:[{level:2,title:"Ubuntu 下安装 ES",slug:"ubuntu-下安装-es"},{level:3,title:"下载、解压 ES 安装包",slug:"下载、解压-es-安装包"},{level:3,title:"修改 ES 服务配置",slug:"修改-es-服务配置"},{level:3,title:"修改 JVM 参数",slug:"修改-jvm-参数"},{level:3,title:"配置系统环境",slug:"配置系统环境"},{level:3,title:"创建用户并赋予权限",slug:"创建用户并赋予权限"},{level:3,title:"前台运行 ES",slug:"前台运行-es"},{level:2,title:"Ubuntu 下安装 Kibana",slug:"ubuntu-下安装-kibana"},{level:3,title:"下载、解压",slug:"下载、解压"},{level:3,title:"修改服务配置",slug:"修改服务配置"},{level:3,title:"前台运行 Kibana",slug:"前台运行-kibana"},{level:2,title:"安装 Cerebro",slug:"安装-cerebro"}],readingTime:{minutes:6.4,words:1919},updateTime:"2022年9月26日 17:43",updateTimeStamp:1664185395e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"索引管理 API",frontmatter:{summary:'索引管理 API 前言 索引管理的 API 提供了单个索引的管理（创建和删除）、别名管理、索引设置、定义 Mapping、Reindex、索引模板、索引收缩等功能。 单个索引的管理 创建索引 创建索引的限制有以下几个： 只能是小写字母。; 不能包含 \\，/，*，?，"，，|，(空格)，,，#` 等字符。; 7.0 之后的版本不能再包含 :（冒号）字符了。; ',meta:[{property:"og:url",content:"/backend-knowledge/elasticsearch/index-manage-apis.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"索引管理 API"},{property:"og:description",content:'索引管理 API 前言 索引管理的 API 提供了单个索引的管理（创建和删除）、别名管理、索引设置、定义 Mapping、Reindex、索引模板、索引收缩等功能。 单个索引的管理 创建索引 创建索引的限制有以下几个： 只能是小写字母。; 不能包含 \\，/，*，?，"，，|，(空格)，,，#` 等字符。; 7.0 之后的版本不能再包含 :（冒号）字符了。; '},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/elasticsearch/index-manage-apis.html",relativePath:"backend-knowledge/elasticsearch/index-manage-apis.md",key:"v-22651a49",path:"/backend-knowledge/elasticsearch/index-manage-apis/",headers:[{level:2,title:"前言",slug:"前言"},{level:2,title:"单个索引的管理",slug:"单个索引的管理"},{level:3,title:"创建索引",slug:"创建索引"},{level:3,title:"删除索引",slug:"删除索引"},{level:2,title:"索引别名管理",slug:"索引别名管理"},{level:3,title:"别名创建",slug:"别名创建"},{level:3,title:"别名删除",slug:"别名删除"},{level:3,title:"别名重命名",slug:"别名重命名"},{level:3,title:"关联多个索引",slug:"关联多个索引"},{level:2,title:"索引设置",slug:"索引设置"},{level:2,title:"定义索引的 Mapping",slug:"定义索引的-mapping"},{level:2,title:"Reindex API",slug:"reindex-api"},{level:2,title:"索引模板",slug:"索引模板"},{level:2,title:"打开和关闭索引",slug:"打开和关闭索引"},{level:2,title:"判断索引是否存在",slug:"判断索引是否存在"},{level:2,title:"收缩索引",slug:"收缩索引"},{level:3,title:"第一步：创建原索引",slug:"第一步-创建原索引"},{level:3,title:"第二步：收缩前准备",slug:"第二步-收缩前准备"},{level:3,title:"第三步：开始进行收缩",slug:"第三步-开始进行收缩"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:7.02,words:2106},updateTime:"2022年9月26日 17:43",updateTimeStamp:1664185395e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"定义字段类型：Mapping",frontmatter:{summary:"定义字段类型：Mapping 前言 每个文档都是一个字段的集合，每个字段都有自己的数据类型。Mapping 定义了索引中的文档有哪些字段及其类型、这些字段是如何存储和索引的。 所以 Mapping 的作用主要有： 定义了索引中各个字段的名称和对应的类型。; 定义各个字段、倒排索引的相关设置。如使用某字段使用什么分词器等。; 一个基本的定义 Mapping 的",meta:[{property:"og:url",content:"/backend-knowledge/elasticsearch/mapping.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"定义字段类型：Mapping"},{property:"og:description",content:"定义字段类型：Mapping 前言 每个文档都是一个字段的集合，每个字段都有自己的数据类型。Mapping 定义了索引中的文档有哪些字段及其类型、这些字段是如何存储和索引的。 所以 Mapping 的作用主要有： 定义了索引中各个字段的名称和对应的类型。; 定义各个字段、倒排索引的相关设置。如使用某字段使用什么分词器等。; 一个基本的定义 Mapping 的"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/elasticsearch/mapping.html",relativePath:"backend-knowledge/elasticsearch/mapping.md",key:"v-160bd749",path:"/backend-knowledge/elasticsearch/mapping/",headers:[{level:2,title:"前言",slug:"前言"},{level:2,title:"Dynamic Mapping",slug:"dynamic-mapping"},{level:2,title:"Mapping 支持的数据类型",slug:"mapping-支持的数据类型"},{level:3,title:"字符串",slug:"字符串"},{level:3,title:"日期类型",slug:"日期类型"},{level:3,title:"数字类型",slug:"数字类型"},{level:3,title:"对象与嵌套类型",slug:"对象与嵌套类型"},{level:2,title:"快速自定义 Mapping",slug:"快速自定义-mapping"},{level:2,title:"Mapping 的常用参数",slug:"mapping-的常用参数"},{level:3,title:"index",slug:"index"},{level:3,title:"analyzer",slug:"analyzer"},{level:3,title:"dynamic",slug:"dynamic"},{level:3,title:"null_value",slug:"null-value"},{level:3,title:"copy_to",slug:"copy-to"},{level:3,title:"doc_values",slug:"doc-values"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:9.06,words:2717},updateTime:"2022年9月26日 17:43",updateTimeStamp:1664185395e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"部署纯净的 Ubuntu 系统",frontmatter:{summary:"部署纯净的 Ubuntu 系统 有时候需要一个独立的服务器系统给自己用，又没有多余的物理机，就可以用 Docker 很快地来创建这样一台「虚拟机」。 部署系统 Docker 的官方仓库：Docker Hub 容器维护 安装常用环境组件 对于纯净的 Ubuntu 系统，很多系统命令是没有的。下列常用命令如果没有自带的话需要安装一下： 中文支持 对于纯净的 Ub",meta:[{property:"og:url",content:"/basic-skills/docker/deploy-pure-ubuntu.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"部署纯净的 Ubuntu 系统"},{property:"og:description",content:"部署纯净的 Ubuntu 系统 有时候需要一个独立的服务器系统给自己用，又没有多余的物理机，就可以用 Docker 很快地来创建这样一台「虚拟机」。 部署系统 Docker 的官方仓库：Docker Hub 容器维护 安装常用环境组件 对于纯净的 Ubuntu 系统，很多系统命令是没有的。下列常用命令如果没有自带的话需要安装一下： 中文支持 对于纯净的 Ub"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/docker/deploy-pure-ubuntu.html",relativePath:"basic-skills/docker/deploy-pure-ubuntu.md",key:"v-ddd5867e",path:"/basic-skills/docker/deploy-pure-ubuntu/",headers:[{level:2,title:"部署系统",slug:"部署系统"},{level:2,title:"容器维护",slug:"容器维护"},{level:2,title:"安装常用环境组件",slug:"安装常用环境组件"},{level:2,title:"中文支持",slug:"中文支持"},{level:2,title:"容器系统启用 SSH",slug:"容器系统启用-ssh"},{level:2,title:"通过 Container 制作 Image",slug:"通过-container-制作-image"}],readingTime:{minutes:5.15,words:1545},contributors:[]},{title:"ES 集群性能优化小记录",frontmatter:{summary:"ES 集群性能优化小记录 虽然 Elasticsearch 本身提供的默认配置已经能够支持一般大数据的搜索和分析，但是由于公司对接的数据量非常大，所以在扩充硬件资源的同时，也需要对 ES 集群本身进行调优和分析。 本文整理了在工作中涉及到的一些调优项目。 文件句柄优化 Elasticsearch 有大量的查询数据和插入数据的请求，需要大量文件句柄，当前服务器",meta:[{property:"og:url",content:"/backend-knowledge/elasticsearch/performance-optimization.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"ES 集群性能优化小记录"},{property:"og:description",content:"ES 集群性能优化小记录 虽然 Elasticsearch 本身提供的默认配置已经能够支持一般大数据的搜索和分析，但是由于公司对接的数据量非常大，所以在扩充硬件资源的同时，也需要对 ES 集群本身进行调优和分析。 本文整理了在工作中涉及到的一些调优项目。 文件句柄优化 Elasticsearch 有大量的查询数据和插入数据的请求，需要大量文件句柄，当前服务器"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/elasticsearch/performance-optimization.html",relativePath:"backend-knowledge/elasticsearch/performance-optimization.md",key:"v-f398acae",path:"/backend-knowledge/elasticsearch/performance-optimization/",headers:[{level:2,title:"文件句柄优化",slug:"文件句柄优化"},{level:2,title:"JVM 参数优化",slug:"jvm-参数优化"},{level:3,title:"分配多少内存给 ES",slug:"分配多少内存给-es"},{level:3,title:"分配的内存不要超过 32G",slug:"分配的内存不要超过-32g"},{level:3,title:"新生代和老生代内存比例",slug:"新生代和老生代内存比例"},{level:3,title:"使用 G1 垃圾回收器",slug:"使用-g1-垃圾回收器"},{level:3,title:"关于 GC 优化后的测试",slug:"关于-gc-优化后的测试"},{level:2,title:"关掉 swap",slug:"关掉-swap"},{level:2,title:"合理设置最小主节点",slug:"合理设置最小主节点"},{level:2,title:"分片均匀，磁盘优化，剔除掉高负载的 Master 竞选",slug:"分片均匀-磁盘优化-剔除掉高负载的-master-竞选"},{level:2,title:"数据存储天数的优化",slug:"数据存储天数的优化"},{level:2,title:"集群分片设置",slug:"集群分片设置"},{level:2,title:"索引优化",slug:"索引优化"},{level:2,title:"查询优化",slug:"查询优化"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:17.38,words:5214},updateTime:"2023年7月10日 10:42",updateTimeStamp:1688956941e3,createTime:"2022年10月28日 15:19",createTimeStamp:1666941564e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:5}]},{title:"索引模板：Index Template",frontmatter:{summary:"索引模板：Index Template 前言 索引模板：就是把已经创建好的某个索引的参数设置（settings）和索引映射（mappings）保存下来作为模板，在创建新索引时，ES 根据 index 名称去匹配相应的模板，就可以直接重用已经定义好的模板中的设置和映射。 模板仅在一个索引被新创建时，才会产生作用，修改模板不会影响已创建的索引。; 可以设定多个索",meta:[{property:"og:url",content:"/backend-knowledge/elasticsearch/index-template.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"索引模板：Index Template"},{property:"og:description",content:"索引模板：Index Template 前言 索引模板：就是把已经创建好的某个索引的参数设置（settings）和索引映射（mappings）保存下来作为模板，在创建新索引时，ES 根据 index 名称去匹配相应的模板，就可以直接重用已经定义好的模板中的设置和映射。 模板仅在一个索引被新创建时，才会产生作用，修改模板不会影响已创建的索引。; 可以设定多个索"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/elasticsearch/index-template.html",relativePath:"backend-knowledge/elasticsearch/index-template.md",key:"v-33fe5ed3",path:"/backend-knowledge/elasticsearch/index-template/",headers:[{level:2,title:"前言",slug:"前言"},{level:2,title:"工作方式",slug:"工作方式"},{level:2,title:"创建索引模板",slug:"创建索引模板"},{level:2,title:"索引匹配多个模板",slug:"索引匹配多个模板"},{level:2,title:"查看索引模板",slug:"查看索引模板"},{level:2,title:"判断模板是否存在",slug:"判断模板是否存在"},{level:2,title:"删除索引模板",slug:"删除索引模板"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:6.04,words:1813},updateTime:"2022年9月26日 17:43",updateTimeStamp:1664185395e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"分页查询的三种语法",frontmatter:{summary:"分页查询的三种语法 在大数据系统中，如果一下子从数据集中获取过多的数据可能会造成系统抖动、占用带宽等问题。特别是进行全文搜索时，用户只关心相关性最高的那个几个结果，从系统中拉取过多的数据等于浪费资源。 因此分页查询是必需且常见的操作，ES 提供了 3 种分页方式： from + size：最普通、简单的分页方式，但是会产生深度分页的问题。; search a",meta:[{property:"og:url",content:"/backend-knowledge/elasticsearch/paging-query.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"分页查询的三种语法"},{property:"og:description",content:"分页查询的三种语法 在大数据系统中，如果一下子从数据集中获取过多的数据可能会造成系统抖动、占用带宽等问题。特别是进行全文搜索时，用户只关心相关性最高的那个几个结果，从系统中拉取过多的数据等于浪费资源。 因此分页查询是必需且常见的操作，ES 提供了 3 种分页方式： from + size：最普通、简单的分页方式，但是会产生深度分页的问题。; search a"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/elasticsearch/paging-query.html",relativePath:"backend-knowledge/elasticsearch/paging-query.md",key:"v-4614f32f",path:"/backend-knowledge/elasticsearch/paging-query/",headers:[{level:2,title:"from + size 分页操作",slug:"from-size-分页操作"},{level:3,title:"基本语法",slug:"基本语法"},{level:3,title:"深度分页问题",slug:"深度分页问题"},{level:2,title:"search after",slug:"search-after"},{level:3,title:"基本语法",slug:"基本语法-2"},{level:3,title:"翻页原理",slug:"翻页原理"},{level:2,title:"scroll API",slug:"scroll-api"},{level:2,title:"新特性：Point In Time",slug:"新特性-point-in-time"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:16.29,words:4888},updateTime:"2022年9月26日 17:43",updateTimeStamp:1664185395e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"嵌套类型和父子文档",frontmatter:{summary:"嵌套类型和父子文档 前言 在传统的关系型数据库领域，想要表达关系型模型是非常自然的（通过外键关联），但在 ES 里要处理这个事情就并不那么简单了。 在 ES 中可以保存关系型模型数据的方式主要有以下两种： nested：在这种方式中，会将一对多的关系保存在同一个文档中。; join（Parent / Child）：通过维护文档的父子关系，将两个对象分离。; ",meta:[{property:"og:url",content:"/backend-knowledge/elasticsearch/nested-and-join.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"嵌套类型和父子文档"},{property:"og:description",content:"嵌套类型和父子文档 前言 在传统的关系型数据库领域，想要表达关系型模型是非常自然的（通过外键关联），但在 ES 里要处理这个事情就并不那么简单了。 在 ES 中可以保存关系型模型数据的方式主要有以下两种： nested：在这种方式中，会将一对多的关系保存在同一个文档中。; join（Parent / Child）：通过维护文档的父子关系，将两个对象分离。; "},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/elasticsearch/nested-and-join.html",relativePath:"backend-knowledge/elasticsearch/nested-and-join.md",key:"v-01783f6e",path:"/backend-knowledge/elasticsearch/nested-and-join/",headers:[{level:2,title:"前言",slug:"前言"},{level:2,title:"nested（嵌套类型）",slug:"nested-嵌套类型"},{level:3,title:"不指定 nested 的情况",slug:"不指定-nested-的情况"},{level:3,title:"指定 nested 的情况",slug:"指定-nested-的情况"},{level:2,title:"Parent / Child（文档的父子关系）",slug:"parent-child-文档的父子关系"},{level:3,title:"在 Mapping 中定义 join 数据类型",slug:"在-mapping-中定义-join-数据类型"},{level:3,title:"索引父文档",slug:"索引父文档"},{level:3,title:"索引子文档",slug:"索引子文档"},{level:3,title:"数据检索",slug:"数据检索"},{level:2,title:"总结",slug:"总结"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:7.52,words:2257},updateTime:"2022年9月26日 17:43",updateTimeStamp:1664185395e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"全文搜索语法",frontmatter:{summary:"全文搜索语法 前言 ES 在写入数据的时候，会先使用分词器把文本数据进行分词（比如 hello world -> hello 和 world），并且统计每个词语出现的次数等信息。 当我们检索文本数据（比如查询 hello java）的时候，会使用同样的分词器对检索内容进行分词，然后与文本内容匹配，根据统计信息给每个词语打分，最后根据公式算出相关性评分（内容的",meta:[{property:"og:url",content:"/backend-knowledge/elasticsearch/match-query.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"全文搜索语法"},{property:"og:description",content:"全文搜索语法 前言 ES 在写入数据的时候，会先使用分词器把文本数据进行分词（比如 hello world -> hello 和 world），并且统计每个词语出现的次数等信息。 当我们检索文本数据（比如查询 hello java）的时候，会使用同样的分词器对检索内容进行分词，然后与文本内容匹配，根据统计信息给每个词语打分，最后根据公式算出相关性评分（内容的"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/elasticsearch/match-query.html",relativePath:"backend-knowledge/elasticsearch/match-query.md",key:"v-7097e589",path:"/backend-knowledge/elasticsearch/match-query/",headers:[{level:2,title:"前言",slug:"前言"},{level:2,title:"match（匹配查询）",slug:"match-匹配查询"},{level:3,title:"match all",slug:"match-all"},{level:3,title:"匹配字段",slug:"匹配字段"},{level:2,title:"match phrase（短语匹配）",slug:"match-phrase-短语匹配"},{level:3,title:"匹配完整短语",slug:"匹配完整短语"},{level:3,title:"slop 参数",slug:"slop-参数"},{level:2,title:"match phrase prefix（短语前缀匹配）",slug:"match-phrase-prefix-短语前缀匹配"},{level:3,title:"短语前缀匹配",slug:"短语前缀匹配"},{level:3,title:"限制返回文档数",slug:"限制返回文档数"},{level:2,title:"multi match",slug:"multi-match"},{level:3,title:"多字段查询",slug:"多字段查询"},{level:3,title:"设置计分方式",slug:"设置计分方式"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:6.98,words:2094},updateTime:"2022年9月26日 17:43",updateTimeStamp:1664185395e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"MySQL 常用命令",frontmatter:{summary:"MySQL 常用命令 有时候不能使用可视化工具，就需要通过一些命令快速查看和操作数据库数据。 （完）",meta:[{property:"og:url",content:"/backend-knowledge/mysql/common-commands.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"MySQL 常用命令"},{property:"og:description",content:"MySQL 常用命令 有时候不能使用可视化工具，就需要通过一些命令快速查看和操作数据库数据。 （完）"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/mysql/common-commands.html",relativePath:"backend-knowledge/mysql/common-commands.md",key:"v-233e6ee9",path:"/backend-knowledge/mysql/common-commands/",readingTime:{minutes:1.28,words:383},updateTime:"2023年8月31日 09:54",updateTimeStamp:1693446853e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:5}]},{title:"搜索词自动补全语法",frontmatter:{summary:"搜索词自动补全语法 前言 搜索词自动补全的功能可以改善用户的搜索体验。具体的表现形式就是当用户在搜索框输入部分内容后，出现对应的推荐选项，让用户可以快速选择。这种自动补全或纠错的功能在现代搜索引擎中都很常见。 想要实现这样的需求，可以使用 ES 提供的 Suggesters API。它的原理简单来说，就是 Suggesters 会将输入的文本分解为 toke",meta:[{property:"og:url",content:"/backend-knowledge/elasticsearch/suggester-query.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"搜索词自动补全语法"},{property:"og:description",content:"搜索词自动补全语法 前言 搜索词自动补全的功能可以改善用户的搜索体验。具体的表现形式就是当用户在搜索框输入部分内容后，出现对应的推荐选项，让用户可以快速选择。这种自动补全或纠错的功能在现代搜索引擎中都很常见。 想要实现这样的需求，可以使用 ES 提供的 Suggesters API。它的原理简单来说，就是 Suggesters 会将输入的文本分解为 toke"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/elasticsearch/suggester-query.html",relativePath:"backend-knowledge/elasticsearch/suggester-query.md",key:"v-1ee32809",path:"/backend-knowledge/elasticsearch/suggester-query/",headers:[{level:2,title:"前言",slug:"前言"},{level:2,title:"Term Suggester",slug:"term-suggester"},{level:2,title:"Phrase Suggester",slug:"phrase-suggester"},{level:2,title:"Completion Suggester",slug:"completion-suggester"},{level:2,title:"Context Suggester",slug:"context-suggester"},{level:2,title:"总结",slug:"总结"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:9.78,words:2933},updateTime:"2022年9月26日 17:43",updateTimeStamp:1664185395e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"Term 查询语法",frontmatter:{summary:"Term 查询语法 前言 Match 是基于全文的搜索，Term 是基于词项的搜索。 Term 查询不会对输入内容进行分词，它会将输入的内容会作为一个整体来进行检索，并且使用相关性算分公式对包含整个检索内容的文档进行相关性算分。 Term 是文本经过分词处理后得出来的词项，是 ES 中表达语义的最小单位。ES 中提供很多基于 Term 的查询功能，例如： T",meta:[{property:"og:url",content:"/backend-knowledge/elasticsearch/term-query.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Term 查询语法"},{property:"og:description",content:"Term 查询语法 前言 Match 是基于全文的搜索，Term 是基于词项的搜索。 Term 查询不会对输入内容进行分词，它会将输入的内容会作为一个整体来进行检索，并且使用相关性算分公式对包含整个检索内容的文档进行相关性算分。 Term 是文本经过分词处理后得出来的词项，是 ES 中表达语义的最小单位。ES 中提供很多基于 Term 的查询功能，例如： T"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/elasticsearch/term-query.html",relativePath:"backend-knowledge/elasticsearch/term-query.md",key:"v-6fe23f2f",path:"/backend-knowledge/elasticsearch/term-query/",headers:[{level:2,title:"前言",slug:"前言"},{level:2,title:"Term Query",slug:"term-query"},{level:2,title:"Terms Query",slug:"terms-query"},{level:2,title:"Range Query",slug:"range-query"},{level:2,title:"Exist Query",slug:"exist-query"},{level:2,title:"Prefix Query",slug:"prefix-query"},{level:2,title:"Wildcard Query",slug:"wildcard-query"},{level:2,title:"结构化搜索",slug:"结构化搜索"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:4.06,words:1217},updateTime:"2022年9月26日 17:43",updateTimeStamp:1664185395e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"MySQL",frontmatter:{summary:'MySQL " 本系列以 MySQL 8.0 作为安装版本进行知识点梳理，但考虑到目前在生产环境中用的比较多的是 5.7，故优先使用向前兼容的 5.7 版本功能，对于 8.0 特有的新功能和特性，仅是学习一下。" 在日常工作与学习中，无论是开发、运维、还是测试，对于数据库的学习是不可避免的，同时也是日常工作的必备技术之一。而目前业内所用的关系型数据库中，占比',meta:[{property:"og:url",content:"/backend-knowledge/mysql/"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"MySQL"},{property:"og:description",content:'MySQL " 本系列以 MySQL 8.0 作为安装版本进行知识点梳理，但考虑到目前在生产环境中用的比较多的是 5.7，故优先使用向前兼容的 5.7 版本功能，对于 8.0 特有的新功能和特性，仅是学习一下。" 在日常工作与学习中，无论是开发、运维、还是测试，对于数据库的学习是不可避免的，同时也是日常工作的必备技术之一。而目前业内所用的关系型数据库中，占比'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/mysql/",relativePath:"backend-knowledge/mysql/README.md",key:"v-13ed0380",path:"/backend-knowledge/mysql/",readingTime:{minutes:9.15,words:2746},updateTime:"2022年9月26日 17:43",updateTimeStamp:1664185395e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"数据的增删改",frontmatter:{summary:'数据的增删改 " 这一篇里创建的两张表：学生信息表和学生成绩表，以及里面插入的一些模拟数据，在后面的查询相关文章里也会用到。" 数据库的表里得先有数据之后查询才有意义，所以这里先整理各种对表中数据的操作，包括插入数据、删除数据和更新数据。 创建表 插入数据之前需要先创建表，假设要创建两个表。 创建学生信息表 student_info： 创建学生成绩表 stu',meta:[{property:"og:url",content:"/backend-knowledge/mysql/data-insert-delete-update.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"数据的增删改"},{property:"og:description",content:'数据的增删改 " 这一篇里创建的两张表：学生信息表和学生成绩表，以及里面插入的一些模拟数据，在后面的查询相关文章里也会用到。" 数据库的表里得先有数据之后查询才有意义，所以这里先整理各种对表中数据的操作，包括插入数据、删除数据和更新数据。 创建表 插入数据之前需要先创建表，假设要创建两个表。 创建学生信息表 student_info： 创建学生成绩表 stu'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/mysql/data-insert-delete-update.html",relativePath:"backend-knowledge/mysql/data-insert-delete-update.md",key:"v-728921a9",path:"/backend-knowledge/mysql/data-insert-delete-update/",headers:[{level:2,title:"创建表",slug:"创建表"},{level:2,title:"插入数据",slug:"插入数据"},{level:3,title:"插入完整的记录",slug:"插入完整的记录"},{level:3,title:"插入记录的一部分",slug:"插入记录的一部分"},{level:3,title:"将某个查询的结果集插入表中",slug:"将某个查询的结果集插入表中"},{level:3,title:"INSERT IGNORE",slug:"insert-ignore"},{level:3,title:"INSERT ON DUPLICATE KEY UPDATE",slug:"insert-on-duplicate-key-update"},{level:2,title:"删除数据",slug:"删除数据"},{level:2,title:"更新数据",slug:"更新数据"}],readingTime:{minutes:6.06,words:1819},updateTime:"2022年9月26日 17:43",updateTimeStamp:1664185395e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"表中列的基本属性",frontmatter:{summary:"表中列的基本属性 默认值 在插入数据的时候，可以只指定插入部分的列。那些没有被显式指定的列的值将被设置默认值。在 MySQL 中，如果没有手动指定，那么列的默认值是 NULL，表示这个列的值还没有被设置。 如果我们不想让默认值为 NULL，而是设置成某个有意义的值，可以在定义列的时候给该列增加一个 DEFAULT 属性，就像这样： 在建表语句中就是这样： N",meta:[{property:"og:url",content:"/backend-knowledge/mysql/column-properties.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"表中列的基本属性"},{property:"og:description",content:"表中列的基本属性 默认值 在插入数据的时候，可以只指定插入部分的列。那些没有被显式指定的列的值将被设置默认值。在 MySQL 中，如果没有手动指定，那么列的默认值是 NULL，表示这个列的值还没有被设置。 如果我们不想让默认值为 NULL，而是设置成某个有意义的值，可以在定义列的时候给该列增加一个 DEFAULT 属性，就像这样： 在建表语句中就是这样： N"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/mysql/column-properties.html",relativePath:"backend-knowledge/mysql/column-properties.md",key:"v-72a2eca9",path:"/backend-knowledge/mysql/column-properties/",headers:[{level:2,title:"默认值",slug:"默认值"},{level:2,title:"NOT NULL 属性",slug:"not-null-属性"},{level:2,title:"主键",slug:"主键"},{level:2,title:"UNIQUE 属性",slug:"unique-属性"},{level:2,title:"主键和 UNIQUE 约束的区别",slug:"主键和-unique-约束的区别"},{level:2,title:"外键",slug:"外键"},{level:2,title:"AUTO_INCREMENT 属性",slug:"auto-increment-属性"},{level:2,title:"列的注释",slug:"列的注释"},{level:2,title:"影响展示外观的 ZEROFILL 属性",slug:"影响展示外观的-zerofill-属性"},{level:2,title:"一个列同时具有多个属性",slug:"一个列同时具有多个属性"},{level:2,title:"查看表结构时的列属性",slug:"查看表结构时的列属性"},{level:2,title:"标识符的命名",slug:"标识符的命名"}],readingTime:{minutes:10.81,words:3244},updateTime:"2022年9月26日 17:43",updateTimeStamp:1664185395e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"库和表的基本操作",frontmatter:{summary:'库和表的基本操作 " 以下用到的 SQL 语句中，大小写其实不作强制规定。但为了方便区分，关键词会用大写字母，自定义的表名、字段名、函数名等等会用小写字母。" 数据库操作 展示数据库 创建数据库 语法： 例如： 如果创建一个已经存在的数据库会报错 ERROR。这个时候可以使用 IF NOT EXISTS 语句，这样不影响语句的执行，只是结果中有 1 个 wa',meta:[{property:"og:url",content:"/backend-knowledge/mysql/database-and-table-operations.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"库和表的基本操作"},{property:"og:description",content:'库和表的基本操作 " 以下用到的 SQL 语句中，大小写其实不作强制规定。但为了方便区分，关键词会用大写字母，自定义的表名、字段名、函数名等等会用小写字母。" 数据库操作 展示数据库 创建数据库 语法： 例如： 如果创建一个已经存在的数据库会报错 ERROR。这个时候可以使用 IF NOT EXISTS 语句，这样不影响语句的执行，只是结果中有 1 个 wa'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/mysql/database-and-table-operations.html",relativePath:"backend-knowledge/mysql/database-and-table-operations.md",key:"v-7b121b09",path:"/backend-knowledge/mysql/database-and-table-operations/",headers:[{level:2,title:"数据库操作",slug:"数据库操作"},{level:3,title:"展示数据库",slug:"展示数据库"},{level:3,title:"创建数据库",slug:"创建数据库"},{level:3,title:"切换数据库",slug:"切换数据库"},{level:3,title:"删除数据库",slug:"删除数据库"},{level:2,title:"表的操作",slug:"表的操作"},{level:3,title:"展示当前数据库中的表",slug:"展示当前数据库中的表"},{level:3,title:"创建表",slug:"创建表"},{level:3,title:"删除表",slug:"删除表"},{level:3,title:"查看表结构",slug:"查看表结构"},{level:3,title:"显式指定表的数据库",slug:"显式指定表的数据库"},{level:3,title:"修改表",slug:"修改表"}],readingTime:{minutes:7.69,words:2306},updateTime:"2022年9月26日 17:43",updateTimeStamp:1664185395e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"MySQL 数据类型",frontmatter:{summary:"MySQL 数据类型 MySQL 中的数据类型在使用时可以划分为：数值类型、时间类型、字符串类型、枚举与集合类型。 数值类型 有整数和浮点数两种，再根据字节来区分：字节一般是 8 位的二进制，如果需要带符号，就会占用第一位来表示符号，用 0 表示整数，1 表示负数。 很显然，使用的字节数越多，意味着能表示的数值范围就越大，但是也就越耗费存储空间。 整数类型 ",meta:[{property:"og:url",content:"/backend-knowledge/mysql/data-types.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"MySQL 数据类型"},{property:"og:description",content:"MySQL 数据类型 MySQL 中的数据类型在使用时可以划分为：数值类型、时间类型、字符串类型、枚举与集合类型。 数值类型 有整数和浮点数两种，再根据字节来区分：字节一般是 8 位的二进制，如果需要带符号，就会占用第一位来表示符号，用 0 表示整数，1 表示负数。 很显然，使用的字节数越多，意味着能表示的数值范围就越大，但是也就越耗费存储空间。 整数类型 "},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/mysql/data-types.html",relativePath:"backend-knowledge/mysql/data-types.md",key:"v-3eecbc5b",path:"/backend-knowledge/mysql/data-types/",headers:[{level:2,title:"数值类型",slug:"数值类型"},{level:3,title:"整数类型",slug:"整数类型"},{level:3,title:"浮点数类型",slug:"浮点数类型"},{level:3,title:"定点数类型",slug:"定点数类型"},{level:3,title:"无符号数值类型的表示",slug:"无符号数值类型的表示"},{level:2,title:"日期和时间类型",slug:"日期和时间类型"},{level:2,title:"字符串类型",slug:"字符串类型"},{level:3,title:"字符编码",slug:"字符编码"},{level:3,title:"常用类型",slug:"常用类型"},{level:2,title:"ENUM 类型和 SET 类型",slug:"enum-类型和-set-类型"},{level:3,title:"枚举",slug:"枚举"},{level:3,title:"集合",slug:"集合"},{level:2,title:"二进制类型",slug:"二进制类型"},{level:3,title:"BIT 类型",slug:"bit-类型"},{level:3,title:"BINARY(M) 与 VARBINARY(M)",slug:"binary-m-与-varbinary-m"},{level:3,title:"其他的二进制类型",slug:"其他的二进制类型"},{level:2,title:"数据类型的属性",slug:"数据类型的属性"}],readingTime:{minutes:14.12,words:4236},updateTime:"2022年9月26日 17:43",updateTimeStamp:1664185395e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"MySQL 数据库设计规范",frontmatter:{summary:"MySQL 数据库设计规范 一个平台或系统随着时间的推移和用户量的增多，数据库操作往往会变慢。而在服务端开发中数据库更是尤为重要，绝大多数情况下数据库的性能决定了程序的性能，如若前期埋下的坑越多到后期数据库就会成为整个系统的瓶颈。因此，更规范化地使用 MySQL 在开发中是不可或缺的。 命名规范 数据库所有表前缀均使用系统或模块的英文名称缩写。; 库名、表名",meta:[{property:"og:url",content:"/backend-knowledge/mysql/db-design-spec.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"MySQL 数据库设计规范"},{property:"og:description",content:"MySQL 数据库设计规范 一个平台或系统随着时间的推移和用户量的增多，数据库操作往往会变慢。而在服务端开发中数据库更是尤为重要，绝大多数情况下数据库的性能决定了程序的性能，如若前期埋下的坑越多到后期数据库就会成为整个系统的瓶颈。因此，更规范化地使用 MySQL 在开发中是不可或缺的。 命名规范 数据库所有表前缀均使用系统或模块的英文名称缩写。; 库名、表名"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/mysql/db-design-spec.html",relativePath:"backend-knowledge/mysql/db-design-spec.md",key:"v-981ca15e",path:"/backend-knowledge/mysql/db-design-spec/",headers:[{level:2,title:"命名规范",slug:"命名规范"},{level:2,title:"基本设计规范",slug:"基本设计规范"},{level:2,title:"字段设计规范",slug:"字段设计规范"},{level:2,title:"索引设计规范",slug:"索引设计规范"},{level:2,title:"SQL 编写规范",slug:"sql-编写规范"},{level:2,title:"数据操作规范",slug:"数据操作规范"}],readingTime:{minutes:21.96,words:6587},updateTime:"2022年10月19日 14:53",updateTimeStamp:1666162396e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"表达式和函数",frontmatter:{summary:"表达式和函数 表达式 表达式由操作数和操作符组成，比如 1 + 1 就是一个 表达式，其中数字称为 操作数，运算符称为 操作符。 操作数 MySQL 中操作数可以是以下这几种类型： 常数 ; 常数很好理解，我们平时用到的数字、字符串、时间值等都可以被称为常数，它是一个确定的值。 列名 ; 针对某个具体的表，它的列名可以被当作表达式的一部分。 函数调用 ; M",meta:[{property:"og:url",content:"/backend-knowledge/mysql/expressions-and-functions.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"表达式和函数"},{property:"og:description",content:"表达式和函数 表达式 表达式由操作数和操作符组成，比如 1 + 1 就是一个 表达式，其中数字称为 操作数，运算符称为 操作符。 操作数 MySQL 中操作数可以是以下这几种类型： 常数 ; 常数很好理解，我们平时用到的数字、字符串、时间值等都可以被称为常数，它是一个确定的值。 列名 ; 针对某个具体的表，它的列名可以被当作表达式的一部分。 函数调用 ; M"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/mysql/expressions-and-functions.html",relativePath:"backend-knowledge/mysql/expressions-and-functions.md",key:"v-a85ebfee",path:"/backend-knowledge/mysql/expressions-and-functions/",headers:[{level:2,title:"表达式",slug:"表达式"},{level:3,title:"操作数",slug:"操作数"},{level:3,title:"操作符",slug:"操作符"},{level:3,title:"表达式的使用",slug:"表达式的使用"},{level:2,title:"函数",slug:"函数"},{level:3,title:"文本处理函数",slug:"文本处理函数"},{level:3,title:"日期和时间处理函数",slug:"日期和时间处理函数"},{level:3,title:"数值处理函数",slug:"数值处理函数"},{level:3,title:"聚集函数（统计函数）",slug:"聚集函数-统计函数"},{level:2,title:"隐式类型转换",slug:"隐式类型转换"},{level:3,title:"隐式类型转换的场景",slug:"隐式类型转换的场景"},{level:3,title:"类型转换的注意事项",slug:"类型转换的注意事项"}],readingTime:{minutes:14.8,words:4441},updateTime:"2022年9月26日 17:43",updateTimeStamp:1664185395e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"分组查询语法",frontmatter:{summary:"分组查询语法 分组就是：针对某个列，将该列的值相同的记录分到一个组中。 按照科目（subject）列分组的意思就是将 subject 列的值相同的记录划分到一个组中，分组后能更方便地统计每门学科的成绩等信息。 如果不分组，就要写 N 个条件查询语句，每个语句进行 WHERE subject = '高等数学' 这样的过滤。 GROUP BY 子句 能实现分组功",meta:[{property:"og:url",content:"/backend-knowledge/mysql/group-query.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"分组查询语法"},{property:"og:description",content:"分组查询语法 分组就是：针对某个列，将该列的值相同的记录分到一个组中。 按照科目（subject）列分组的意思就是将 subject 列的值相同的记录划分到一个组中，分组后能更方便地统计每门学科的成绩等信息。 如果不分组，就要写 N 个条件查询语句，每个语句进行 WHERE subject = '高等数学' 这样的过滤。 GROUP BY 子句 能实现分组功"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/mysql/group-query.html",relativePath:"backend-knowledge/mysql/group-query.md",key:"v-6f2d9569",path:"/backend-knowledge/mysql/group-query/",headers:[{level:2,title:"GROUP BY 子句",slug:"group-by-子句"},{level:2,title:"带有 WHERE 子句的分组查询",slug:"带有-where-子句的分组查询"},{level:2,title:"作用于分组的过滤条件",slug:"作用于分组的过滤条件"},{level:2,title:"分组和排序",slug:"分组和排序"},{level:2,title:"嵌套分组",slug:"嵌套分组"},{level:2,title:"使用分组注意事项",slug:"使用分组注意事项"},{level:2,title:"简单查询语句中各子句的顺序",slug:"简单查询语句中各子句的顺序"}],readingTime:{minutes:6.02,words:1807},updateTime:"2022年9月26日 17:43",updateTimeStamp:1664185395e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"MySQL 的安装与卸载",frontmatter:{summary:'MySQL 的安装与卸载 " 以安装 MySQL 8.x.x 为例。" Windows 下安装 " Windows 下的 MySQL 不能用于生产，一般用于开发目的或者尝鲜体验。" 安装 MySQL 我比较喜欢免安装版本的，轻便干净，删起来方便。 到官网的开发者专区下载 MySQL（Community版）免安装软件包： 下载地址; 安装包名字：mysql-8',meta:[{property:"og:url",content:"/backend-knowledge/mysql/installation-of-mysql.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"MySQL 的安装与卸载"},{property:"og:description",content:'MySQL 的安装与卸载 " 以安装 MySQL 8.x.x 为例。" Windows 下安装 " Windows 下的 MySQL 不能用于生产，一般用于开发目的或者尝鲜体验。" 安装 MySQL 我比较喜欢免安装版本的，轻便干净，删起来方便。 到官网的开发者专区下载 MySQL（Community版）免安装软件包： 下载地址; 安装包名字：mysql-8'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/mysql/installation-of-mysql.html",relativePath:"backend-knowledge/mysql/installation-of-mysql.md",key:"v-7a9b3b89",path:"/backend-knowledge/mysql/installation-of-mysql/",headers:[{level:2,title:"Windows 下安装",slug:"windows-下安装"},{level:3,title:"安装 MySQL",slug:"安装-mysql"},{level:3,title:"解压压缩包",slug:"解压压缩包"},{level:3,title:"进入命令行终端",slug:"进入命令行终端"},{level:3,title:"初始化 MySQL",slug:"初始化-mysql"},{level:3,title:"安装 mysqld",slug:"安装-mysqld"},{level:3,title:"启动 MySQL 服务",slug:"启动-mysql-服务"},{level:3,title:"添加/修改 root 账号登录密码",slug:"添加-修改-root-账号登录密码"},{level:3,title:"卸载 MySQL",slug:"卸载-mysql"},{level:2,title:"CentOS 7.6 下安装",slug:"centos-7-6-下安装"},{level:3,title:"安装对比",slug:"安装对比"},{level:3,title:"下载并解压安装包",slug:"下载并解压安装包"},{level:3,title:"创建数据文件夹以及用户并赋予权限",slug:"创建数据文件夹以及用户并赋予权限"},{level:3,title:"初始化数据库",slug:"初始化数据库"},{level:3,title:"创建 MySQL 配置文件 my.cnf",slug:"创建-mysql-配置文件-my-cnf"},{level:3,title:"配置全局环境变量",slug:"配置全局环境变量"},{level:3,title:"启动 MySQL 服务并修改密码",slug:"启动-mysql-服务并修改密码"},{level:3,title:"开机自启配置",slug:"开机自启配置"},{level:3,title:"开放远程连接",slug:"开放远程连接"},{level:3,title:"卸载 MySQL",slug:"卸载-mysql-2"},{level:2,title:"Ubuntu 20.04 下安装",slug:"ubuntu-20-04-下安装"},{level:3,title:"安装 MySQL",slug:"安装-mysql-2"},{level:3,title:"新建用户并分配权限",slug:"新建用户并分配权限"},{level:3,title:"卸载 MySQL",slug:"卸载-mysql-3"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:14.99,words:4498},updateTime:"2022年9月26日 17:43",updateTimeStamp:1664185395e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"条件查询语法",frontmatter:{summary:"条件查询语法 主要用到 WHERE 关键字，后面跟上搜索条件。 简单搜索条件 把 搜索条件 放在 WHERE 子句中，搜索条件中可以使用如下几种比较操作符： 操作符 示例 描述 :--------------:------------------------:---------------- = a = b a 等于 b b a 不等于 b < a < b ",meta:[{property:"og:url",content:"/backend-knowledge/mysql/query-by-search-conditions.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"条件查询语法"},{property:"og:description",content:"条件查询语法 主要用到 WHERE 关键字，后面跟上搜索条件。 简单搜索条件 把 搜索条件 放在 WHERE 子句中，搜索条件中可以使用如下几种比较操作符： 操作符 示例 描述 :--------------:------------------------:---------------- = a = b a 等于 b b a 不等于 b < a < b "},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/mysql/query-by-search-conditions.html",relativePath:"backend-knowledge/mysql/query-by-search-conditions.md",key:"v-03e047af",path:"/backend-knowledge/mysql/query-by-search-conditions/",headers:[{level:2,title:"简单搜索条件",slug:"简单搜索条件"},{level:2,title:"匹配列表中的元素",slug:"匹配列表中的元素"},{level:2,title:"匹配 NULL 值",slug:"匹配-null-值"},{level:2,title:"多个搜索条件的查询",slug:"多个搜索条件的查询"},{level:3,title:"AND 操作符",slug:"and-操作符"},{level:3,title:"OR 操作符",slug:"or-操作符"},{level:3,title:"更复杂的搜索条件的组合",slug:"更复杂的搜索条件的组合"},{level:2,title:"通配符",slug:"通配符"},{level:2,title:"转义通配符",slug:"转义通配符"}],readingTime:{minutes:3.47,words:1040},updateTime:"2022年9月26日 17:43",updateTimeStamp:1664185395e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"MySQL 主键和自增 ID",frontmatter:{summary:'MySQL 主键和自增 ID 必备的三个字段 通常情况下，我们每个表必备三个字段：id，createtime，updatetime。 其中 id 为主键，类型为 BIGINT UNSIGNED，自增、步长为 1。 createtime 和 updatetime 均为 DATETIME 类型。 为什么用自增 ID 做主键 " MySQL 官方推荐创建主键的时候',meta:[{property:"og:url",content:"/backend-knowledge/mysql/primary-key-and-increment-id.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"MySQL 主键和自增 ID"},{property:"og:description",content:'MySQL 主键和自增 ID 必备的三个字段 通常情况下，我们每个表必备三个字段：id，createtime，updatetime。 其中 id 为主键，类型为 BIGINT UNSIGNED，自增、步长为 1。 createtime 和 updatetime 均为 DATETIME 类型。 为什么用自增 ID 做主键 " MySQL 官方推荐创建主键的时候'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/mysql/primary-key-and-increment-id.html",relativePath:"backend-knowledge/mysql/primary-key-and-increment-id.md",key:"v-2864dc37",path:"/backend-knowledge/mysql/primary-key-and-increment-id/",headers:[{level:2,title:"必备的三个字段",slug:"必备的三个字段"},{level:2,title:"为什么用自增 ID 做主键",slug:"为什么用自增-id-做主键"},{level:3,title:"索引分类",slug:"索引分类"},{level:2,title:"自增 ID 用完会发生什么",slug:"自增-id-用完会发生什么"},{level:2,title:"自增 ID 用完的解决方案",slug:"自增-id-用完的解决方案"},{level:3,title:"InnoDB 系统自增 row_id",slug:"innodb-系统自增-row-id"},{level:3,title:"BIGINT",slug:"bigint"},{level:3,title:"Redis 自增主键",slug:"redis-自增主键"}],readingTime:{minutes:4.37,words:1310},updateTime:"2022年9月26日 17:43",updateTimeStamp:1664185395e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"MySQL 事务的隔离性",frontmatter:{summary:'MySQL 事务的隔离性 MySQL 中有三个常见的问题：脏读、不可重复读和幻读。它们都是由于数据库并发访问导致的数据读取问题，都与事务隔离性有关。 事务 什么是事务 事务是数据库操作的最小工作单元，它是一系列不可再分割的操作集合，这些操作作为一个整体一起向系统提交，要么都执行、要么都不执行。 " 大白话：事务就是把一组操作打包到一起，执行的时候来保证这一组',meta:[{property:"og:url",content:"/backend-knowledge/mysql/transaction-isolation-levels.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"MySQL 事务的隔离性"},{property:"og:description",content:'MySQL 事务的隔离性 MySQL 中有三个常见的问题：脏读、不可重复读和幻读。它们都是由于数据库并发访问导致的数据读取问题，都与事务隔离性有关。 事务 什么是事务 事务是数据库操作的最小工作单元，它是一系列不可再分割的操作集合，这些操作作为一个整体一起向系统提交，要么都执行、要么都不执行。 " 大白话：事务就是把一组操作打包到一起，执行的时候来保证这一组'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/mysql/transaction-isolation-levels.html",relativePath:"backend-knowledge/mysql/transaction-isolation-levels.md",key:"v-411acacd",path:"/backend-knowledge/mysql/transaction-isolation-levels/",headers:[{level:2,title:"事务",slug:"事务"},{level:3,title:"什么是事务",slug:"什么是事务"},{level:3,title:"事务四大特性",slug:"事务四大特性"},{level:3,title:"事务的隔离级别",slug:"事务的隔离级别"},{level:2,title:"无隔离性的问题",slug:"无隔离性的问题"},{level:3,title:"脏读（读取未提交数据）",slug:"脏读-读取未提交数据"},{level:3,title:"不可重复读（前后多次读取，数据内容不一致）",slug:"不可重复读-前后多次读取-数据内容不一致"},{level:3,title:"幻读（前后多次读取，数据总量不一致）",slug:"幻读-前后多次读取-数据总量不一致"},{level:2,title:"设置事务的隔离级别",slug:"设置事务的隔离级别"},{level:2,title:"总结一下",slug:"总结一下"},{level:2,title:"后续",slug:"后续"}],readingTime:{minutes:42.98,words:12894},updateTime:"2022年11月20日 10:42",updateTimeStamp:1668912131e3,createTime:"2022年11月20日 10:42",createTimeStamp:1668912131e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"简单查询语法",frontmatter:{summary:"简单查询语法 查询列的语句 查询单个列 查看某个表中的某一列的数据，语法格式如下： 列名为星号（*）表示把记录中的所有列都查出来。有时候会很方便，但是查询不需要的列通常会降低性能，视情况而用吧。 列的别名 可以为结果集中的列重新定义一个别名，语法格式如下： 这里的 AS 加了个中括号，意思是这个指定别名的语法中，AS 这个单词是可有可无的（不过我觉得加上这个",meta:[{property:"og:url",content:"/backend-knowledge/mysql/simple-query.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"简单查询语法"},{property:"og:description",content:"简单查询语法 查询列的语句 查询单个列 查看某个表中的某一列的数据，语法格式如下： 列名为星号（*）表示把记录中的所有列都查出来。有时候会很方便，但是查询不需要的列通常会降低性能，视情况而用吧。 列的别名 可以为结果集中的列重新定义一个别名，语法格式如下： 这里的 AS 加了个中括号，意思是这个指定别名的语法中，AS 这个单词是可有可无的（不过我觉得加上这个"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/mysql/simple-query.html",relativePath:"backend-knowledge/mysql/simple-query.md",key:"v-24763dad",path:"/backend-knowledge/mysql/simple-query/",headers:[{level:2,title:"查询列的语句",slug:"查询列的语句"},{level:3,title:"查询单个列",slug:"查询单个列"},{level:3,title:"列的别名",slug:"列的别名"},{level:3,title:"查询多个列",slug:"查询多个列"},{level:2,title:"查询结果去重",slug:"查询结果去重"},{level:3,title:"去除单列的重复结果",slug:"去除单列的重复结果"},{level:3,title:"去除多列的重复结果",slug:"去除多列的重复结果"},{level:2,title:"限制查询结果条数",slug:"限制查询结果条数"},{level:2,title:"对查询结果排序",slug:"对查询结果排序"},{level:3,title:"按照单个列的值进行排序",slug:"按照单个列的值进行排序"},{level:3,title:"按照多个列的值进行排序",slug:"按照多个列的值进行排序"},{level:3,title:"ORDER BY 结合 LIMIT",slug:"order-by-结合-limit"}],readingTime:{minutes:3.32,words:995},updateTime:"2022年9月26日 17:43",updateTimeStamp:1664185395e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"子查询语法",frontmatter:{summary:"子查询语法 在有些场景中，我们需要使用两条或多条查询语句，而恰好第二条查询语句的搜索条件其实是用到了第一条查询语句的查询结果。为了书写简便，我们可以把这两条语句合并到一条语句中，从而减少了把第一条查询语句的结果复制粘贴到第二条查询语句中的步骤。 在书写上，只需要把第二条查询语句用小括号 () 扩起来作为一个操作数放到第一条的搜索条件处，这样就起到了合并两条查",meta:[{property:"og:url",content:"/backend-knowledge/mysql/sub-query.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"子查询语法"},{property:"og:description",content:"子查询语法 在有些场景中，我们需要使用两条或多条查询语句，而恰好第二条查询语句的搜索条件其实是用到了第一条查询语句的查询结果。为了书写简便，我们可以把这两条语句合并到一条语句中，从而减少了把第一条查询语句的结果复制粘贴到第二条查询语句中的步骤。 在书写上，只需要把第二条查询语句用小括号 () 扩起来作为一个操作数放到第一条的搜索条件处，这样就起到了合并两条查"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/mysql/sub-query.html",relativePath:"backend-knowledge/mysql/sub-query.md",key:"v-6ad7b709",path:"/backend-knowledge/mysql/sub-query/",headers:[{level:2,title:"标量子查询",slug:"标量子查询"},{level:2,title:"列子查询",slug:"列子查询"},{level:2,title:"行子查询",slug:"行子查询"},{level:2,title:"表子查询",slug:"表子查询"},{level:2,title:"EXISTS 和 NOT EXISTS 子查询",slug:"exists-和-not-exists-子查询"},{level:2,title:"不相关子查询和相关子查询",slug:"不相关子查询和相关子查询"},{level:2,title:"对同一个表的子查询",slug:"对同一个表的子查询"}],readingTime:{minutes:8.83,words:2649},updateTime:"2022年9月26日 17:43",updateTimeStamp:1664185395e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"组合查询语法",frontmatter:{summary:"组合查询语法 将多条查询语句产生的结果集合并起来的查询方式称为合并查询，或者组合查询。 涉及单表的组合查询 使用 UNION 连接多个查询语句，要求： 各查询语句的查询列表处，表达式数量相同; 各查询语句的查询列表中，位置相同的表达式的类型应该是相同的（建议，非强制，因为 MySQL 将会自动的进行类型转换）; 组合查询的结果集中显示的列名将以第一个查询中的",meta:[{property:"og:url",content:"/backend-knowledge/mysql/union-query.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"组合查询语法"},{property:"og:description",content:"组合查询语法 将多条查询语句产生的结果集合并起来的查询方式称为合并查询，或者组合查询。 涉及单表的组合查询 使用 UNION 连接多个查询语句，要求： 各查询语句的查询列表处，表达式数量相同; 各查询语句的查询列表中，位置相同的表达式的类型应该是相同的（建议，非强制，因为 MySQL 将会自动的进行类型转换）; 组合查询的结果集中显示的列名将以第一个查询中的"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/mysql/union-query.html",relativePath:"backend-knowledge/mysql/union-query.md",key:"v-5cb68f69",path:"/backend-knowledge/mysql/union-query/",headers:[{level:2,title:"涉及单表的组合查询",slug:"涉及单表的组合查询"},{level:2,title:"涉及不同表的组合查询",slug:"涉及不同表的组合查询"},{level:3,title:"包含或去除重复的行",slug:"包含或去除重复的行"},{level:3,title:"组合查询中的 ORDER BY 和 LIMIT 子句",slug:"组合查询中的-order-by-和-limit-子句"}],readingTime:{minutes:2.36,words:709},updateTime:"2022年9月26日 17:43",updateTimeStamp:1664185395e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"连接查询语法",frontmatter:{summary:'连接查询语法 连接查询就是把各个表中的记录都取出来，组成新的更大的记录，这个组合后的结果集可以方便我们分析数据，就不用老是两个表对照着看了。 基本语法 " 下面用 t1 和 t2 分别指代两张表的名字，m 和 n 指代表中的列名。" 在 MySQL 中，连接查询的语法是在 FROM 语句后边用多个用逗号 , 隔开表名，就像这样： 查询列表处的 * 代表从 F',meta:[{property:"og:url",content:"/backend-knowledge/mysql/join-query.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"连接查询语法"},{property:"og:description",content:'连接查询语法 连接查询就是把各个表中的记录都取出来，组成新的更大的记录，这个组合后的结果集可以方便我们分析数据，就不用老是两个表对照着看了。 基本语法 " 下面用 t1 和 t2 分别指代两张表的名字，m 和 n 指代表中的列名。" 在 MySQL 中，连接查询的语法是在 FROM 语句后边用多个用逗号 , 隔开表名，就像这样： 查询列表处的 * 代表从 F'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/mysql/join-query.html",relativePath:"backend-knowledge/mysql/join-query.md",key:"v-0e0dfebd",path:"/backend-knowledge/mysql/join-query/",headers:[{level:2,title:"基本语法",slug:"基本语法"},{level:2,title:"内连接和外连接",slug:"内连接和外连接"},{level:3,title:"区别",slug:"区别"},{level:3,title:"WHERE 和 ON 子句",slug:"where-和-on-子句"},{level:3,title:"左（外）连接的语法",slug:"左-外-连接的语法"},{level:3,title:"右（外）连接的语法",slug:"右-外-连接的语法"},{level:3,title:"内连接的语法",slug:"内连接的语法"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:7.21,words:2162},updateTime:"2022年9月26日 17:43",updateTimeStamp:1664185395e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"类和实例",frontmatter:{summary:"类和实例 类是抽象的模板，用来描述具有相同属性和方法的对象的集合；实例是根据类创建出来的一个个具体的「对象」，每个对象都拥有相同的方法，但各自的数据可能不同。 Python 使用 class 关键字来定义类，类名通常采用大驼峰式命名方式。 Python 采用多继承机制，一个类可以同时继承多个父类（也叫基类、超类），继承的基类有先后顺序，写在类名后的圆括号里。",meta:[{property:"og:url",content:"/backend-knowledge/python/class-and-instance.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"类和实例"},{property:"og:description",content:"类和实例 类是抽象的模板，用来描述具有相同属性和方法的对象的集合；实例是根据类创建出来的一个个具体的「对象」，每个对象都拥有相同的方法，但各自的数据可能不同。 Python 使用 class 关键字来定义类，类名通常采用大驼峰式命名方式。 Python 采用多继承机制，一个类可以同时继承多个父类（也叫基类、超类），继承的基类有先后顺序，写在类名后的圆括号里。"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/class-and-instance.html",relativePath:"backend-knowledge/python/class-and-instance.md",key:"v-13e73f3a",path:"/backend-knowledge/python/class-and-instance/",readingTime:{minutes:1.33,words:398},updateTime:"2022年6月30日 11:37",updateTimeStamp:1656560221e3,createTime:"2021年11月19日 11:27",createTimeStamp:1637292423e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:6}]},{title:"协程",frontmatter:{summary:"协程 前置知识 并发和并行 并发指的是一个 CPU 同时处理多个程序，但是在同一时间点只会处理其中一个。核心是程序切换的速度非常快，1 秒钟内可以完全很多次程序切换，肉眼无法感知。; 并行指的是多个 CPU 同时处理多个程序，同一时间点可以处理多个。; 同步和异步 同步是执行 IO 操作时，必须等待执行完成才得到返回结果。; 异步是执行 IO 操作时，不必等",meta:[{property:"og:url",content:"/backend-knowledge/python/coroutine.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"协程"},{property:"og:description",content:"协程 前置知识 并发和并行 并发指的是一个 CPU 同时处理多个程序，但是在同一时间点只会处理其中一个。核心是程序切换的速度非常快，1 秒钟内可以完全很多次程序切换，肉眼无法感知。; 并行指的是多个 CPU 同时处理多个程序，同一时间点可以处理多个。; 同步和异步 同步是执行 IO 操作时，必须等待执行完成才得到返回结果。; 异步是执行 IO 操作时，不必等"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/coroutine.html",relativePath:"backend-knowledge/python/coroutine.md",key:"v-1fc940de",path:"/backend-knowledge/python/coroutine/",headers:[{level:2,title:"前置知识",slug:"前置知识"},{level:3,title:"并发和并行",slug:"并发和并行"},{level:3,title:"同步和异步",slug:"同步和异步"},{level:3,title:"协程的历史",slug:"协程的历史"},{level:3,title:"协程，线程和进程的区别",slug:"协程-线程和进程的区别"},{level:2,title:"协程的用法",slug:"协程的用法"},{level:3,title:"协程的基础使用",slug:"协程的基础使用"},{level:3,title:"多个协程子任务",slug:"多个协程子任务"},{level:3,title:"并发执行协程子任务",slug:"并发执行协程子任务"},{level:3,title:"在协程中使用普通函数",slug:"在协程中使用普通函数"},{level:2,title:"asyncio 异步 I/O 库",slug:"asyncio-异步-i-o-库"},{level:3,title:"事件循环",slug:"事件循环"},{level:3,title:"创建 task",slug:"创建-task"},{level:3,title:"回调返回值",slug:"回调返回值"},{level:3,title:"循环事件关闭",slug:"循环事件关闭"},{level:2,title:"协程的主要使用场景",slug:"协程的主要使用场景"},{level:2,title:"协程相对于多线程的优点",slug:"协程相对于多线程的优点"},{level:2,title:"协程的缺点",slug:"协程的缺点"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:17.4,words:5221},updateTime:"2023年8月28日 13:23",updateTimeStamp:1693200207e3,createTime:"2022年9月16日 17:48",createTimeStamp:1663321682e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:5}]},{title:"Python",frontmatter:{summary:'Python " 本系列主要针对 Python3 进行知识点梳理，并会实时跟进 Python 最新稳定版的新特性。" Python 是一门跨平台、可移植、可扩展、交互式、解释型、面向对象的动态语言。 跨平台：Python 支持 Windows、Linux 和 MAC OS 等主流操作系统。; 可移植：代码通常不需要多少改动就能移植到别的平台上使用。; 可扩展',meta:[{property:"og:url",content:"/backend-knowledge/python/"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Python"},{property:"og:description",content:'Python " 本系列主要针对 Python3 进行知识点梳理，并会实时跟进 Python 最新稳定版的新特性。" Python 是一门跨平台、可移植、可扩展、交互式、解释型、面向对象的动态语言。 跨平台：Python 支持 Windows、Linux 和 MAC OS 等主流操作系统。; 可移植：代码通常不需要多少改动就能移植到别的平台上使用。; 可扩展'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/",relativePath:"backend-knowledge/python/README.md",key:"v-19dae748",path:"/backend-knowledge/python/",readingTime:{minutes:2.5,words:751},updateTime:"2021年12月1日 18:10",updateTimeStamp:1638353418e3,createTime:"2021年11月19日 11:27",createTimeStamp:1637292423e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"类的继承",frontmatter:{summary:"类的继承 Python 支持多父类的继承机制，所以需要注意圆括号中基类的顺序，若是基类中有相同的方法名，并且在子类使用时未指定，Python 会从左至右搜索基类中是否包含该方法。一旦查找到则直接调用，后面不再继续查找。 object 是 Python 为所有对象提供的父类，默认提供一些内置的属性、方法；可以使用 dir 方法查看。 新式类和旧式类 新式类 以",meta:[{property:"og:url",content:"/backend-knowledge/python/class-inheritance.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"类的继承"},{property:"og:description",content:"类的继承 Python 支持多父类的继承机制，所以需要注意圆括号中基类的顺序，若是基类中有相同的方法名，并且在子类使用时未指定，Python 会从左至右搜索基类中是否包含该方法。一旦查找到则直接调用，后面不再继续查找。 object 是 Python 为所有对象提供的父类，默认提供一些内置的属性、方法；可以使用 dir 方法查看。 新式类和旧式类 新式类 以"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/class-inheritance.html",relativePath:"backend-knowledge/python/class-inheritance.md",key:"v-ff454952",path:"/backend-knowledge/python/class-inheritance/",headers:[{level:2,title:"新式类和旧式类",slug:"新式类和旧式类"},{level:3,title:"新式类",slug:"新式类"},{level:3,title:"旧式类",slug:"旧式类"},{level:3,title:"区别",slug:"区别"},{level:3,title:"建议使用新式类",slug:"建议使用新式类"},{level:2,title:"继承机制",slug:"继承机制"},{level:3,title:"第一个例子",slug:"第一个例子"},{level:3,title:"第二个例子",slug:"第二个例子"},{level:3,title:"MRO 算法",slug:"mro-算法"}],readingTime:{minutes:27.25,words:8174},updateTime:"2022年6月28日 17:03",updateTimeStamp:1656407017e3,createTime:"2021年11月19日 11:27",createTimeStamp:1637292423e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"类变量和实例变量",frontmatter:{summary:'类变量和实例变量 " 有的人也会把类变量称为类属性，把实例变量称为实例属性。" 类变量 定义在类中，方法之外的变量，称作类变量。类变量是所有实例公有的变量，每一个实例都可以访问、修改类变量。 定义方式 类变量在类中的定义： 调用方式 可以通过类名或者实例名加圆点的方式访问类变量，比如： 也可以使用实例变量去访问类变量，此时实例会先在自己的实例变量列表里查找是',meta:[{property:"og:url",content:"/backend-knowledge/python/class-variables-and-instance-variables.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"类变量和实例变量"},{property:"og:description",content:'类变量和实例变量 " 有的人也会把类变量称为类属性，把实例变量称为实例属性。" 类变量 定义在类中，方法之外的变量，称作类变量。类变量是所有实例公有的变量，每一个实例都可以访问、修改类变量。 定义方式 类变量在类中的定义： 调用方式 可以通过类名或者实例名加圆点的方式访问类变量，比如： 也可以使用实例变量去访问类变量，此时实例会先在自己的实例变量列表里查找是'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/class-variables-and-instance-variables.html",relativePath:"backend-knowledge/python/class-variables-and-instance-variables.md",key:"v-9e7abe3a",path:"/backend-knowledge/python/class-variables-and-instance-variables/",headers:[{level:2,title:"类变量",slug:"类变量"},{level:3,title:"定义方式",slug:"定义方式"},{level:3,title:"调用方式",slug:"调用方式"},{level:2,title:"实例变量",slug:"实例变量"},{level:3,title:"定义方式",slug:"定义方式-2"},{level:3,title:"调用方式",slug:"调用方式-2"},{level:2,title:"类变量和实例变量区别",slug:"类变量和实例变量区别"},{level:2,title:"类里面的三种类型变量",slug:"类里面的三种类型变量"}],readingTime:{minutes:2.95,words:886},updateTime:"2022年6月29日 10:01",updateTimeStamp:1656468085e3,createTime:"2022年6月23日 16:38",createTimeStamp:165597351e4,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"编译器与解释器",frontmatter:{summary:"编译器与解释器 区别 编译器与解释器作为高级语言与机器之间的翻译官，都是将代码翻译成机器可以执行的二进制机器码，只不过在运行原理和翻译过程有不同。 编译器：先整体编译再执行。特点是运行速度快，但任何一个小改动都需要整体重新编译。可脱离编译环境运行。代表语言是 C 语言。 解释器：边解释边执行。特点是运行速度慢，但部分改动不需要整体重新编译。不可脱离解释器环境",meta:[{property:"og:url",content:"/backend-knowledge/python/compiler-and-interpreter.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"编译器与解释器"},{property:"og:description",content:"编译器与解释器 区别 编译器与解释器作为高级语言与机器之间的翻译官，都是将代码翻译成机器可以执行的二进制机器码，只不过在运行原理和翻译过程有不同。 编译器：先整体编译再执行。特点是运行速度快，但任何一个小改动都需要整体重新编译。可脱离编译环境运行。代表语言是 C 语言。 解释器：边解释边执行。特点是运行速度慢，但部分改动不需要整体重新编译。不可脱离解释器环境"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/compiler-and-interpreter.html",relativePath:"backend-knowledge/python/compiler-and-interpreter.md",key:"v-59e8fc63",path:"/backend-knowledge/python/compiler-and-interpreter/",headers:[{level:2,title:"区别",slug:"区别"},{level:2,title:"Python 解释器种类",slug:"python-解释器种类"},{level:2,title:"pyc文件",slug:"pyc文件"}],readingTime:{minutes:2.81,words:844},updateTime:"2021年11月19日 11:27",updateTimeStamp:1637292423e3,createTime:"2021年11月19日 11:27",createTimeStamp:1637292423e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"函数装饰器",frontmatter:{summary:"函数装饰器 函数装饰器（Function Decorators）：从字面上理解，就是装饰一个函数。可以在不修改原代码的情况下，为被装饰的函数添加一些功能并返回它。 函数装饰器的语法是将 @装饰器名 放在被装饰函数上面，下面是个例子： 前置概念 首先需要明确以下几个概念和原则，才能更好的理解装饰器： Python 程序是从上往下顺序执行的，碰到函数的定义代码块",meta:[{property:"og:url",content:"/backend-knowledge/python/function-decorators.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"函数装饰器"},{property:"og:description",content:"函数装饰器 函数装饰器（Function Decorators）：从字面上理解，就是装饰一个函数。可以在不修改原代码的情况下，为被装饰的函数添加一些功能并返回它。 函数装饰器的语法是将 @装饰器名 放在被装饰函数上面，下面是个例子： 前置概念 首先需要明确以下几个概念和原则，才能更好的理解装饰器： Python 程序是从上往下顺序执行的，碰到函数的定义代码块"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/function-decorators.html",relativePath:"backend-knowledge/python/function-decorators.md",key:"v-e8930e32",path:"/backend-knowledge/python/function-decorators/",headers:[{level:2,title:"前置概念",slug:"前置概念"},{level:2,title:"模拟场景",slug:"模拟场景"},{level:2,title:"实现原理",slug:"实现原理"},{level:2,title:"为什么要两层函数",slug:"为什么要两层函数"},{level:2,title:"函数参数传递",slug:"函数参数传递"},{level:2,title:"多层装饰器",slug:"多层装饰器"},{level:2,title:"装饰器携带参数",slug:"装饰器携带参数"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:10.31,words:3094},updateTime:"2023年3月24日 17:14",updateTimeStamp:1679649272e3,createTime:"2021年11月19日 11:27",createTimeStamp:1637292423e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"数据类型",frontmatter:{summary:"数据类型 在 Python 中，数据类型分内置的和自定义的。内置的共有 8 种常用的以及一些不太常用的数据类型；而自定义的一般以类的形式，根据需要组合内置类型成为独特的数据类型。 8 种常用内置数据类型： 数字; 布尔; 列表; 元组; 字符串; 字典; bytes; 集合 set; 数字 Python 支持三种不同的数字类型，整数、浮点数和复数： 整数（I",meta:[{property:"og:url",content:"/backend-knowledge/python/data-types.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"数据类型"},{property:"og:description",content:"数据类型 在 Python 中，数据类型分内置的和自定义的。内置的共有 8 种常用的以及一些不太常用的数据类型；而自定义的一般以类的形式，根据需要组合内置类型成为独特的数据类型。 8 种常用内置数据类型： 数字; 布尔; 列表; 元组; 字符串; 字典; bytes; 集合 set; 数字 Python 支持三种不同的数字类型，整数、浮点数和复数： 整数（I"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/data-types.html",relativePath:"backend-knowledge/python/data-types.md",key:"v-6cc7a823",path:"/backend-knowledge/python/data-types/",headers:[{level:2,title:"数字",slug:"数字"},{level:3,title:"整数（Int）",slug:"整数-int"},{level:3,title:"浮点数（float）",slug:"浮点数-float"},{level:3,title:"复数（complex）",slug:"复数-complex"},{level:2,title:"布尔",slug:"布尔"},{level:2,title:"列表（List）",slug:"列表-list"},{level:3,title:"插入列表元素",slug:"插入列表元素"},{level:3,title:"删除列表元素",slug:"删除列表元素"},{level:3,title:"列表与列表合并",slug:"列表与列表合并"},{level:3,title:"切片",slug:"切片"},{level:2,title:"元组（Tuple）",slug:"元组-tuple"},{level:2,title:"字符串",slug:"字符串"},{level:3,title:"字符编码",slug:"字符编码"},{level:2,title:"字典",slug:"字典"},{level:3,title:"创建字典",slug:"创建字典"},{level:3,title:"访问字典",slug:"访问字典"},{level:3,title:"删除字典元素、清空字典和删除字典",slug:"删除字典元素、清空字典和删除字典"},{level:3,title:"遍历字典",slug:"遍历字典"},{level:2,title:"bytes",slug:"bytes"},{level:2,title:"集合 set",slug:"集合-set"}],readingTime:{minutes:10.46,words:3137},updateTime:"2022年9月21日 17:55",updateTimeStamp:166375413e4,createTime:"2021年11月19日 11:27",createTimeStamp:1637292423e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"@property 装饰器",frontmatter:{summary:'@property 装饰器 " 这篇里面我会更多的把「实例变量」称为「实例属性」，前面说过变量和属性其实只是叫法不同，但这篇里面的某些语境里，叫属性会更加通顺一点。" 前言 前面在讲实例变量的时候，我们可以通过 实例对象.实例属性 来访问对应的实例属性，但这种做法是不建议的，因为它破坏了类的封装原则。 正常情况下，实例属性应该是隐藏的，只允许通过类提供的方法',meta:[{property:"og:url",content:"/backend-knowledge/python/decorator-property.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"@property 装饰器"},{property:"og:description",content:'@property 装饰器 " 这篇里面我会更多的把「实例变量」称为「实例属性」，前面说过变量和属性其实只是叫法不同，但这篇里面的某些语境里，叫属性会更加通顺一点。" 前言 前面在讲实例变量的时候，我们可以通过 实例对象.实例属性 来访问对应的实例属性，但这种做法是不建议的，因为它破坏了类的封装原则。 正常情况下，实例属性应该是隐藏的，只允许通过类提供的方法'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/decorator-property.html",relativePath:"backend-knowledge/python/decorator-property.md",key:"v-56e80b43",path:"/backend-knowledge/python/decorator-property/",headers:[{level:2,title:"前言",slug:"前言"},{level:2,title:"getter、setter 方法",slug:"getter、setter-方法"},{level:2,title:"property() 方法",slug:"property-方法"},{level:3,title:"语法格式",slug:"语法格式"},{level:3,title:"代码示例",slug:"代码示例"},{level:3,title:"都是默认参数",slug:"都是默认参数"},{level:2,title:"@property",slug:"property"},{level:3,title:"代码示例",slug:"代码示例-2"},{level:2,title:"setter 装饰器",slug:"setter-装饰器"},{level:3,title:"语法格式",slug:"语法格式-2"},{level:3,title:"代码示例",slug:"代码示例-3"},{level:2,title:"deleter 装饰器",slug:"deleter-装饰器"},{level:3,title:"语法格式",slug:"语法格式-3"},{level:3,title:"代码示例",slug:"代码示例-4"},{level:2,title:"@property 踩坑",slug:"property-踩坑"}],readingTime:{minutes:4.05,words:1216},updateTime:"2022年6月30日 11:37",updateTimeStamp:1656560221e3,createTime:"2022年6月27日 11:48",createTimeStamp:165630169e4,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"生成器 generator",frontmatter:{summary:"生成器 generator 什么是生成器 若列表元素可以按照某种算法算出来，就可以在循环的过程中不断推算出后续需要用的元素，而不必创建完整的 list，从而节省大量的空间; 边循环边计算的机制，叫生成器（generator）; 最简易生成器 只要把一个列表生成式的 [] 改成 () ，就创建了一个 generator。 列表生成式 可以理解为一种生成列表的简",meta:[{property:"og:url",content:"/backend-knowledge/python/generator.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"生成器 generator"},{property:"og:description",content:"生成器 generator 什么是生成器 若列表元素可以按照某种算法算出来，就可以在循环的过程中不断推算出后续需要用的元素，而不必创建完整的 list，从而节省大量的空间; 边循环边计算的机制，叫生成器（generator）; 最简易生成器 只要把一个列表生成式的 [] 改成 () ，就创建了一个 generator。 列表生成式 可以理解为一种生成列表的简"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/generator.html",relativePath:"backend-knowledge/python/generator.md",key:"v-7fd1659b",path:"/backend-knowledge/python/generator/",headers:[{level:2,title:"什么是生成器",slug:"什么是生成器"},{level:2,title:"最简易生成器",slug:"最简易生成器"},{level:2,title:"打印生成器的元素",slug:"打印生成器的元素"},{level:3,title:"通过 for 循环遍历",slug:"通过-for-循环遍历"},{level:3,title:"next() 方法",slug:"next-方法"},{level:3,title:".__next()__",slug:"next"},{level:2,title:"yield 函数",slug:"yield-函数"},{level:3,title:"斐波拉契数列",slug:"斐波拉契数列"},{level:2,title:"生成器的执行流程",slug:"生成器的执行流程"},{level:2,title:"生成器的工作原理",slug:"生成器的工作原理"},{level:2,title:"生成器的优点",slug:"生成器的优点"},{level:2,title:"生成器的应用场景",slug:"生成器的应用场景"}],readingTime:{minutes:3.85,words:1154},updateTime:"2022年7月15日 10:44",updateTimeStamp:165785309e4,createTime:"2022年7月4日 13:50",createTimeStamp:165691384e4,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"函数参数",frontmatter:{summary:"函数参数 在 Python 中，函数的参数定义灵活度非常大，分为位置参数、默认参数、动态参数和关键字参数，这些都是形参的种类。 位置参数 也叫必传参数，顺序参数，是最重要的，也是必须在调用函数时明确提供的参数。位置参数必须按先后顺序，一一对应，个数不多不少的传递。 代码示例： 注意: Python 在做函数参数传递的时候不会对数据类型进行检查，理论上你传什么",meta:[{property:"og:url",content:"/backend-knowledge/python/function-params.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"函数参数"},{property:"og:description",content:"函数参数 在 Python 中，函数的参数定义灵活度非常大，分为位置参数、默认参数、动态参数和关键字参数，这些都是形参的种类。 位置参数 也叫必传参数，顺序参数，是最重要的，也是必须在调用函数时明确提供的参数。位置参数必须按先后顺序，一一对应，个数不多不少的传递。 代码示例： 注意: Python 在做函数参数传递的时候不会对数据类型进行检查，理论上你传什么"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/function-params.html",relativePath:"backend-knowledge/python/function-params.md",key:"v-5675388b",path:"/backend-knowledge/python/function-params/",headers:[{level:2,title:"位置参数",slug:"位置参数"},{level:2,title:"默认参数",slug:"默认参数"},{level:2,title:"动态参数",slug:"动态参数"},{level:3,title:"*args",slug:"args"},{level:3,title:"**kwargs",slug:"kwargs"},{level:3,title:"万能参数",slug:"万能参数"},{level:3,title:"关键字参数",slug:"关键字参数"}],readingTime:{minutes:4.56,words:1367},updateTime:"2021年11月19日 11:27",updateTimeStamp:1637292423e3,createTime:"2021年11月19日 11:27",createTimeStamp:1637292423e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"全局解释器锁（GIL）",frontmatter:{summary:"全局解释器锁（GIL） Python 中要使用多线程和线程锁，那一定会涉及到 GIL 的知识点，这样是 Python 这门语言在多线程处理的特殊之处。 前言 在大多数环境中，单核 CPU 情况下，本质上某一时刻只能有一个线程被执行。多核 CPU 则可以支持多个线程同时执行。 但是在 Python 中，无论 CPU 有多少核，同时只能执行一个线程。这是由于 G",meta:[{property:"og:url",content:"/backend-knowledge/python/global-interpreter-lock.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"全局解释器锁（GIL）"},{property:"og:description",content:"全局解释器锁（GIL） Python 中要使用多线程和线程锁，那一定会涉及到 GIL 的知识点，这样是 Python 这门语言在多线程处理的特殊之处。 前言 在大多数环境中，单核 CPU 情况下，本质上某一时刻只能有一个线程被执行。多核 CPU 则可以支持多个线程同时执行。 但是在 Python 中，无论 CPU 有多少核，同时只能执行一个线程。这是由于 G"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/global-interpreter-lock.html",relativePath:"backend-knowledge/python/global-interpreter-lock.md",key:"v-eb78c31e",path:"/backend-knowledge/python/global-interpreter-lock/",headers:[{level:2,title:"前言",slug:"前言"},{level:2,title:"Python 多线程的工作流程",slug:"python-多线程的工作流程"},{level:2,title:"Python 多线程还有用吗",slug:"python-多线程还有用吗"},{level:2,title:"为什么不能去掉 GIL",slug:"为什么不能去掉-gil"},{level:2,title:"实际使用中的建议",slug:"实际使用中的建议"}],readingTime:{minutes:3.71,words:1113},updateTime:"2022年7月12日 10:43",updateTimeStamp:1657593793e3,createTime:"2022年7月12日 10:43",createTimeStamp:1657593793e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"实例方法、类方法、静态方法",frontmatter:{summary:"实例方法、类方法、静态方法 Python 的类中包含实例方法、类方法、静态方法三种方法。这些方法无论是在代码编排中还是内存中都归属于类，区别在于传入的参数和调用方式不同。 实例方法 定义方式 至少要包含一个 self 参数，且为第一个参数，用于绑定调用此方法的实例对象（Python 会自动完成绑定）; self 代表的是类的实例，而非类本身; 注意：self",meta:[{property:"og:url",content:"/backend-knowledge/python/instancemethod-classmethod-staticmethod.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"实例方法、类方法、静态方法"},{property:"og:description",content:"实例方法、类方法、静态方法 Python 的类中包含实例方法、类方法、静态方法三种方法。这些方法无论是在代码编排中还是内存中都归属于类，区别在于传入的参数和调用方式不同。 实例方法 定义方式 至少要包含一个 self 参数，且为第一个参数，用于绑定调用此方法的实例对象（Python 会自动完成绑定）; self 代表的是类的实例，而非类本身; 注意：self"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/instancemethod-classmethod-staticmethod.html",relativePath:"backend-knowledge/python/instancemethod-classmethod-staticmethod.md",key:"v-3b15f9e6",path:"/backend-knowledge/python/instancemethod-classmethod-staticmethod/",headers:[{level:2,title:"实例方法",slug:"实例方法"},{level:3,title:"定义方式",slug:"定义方式"},{level:3,title:"调用方式",slug:"调用方式"},{level:3,title:"使用场景",slug:"使用场景"},{level:2,title:"类方法",slug:"类方法"},{level:3,title:"定义方式",slug:"定义方式-2"},{level:3,title:"调用方式",slug:"调用方式-2"},{level:3,title:"使用场景",slug:"使用场景-2"},{level:2,title:"静态方法",slug:"静态方法"},{level:3,title:"定义方式",slug:"定义方式-3"},{level:3,title:"调用方式",slug:"调用方式-3"},{level:3,title:"使用场景",slug:"使用场景-3"},{level:2,title:"总结一下",slug:"总结一下"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:6.06,words:1817},updateTime:"2022年9月15日 14:31",updateTimeStamp:1663223515e3,createTime:"2022年6月23日 17:27",createTimeStamp:1655976426e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:4}]},{title:"迭代器 Iterator",frontmatter:{summary:"迭代器 Iterator 前置知识 可迭代对象（Iterable） 可以直接用 for 循环来遍历的对象都叫可迭代对象，在 Python 中，list/tuple/string/dict/set/bytes 都是可以迭代的数据类型。 可以通过 collections 模块的 Iterable 类型来判断一个对象是否可迭代： 生成器（generator） 它可",meta:[{property:"og:url",content:"/backend-knowledge/python/iterator.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"迭代器 Iterator"},{property:"og:description",content:"迭代器 Iterator 前置知识 可迭代对象（Iterable） 可以直接用 for 循环来遍历的对象都叫可迭代对象，在 Python 中，list/tuple/string/dict/set/bytes 都是可以迭代的数据类型。 可以通过 collections 模块的 Iterable 类型来判断一个对象是否可迭代： 生成器（generator） 它可"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/iterator.html",relativePath:"backend-knowledge/python/iterator.md",key:"v-66e0c13a",path:"/backend-knowledge/python/iterator/",headers:[{level:2,title:"前置知识",slug:"前置知识"},{level:3,title:"可迭代对象（Iterable）",slug:"可迭代对象-iterable"},{level:3,title:"生成器（generator）",slug:"生成器-generator"},{level:2,title:"什么是迭代器",slug:"什么是迭代器"},{level:3,title:"判断是不是迭代器",slug:"判断是不是迭代器"},{level:3,title:"iter() 函数",slug:"iter-函数"},{level:3,title:"next() 函数",slug:"next-函数"},{level:2,title:"迭代器和可迭代的区别：",slug:"迭代器和可迭代的区别"}],readingTime:{minutes:2.63,words:789},updateTime:"2022年7月5日 11:58",updateTimeStamp:1656993535e3,createTime:"2022年7月5日 11:58",createTimeStamp:1656993535e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"Python 多版本虚拟环境共存",frontmatter:{summary:'Python 多版本虚拟环境共存 " Windows 中要做到环境隔离，在使用 PyCharm 新建项目时直接选择 New environment using [Options] 即可，本文主要针对 Linux 环境。" " " " 注意一下，下面这些操作，最好在 root 用户下运行" 背景 在实际开发过程中，经常需要同时用到多个版本的 Python，并在',meta:[{property:"og:url",content:"/backend-knowledge/python/multiple-python-install-on-linux.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Python 多版本虚拟环境共存"},{property:"og:description",content:'Python 多版本虚拟环境共存 " Windows 中要做到环境隔离，在使用 PyCharm 新建项目时直接选择 New environment using [Options] 即可，本文主要针对 Linux 环境。" " " " 注意一下，下面这些操作，最好在 root 用户下运行" 背景 在实际开发过程中，经常需要同时用到多个版本的 Python，并在'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/multiple-python-install-on-linux.html",relativePath:"backend-knowledge/python/multiple-python-install-on-linux.md",key:"v-6b030fa3",path:"/backend-knowledge/python/multiple-python-install-on-linux/",headers:[{level:2,title:"背景",slug:"背景"},{level:2,title:"安装 Python",slug:"安装-python"},{level:2,title:"安装工具",slug:"安装工具"},{level:2,title:"创建虚拟环境",slug:"创建虚拟环境"},{level:2,title:"进入虚拟环境",slug:"进入虚拟环境"},{level:2,title:"退出虚拟环境",slug:"退出虚拟环境"},{level:2,title:"删除虚拟环境",slug:"删除虚拟环境"},{level:2,title:"原理",slug:"原理"},{level:2,title:"在 crontab 里运行虚拟环境中的脚本",slug:"在-crontab-里运行虚拟环境中的脚本"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:6.43,words:1928},updateTime:"2023年8月15日 14:16",updateTimeStamp:1692080165e3,createTime:"2022年9月21日 13:12",createTimeStamp:1663737177e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:4}]},{title:"语法规范",frontmatter:{summary:"语法规范 标识符 所谓的标识符就是对变量、常量、函数、类等对象起的名字。 Python 对于标识符的命名有如下规定： 1）第一个字符必须是字母表中的字母或下划线 _ 值得注意的是，在 Python 中以下划线开头的标识符通常都有特殊意义： 以单下划线开头的变量，例如 _foo 代表禁止外部访问的类成员，需通过类提供的接口进行访问，不能用 from xxx i",meta:[{property:"og:url",content:"/backend-knowledge/python/grammar.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"语法规范"},{property:"og:description",content:"语法规范 标识符 所谓的标识符就是对变量、常量、函数、类等对象起的名字。 Python 对于标识符的命名有如下规定： 1）第一个字符必须是字母表中的字母或下划线 _ 值得注意的是，在 Python 中以下划线开头的标识符通常都有特殊意义： 以单下划线开头的变量，例如 _foo 代表禁止外部访问的类成员，需通过类提供的接口进行访问，不能用 from xxx i"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/grammar.html",relativePath:"backend-knowledge/python/grammar.md",key:"v-7b14be73",path:"/backend-knowledge/python/grammar/",headers:[{level:2,title:"标识符",slug:"标识符"},{level:2,title:"保留字",slug:"保留字"},{level:2,title:"注释",slug:"注释"},{level:2,title:"代码头两行",slug:"代码头两行"}],readingTime:{minutes:3.6,words:1079},updateTime:"2021年11月19日 11:27",updateTimeStamp:1637292423e3,createTime:"2021年11月19日 11:27",createTimeStamp:1637292423e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"魔术方法（双下划线方法）",frontmatter:{summary:"魔术方法（双下划线方法） Python 给类和对象提供了大量的内置方法，这些内置方法也称魔法方法。它们总是在某种条件下自动触发执行，并且都是以 __ 双下划线包起来的方法，所以也叫双下划线方法。 常见的魔法方法大致可分为以下几类： 构造与初始化; 类的表示; 访问控制; 比较操作; 容器类操作; 可调用对象; 序列化; 构造与初始化 new 该方法是当类被调",meta:[{property:"og:url",content:"/backend-knowledge/python/magic-methods.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"魔术方法（双下划线方法）"},{property:"og:description",content:"魔术方法（双下划线方法） Python 给类和对象提供了大量的内置方法，这些内置方法也称魔法方法。它们总是在某种条件下自动触发执行，并且都是以 __ 双下划线包起来的方法，所以也叫双下划线方法。 常见的魔法方法大致可分为以下几类： 构造与初始化; 类的表示; 访问控制; 比较操作; 容器类操作; 可调用对象; 序列化; 构造与初始化 new 该方法是当类被调"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/magic-methods.html",relativePath:"backend-knowledge/python/magic-methods.md",key:"v-35ed2a9d",path:"/backend-knowledge/python/magic-methods/",headers:[{level:2,title:"构造与初始化",slug:"构造与初始化"},{level:3,title:"__new__",slug:"new"},{level:3,title:"__init__",slug:"init"},{level:3,title:"__del__",slug:"del"},{level:2,title:"类的表示",slug:"类的表示"},{level:3,title:"__str__ 和 __repr__",slug:"str-和-repr"},{level:3,title:"__bool__",slug:"bool"},{level:2,title:"访问控制",slug:"访问控制"},{level:2,title:"比较操作",slug:"比较操作"},{level:3,title:"__eq__",slug:"eq"},{level:3,title:"__ne__",slug:"ne"},{level:3,title:"__lt__ 和 __gt__",slug:"lt-和-gt"},{level:2,title:"容器类操作（重要）",slug:"容器类操作-重要"},{level:2,title:"可调用对象",slug:"可调用对象"},{level:2,title:"序列化",slug:"序列化"},{level:2,title:"一个类总结魔法方法",slug:"一个类总结魔法方法"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:26.04,words:7812},updateTime:"2022年9月15日 14:31",updateTimeStamp:1663223515e3,createTime:"2022年6月30日 11:37",createTimeStamp:165656025e4,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"super() 函数",frontmatter:{summary:"super() 函数 super() 的作用 在子类中如果有与父类同名的成员，那就会覆盖（Override）掉父类里的成员。 此时如果想强制调用父类的成员，可以使用 super() 函数。这是一个非常重要的函数，最常见的就是通过 super 调用父类的实例化方法 init。 语法：super(子类名, self).父类方法()，需要传入的是子类名和 self",meta:[{property:"og:url",content:"/backend-knowledge/python/method-super.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"super() 函数"},{property:"og:description",content:"super() 函数 super() 的作用 在子类中如果有与父类同名的成员，那就会覆盖（Override）掉父类里的成员。 此时如果想强制调用父类的成员，可以使用 super() 函数。这是一个非常重要的函数，最常见的就是通过 super 调用父类的实例化方法 init。 语法：super(子类名, self).父类方法()，需要传入的是子类名和 self"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/method-super.html",relativePath:"backend-knowledge/python/method-super.md",key:"v-5fe961c3",path:"/backend-knowledge/python/method-super/",headers:[{level:2,title:"super() 的作用",slug:"super-的作用"},{level:2,title:"多继承中使用 super",slug:"多继承中使用-super"},{level:2,title:"调用父类方法有两种方式",slug:"调用父类方法有两种方式"}],readingTime:{minutes:1.63,words:489},updateTime:"2022年6月28日 17:11",updateTimeStamp:1656407475e3,createTime:"2022年6月28日 17:11",createTimeStamp:1656407475e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"面向对象编程",frontmatter:{summary:"面向对象编程 面向对象编程：Object Oriented Programming，简称 OOP，是一种程序设计方法。与它相对的，是面向过程编程。 下面分别用简单的例子描述两者的区别。 面向过程编程 面向过程编程的大体流程如下： 这种结构中函数是核心，函数调用是关键，一切围绕函数展开。 假如现在要实现一个需求，根据对象的生物种类，发出不同的叫声，比如有狗、猫",meta:[{property:"og:url",content:"/backend-knowledge/python/oop.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"面向对象编程"},{property:"og:description",content:"面向对象编程 面向对象编程：Object Oriented Programming，简称 OOP，是一种程序设计方法。与它相对的，是面向过程编程。 下面分别用简单的例子描述两者的区别。 面向过程编程 面向过程编程的大体流程如下： 这种结构中函数是核心，函数调用是关键，一切围绕函数展开。 假如现在要实现一个需求，根据对象的生物种类，发出不同的叫声，比如有狗、猫"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/oop.html",relativePath:"backend-knowledge/python/oop.md",key:"v-27d5863e",path:"/backend-knowledge/python/oop/",headers:[{level:2,title:"面向过程编程",slug:"面向过程编程"},{level:2,title:"面向对象编程",slug:"面向对象编程-2"}],readingTime:{minutes:2.11,words:633},updateTime:"2021年11月19日 11:27",updateTimeStamp:1637292423e3,createTime:"2021年11月19日 11:27",createTimeStamp:1637292423e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"使用 Celery 实现任务调度",frontmatter:{summary:'使用 Celery 实现任务调度 " 这个库的使用需要基于 Linux 环境，本案例的环境为：" " " " * CentOS 7" " * Python 3.8.9" " * Redis 7" " * 其中 Celery 大版本为 5，更低的版本可能用法会略微不同，具体参考官方文档。" Celery 介绍 Celery 是 Python 的一个第三方模块，',meta:[{property:"og:url",content:"/backend-knowledge/python/python-lib-celery.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"使用 Celery 实现任务调度"},{property:"og:description",content:'使用 Celery 实现任务调度 " 这个库的使用需要基于 Linux 环境，本案例的环境为：" " " " * CentOS 7" " * Python 3.8.9" " * Redis 7" " * 其中 Celery 大版本为 5，更低的版本可能用法会略微不同，具体参考官方文档。" Celery 介绍 Celery 是 Python 的一个第三方模块，'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/python-lib-celery.html",relativePath:"backend-knowledge/python/python-lib-celery.md",key:"v-3e6bd7cb",path:"/backend-knowledge/python/python-lib-celery/",headers:[{level:2,title:"Celery 介绍",slug:"celery-介绍"},{level:3,title:"模块特点",slug:"模块特点"},{level:3,title:"使用场景",slug:"使用场景"},{level:3,title:"工作流程",slug:"工作流程"},{level:3,title:"安装 Celery",slug:"安装-celery"},{level:2,title:"实现异步任务示例",slug:"实现异步任务示例"},{level:3,title:"最简易代码",slug:"最简易代码"},{level:3,title:"生产用代码",slug:"生产用代码"},{level:2,title:"实现定时任务示例",slug:"实现定时任务示例"},{level:3,title:"生产用代码",slug:"生产用代码-2"},{level:3,title:"crontab 参数",slug:"crontab-参数"},{level:2,title:"其他常用要点",slug:"其他常用要点"},{level:3,title:"调用任务：delay 和 apply_async",slug:"调用任务-delay-和-apply-async"},{level:3,title:"celery 的配置",slug:"celery-的配置"},{level:3,title:"Task 对象",slug:"task-对象"},{level:3,title:"任务分组",slug:"任务分组"},{level:3,title:"任务链式调用",slug:"任务链式调用"},{level:2,title:"完整代码",slug:"完整代码"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:38.14,words:11441},updateTime:"2023年8月15日 14:16",updateTimeStamp:1692080165e3,createTime:"2022年9月22日 17:40",createTimeStamp:1663839658e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:6}]},{title:"使用 Fabric 执行 SSH",frontmatter:{summary:'使用 Fabric 执行 SSH 关于 Fabric Fabric 是 Python 库中的一个模块，它是基于 Paramiko 的基础上做了一层更高的封装，操作起来更加方便。我们可以用它通过网络进行系统管理和应用程序部署，也可以通过 SSH 执行 Shell 命令。 由于 Fabric 是 Python 的一个第三方库，首先需要安装它： " 题外话：曾经有',meta:[{property:"og:url",content:"/backend-knowledge/python/python-lib-fabric.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"使用 Fabric 执行 SSH"},{property:"og:description",content:'使用 Fabric 执行 SSH 关于 Fabric Fabric 是 Python 库中的一个模块，它是基于 Paramiko 的基础上做了一层更高的封装，操作起来更加方便。我们可以用它通过网络进行系统管理和应用程序部署，也可以通过 SSH 执行 Shell 命令。 由于 Fabric 是 Python 的一个第三方库，首先需要安装它： " 题外话：曾经有'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/python-lib-fabric.html",relativePath:"backend-knowledge/python/python-lib-fabric.md",key:"v-3f385d76",path:"/backend-knowledge/python/python-lib-fabric/",headers:[{level:2,title:"关于 Fabric",slug:"关于-fabric"},{level:2,title:"一个简单的例子",slug:"一个简单的例子"},{level:2,title:"命令行用法",slug:"命令行用法"},{level:2,title:"交互式操作",slug:"交互式操作"},{level:2,title:"传输文件",slug:"传输文件"},{level:2,title:"服务器批量操作",slug:"服务器批量操作"},{level:2,title:"身份认证",slug:"身份认证"},{level:2,title:"配置文件",slug:"配置文件"},{level:2,title:"网络网关",slug:"网络网关"},{level:2,title:"总结",slug:"总结"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:10.78,words:3233},updateTime:"2021年11月19日 11:27",updateTimeStamp:1637292423e3,createTime:"2021年11月19日 11:27",createTimeStamp:1637292423e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"公共变量、私有变量、保护变量",frontmatter:{summary:"公共变量、私有变量、保护变量 公共变量、方法 在 Python 的类里面，所有变量和方法默认都是公共的。 但 Python 也可以设置受保护、私有类型的变量或方法。 私有变量、方法 在实际开发中，对象的某些变量或方法可能只希望在对象的内部被使用，而不希望在外部被访问到; 私有变量：就是对象不希望公开访问的变量; 私有方法：就是对象不希望公开访问的方法; 定义",meta:[{property:"og:url",content:"/backend-knowledge/python/public-private-protected.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"公共变量、私有变量、保护变量"},{property:"og:description",content:"公共变量、私有变量、保护变量 公共变量、方法 在 Python 的类里面，所有变量和方法默认都是公共的。 但 Python 也可以设置受保护、私有类型的变量或方法。 私有变量、方法 在实际开发中，对象的某些变量或方法可能只希望在对象的内部被使用，而不希望在外部被访问到; 私有变量：就是对象不希望公开访问的变量; 私有方法：就是对象不希望公开访问的方法; 定义"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/public-private-protected.html",relativePath:"backend-knowledge/python/public-private-protected.md",key:"v-2144be23",path:"/backend-knowledge/python/public-private-protected/",headers:[{level:2,title:"公共变量、方法",slug:"公共变量、方法"},{level:2,title:"私有变量、方法",slug:"私有变量、方法"},{level:3,title:"定义方式",slug:"定义方式"},{level:3,title:"外部访问和修改私有成员",slug:"外部访问和修改私有成员"},{level:3,title:"私有成员的原理",slug:"私有成员的原理"},{level:2,title:"受保护的变量、方法",slug:"受保护的变量、方法"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:4.04,words:1211},updateTime:"2022年6月30日 11:37",updateTimeStamp:1656560221e3,createTime:"2022年6月23日 18:13",createTimeStamp:1655979221e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:4}]},{title:"使用 openpyxl 处理新版本 Excel",frontmatter:{summary:"使用 openpyxl 处理新版本 Excel 关于 openpyxl openpyxl 是读写新版本 Excel（.xlsx） 的第三方库，是一个比较综合的工具，能够同时读取和修改 Excel 文档。支持的格式有 .xlsx、.xlsm、.xltx 和 .xltm。 安装比较简单，直接用 pip 工具即可，安装命令如下： 写入 Excel 下面是一个使用 ",meta:[{property:"og:url",content:"/backend-knowledge/python/python-lib-openpyxl.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"使用 openpyxl 处理新版本 Excel"},{property:"og:description",content:"使用 openpyxl 处理新版本 Excel 关于 openpyxl openpyxl 是读写新版本 Excel（.xlsx） 的第三方库，是一个比较综合的工具，能够同时读取和修改 Excel 文档。支持的格式有 .xlsx、.xlsm、.xltx 和 .xltm。 安装比较简单，直接用 pip 工具即可，安装命令如下： 写入 Excel 下面是一个使用 "},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/python-lib-openpyxl.html",relativePath:"backend-knowledge/python/python-lib-openpyxl.md",key:"v-36b3e67e",path:"/backend-knowledge/python/python-lib-openpyxl/",headers:[{level:2,title:"关于 openpyxl",slug:"关于-openpyxl"},{level:2,title:"写入 Excel",slug:"写入-excel"},{level:2,title:"读取 Excel",slug:"读取-excel"},{level:2,title:"常用读取 API",slug:"常用读取-api"},{level:3,title:"打开 Excel 表格并获取表格名称",slug:"打开-excel-表格并获取表格名称"},{level:3,title:"通过 Sheet 名称获取表格",slug:"通过-sheet-名称获取表格"},{level:3,title:"获取表格的尺寸大小",slug:"获取表格的尺寸大小"},{level:3,title:"获取最大行、最大列",slug:"获取最大行、最大列"},{level:3,title:"获取表格内某个格子的数据",slug:"获取表格内某个格子的数据"},{level:3,title:"获取某个单元格的行数、列数、坐标",slug:"获取某个单元格的行数、列数、坐标"},{level:3,title:"获取一系列单元格",slug:"获取一系列单元格"},{level:2,title:"常用写入 API",slug:"常用写入-api"},{level:3,title:"向指定单元格写入数据并保存",slug:"向指定单元格写入数据并保存"},{level:3,title:"向表格中插入行数据",slug:"向表格中插入行数据"},{level:3,title:"使用 Excel 函数公式(很有用)",slug:"使用-excel-函数公式-很有用"},{level:3,title:"插入空行和空列",slug:"插入空行和空列"},{level:3,title:"删除指定行和列",slug:"删除指定行和列"},{level:3,title:"移动指定单元格",slug:"移动指定单元格"},{level:3,title:"创建新的 Sheet 表",slug:"创建新的-sheet-表"},{level:3,title:"删除指定 Sheet 表",slug:"删除指定-sheet-表"},{level:3,title:"复制一个 Sheet 表到另外一份 Excel",slug:"复制一个-sheet-表到另外一份-excel"},{level:3,title:"修改 Sheet 表的名称",slug:"修改-sheet-表的名称"},{level:3,title:"创建新的 Excel 文件",slug:"创建新的-excel-文件"},{level:3,title:"冻结窗口",slug:"冻结窗口"},{level:3,title:"给表格添加筛选器",slug:"给表格添加筛选器"},{level:2,title:"常用格式化 API",slug:"常用格式化-api"},{level:3,title:"修改字体样式",slug:"修改字体样式"},{level:3,title:"获取单元格的字体样式",slug:"获取单元格的字体样式"},{level:3,title:"设置对齐样式",slug:"设置对齐样式"},{level:3,title:"设置边框样式",slug:"设置边框样式"},{level:3,title:"设置填充样式",slug:"设置填充样式"},{level:3,title:"设置行高和列宽",slug:"设置行高和列宽"},{level:3,title:"合并单元格",slug:"合并单元格"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:10.29,words:3086},updateTime:"2021年11月19日 11:27",updateTimeStamp:1637292423e3,createTime:"2021年11月19日 11:27",createTimeStamp:1637292423e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"PEP8 风格",frontmatter:{summary:"PEP8 风格 什么是 PEP8 风格 Python Enhancement Proposal #8 叫作 PEP 8; 它是一份针对 Python 代码格式而编订的风格指南; 尽管只要语法正确，代码随便怎么写都行，但采用一致的风格可以使代码更易读、更易懂; 与空白有关的建议 在 Python 中，空白（whitespace）在语法上相当重要 用空格（spa",meta:[{property:"og:url",content:"/backend-knowledge/python/pep-0008.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"PEP8 风格"},{property:"og:description",content:"PEP8 风格 什么是 PEP8 风格 Python Enhancement Proposal #8 叫作 PEP 8; 它是一份针对 Python 代码格式而编订的风格指南; 尽管只要语法正确，代码随便怎么写都行，但采用一致的风格可以使代码更易读、更易懂; 与空白有关的建议 在 Python 中，空白（whitespace）在语法上相当重要 用空格（spa"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/pep-0008.html",relativePath:"backend-knowledge/python/pep-0008.md",key:"v-04fed7e3",path:"/backend-knowledge/python/pep-0008/",headers:[{level:2,title:"什么是 PEP8 风格",slug:"什么是-pep8-风格"},{level:2,title:"与空白有关的建议",slug:"与空白有关的建议"},{level:2,title:"与命名有关的建议",slug:"与命名有关的建议"},{level:2,title:"与表达式和语句有关的建议",slug:"与表达式和语句有关的建议"},{level:2,title:"与 import 有关的建议",slug:"与-import-有关的建议"},{level:2,title:"Pylint",slug:"pylint"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:3.83,words:1149},updateTime:"2022年7月18日 14:30",updateTimeStamp:1658125829e3,createTime:"2022年7月18日 14:30",createTimeStamp:1658125829e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"使用 logging 配置日志的方式",frontmatter:{summary:"使用 logging 配置日志的方式 正是开发中不可避免的要进行日志记录，Python 内置模 块logging 提供了强大的日志记录能力，不过在使用前的配置阶段会比较复杂，本文整理 logging 的常见使用方法和一些基本概念。 三种配置方式简介 目前社区主流的有以下 3 种方式来配置 logging： 使用 Python 代码显式的创建 loggers，",meta:[{property:"og:url",content:"/backend-knowledge/python/python-lib-logging.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"使用 logging 配置日志的方式"},{property:"og:description",content:"使用 logging 配置日志的方式 正是开发中不可避免的要进行日志记录，Python 内置模 块logging 提供了强大的日志记录能力，不过在使用前的配置阶段会比较复杂，本文整理 logging 的常见使用方法和一些基本概念。 三种配置方式简介 目前社区主流的有以下 3 种方式来配置 logging： 使用 Python 代码显式的创建 loggers，"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/python-lib-logging.html",relativePath:"backend-knowledge/python/python-lib-logging.md",key:"v-7aea9dba",path:"/backend-knowledge/python/python-lib-logging/",headers:[{level:2,title:"三种配置方式简介",slug:"三种配置方式简介"},{level:2,title:"四大核心组件功能",slug:"四大核心组件功能"},{level:2,title:"第一种：直接通过代码来配置",slug:"第一种-直接通过代码来配置"},{level:3,title:"简单示例",slug:"简单示例"},{level:2,title:"第二种：使用配置文件来配置",slug:"第二种-使用配置文件来配置"},{level:3,title:"简单示例",slug:"简单示例-2"},{level:3,title:"配置文件说明",slug:"配置文件说明"},{level:2,title:"第三种：使用字典来配置",slug:"第三种-使用字典来配置"},{level:3,title:"简单示例",slug:"简单示例-3"},{level:3,title:"配置字典说明",slug:"配置字典说明"},{level:2,title:"实际开发配置模板",slug:"实际开发配置模板"},{level:3,title:"需求分析",slug:"需求分析"},{level:3,title:"用 YAML 配置",slug:"用-yaml-配置"},{level:3,title:"用 JSON 配置",slug:"用-json-配置"},{level:3,title:"用 Dict 配置",slug:"用-dict-配置"},{level:2,title:"其它常用的知识点",slug:"其它常用的知识点"},{level:3,title:"消息显示格式",slug:"消息显示格式"},{level:3,title:"日志记录的堆栈追踪",slug:"日志记录的堆栈追踪"},{level:3,title:"日志回滚模式",slug:"日志回滚模式"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:30.33,words:9100},updateTime:"2022年10月16日 16:11",updateTimeStamp:1665907901e3,createTime:"2022年10月15日 19:09",createTimeStamp:1665832179e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"使用 Paramiko 执行 SSH",frontmatter:{summary:"使用 Paramiko 执行 SSH 关于 SSH SSH 是一种网络协议，用于远程访问，并管理一个或多个设备。SSH 使用公钥加密来实现安全性。Telnet 和 SSH 之间的重要区别在于 SSH 使用加密，这意味着通过网络传输的所有 SSH 数据都可以防止未经授权的实施拦截。 SSH 基于 TCP，默认端口号为 22。在终端运行 ssh 命令以连接远程服",meta:[{property:"og:url",content:"/backend-knowledge/python/python-lib-paramiko.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"使用 Paramiko 执行 SSH"},{property:"og:description",content:"使用 Paramiko 执行 SSH 关于 SSH SSH 是一种网络协议，用于远程访问，并管理一个或多个设备。SSH 使用公钥加密来实现安全性。Telnet 和 SSH 之间的重要区别在于 SSH 使用加密，这意味着通过网络传输的所有 SSH 数据都可以防止未经授权的实施拦截。 SSH 基于 TCP，默认端口号为 22。在终端运行 ssh 命令以连接远程服"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/python-lib-paramiko.html",relativePath:"backend-knowledge/python/python-lib-paramiko.md",key:"v-6486f24f",path:"/backend-knowledge/python/python-lib-paramiko/",headers:[{level:2,title:"关于 SSH",slug:"关于-ssh"},{level:2,title:"关于 Paramiko",slug:"关于-paramiko"},{level:2,title:"用法示例",slug:"用法示例"},{level:2,title:"非交互式与交互式场景",slug:"非交互式与交互式场景"},{level:2,title:"总结",slug:"总结"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:4.73,words:1419},updateTime:"2022年4月15日 11:34",updateTimeStamp:1649993694e3,createTime:"2021年11月19日 11:27",createTimeStamp:1637292423e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"使用 smtplib 发送电子邮件",frontmatter:{summary:"使用 smtplib 发送电子邮件 准备 1. 开启邮箱的 SMTP 服务 这里使用第三方 SMTP 服务发送邮件，可以使用 QQ 邮箱，163，Gmail 等的 SMTP 服务，但需要做以下配置，以 QQ 邮箱为例。 登录 QQ 邮箱，依次点击最上方的设置 => 账户， （QQ 邮箱设置，未来界面可能会变化） 往下翻页，找到 POP3/IMAP/SMTP/",meta:[{property:"og:url",content:"/backend-knowledge/python/python-lib-smtplib.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"使用 smtplib 发送电子邮件"},{property:"og:description",content:"使用 smtplib 发送电子邮件 准备 1. 开启邮箱的 SMTP 服务 这里使用第三方 SMTP 服务发送邮件，可以使用 QQ 邮箱，163，Gmail 等的 SMTP 服务，但需要做以下配置，以 QQ 邮箱为例。 登录 QQ 邮箱，依次点击最上方的设置 => 账户， （QQ 邮箱设置，未来界面可能会变化） 往下翻页，找到 POP3/IMAP/SMTP/"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/python-lib-smtplib.html",relativePath:"backend-knowledge/python/python-lib-smtplib.md",key:"v-19357323",path:"/backend-knowledge/python/python-lib-smtplib/",headers:[{level:2,title:"准备",slug:"准备"},{level:3,title:"1. 开启邮箱的 SMTP 服务",slug:"_1-开启邮箱的-smtp-服务"},{level:3,title:"2. 常用的邮件服务器配置",slug:"_2-常用的邮件服务器配置"},{level:2,title:"发送纯文本邮件",slug:"发送纯文本邮件"},{level:2,title:"发送 HTML 格式的邮件",slug:"发送-html-格式的邮件"},{level:2,title:"发送带附件的邮件",slug:"发送带附件的邮件"},{level:2,title:"总结",slug:"总结"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:5.91,words:1772},updateTime:"2021年11月19日 11:27",updateTimeStamp:1637292423e3,createTime:"2021年11月19日 11:27",createTimeStamp:1637292423e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"使用 subprocess 执行 cmd",frontmatter:{summary:'使用 subprocess 执行 cmd 关于 subprocess subprocess 这个模块可以用来产生子进程，并连接到子进程的标准输入/输出/错误中去，还可以得到子进程的返回值。 它是一个标准库，无需另外安装。 " subprocess 意在替代其他几个老的模块或者函数，将它们的功能集中到一起：" " * os.system" " os.spawn',meta:[{property:"og:url",content:"/backend-knowledge/python/python-lib-subprocess.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"使用 subprocess 执行 cmd"},{property:"og:description",content:'使用 subprocess 执行 cmd 关于 subprocess subprocess 这个模块可以用来产生子进程，并连接到子进程的标准输入/输出/错误中去，还可以得到子进程的返回值。 它是一个标准库，无需另外安装。 " subprocess 意在替代其他几个老的模块或者函数，将它们的功能集中到一起：" " * os.system" " os.spawn'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/python-lib-subprocess.html",relativePath:"backend-knowledge/python/python-lib-subprocess.md",key:"v-176614b1",path:"/backend-knowledge/python/python-lib-subprocess/",headers:[{level:2,title:"关于 subprocess",slug:"关于-subprocess"},{level:2,title:"subprocess.Popen()",slug:"subprocess-popen"},{level:3,title:"执行命令，不等待子进程",slug:"执行命令-不等待子进程"},{level:3,title:"执行命令，添加子进程等待",slug:"执行命令-添加子进程等待"},{level:3,title:"执行命令，获取返回结果",slug:"执行命令-获取返回结果"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:3.06,words:918},updateTime:"2022年4月29日 18:03",updateTimeStamp:1651226598e3,createTime:"2021年11月19日 11:27",createTimeStamp:1637292423e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"使用 telnetlib 执行 Telnet",frontmatter:{summary:"使用 telnetlib 执行 Telnet 关于 Telnet Telnet 是一种允许用户与远程服务器通信的网络协议，它经常被网络管理员用来远程访问和管理设备。在终端中运行 Telnet 命令，并给出远程服务器的 IP 地址或主机名，即可访问远程设备。 Telnet 基于 TCP，默认端口号为 23。首先需要确保它已安装在我们的系统上，如果没有安装，运行",meta:[{property:"og:url",content:"/backend-knowledge/python/python-lib-telnetlib.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"使用 telnetlib 执行 Telnet"},{property:"og:description",content:"使用 telnetlib 执行 Telnet 关于 Telnet Telnet 是一种允许用户与远程服务器通信的网络协议，它经常被网络管理员用来远程访问和管理设备。在终端中运行 Telnet 命令，并给出远程服务器的 IP 地址或主机名，即可访问远程设备。 Telnet 基于 TCP，默认端口号为 23。首先需要确保它已安装在我们的系统上，如果没有安装，运行"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/python-lib-telnetlib.html",relativePath:"backend-knowledge/python/python-lib-telnetlib.md",key:"v-35f8a663",path:"/backend-knowledge/python/python-lib-telnetlib/",headers:[{level:2,title:"关于 Telnet",slug:"关于-telnet"},{level:2,title:"Python 实现 Telnet 功能",slug:"python-实现-telnet-功能"},{level:2,title:"总结",slug:"总结"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:3.09,words:927},updateTime:"2021年11月19日 11:27",updateTimeStamp:1637292423e3,createTime:"2021年11月19日 11:27",createTimeStamp:1637292423e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"多线程、多进程",frontmatter:{summary:'多线程、多进程 什么是进程 " 操作系统中执行的每一个程序都是一个进程，比如微信、QQ（狭义的理解，实际上一个复杂的应用程序可能由多个进程组成）。" 概念： 进程是 CPU 资源分配的最小单位; 操作系统会给进程分配内存空间，每个进程都会有自己的地址空间、数据栈以及其他用于跟踪进程执行的辅助数据; 操作系统管理所有进程的执行，为它们合理的分配资源; 特点： ',meta:[{property:"og:url",content:"/backend-knowledge/python/threading-and-multiprocess.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"多线程、多进程"},{property:"og:description",content:'多线程、多进程 什么是进程 " 操作系统中执行的每一个程序都是一个进程，比如微信、QQ（狭义的理解，实际上一个复杂的应用程序可能由多个进程组成）。" 概念： 进程是 CPU 资源分配的最小单位; 操作系统会给进程分配内存空间，每个进程都会有自己的地址空间、数据栈以及其他用于跟踪进程执行的辅助数据; 操作系统管理所有进程的执行，为它们合理的分配资源; 特点： '},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/threading-and-multiprocess.html",relativePath:"backend-knowledge/python/threading-and-multiprocess.md",key:"v-2fd89afa",path:"/backend-knowledge/python/threading-and-multiprocess/",headers:[{level:2,title:"什么是进程",slug:"什么是进程"},{level:2,title:"什么是线程",slug:"什么是线程"},{level:2,title:"关于多线程",slug:"关于多线程"},{level:3,title:"并发与并行",slug:"并发与并行"},{level:3,title:"多线程的好处与坏处",slug:"多线程的好处与坏处"},{level:2,title:"Python 中的多进程",slug:"python-中的多进程"},{level:3,title:"代码示例",slug:"代码示例"},{level:3,title:"进程间数据共享",slug:"进程间数据共享"},{level:3,title:"进程锁",slug:"进程锁"},{level:3,title:"进程池 Pool 类",slug:"进程池-pool-类"},{level:2,title:"Python 中的多线程",slug:"python-中的多线程"},{level:3,title:"代码示例",slug:"代码示例-2"},{level:3,title:"关于 Thread 类",slug:"关于-thread-类"},{level:3,title:"让主线程等待子线程",slug:"让主线程等待子线程"},{level:3,title:"自定义线程类",slug:"自定义线程类"},{level:3,title:"线程锁",slug:"线程锁"},{level:3,title:"定时器 Timer",slug:"定时器-timer"},{level:3,title:"通过 with 语句使用线程锁",slug:"通过-with-语句使用线程锁"},{level:3,title:"线程池",slug:"线程池"},{level:2,title:"Python 中多线程与多进程的使用场景",slug:"python-中多线程与多进程的使用场景"}],readingTime:{minutes:31.69,words:9506},updateTime:"2023年8月22日 16:17",updateTimeStamp:1692692275e3,createTime:"2022年7月7日 14:10",createTimeStamp:1657174259e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:10}]},{title:"使用 xlrd 处理旧版本 Excel",frontmatter:{summary:"使用 xlrd 处理旧版本 Excel 关于 xlrd xlrd 用于读取旧版本 Excel（.xls） 中的数据，配合 xlwt 和 xlutils 也可以对 Excel 进行写入和编辑。 这三个库的职责分工如下： xlrd：用于读取 Excel 文件；; xlwt：用于写入 Excel 文件；; xlutils：用于操作 Excel 文件的实用工具，比如",meta:[{property:"og:url",content:"/backend-knowledge/python/python-lib-xlrd.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"使用 xlrd 处理旧版本 Excel"},{property:"og:description",content:"使用 xlrd 处理旧版本 Excel 关于 xlrd xlrd 用于读取旧版本 Excel（.xls） 中的数据，配合 xlwt 和 xlutils 也可以对 Excel 进行写入和编辑。 这三个库的职责分工如下： xlrd：用于读取 Excel 文件；; xlwt：用于写入 Excel 文件；; xlutils：用于操作 Excel 文件的实用工具，比如"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/python-lib-xlrd.html",relativePath:"backend-knowledge/python/python-lib-xlrd.md",key:"v-e66dc57a",path:"/backend-knowledge/python/python-lib-xlrd/",headers:[{level:2,title:"关于 xlrd",slug:"关于-xlrd"},{level:2,title:"写入 Excel",slug:"写入-excel"},{level:2,title:"读取 Excel",slug:"读取-excel"},{level:2,title:"修改 Excel",slug:"修改-excel"},{level:2,title:"格式化 Excel",slug:"格式化-excel"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:6.2,words:1859},updateTime:"2022年6月19日 11:52",updateTimeStamp:1655610768e3,createTime:"2021年11月19日 11:27",createTimeStamp:1637292423e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"类型提示 Type Hints",frontmatter:{summary:"类型提示 Type Hints 这是 Python 3.5、3.6 新增的两个特性 PEP 484 和 PEP 526，帮助 IDE 为我们提供更智能的提示。 这些新特性不会影响语言本身，只是增加一点提示。也就是说，假设变量标注了类型，传错了并不会报错，但是会有 warning，是 IDE 的智能语法提示。所以这个类型提示更像是一个规范约束，并不是一个语法限",meta:[{property:"og:url",content:"/backend-knowledge/python/type-hints.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"类型提示 Type Hints"},{property:"og:description",content:"类型提示 Type Hints 这是 Python 3.5、3.6 新增的两个特性 PEP 484 和 PEP 526，帮助 IDE 为我们提供更智能的提示。 这些新特性不会影响语言本身，只是增加一点提示。也就是说，假设变量标注了类型，传错了并不会报错，但是会有 warning，是 IDE 的智能语法提示。所以这个类型提示更像是一个规范约束，并不是一个语法限"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/type-hints.html",relativePath:"backend-knowledge/python/type-hints.md",key:"v-800e54fa",path:"/backend-knowledge/python/type-hints/",headers:[{level:2,title:"简单数据类型",slug:"简单数据类型"},{level:2,title:"复杂数据类型",slug:"复杂数据类型"},{level:3,title:"列表",slug:"列表"},{level:3,title:"元组和集合",slug:"元组和集合"},{level:3,title:"字典",slug:"字典"},{level:2,title:"函数参数与返回值",slug:"函数参数与返回值"},{level:2,title:"类作为类型",slug:"类作为类型"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:3.19,words:957},updateTime:"2023年8月25日 09:40",updateTimeStamp:1692927626e3,createTime:"2022年7月15日 14:09",createTimeStamp:1657865384e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:4}]},{title:"切片",frontmatter:{summary:"切片 切片也是一个 Python 的高级特性，实际开发中经常会用到。 正向范围取值 关键点 首位下标是 0; 前闭后开：第一个数字是起始下标，第二个数字是结束下标（但最终结果不包含它）; 代码示例 下面以字符串为例，数组同理。 反向范围取值 关键点 因为是反向，所以倒数的下标从 -1 算起; 前闭后开：第一个数字是起始下标，第二个数字是结束下标（但最终结果不",meta:[{property:"og:url",content:"/backend-knowledge/python/slicing.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"切片"},{property:"og:description",content:"切片 切片也是一个 Python 的高级特性，实际开发中经常会用到。 正向范围取值 关键点 首位下标是 0; 前闭后开：第一个数字是起始下标，第二个数字是结束下标（但最终结果不包含它）; 代码示例 下面以字符串为例，数组同理。 反向范围取值 关键点 因为是反向，所以倒数的下标从 -1 算起; 前闭后开：第一个数字是起始下标，第二个数字是结束下标（但最终结果不"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/slicing.html",relativePath:"backend-knowledge/python/slicing.md",key:"v-2c71b823",path:"/backend-knowledge/python/slicing/",headers:[{level:2,title:"正向范围取值",slug:"正向范围取值"},{level:3,title:"关键点",slug:"关键点"},{level:3,title:"代码示例",slug:"代码示例"},{level:2,title:"反向范围取值",slug:"反向范围取值"},{level:3,title:"关键点",slug:"关键点-2"},{level:3,title:"代码示例",slug:"代码示例-2"},{level:2,title:"复制对象",slug:"复制对象"},{level:3,title:"关键点",slug:"关键点-3"},{level:3,title:"代码示例",slug:"代码示例-3"},{level:2,title:"步进",slug:"步进"},{level:3,title:"代码示例",slug:"代码示例-4"}],readingTime:{minutes:2.7,words:809},updateTime:"2022年7月6日 12:31",updateTimeStamp:1657081895e3,createTime:"2022年7月6日 12:31",createTimeStamp:1657081895e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"错误和异常",frontmatter:{summary:"错误和异常 异常有很多种类型，Python 内置了几十种常见的异常，就在 builtins 模块内，无需特别导入，直接就可使用。需要注意的是，所有的异常都是异常类，首字母是大写的。 为了保证程序的正常运行，提高程序健壮性和可用性。我们应当尽量考虑全面，将可能出现的异常进行处理，而不是留在那里，任由其发生。 Python 中处理异常 基本语法 Python 内",meta:[{property:"og:url",content:"/backend-knowledge/python/try-exception.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"错误和异常"},{property:"og:description",content:"错误和异常 异常有很多种类型，Python 内置了几十种常见的异常，就在 builtins 模块内，无需特别导入，直接就可使用。需要注意的是，所有的异常都是异常类，首字母是大写的。 为了保证程序的正常运行，提高程序健壮性和可用性。我们应当尽量考虑全面，将可能出现的异常进行处理，而不是留在那里，任由其发生。 Python 中处理异常 基本语法 Python 内"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/try-exception.html",relativePath:"backend-knowledge/python/try-exception.md",key:"v-21ac67c7",path:"/backend-knowledge/python/try-exception/",headers:[{level:2,title:"Python 中处理异常",slug:"python-中处理异常"},{level:3,title:"基本语法",slug:"基本语法"},{level:3,title:"多个 except 和 else",slug:"多个-except-和-else"},{level:3,title:"finally",slug:"finally"},{level:2,title:"通用异常：Exception",slug:"通用异常-exception"},{level:2,title:"常见异常类",slug:"常见异常类"},{level:2,title:"自定义异常",slug:"自定义异常"},{level:2,title:"主动抛出异常：raise",slug:"主动抛出异常-raise"}],readingTime:{minutes:4.69,words:1408},updateTime:"2023年8月30日 16:40",updateTimeStamp:169338483e4,createTime:"2022年7月15日 09:33",createTimeStamp:1657848783e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:4}]},{title:"实现单例模式",frontmatter:{summary:"实现单例模式 单例模式确保某个类有且仅有一个实例，而且自行实例化并向整个系统提供这个实例。当我们在程序中的不同位置调用这个类进行实例化，如果类的实例不存在，会创建一个实例；如果已存在就会返回这个实例。 优点： 因为单例模式在全局内只有一个实例，因此可以节省比较多的内存空间。; 全局只有一个接入点，可以更好地进行数据同步控制，避免多重占用。; Python 实",meta:[{property:"og:url",content:"/backend-knowledge/python/singleton-pattern.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"实现单例模式"},{property:"og:description",content:"实现单例模式 单例模式确保某个类有且仅有一个实例，而且自行实例化并向整个系统提供这个实例。当我们在程序中的不同位置调用这个类进行实例化，如果类的实例不存在，会创建一个实例；如果已存在就会返回这个实例。 优点： 因为单例模式在全局内只有一个实例，因此可以节省比较多的内存空间。; 全局只有一个接入点，可以更好地进行数据同步控制，避免多重占用。; Python 实"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/singleton-pattern.html",relativePath:"backend-knowledge/python/singleton-pattern.md",key:"v-3b9606a5",path:"/backend-knowledge/python/singleton-pattern/",headers:[{level:2,title:"使用装饰器方式实现",slug:"使用装饰器方式实现"},{level:3,title:"函数装饰器方式",slug:"函数装饰器方式"},{level:3,title:"类装饰器方式",slug:"类装饰器方式"},{level:2,title:"使用类的方式实现",slug:"使用类的方式实现"},{level:2,title:"使用 __new__() 函数实现",slug:"使用-new-函数实现"}],readingTime:{minutes:5.07,words:1521},updateTime:"2022年7月3日 15:31",updateTimeStamp:1656833472e3,createTime:"2022年7月3日 15:31",createTimeStamp:1656833472e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"反射",frontmatter:{summary:"反射 定义 反射的概念是由 Smith 在 1982 年首次提出的，主要是指程序可以访问、检测和修改它本身状态或行为的一种能力。 Python 中的反射 通过字符串的形式操作对象的属性; Python 中一切皆为对象，所以只要是对象都可以使用反射; 比如：实例对象、类对象、本模块、其他模块，因为他们都能通过 对象.属性 的方式获取、调用; 反射中关键的四个函",meta:[{property:"og:url",content:"/backend-knowledge/python/reflect.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"反射"},{property:"og:description",content:"反射 定义 反射的概念是由 Smith 在 1982 年首次提出的，主要是指程序可以访问、检测和修改它本身状态或行为的一种能力。 Python 中的反射 通过字符串的形式操作对象的属性; Python 中一切皆为对象，所以只要是对象都可以使用反射; 比如：实例对象、类对象、本模块、其他模块，因为他们都能通过 对象.属性 的方式获取、调用; 反射中关键的四个函"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/reflect.html",relativePath:"backend-knowledge/python/reflect.md",key:"v-2add6272",path:"/backend-knowledge/python/reflect/",headers:[{level:2,title:"定义",slug:"定义"},{level:2,title:"Python 中的反射",slug:"python-中的反射"},{level:2,title:"反射中关键的四个函数",slug:"反射中关键的四个函数"},{level:3,title:"hasattr",slug:"hasattr"},{level:3,title:"getattr",slug:"getattr"},{level:3,title:"setattr",slug:"setattr"},{level:3,title:"delattr",slug:"delattr"},{level:2,title:"反射类的成员",slug:"反射类的成员"},{level:3,title:"hasattr 例子",slug:"hasattr-例子"},{level:3,title:"getattr 例子",slug:"getattr-例子"},{level:3,title:"setattr 例子",slug:"setattr-例子"},{level:3,title:"delattr 例子",slug:"delattr-例子"},{level:2,title:"反射本模块的成员",slug:"反射本模块的成员"},{level:2,title:"反射其他模块的成员",slug:"反射其他模块的成员"},{level:2,title:"反射的应用",slug:"反射的应用"},{level:3,title:"应用一",slug:"应用一"},{level:3,title:"应用二",slug:"应用二"}],readingTime:{minutes:4.8,words:1439},updateTime:"2022年7月2日 15:47",updateTimeStamp:1656748037e3,createTime:"2022年7月1日 10:33",createTimeStamp:1656642796e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"Redis 常用命令",frontmatter:{summary:"Redis 常用命令 基本命令 小贴士 如果通过命令行往 redis 写数据时，出现报错：(error) READONLY You can't write against a read only replica. 报错原因：当前 redis 服务是只读的，没有写权限，估计该服务是被当作从数据库使用了。 解决方案： 方法一：在 redis-cli 命令行客户端",meta:[{property:"og:url",content:"/backend-knowledge/redis/common-commands.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Redis 常用命令"},{property:"og:description",content:"Redis 常用命令 基本命令 小贴士 如果通过命令行往 redis 写数据时，出现报错：(error) READONLY You can't write against a read only replica. 报错原因：当前 redis 服务是只读的，没有写权限，估计该服务是被当作从数据库使用了。 解决方案： 方法一：在 redis-cli 命令行客户端"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/redis/common-commands.html",relativePath:"backend-knowledge/redis/common-commands.md",key:"v-45b64eee",path:"/backend-knowledge/redis/common-commands/",headers:[{level:2,title:"基本命令",slug:"基本命令"},{level:2,title:"Key 的操作命令",slug:"key-的操作命令"},{level:3,title:"查询",slug:"查询"},{level:3,title:"删除",slug:"删除"},{level:3,title:"改动",slug:"改动"},{level:3,title:"过期时间",slug:"过期时间"},{level:2,title:"字符串 String 操作命令",slug:"字符串-string-操作命令"},{level:2,title:"哈希表 Hash 操作命令",slug:"哈希表-hash-操作命令"},{level:2,title:"集合 List 操作命令",slug:"集合-list-操作命令"},{level:2,title:"无序集合 Set 操作命令",slug:"无序集合-set-操作命令"},{level:2,title:"有序集合 SortedSet 操作命令",slug:"有序集合-sortedset-操作命令"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:9.26,words:2779},updateTime:"2023年8月15日 14:16",updateTimeStamp:1692080165e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"类型提示进阶：typing 模块",frontmatter:{summary:"类型提示进阶：typing 模块 typing 模块为类型提示（Type Hints）提供运行时支持，从 Python 3.5 版本开始被作为标准库引入。 常用类型提示 数据类型 int，long，float：整型，长整形，浮点型; bool，str：布尔型，字符串类型; List，Tuple，Dict，Set：列表，元组，字典，集合; Iterable，I",meta:[{property:"og:url",content:"/backend-knowledge/python/typing-for-type-hints.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"类型提示进阶：typing 模块"},{property:"og:description",content:"类型提示进阶：typing 模块 typing 模块为类型提示（Type Hints）提供运行时支持，从 Python 3.5 版本开始被作为标准库引入。 常用类型提示 数据类型 int，long，float：整型，长整形，浮点型; bool，str：布尔型，字符串类型; List，Tuple，Dict，Set：列表，元组，字典，集合; Iterable，I"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/typing-for-type-hints.html",relativePath:"backend-knowledge/python/typing-for-type-hints.md",key:"v-44a3541b",path:"/backend-knowledge/python/typing-for-type-hints/",headers:[{level:2,title:"常用类型提示",slug:"常用类型提示"},{level:3,title:"数据类型",slug:"数据类型"},{level:3,title:"代码示例",slug:"代码示例"},{level:2,title:"List[T]、Set[T]",slug:"list-t-、set-t"},{level:2,title:"Tuple[T]",slug:"tuple-t"},{level:2,title:"类型别名",slug:"类型别名"},{level:2,title:"NewType",slug:"newtype"},{level:2,title:"Callable",slug:"callable"},{level:2,title:"TypeVar 泛型",slug:"typevar-泛型"},{level:2,title:"Any Type",slug:"any-type"},{level:2,title:"Union",slug:"union"},{level:2,title:"Optional",slug:"optional"}],readingTime:{minutes:7.22,words:2165},updateTime:"2022年7月18日 10:29",updateTimeStamp:1658111382e3,createTime:"2022年7月15日 18:14",createTimeStamp:1657880078e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:4}]},{title:"Redis 的 ACL 安全策略",frontmatter:{summary:'Redis 的 ACL 安全策略 " ACL 是 Redis 6.0 的新特性，主要是做权限控制的。" " " " 它的出现是因为在 Redis 6.0 版本之前是没有权限的概念的，所有连接的客户端都可以对 Redis 里面的数据进行操作，也可以使用所有高危命令，比如 flushall 或 flushdb 清空掉数据库里面的所有数据。" 背景 最近给新安装的',meta:[{property:"og:url",content:"/backend-knowledge/redis/access-control-list.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Redis 的 ACL 安全策略"},{property:"og:description",content:'Redis 的 ACL 安全策略 " ACL 是 Redis 6.0 的新特性，主要是做权限控制的。" " " " 它的出现是因为在 Redis 6.0 版本之前是没有权限的概念的，所有连接的客户端都可以对 Redis 里面的数据进行操作，也可以使用所有高危命令，比如 flushall 或 flushdb 清空掉数据库里面的所有数据。" 背景 最近给新安装的'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/redis/access-control-list.html",relativePath:"backend-knowledge/redis/access-control-list.md",key:"v-7ac1e1ae",path:"/backend-knowledge/redis/access-control-list/",headers:[{level:2,title:"背景",slug:"背景"},{level:2,title:"ACL 简介",slug:"acl-简介"},{level:2,title:"配置 ACL",slug:"配置-acl"},{level:3,title:"DSL 语法",slug:"dsl-语法"},{level:3,title:"使用 conf 配置 ACL",slug:"使用-conf-配置-acl"},{level:3,title:"使用外部 aclfile 配置 ACL",slug:"使用外部-aclfile-配置-acl"},{level:3,title:"对比 conf 和 aclfile 两种方式",slug:"对比-conf-和-aclfile-两种方式"},{level:2,title:"通过命令行来管理用户",slug:"通过命令行来管理用户"},{level:3,title:"持久化的方式",slug:"持久化的方式"},{level:3,title:"增删改查用户",slug:"增删改查用户"},{level:3,title:"登录和切换指定用户",slug:"登录和切换指定用户"},{level:3,title:"热加载命令",slug:"热加载命令"},{level:3,title:"持久化命令",slug:"持久化命令"},{level:3,title:"查看命令类别，用于授权",slug:"查看命令类别-用于授权"},{level:3,title:"其他常用 ACL 命令",slug:"其他常用-acl-命令"},{level:2,title:"ACL 规则",slug:"acl-规则"},{level:3,title:"启用和禁用用户",slug:"启用和禁用用户"},{level:3,title:"允许和禁止调用命令",slug:"允许和禁止调用命令"},{level:3,title:"允许和禁止访问某些 Key",slug:"允许和禁止访问某些-key"},{level:3,title:"为用户配置有效密码",slug:"为用户配置有效密码"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:20.81,words:6242},updateTime:"2023年8月15日 14:16",updateTimeStamp:1692080165e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"Redis",frontmatter:{summary:'Redis " 本系列以 Redis 7.0 作为安装版本进行知识点梳理，以 6.0 版本为分界线，前后相差还是挺大的。" Redis 是 C 语言开发的一个开源高性能键值对的内存数据库，可以用来做数据库、缓存、消息中间件等场景，是一种 NoSQL（not-only sql，非关系型数据库）的数据库。 Redis 里程碑： Redis 2.62012年10月',meta:[{property:"og:url",content:"/backend-knowledge/redis/"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Redis"},{property:"og:description",content:'Redis " 本系列以 Redis 7.0 作为安装版本进行知识点梳理，以 6.0 版本为分界线，前后相差还是挺大的。" Redis 是 C 语言开发的一个开源高性能键值对的内存数据库，可以用来做数据库、缓存、消息中间件等场景，是一种 NoSQL（not-only sql，非关系型数据库）的数据库。 Redis 里程碑： Redis 2.62012年10月'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/redis/",relativePath:"backend-knowledge/redis/README.md",key:"v-4ccfcde4",path:"/backend-knowledge/redis/",readingTime:{minutes:8.7,words:2611},updateTime:"2022年9月26日 17:43",updateTimeStamp:1664185395e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"变量与常量",frontmatter:{summary:"变量与常量 变量：在程序运行过程中，值会发生变化的量。 常量：在程序运行过程中，值不会发生变化的量。 无论是变量还是常量，在创建时都会在内存中开辟一块空间，用于保存它的值。 变量 在 Python 中，变量需要下面几点特性： Python 中的变量不需要声明类型。; 每个变量在使用前都必须赋值，变量赋值以后才会被创建。; Python 中，一切事物都是对象，",meta:[{property:"og:url",content:"/backend-knowledge/python/variables-and-constants.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"变量与常量"},{property:"og:description",content:"变量与常量 变量：在程序运行过程中，值会发生变化的量。 常量：在程序运行过程中，值不会发生变化的量。 无论是变量还是常量，在创建时都会在内存中开辟一块空间，用于保存它的值。 变量 在 Python 中，变量需要下面几点特性： Python 中的变量不需要声明类型。; 每个变量在使用前都必须赋值，变量赋值以后才会被创建。; Python 中，一切事物都是对象，"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/python/variables-and-constants.html",relativePath:"backend-knowledge/python/variables-and-constants.md",key:"v-fabc368a",path:"/backend-knowledge/python/variables-and-constants/",headers:[{level:2,title:"变量",slug:"变量"},{level:2,title:"常量",slug:"常量"}],readingTime:{minutes:11.79,words:3536},updateTime:"2022年6月29日 10:01",updateTimeStamp:1656468085e3,createTime:"2021年11月19日 11:27",createTimeStamp:1637292423e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"常用命令",frontmatter:{summary:"常用命令 一些 WEB 开发人员常用的 Docker 命令。 docker build 该命令用于从 Dockerfile 构建 Docker image，Dockerfile 是一个包含构建镜像指令的脚本。 -t 参数是 -tag 参数的缩写形式，允许镜像 image 指定名称和可选标签（冒号后面的部分），标签通常用于区分镜像的版本。; image_nam",meta:[{property:"og:url",content:"/basic-skills/docker/common-commands.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"常用命令"},{property:"og:description",content:"常用命令 一些 WEB 开发人员常用的 Docker 命令。 docker build 该命令用于从 Dockerfile 构建 Docker image，Dockerfile 是一个包含构建镜像指令的脚本。 -t 参数是 -tag 参数的缩写形式，允许镜像 image 指定名称和可选标签（冒号后面的部分），标签通常用于区分镜像的版本。; image_nam"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/docker/common-commands.html",relativePath:"basic-skills/docker/common-commands.md",key:"v-6cd390a3",path:"/basic-skills/docker/common-commands/",headers:[{level:2,title:"docker build",slug:"docker-build"},{level:2,title:"docker images",slug:"docker-images"},{level:2,title:"docker run",slug:"docker-run"},{level:2,title:"docker ps",slug:"docker-ps"},{level:2,title:"docker start/stop",slug:"docker-start-stop"},{level:2,title:"docker logs",slug:"docker-logs"},{level:2,title:"docker exec",slug:"docker-exec"},{level:2,title:"docker login",slug:"docker-login"},{level:2,title:"docker push",slug:"docker-push"},{level:2,title:"docker pull",slug:"docker-pull"},{level:2,title:"拓展",slug:"拓展"}],readingTime:{minutes:4.39,words:1318},updateTime:"2023年8月16日 13:05",updateTimeStamp:1692162316e3,createTime:"2023年3月16日 13:54",createTimeStamp:167894605e4,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:4}]},{title:"Redis 的安装与卸载",frontmatter:{summary:"Redis 的安装与卸载 CentOS 7.6 下安装 准备依赖环境 Redis 是由 C 语言开发，因此安装之前需要确保服务器已经安装了 gcc，可以通过以下命令检查服务器是否安装： 如果没有安装则通过以下命令安装： 下载、编译、安装 从官网下载 Redis7.0（截至 2022.5.3 最新版）并解压、编译、安装，设置连接 ip 和访问密码。 Redis",meta:[{property:"og:url",content:"/backend-knowledge/redis/installation-of-redis.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Redis 的安装与卸载"},{property:"og:description",content:"Redis 的安装与卸载 CentOS 7.6 下安装 准备依赖环境 Redis 是由 C 语言开发，因此安装之前需要确保服务器已经安装了 gcc，可以通过以下命令检查服务器是否安装： 如果没有安装则通过以下命令安装： 下载、编译、安装 从官网下载 Redis7.0（截至 2022.5.3 最新版）并解压、编译、安装，设置连接 ip 和访问密码。 Redis"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/redis/installation-of-redis.html",relativePath:"backend-knowledge/redis/installation-of-redis.md",key:"v-53a29949",path:"/backend-knowledge/redis/installation-of-redis/",headers:[{level:2,title:"CentOS 7.6 下安装",slug:"centos-7-6-下安装"},{level:3,title:"准备依赖环境",slug:"准备依赖环境"},{level:3,title:"下载、编译、安装",slug:"下载、编译、安装"},{level:3,title:"Redis 服务配置",slug:"redis-服务配置"},{level:3,title:"设置开机启动",slug:"设置开机启动"},{level:3,title:"防火墙相关问题",slug:"防火墙相关问题"},{level:3,title:"卸载 Redis",slug:"卸载-redis"},{level:2,title:"Ubuntu 20.04 下安装",slug:"ubuntu-20-04-下安装"},{level:3,title:"准备依赖环境",slug:"准备依赖环境-2"},{level:3,title:"下载、编译、安装",slug:"下载、编译、安装-2"},{level:3,title:"Redis 服务配置",slug:"redis-服务配置-2"},{level:3,title:"设置开机启动",slug:"设置开机启动-2"},{level:3,title:"卸载 Redis",slug:"卸载-redis-2"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:8.8,words:2640},updateTime:"2023年8月17日 14:17",updateTimeStamp:1692253077e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"Redis 数据类型",frontmatter:{summary:"Redis 数据类型 Redis 支持 5 种数据类型：string（字符串），hash（哈希），list（列表），set（集合）及 zset（sorted set：有序集合）。 String 最简单的数据存储类型。一个存储空间只保存一个数据，若字符串是数字按照数字处理。Redis 所有的操作是原子性的，采用单线程处理所有的业务，命令是一个一个执行的，因此无",meta:[{property:"og:url",content:"/backend-knowledge/redis/data-types.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Redis 数据类型"},{property:"og:description",content:"Redis 数据类型 Redis 支持 5 种数据类型：string（字符串），hash（哈希），list（列表），set（集合）及 zset（sorted set：有序集合）。 String 最简单的数据存储类型。一个存储空间只保存一个数据，若字符串是数字按照数字处理。Redis 所有的操作是原子性的，采用单线程处理所有的业务，命令是一个一个执行的，因此无"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/redis/data-types.html",relativePath:"backend-knowledge/redis/data-types.md",key:"v-c5551166",path:"/backend-knowledge/redis/data-types/",headers:[{level:2,title:"String",slug:"string"},{level:3,title:"常用操作",slug:"常用操作"},{level:3,title:"适用场景",slug:"适用场景"},{level:2,title:"Hash",slug:"hash"},{level:3,title:"常用操作",slug:"常用操作-2"},{level:3,title:"适用场景",slug:"适用场景-2"},{level:2,title:"List",slug:"list"},{level:3,title:"常用操作",slug:"常用操作-3"},{level:3,title:"适用场景",slug:"适用场景-3"},{level:2,title:"Set",slug:"set"},{level:3,title:"常用操作",slug:"常用操作-4"},{level:3,title:"适用场景",slug:"适用场景-4"},{level:2,title:"Sorted Set",slug:"sorted-set"},{level:3,title:"常用操作",slug:"常用操作-5"},{level:3,title:"适用场景",slug:"适用场景-5"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:23.52,words:7057},updateTime:"2022年9月26日 17:43",updateTimeStamp:1664185395e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"基础入门",frontmatter:{summary:"基础入门 对于 DevOps 来说，要掌握的 Docker 方方面面知识点很多，由于太过技术性，需要投入的学习成本相对大。 而作为 WEB 开发人员，暂时不需要太过深入，只需要学习使用 Docker 即可，这将有助于简化构建、测试和部署 Web 应用程序的过程。 虚拟机 VS 容器 虚拟机 虚拟机（Virtual Machine）是在一种操作系统里面运行另一",meta:[{property:"og:url",content:"/basic-skills/docker/docker-tutorial.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"基础入门"},{property:"og:description",content:"基础入门 对于 DevOps 来说，要掌握的 Docker 方方面面知识点很多，由于太过技术性，需要投入的学习成本相对大。 而作为 WEB 开发人员，暂时不需要太过深入，只需要学习使用 Docker 即可，这将有助于简化构建、测试和部署 Web 应用程序的过程。 虚拟机 VS 容器 虚拟机 虚拟机（Virtual Machine）是在一种操作系统里面运行另一"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/docker/docker-tutorial.html",relativePath:"basic-skills/docker/docker-tutorial.md",key:"v-f6be187a",path:"/basic-skills/docker/docker-tutorial/",headers:[{level:2,title:"虚拟机 VS 容器",slug:"虚拟机-vs-容器"},{level:3,title:"虚拟机",slug:"虚拟机"},{level:3,title:"Linux 容器",slug:"linux-容器"},{level:2,title:"Docker 是什么",slug:"docker-是什么"},{level:2,title:"Docker 的安装",slug:"docker-的安装"},{level:2,title:"image 文件",slug:"image-文件"},{level:2,title:"容器文件",slug:"容器文件"},{level:2,title:"Dockerfile 文件",slug:"dockerfile-文件"},{level:2,title:"入门常用的命令",slug:"入门常用的命令"},{level:2,title:"实例：hello world",slug:"实例-hello-world"},{level:2,title:"实例：制作自己的 Docker 容器",slug:"实例-制作自己的-docker-容器"},{level:3,title:"编写 Dockerfile 文件",slug:"编写-dockerfile-文件"},{level:3,title:"创建 image 文件",slug:"创建-image-文件"},{level:3,title:"生成容器",slug:"生成容器"},{level:3,title:"CMD 命令",slug:"cmd-命令"},{level:3,title:"发布 image 文件",slug:"发布-image-文件"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:14.58,words:4373},updateTime:"2023年3月17日 11:15",updateTimeStamp:1679022944e3,createTime:"2023年3月17日 11:15",createTimeStamp:1679022944e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"Redis 缓存三大问题",frontmatter:{summary:"Redis 缓存三大问题 数据缓存是 Redis 最重要的一个场景，缓存的设计包含很多技巧，设计不当将会导致严重的后果。最常见的三大问题就是： 缓存穿透; 缓存雪崩; 缓存击穿; 缓存穿透 业务背景 设计初衷是这样的： 1. 当业务系统发起某一个查询请求时，首先判断缓存中是否有该数据。 2. 如果缓存中存在，则直接返回数据。 3. 如果缓存中不存在，则再查询",meta:[{property:"og:url",content:"/backend-knowledge/redis/three-cache-problems.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Redis 缓存三大问题"},{property:"og:description",content:"Redis 缓存三大问题 数据缓存是 Redis 最重要的一个场景，缓存的设计包含很多技巧，设计不当将会导致严重的后果。最常见的三大问题就是： 缓存穿透; 缓存雪崩; 缓存击穿; 缓存穿透 业务背景 设计初衷是这样的： 1. 当业务系统发起某一个查询请求时，首先判断缓存中是否有该数据。 2. 如果缓存中存在，则直接返回数据。 3. 如果缓存中不存在，则再查询"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/backend-knowledge/redis/three-cache-problems.html",relativePath:"backend-knowledge/redis/three-cache-problems.md",key:"v-3b869ec6",path:"/backend-knowledge/redis/three-cache-problems/",headers:[{level:2,title:"缓存穿透",slug:"缓存穿透"},{level:3,title:"业务背景",slug:"业务背景"},{level:3,title:"什么是缓存穿透",slug:"什么是缓存穿透"},{level:3,title:"缓存穿透的危害",slug:"缓存穿透的危害"},{level:3,title:"缓存穿透的原因",slug:"缓存穿透的原因"},{level:3,title:"解决方案",slug:"解决方案"},{level:3,title:"方案比较",slug:"方案比较"},{level:2,title:"缓存雪崩",slug:"缓存雪崩"},{level:3,title:"什么是缓存雪崩",slug:"什么是缓存雪崩"},{level:3,title:"解决方案",slug:"解决方案-2"},{level:2,title:"缓存击穿",slug:"缓存击穿"},{level:3,title:"什么是缓存击穿",slug:"什么是缓存击穿"},{level:3,title:"缓存击穿的危害",slug:"缓存击穿的危害"},{level:3,title:"解决方案",slug:"解决方案-3"},{level:3,title:"方案比较",slug:"方案比较-2"},{level:2,title:"补充：穿透和击穿的区别",slug:"补充-穿透和击穿的区别"}],readingTime:{minutes:13.85,words:4155},updateTime:"2022年9月26日 17:43",updateTimeStamp:1664185395e3,createTime:"2022年9月26日 17:43",createTimeStamp:1664185395e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"Git",frontmatter:{summary:"Git 在实际开发中，我们会使用 Git（GitLab/GitHub）作为版本控制工具来完成团队协作。因此，熟悉 Git 的日常操作也是一名开发者的基本功。这个系列对一些术语或者理论基础不作赘述，可以参考廖雪峰老师的博文。我主要对常用操作及命令做归纳总结，并就实际工作中遇到的一些问题点作记录，方便日后查询。 必备知识点： （Git 通用操作流程图，图来源于网",meta:[{property:"og:url",content:"/basic-skills/git/"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Git"},{property:"og:description",content:"Git 在实际开发中，我们会使用 Git（GitLab/GitHub）作为版本控制工具来完成团队协作。因此，熟悉 Git 的日常操作也是一名开发者的基本功。这个系列对一些术语或者理论基础不作赘述，可以参考廖雪峰老师的博文。我主要对常用操作及命令做归纳总结，并就实际工作中遇到的一些问题点作记录，方便日后查询。 必备知识点： （Git 通用操作流程图，图来源于网"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/git/",relativePath:"basic-skills/git/README.md",key:"v-2dd43e4e",path:"/basic-skills/git/",readingTime:{minutes:2.1,words:631},updateTime:"2022年8月23日 13:36",updateTimeStamp:1661232978e3,createTime:"2021年11月17日 18:07",createTimeStamp:1637143629e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:5}]},{title:"配置密钥实现免密操作",frontmatter:{summary:'配置密钥实现免密操作 " 本文介绍如何在本地电脑上生成 ssh 秘钥并配置到 GitHub，实现免密 pull、push 代码。" Git 支持 https 和 git 两种传输协议，例如在 GitHub 在 clone 代码时会有两种协议可选： Clone with HTTPS：https://github.com/[your-github-id]/[re',meta:[{property:"og:url",content:"/basic-skills/git/add-ssh-key.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"配置密钥实现免密操作"},{property:"og:description",content:'配置密钥实现免密操作 " 本文介绍如何在本地电脑上生成 ssh 秘钥并配置到 GitHub，实现免密 pull、push 代码。" Git 支持 https 和 git 两种传输协议，例如在 GitHub 在 clone 代码时会有两种协议可选： Clone with HTTPS：https://github.com/[your-github-id]/[re'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/git/add-ssh-key.html",relativePath:"basic-skills/git/add-ssh-key.md",key:"v-f423683a",path:"/basic-skills/git/add-ssh-key/",headers:[{level:3,title:"本地生成 ssh 秘钥",slug:"本地生成-ssh-秘钥"},{level:3,title:"添加公钥到自己的远程仓库（GitHub）",slug:"添加公钥到自己的远程仓库-github"},{level:3,title:"修改 git 的 remote url",slug:"修改-git-的-remote-url"},{level:3,title:"后记",slug:"后记"}],readingTime:{minutes:2.94,words:881},updateTime:"2022年7月29日 14:08",updateTimeStamp:1659074918e3,createTime:"2021年11月18日 16:49",createTimeStamp:1637225379e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"常用命令清单",frontmatter:{summary:"常用命令清单 本地配置 Git 的配置文件为 .gitconfig，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。 下面只整理常用的 Git 配置操作： 初始化仓库 在 GitHub 上手动创建一个仓库，一般创建完的仓库会包括一个 README.md 文件。 将远程仓库克隆到本地： 增加/删除文件 以下命令默认在本地克隆下来的仓库目录下执",meta:[{property:"og:url",content:"/basic-skills/git/common-command-manual.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"常用命令清单"},{property:"og:description",content:"常用命令清单 本地配置 Git 的配置文件为 .gitconfig，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。 下面只整理常用的 Git 配置操作： 初始化仓库 在 GitHub 上手动创建一个仓库，一般创建完的仓库会包括一个 README.md 文件。 将远程仓库克隆到本地： 增加/删除文件 以下命令默认在本地克隆下来的仓库目录下执"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/git/common-command-manual.html",relativePath:"basic-skills/git/common-command-manual.md",key:"v-4ba7a82b",path:"/basic-skills/git/common-command-manual/",headers:[{level:2,title:"本地配置",slug:"本地配置"},{level:2,title:"初始化仓库",slug:"初始化仓库"},{level:2,title:"增加/删除文件",slug:"增加-删除文件"},{level:2,title:"代码提交",slug:"代码提交"},{level:2,title:"分支操作",slug:"分支操作"},{level:2,title:"标签操作",slug:"标签操作"},{level:2,title:"查看信息",slug:"查看信息"},{level:2,title:"远程同步",slug:"远程同步"},{level:2,title:"文件临存",slug:"文件临存"},{level:2,title:"撤销操作",slug:"撤销操作"}],readingTime:{minutes:8.57,words:2571},updateTime:"2022年7月29日 14:08",updateTimeStamp:1659074918e3,createTime:"2021年11月17日 23:58",createTimeStamp:1637164721e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:6}]},{title:"git rebase 的两种用法",frontmatter:{summary:"git rebase 的两种用法 前言 rebase 在 Git 中是一个非常有魅力的命令，使用得当会极大提高自己的工作效率。相反，如果乱用会给团队中其他人带来麻烦。 它的作用简要概括为：可以对某一段线性提交历史进行编辑、删除、复制、粘贴。因此，合理使用 rebase 命令可以使我们的提交历史干净、简洁。 用法一: 合并当前分支的多个 commit 记录 有",meta:[{property:"og:url",content:"/basic-skills/git/git-rebase.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"git rebase 的两种用法"},{property:"og:description",content:"git rebase 的两种用法 前言 rebase 在 Git 中是一个非常有魅力的命令，使用得当会极大提高自己的工作效率。相反，如果乱用会给团队中其他人带来麻烦。 它的作用简要概括为：可以对某一段线性提交历史进行编辑、删除、复制、粘贴。因此，合理使用 rebase 命令可以使我们的提交历史干净、简洁。 用法一: 合并当前分支的多个 commit 记录 有"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/git/git-rebase.html",relativePath:"basic-skills/git/git-rebase.md",key:"v-f7989906",path:"/basic-skills/git/git-rebase/",headers:[{level:2,title:"前言",slug:"前言"},{level:2,title:"用法一: 合并当前分支的多个 commit 记录",slug:"用法一-合并当前分支的多个-commit-记录"},{level:3,title:"1. 执行 rebase -i 命令",slug:"_1-执行-rebase-i-命令"},{level:3,title:"2. 进入 Interact 交互界面",slug:"_2-进入-interact-交互界面"},{level:3,title:"3. 使用 s 命令合并 commit",slug:"_3-使用-s-命令合并-commit"},{level:3,title:"4. 修改 commit 记录",slug:"_4-修改-commit-记录"},{level:3,title:"5. 查看最新合并情况",slug:"_5-查看最新合并情况"},{level:2,title:"用法二: 避免出现分叉合并",slug:"用法二-避免出现分叉合并"},{level:3,title:"场景 1：合并时，最舒服的情况",slug:"场景-1-合并时-最舒服的情况"},{level:3,title:"场景 2：各分支都有自己新的 commit",slug:"场景-2-各分支都有自己新的-commit"},{level:3,title:"rebase 时如何解决冲突",slug:"rebase-时如何解决冲突"},{level:2,title:"使用 rebase 的注意点",slug:"使用-rebase-的注意点"},{level:3,title:"不要基于即将 rebase 的分支去切新分支",slug:"不要基于即将-rebase-的分支去切新分支"},{level:3,title:"不要对已经合并到主分支的本地修改进行变基",slug:"不要对已经合并到主分支的本地修改进行变基"},{level:3,title:"不要在预发布/正式分支上使用 rebase -i",slug:"不要在预发布-正式分支上使用-rebase-i"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:28.33,words:8499},updateTime:"2022年11月17日 17:25",updateTimeStamp:1668677124e3,createTime:"2021年12月10日 18:03",createTimeStamp:1639130613e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:4}]},{title:"如何修改历史 commits 中的用户名和邮箱",frontmatter:{summary:"如何修改历史 commits 中的用户名和邮箱 问题描述 出于某些需求，想要： 修改某个仓库历史 commit 的用户 name 和 email 信息。; 将历史提交记录中的指定 name/email 修改为新的 name/email。; 解决方案 主要分为四个步骤： 确认本地全局邮箱/用户名; 查看仓库的历史提交信息; 批量修改历史记录中的信息; 将修改结",meta:[{property:"og:url",content:"/basic-skills/git/solution-to-change-name-and-email-in-history-commits.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"如何修改历史 commits 中的用户名和邮箱"},{property:"og:description",content:"如何修改历史 commits 中的用户名和邮箱 问题描述 出于某些需求，想要： 修改某个仓库历史 commit 的用户 name 和 email 信息。; 将历史提交记录中的指定 name/email 修改为新的 name/email。; 解决方案 主要分为四个步骤： 确认本地全局邮箱/用户名; 查看仓库的历史提交信息; 批量修改历史记录中的信息; 将修改结"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/git/solution-to-change-name-and-email-in-history-commits.html",relativePath:"basic-skills/git/solution-to-change-name-and-email-in-history-commits.md",key:"v-01e60a86",path:"/basic-skills/git/solution-to-change-name-and-email-in-history-commits/",headers:[{level:2,title:"问题描述",slug:"问题描述"},{level:2,title:"解决方案",slug:"解决方案"},{level:3,title:"确认本地全局邮箱/用户名",slug:"确认本地全局邮箱-用户名"},{level:3,title:"查看仓库的历史提交信息",slug:"查看仓库的历史提交信息"},{level:3,title:"批量修改历史记录中的信息",slug:"批量修改历史记录中的信息"},{level:3,title:"将修改结果推送到远程",slug:"将修改结果推送到远程"},{level:2,title:"Linux/Mac下可以写个脚本",slug:"linux-mac下可以写个脚本"}],readingTime:{minutes:2.37,words:712},updateTime:"2021年12月10日 10:38",updateTimeStamp:1639103931e3,createTime:"2021年11月22日 14:38",createTimeStamp:163756312e4,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"clone 速度过慢",frontmatter:{summary:"clone 速度过慢 问题描述 想从 GitHub 上面 clone 项目，很多情况下会慢的离谱，等待好久后报错： fatal: early EOF fatal: the remote end hung up unexpectedly fatal: index-pack failed error: RPC failed; curl 18 transfer c",meta:[{property:"og:url",content:"/basic-skills/git/solution-to-clone-too-slow.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"clone 速度过慢"},{property:"og:description",content:"clone 速度过慢 问题描述 想从 GitHub 上面 clone 项目，很多情况下会慢的离谱，等待好久后报错： fatal: early EOF fatal: the remote end hung up unexpectedly fatal: index-pack failed error: RPC failed; curl 18 transfer c"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/git/solution-to-clone-too-slow.html",relativePath:"basic-skills/git/solution-to-clone-too-slow.md",key:"v-03679ac6",path:"/basic-skills/git/solution-to-clone-too-slow/",headers:[{level:2,title:"问题描述",slug:"问题描述"},{level:2,title:"解决方案",slug:"解决方案"},{level:3,title:"设置代理",slug:"设置代理"},{level:3,title:"查询目前是否使用了代理",slug:"查询目前是否使用了代理"},{level:3,title:"取消代理",slug:"取消代理"},{level:2,title:"补充：关于调整 Git 的传输缓存",slug:"补充-关于调整-git-的传输缓存"}],readingTime:{minutes:2.62,words:785},updateTime:"2022年7月29日 14:08",updateTimeStamp:1659074918e3,createTime:"2021年11月18日 17:53",createTimeStamp:1637229182e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:6}]},{title:"pull 时发现代码冲突，如何解决",frontmatter:{summary:"pull 时发现代码冲突，如何解决 冲突产生的原因 多人协作的开发模式，在代码合并/更新代码时经常会遇到冲突的情况，最常见的是在 push 时，Git 发现本地修改的某个文件在远端也做了修改，那么就会提示需要先进行 pull。 pull 后会有两种情况： Git 自动做了合并（无需理会）; 提示有文件存在冲突 - CONFLICT; 还有一种情况就是同一个文",meta:[{property:"og:url",content:"/basic-skills/git/solution-to-code-conflict.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"pull 时发现代码冲突，如何解决"},{property:"og:description",content:"pull 时发现代码冲突，如何解决 冲突产生的原因 多人协作的开发模式，在代码合并/更新代码时经常会遇到冲突的情况，最常见的是在 push 时，Git 发现本地修改的某个文件在远端也做了修改，那么就会提示需要先进行 pull。 pull 后会有两种情况： Git 自动做了合并（无需理会）; 提示有文件存在冲突 - CONFLICT; 还有一种情况就是同一个文"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/git/solution-to-code-conflict.html",relativePath:"basic-skills/git/solution-to-code-conflict.md",key:"v-543328d2",path:"/basic-skills/git/solution-to-code-conflict/",headers:[{level:2,title:"冲突产生的原因",slug:"冲突产生的原因"},{level:2,title:"解决冲突的步骤",slug:"解决冲突的步骤"},{level:2,title:"冲突标记介绍",slug:"冲突标记介绍"},{level:2,title:"两种方式解决冲突",slug:"两种方式解决冲突"},{level:3,title:"方案一：用 merge 来解决冲突",slug:"方案一-用-merge-来解决冲突"},{level:3,title:"方案二：用 git rebase 消除分叉",slug:"方案二-用-git-rebase-消除分叉"},{level:3,title:"rebase 的优点和缺点",slug:"rebase-的优点和缺点"},{level:2,title:"推荐操作",slug:"推荐操作"}],readingTime:{minutes:6.55,words:1964},updateTime:"2023年3月6日 13:52",updateTimeStamp:1678081955e3,createTime:"2021年11月19日 17:40",createTimeStamp:1637314819e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:6}]},{title:"如何使用 GitFlow 工作流进行团队协作",frontmatter:{summary:'如何使用 GitFlow 工作流进行团队协作 " 以博客项目为例，记录一下应用 GitFlow 工作流进行团队协作的主要步骤和命令。" 初始化项目 首先创建项目，并创建一个 develop 分支，以后更多操作是在 develop 分支上进行的： 功能开发 我和小明开始独立开发自己的功能。比如，我开发角色模块，小明开发文章模块。我们都新建自己的功能分支，独立开',meta:[{property:"og:url",content:"/basic-skills/git/solution-to-gitflow.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"如何使用 GitFlow 工作流进行团队协作"},{property:"og:description",content:'如何使用 GitFlow 工作流进行团队协作 " 以博客项目为例，记录一下应用 GitFlow 工作流进行团队协作的主要步骤和命令。" 初始化项目 首先创建项目，并创建一个 develop 分支，以后更多操作是在 develop 分支上进行的： 功能开发 我和小明开始独立开发自己的功能。比如，我开发角色模块，小明开发文章模块。我们都新建自己的功能分支，独立开'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/git/solution-to-gitflow.html",relativePath:"basic-skills/git/solution-to-gitflow.md",key:"v-c3e2068a",path:"/basic-skills/git/solution-to-gitflow/",headers:[{level:2,title:"初始化项目",slug:"初始化项目"},{level:2,title:"功能开发",slug:"功能开发"},{level:2,title:"代码 Review 和合并",slug:"代码-review-和合并"},{level:2,title:"发布分支",slug:"发布分支"},{level:2,title:"合并发布分支",slug:"合并发布分支"},{level:2,title:"修复 bug",slug:"修复-bug"}],readingTime:{minutes:3.34,words:1002},updateTime:"2022年7月29日 14:08",updateTimeStamp:1659074918e3,createTime:"2022年2月11日 17:59",createTimeStamp:1644573549e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:4}]},{title:"如何修改 commit 信息",frontmatter:{summary:"如何修改 commit 信息 问题描述 刚刚做了一次提交，发现 commit info 填写错了，想要修改。 解决方案 分为两种情况，未推送到远程仓库和已推送到远程仓库。 情况一：已 commit 未 push 已经执行 commit，但还没有 push，要想更改 commit 信息（修改最近一次提交）。 执行上述命令后，进入注释页面进行修改，修改后保存退出",meta:[{property:"og:url",content:"/basic-skills/git/solution-to-commit-info-mistake.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"如何修改 commit 信息"},{property:"og:description",content:"如何修改 commit 信息 问题描述 刚刚做了一次提交，发现 commit info 填写错了，想要修改。 解决方案 分为两种情况，未推送到远程仓库和已推送到远程仓库。 情况一：已 commit 未 push 已经执行 commit，但还没有 push，要想更改 commit 信息（修改最近一次提交）。 执行上述命令后，进入注释页面进行修改，修改后保存退出"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/git/solution-to-commit-info-mistake.html",relativePath:"basic-skills/git/solution-to-commit-info-mistake.md",key:"v-5a39e85e",path:"/basic-skills/git/solution-to-commit-info-mistake/",headers:[{level:2,title:"问题描述",slug:"问题描述"},{level:2,title:"解决方案",slug:"解决方案"},{level:3,title:"情况一：已 commit 未 push",slug:"情况一-已-commit-未-push"},{level:3,title:"情况二：已 commit 已 push",slug:"情况二-已-commit-已-push"}],readingTime:{minutes:.83,words:250},updateTime:"2023年7月6日 15:08",updateTimeStamp:1688627284e3,createTime:"2021年11月19日 14:36",createTimeStamp:1637303798e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:7}]},{title:"如何迁移仓库并保留 commits 记录",frontmatter:{summary:"如何迁移仓库并保留 commits 记录 问题描述 假设我们需要在支持 Git 的代码托管平台间进行仓库的迁移，并保留历史 commit 记录。 例如： 将 Gitlab 上的仓库迁移到 GitHub，将 Coding 上的仓库迁移到 GitHub，将 Gitee 上的仓库迁移到 GitHub…… 迁移前后保留历史 commit 记录，可以确保在迁移后的新仓",meta:[{property:"og:url",content:"/basic-skills/git/solution-to-migrate-repository-without-losing-history-commits.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"如何迁移仓库并保留 commits 记录"},{property:"og:description",content:"如何迁移仓库并保留 commits 记录 问题描述 假设我们需要在支持 Git 的代码托管平台间进行仓库的迁移，并保留历史 commit 记录。 例如： 将 Gitlab 上的仓库迁移到 GitHub，将 Coding 上的仓库迁移到 GitHub，将 Gitee 上的仓库迁移到 GitHub…… 迁移前后保留历史 commit 记录，可以确保在迁移后的新仓"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/git/solution-to-migrate-repository-without-losing-history-commits.html",relativePath:"basic-skills/git/solution-to-migrate-repository-without-losing-history-commits.md",key:"v-fdbba342",path:"/basic-skills/git/solution-to-migrate-repository-without-losing-history-commits/",headers:[{level:2,title:"问题描述",slug:"问题描述"},{level:2,title:"解决方案",slug:"解决方案"},{level:2,title:"使用 Git Bash 操作",slug:"使用-git-bash-操作"},{level:3,title:"在 GitHub 建立新仓库",slug:"在-github-建立新仓库"},{level:3,title:"克隆 Coding 上的项目",slug:"克隆-coding-上的项目"},{level:3,title:"将克隆下来的仓库推送到 GitHub",slug:"将克隆下来的仓库推送到-github"},{level:3,title:"完成后，再执行推送所有的 Tags",slug:"完成后-再执行推送所有的-tags"},{level:2,title:"使用 TortoiseGit 操作",slug:"使用-tortoisegit-操作"},{level:3,title:"在 GitHub 建立新仓库",slug:"在-github-建立新仓库-2"},{level:3,title:"克隆 Coding 上的项目",slug:"克隆-coding-上的项目-2"},{level:3,title:"将克隆下来的仓库推送到 GitHub",slug:"将克隆下来的仓库推送到-github-2"},{level:2,title:"--all 和 --mirror 区别",slug:"all-和-mirror-区别"}],readingTime:{minutes:2.82,words:845},updateTime:"2021年12月10日 10:38",updateTimeStamp:1639103931e3,createTime:"2021年11月22日 15:11",createTimeStamp:163756508e4,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"已 commit 未 push，想修改代码",frontmatter:{summary:'已 commit 未 push，想修改代码 问题描述 刚刚 commit 了一个代码文件（test.js），发现有几个字写错了，此时还未 push。 比较粗糙的处理方式是再做一个专门修复这几个错别字的 commit。可以是可以，不过还有一个更加优雅和简单的解决方法。 解决方案 使用 commit -—amend 命令。 命令解释 "amend" 是「修正」的',meta:[{property:"og:url",content:"/basic-skills/git/solution-to-last-commit-code-mistake.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"已 commit 未 push，想修改代码"},{property:"og:description",content:'已 commit 未 push，想修改代码 问题描述 刚刚 commit 了一个代码文件（test.js），发现有几个字写错了，此时还未 push。 比较粗糙的处理方式是再做一个专门修复这几个错别字的 commit。可以是可以，不过还有一个更加优雅和简单的解决方法。 解决方案 使用 commit -—amend 命令。 命令解释 "amend" 是「修正」的'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/git/solution-to-last-commit-code-mistake.html",relativePath:"basic-skills/git/solution-to-last-commit-code-mistake.md",key:"v-58f56406",path:"/basic-skills/git/solution-to-last-commit-code-mistake/",headers:[{level:2,title:"问题描述",slug:"问题描述"},{level:2,title:"解决方案",slug:"解决方案"}],readingTime:{minutes:1.04,words:312},updateTime:"2022年4月11日 16:33",updateTimeStamp:1649666016e3,createTime:"2021年11月19日 14:59",createTimeStamp:1637305174e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:5}]},{title:"如何参与开源项目 - 提交 PR 与更新 Fork 分支",frontmatter:{summary:'如何参与开源项目 - 提交 PR 与更新 Fork 分支 " 总结一下如何参加一个开源项目，包括 Fork 代码，提出 PR，更新 Fork 分支等主要步骤。" Fork 代码 以 vue 代码举例，首先需要将 vue 官方仓库通过 GitHub 的 Fork 功能复制一份到自己的 GitHub。 （Fork vuejs/vue） 复制后的结果： （Fork',meta:[{property:"og:url",content:"/basic-skills/git/solution-to-participate-in-open-source-projects.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"如何参与开源项目 - 提交 PR 与更新 Fork 分支"},{property:"og:description",content:'如何参与开源项目 - 提交 PR 与更新 Fork 分支 " 总结一下如何参加一个开源项目，包括 Fork 代码，提出 PR，更新 Fork 分支等主要步骤。" Fork 代码 以 vue 代码举例，首先需要将 vue 官方仓库通过 GitHub 的 Fork 功能复制一份到自己的 GitHub。 （Fork vuejs/vue） 复制后的结果： （Fork'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/git/solution-to-participate-in-open-source-projects.html",relativePath:"basic-skills/git/solution-to-participate-in-open-source-projects.md",key:"v-5b0dcf12",path:"/basic-skills/git/solution-to-participate-in-open-source-projects/",headers:[{level:2,title:"Fork 代码",slug:"fork-代码"},{level:2,title:"Clone 到本地",slug:"clone-到本地"},{level:2,title:"开发前同步官方最新代码",slug:"开发前同步官方最新代码"},{level:3,title:"添加原作者远程分支",slug:"添加原作者远程分支"},{level:3,title:"拉取合并远程分支到 master 分支",slug:"拉取合并远程分支到-master-分支"},{level:2,title:"提交 PR（Pull Request）",slug:"提交-pr-pull-request"},{level:3,title:"推送本地分支到 GitHub",slug:"推送本地分支到-github"},{level:3,title:"Pull Request",slug:"pull-request"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:2.19,words:658},updateTime:"2021年12月10日 10:38",updateTimeStamp:1639103931e3,createTime:"2021年11月22日 15:43",createTimeStamp:1637566986e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"刚刚的 push 有误，想要撤回",frontmatter:{summary:"刚刚的 push 有误，想要撤回 问题描述 出于某种原因，不小心把错误的或者不完整的代码 commit 并且 push 到了远程，可能会影响到远程上代码的正确性。 Git 提供了撤回远程代码的方法。 解决方案 按下面的步骤进行： git log 查看提交记录，找到需要撤回到的提交 id（即有问题的那次提交的上一个 commit）。; git reset --",meta:[{property:"og:url",content:"/basic-skills/git/solution-to-withdraw-last-push.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"刚刚的 push 有误，想要撤回"},{property:"og:description",content:"刚刚的 push 有误，想要撤回 问题描述 出于某种原因，不小心把错误的或者不完整的代码 commit 并且 push 到了远程，可能会影响到远程上代码的正确性。 Git 提供了撤回远程代码的方法。 解决方案 按下面的步骤进行： git log 查看提交记录，找到需要撤回到的提交 id（即有问题的那次提交的上一个 commit）。; git reset --"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/git/solution-to-withdraw-last-push.html",relativePath:"basic-skills/git/solution-to-withdraw-last-push.md",key:"v-66b80c9d",path:"/basic-skills/git/solution-to-withdraw-last-push/",headers:[{level:2,title:"问题描述",slug:"问题描述"},{level:2,title:"解决方案",slug:"解决方案"}],readingTime:{minutes:.93,words:278},updateTime:"2022年6月17日 17:00",updateTimeStamp:1655456422e3,createTime:"2021年12月11日 19:49",createTimeStamp:1639223373e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"如何限制用户可使用的命令",frontmatter:{summary:'如何限制用户可使用的命令\r" 使用 Restricted Shell 来实现。" 什么是 Restricted Shell 它不是一个独立的 Shell（比如 Bash、zsh 等），它是相当于所使用的 Shell 的一种限制级模式。如果你想将你所使用的 Shell 切换为 rbash 模式，那么可以在 Shell 启动的时候加上 -restricted，或',meta:[{property:"og:url",content:"/basic-skills/linux/restricted-shell.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"如何限制用户可使用的命令"},{property:"og:description",content:'如何限制用户可使用的命令\r" 使用 Restricted Shell 来实现。" 什么是 Restricted Shell 它不是一个独立的 Shell（比如 Bash、zsh 等），它是相当于所使用的 Shell 的一种限制级模式。如果你想将你所使用的 Shell 切换为 rbash 模式，那么可以在 Shell 启动的时候加上 -restricted，或'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/linux/restricted-shell.html",relativePath:"basic-skills/linux/restricted-shell.md",key:"v-403f895d",path:"/basic-skills/linux/restricted-shell/",headers:[{level:2,title:"什么是 Restricted Shell",slug:"什么是-restricted-shell"},{level:2,title:"创建受限用户步骤",slug:"创建受限用户步骤"},{level:3,title:"建立软链接（Ubuntu 略过）",slug:"建立软链接-ubuntu-略过"},{level:3,title:"创建一个新的受限用户",slug:"创建一个新的受限用户"},{level:3,title:"编辑环境变量",slug:"编辑环境变量"},{level:3,title:"后续继续添加允许使用的命令",slug:"后续继续添加允许使用的命令"},{level:2,title:"限制现有用户步骤",slug:"限制现有用户步骤"},{level:2,title:"总结",slug:"总结"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:4.43,words:1330},updateTime:"2023年3月14日 13:52",updateTimeStamp:1678773149e3,createTime:"2023年3月14日 13:49",createTimeStamp:1678772953e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"已 commit 未 push，漏提交文件",frontmatter:{summary:"已 commit 未 push，漏提交文件 问题描述 已经 commit 但还未 push 时，发现遗漏了部分文件没有提交。 解决方案 有两种解决方案： 方案一：再次 commit 此时，Git 上会出现两次 commit。 方案二：将遗漏文件提交到之前 commit 上 --no-edit 表示提交消息不会更改，该操作会修改上一次提交的内容，但不会要求你编",meta:[{property:"og:url",content:"/basic-skills/git/solution-to-missed-file-in-last-commit.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"已 commit 未 push，漏提交文件"},{property:"og:description",content:"已 commit 未 push，漏提交文件 问题描述 已经 commit 但还未 push 时，发现遗漏了部分文件没有提交。 解决方案 有两种解决方案： 方案一：再次 commit 此时，Git 上会出现两次 commit。 方案二：将遗漏文件提交到之前 commit 上 --no-edit 表示提交消息不会更改，该操作会修改上一次提交的内容，但不会要求你编"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/git/solution-to-missed-file-in-last-commit.html",relativePath:"basic-skills/git/solution-to-missed-file-in-last-commit.md",key:"v-3f6a91fd",path:"/basic-skills/git/solution-to-missed-file-in-last-commit/",headers:[{level:2,title:"问题描述",slug:"问题描述"},{level:2,title:"解决方案",slug:"解决方案"},{level:3,title:"方案一：再次 commit",slug:"方案一-再次-commit"},{level:3,title:"方案二：将遗漏文件提交到之前 commit 上",slug:"方案二-将遗漏文件提交到之前-commit-上"}],readingTime:{minutes:.5,words:150},updateTime:"2022年4月11日 16:33",updateTimeStamp:1649666016e3,createTime:"2021年11月19日 15:23",createTimeStamp:1637306591e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:4}]},{title:"crontab 命令",frontmatter:{summary:'crontab 命令 " Linux 中的 crontab 是用来执行定时任务/周期性任务的，比较常用，这里主要记录常用知识点。" crontab 计算器 crontab 执行时间计算; 常用命令 编辑; 重新启动; 查看日志; 重定向输出 如果 crontab 不重定向输出，并且 crontab 所执行的命令有输出内容的话，默认会将输出内容以邮件的形式发送',meta:[{property:"og:url",content:"/basic-skills/linux/crontab.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"crontab 命令"},{property:"og:description",content:'crontab 命令 " Linux 中的 crontab 是用来执行定时任务/周期性任务的，比较常用，这里主要记录常用知识点。" crontab 计算器 crontab 执行时间计算; 常用命令 编辑; 重新启动; 查看日志; 重定向输出 如果 crontab 不重定向输出，并且 crontab 所执行的命令有输出内容的话，默认会将输出内容以邮件的形式发送'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/linux/crontab.html",relativePath:"basic-skills/linux/crontab.md",key:"v-abdcc626",path:"/basic-skills/linux/crontab/",headers:[{level:2,title:"crontab 计算器",slug:"crontab-计算器"},{level:2,title:"常用命令",slug:"常用命令"},{level:2,title:"重定向输出",slug:"重定向输出"},{level:2,title:"使用日期命名重定向文件",slug:"使用日期命名重定向文件"}],readingTime:{minutes:2.25,words:676},updateTime:"2023年6月12日 15:07",updateTimeStamp:1686553641e3,createTime:"2023年5月30日 13:31",createTimeStamp:1685424685e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"常用命令",frontmatter:{summary:'常用命令 文件管理 查看与检索文件内容 1）cat 命令 用于连接文件并打印到标准输出设备上。 " 语法格式：cat [-nbs] [--help] [--version] fileName" "" " 参数说明：" "" " * -n 或 --number：由 1 开始对所有输出的行数编号。" " * -b 或 --number-nonblank：和 -n',meta:[{property:"og:url",content:"/basic-skills/linux/common-commands.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"常用命令"},{property:"og:description",content:'常用命令 文件管理 查看与检索文件内容 1）cat 命令 用于连接文件并打印到标准输出设备上。 " 语法格式：cat [-nbs] [--help] [--version] fileName" "" " 参数说明：" "" " * -n 或 --number：由 1 开始对所有输出的行数编号。" " * -b 或 --number-nonblank：和 -n'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/linux/common-commands.html",relativePath:"basic-skills/linux/common-commands.md",key:"v-b5ddddb2",path:"/basic-skills/linux/common-commands/",headers:[{level:2,title:"文件管理",slug:"文件管理"},{level:3,title:"查看与检索文件内容",slug:"查看与检索文件内容"},{level:3,title:"查找文件的四个命令",slug:"查找文件的四个命令"},{level:3,title:"常用压缩，解压缩命令",slug:"常用压缩-解压缩命令"},{level:3,title:"机器间的文件传输",slug:"机器间的文件传输"},{level:2,title:"磁盘管理",slug:"磁盘管理"},{level:3,title:"创建与查询目录",slug:"创建与查询目录"},{level:3,title:"统计磁盘使用情况",slug:"统计磁盘使用情况"},{level:3,title:"打印树状目录结构",slug:"打印树状目录结构"},{level:2,title:"网络通讯",slug:"网络通讯"},{level:3,title:"ifconfig 命令",slug:"ifconfig-命令"},{level:3,title:"检测主机和端口连接情况",slug:"检测主机和端口连接情况"},{level:3,title:"netstat 命令",slug:"netstat-命令"},{level:3,title:"tcpdump 命令",slug:"tcpdump-命令"},{level:2,title:"系统管理",slug:"系统管理"},{level:3,title:"添加、修改、删除用户",slug:"添加、修改、删除用户"},{level:3,title:"date 命令",slug:"date-命令"},{level:3,title:"最近登录信息列表",slug:"最近登录信息列表"},{level:3,title:"查找进程：ps 命令",slug:"查找进程-ps-命令"},{level:3,title:"监控服务器性能",slug:"监控服务器性能"},{level:3,title:"shutdown 命令",slug:"shutdown-命令"},{level:2,title:"系统设置",slug:"系统设置"},{level:3,title:"alias 和 unalias 命令",slug:"alias-和-unalias-命令"},{level:3,title:"清除历史命令记录",slug:"清除历史命令记录"},{level:2,title:"日常操作",slug:"日常操作"},{level:3,title:"后台运行命令",slug:"后台运行命令"},{level:3,title:"同步服务器时间",slug:"同步服务器时间"},{level:2,title:"Linux 命令大全",slug:"linux-命令大全"}],readingTime:{minutes:18.04,words:5411},updateTime:"2022年8月23日 14:06",updateTimeStamp:166123478e4,createTime:"2022年3月23日 17:50",createTimeStamp:164802903e4,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:8}]},{title:"解决 vim 中文乱码问题",frontmatter:{summary:"解决 vim 中文乱码问题 问题描述 Windows 下中文字符显示正常、且是 utf-8 编码的文本，上传到 Linux 环境后用 vim 打开发现中文字符都是乱码。 解决方案 打开 vim 配置文件：/etc/vim/vimrc（Ubuntu）或 /etc/vimrc（CentOS），末尾添加： 说明： set fileencodings：设置 vim ",meta:[{property:"og:url",content:"/basic-skills/linux/solution-to-vim-encoding.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"解决 vim 中文乱码问题"},{property:"og:description",content:"解决 vim 中文乱码问题 问题描述 Windows 下中文字符显示正常、且是 utf-8 编码的文本，上传到 Linux 环境后用 vim 打开发现中文字符都是乱码。 解决方案 打开 vim 配置文件：/etc/vim/vimrc（Ubuntu）或 /etc/vimrc（CentOS），末尾添加： 说明： set fileencodings：设置 vim "},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/linux/solution-to-vim-encoding.html",relativePath:"basic-skills/linux/solution-to-vim-encoding.md",key:"v-c29d15c6",path:"/basic-skills/linux/solution-to-vim-encoding/",headers:[{level:2,title:"问题描述",slug:"问题描述"},{level:2,title:"解决方案",slug:"解决方案"},{level:2,title:"自定义 vimrc",slug:"自定义-vimrc"},{level:2,title:"临时调整 vim 配置",slug:"临时调整-vim-配置"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:8.52,words:2556},updateTime:"2023年8月11日 10:10",updateTimeStamp:1691719826e3,createTime:"2022年4月5日 13:51",createTimeStamp:1649137867e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"刚刚的 commit 有误，想要撤回",frontmatter:{summary:"刚刚的 commit 有误，想要撤回 问题描述 出于某种原因，发现刚才的一次 commit 是错的，需要回退到上一个 commit 版本，进行修复后再重新 commit。 这里可以用到的有两个命令：git reset 和 git revert，它们的区别还挺大的。 解决方案 方案一：git reset 直接删除指定的 commit。 代码回滚中这个命令用的很",meta:[{property:"og:url",content:"/basic-skills/git/solution-to-withdraw-last-commit.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"刚刚的 commit 有误，想要撤回"},{property:"og:description",content:"刚刚的 commit 有误，想要撤回 问题描述 出于某种原因，发现刚才的一次 commit 是错的，需要回退到上一个 commit 版本，进行修复后再重新 commit。 这里可以用到的有两个命令：git reset 和 git revert，它们的区别还挺大的。 解决方案 方案一：git reset 直接删除指定的 commit。 代码回滚中这个命令用的很"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/git/solution-to-withdraw-last-commit.html",relativePath:"basic-skills/git/solution-to-withdraw-last-commit.md",key:"v-760d2186",path:"/basic-skills/git/solution-to-withdraw-last-commit/",headers:[{level:2,title:"问题描述",slug:"问题描述"},{level:2,title:"解决方案",slug:"解决方案"},{level:3,title:"方案一：git reset",slug:"方案一-git-reset"},{level:3,title:"方案二：git revert",slug:"方案二-git-revert"},{level:2,title:"区别：revert 和 reset",slug:"区别-revert-和-reset"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:4.02,words:1205},updateTime:"2022年7月29日 14:08",updateTimeStamp:1659074918e3,createTime:"2021年11月19日 16:23",createTimeStamp:1637310189e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:5}]},{title:"TCP 和 UDP 可以使用同一个端口吗？",frontmatter:{summary:"TCP 和 UDP 可以使用同一个端口吗？ 关于端口的知识点，还是挺多可以讲的，比如还可以牵扯到这几个问题： 多个 TCP 服务进程可以同时绑定同一个端口吗？; 重启 TCP 服务进程时，为什么会出现 Address in use 的报错信息？又该怎么避免？; 客户端的端口可以重复使用吗？; 多个客户端可以 bind 同一个端口吗？; 客户端 TCP 连接 ",meta:[{property:"og:url",content:"/basic-skills/network/can-tcp-and-udp-use-the-same-port.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"TCP 和 UDP 可以使用同一个端口吗？"},{property:"og:description",content:"TCP 和 UDP 可以使用同一个端口吗？ 关于端口的知识点，还是挺多可以讲的，比如还可以牵扯到这几个问题： 多个 TCP 服务进程可以同时绑定同一个端口吗？; 重启 TCP 服务进程时，为什么会出现 Address in use 的报错信息？又该怎么避免？; 客户端的端口可以重复使用吗？; 多个客户端可以 bind 同一个端口吗？; 客户端 TCP 连接 "},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/network/can-tcp-and-udp-use-the-same-port.html",relativePath:"basic-skills/network/can-tcp-and-udp-use-the-same-port.md",key:"v-2a97d151",path:"/basic-skills/network/can-tcp-and-udp-use-the-same-port/",headers:[{level:2,title:"TCP 和 UDP 可以同时绑定相同的端口吗？",slug:"tcp-和-udp-可以同时绑定相同的端口吗"},{level:3,title:"参考答案",slug:"参考答案"},{level:3,title:"实验验证",slug:"实验验证"},{level:3,title:"「监听」还是「绑定」",slug:"「监听」还是「绑定」"},{level:2,title:"多个 TCP 服务进程可以绑定同一个端口吗？",slug:"多个-tcp-服务进程可以绑定同一个端口吗"},{level:3,title:"参考答案",slug:"参考答案-2"},{level:3,title:"实验验证",slug:"实验验证-2"},{level:3,title:"如何避免重启报错",slug:"如何避免重启报错"},{level:2,title:"客户端的端口可以重复使用吗？",slug:"客户端的端口可以重复使用吗"},{level:3,title:"参考答案",slug:"参考答案-3"},{level:3,title:"理论验证",slug:"理论验证"},{level:2,title:"多个客户端可以 bind 同一个端口吗？",slug:"多个客户端可以-bind-同一个端口吗"},{level:3,title:"参考答案",slug:"参考答案-4"},{level:3,title:"理论验证",slug:"理论验证-2"},{level:2,title:"客户端 TCP 连接 TIME_WAIT 状态过多，会导致端口资源耗尽而无法建立新的连接吗？",slug:"客户端-tcp-连接-time-wait-状态过多-会导致端口资源耗尽而无法建立新的连接吗"},{level:3,title:"参考答案",slug:"参考答案-5"},{level:2,title:"如何解决客户端 TCP 连接 TIME_WAIT 过多，导致无法与同一个服务器建立连接的问题？",slug:"如何解决客户端-tcp-连接-time-wait-过多-导致无法与同一个服务器建立连接的问题"},{level:3,title:"参考答案",slug:"参考答案-6"},{level:3,title:"实验验证",slug:"实验验证-3"},{level:3,title:"客户端端口选择的流程总结",slug:"客户端端口选择的流程总结"}],readingTime:{minutes:23.47,words:7040},updateTime:"2022年9月6日 13:42",updateTimeStamp:1662442974e3,createTime:"2022年9月6日 13:42",createTimeStamp:1662442974e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"计算机网络",frontmatter:{summary:"计算机网络 在实际工作中，无论是运维还是开发，无论是产品还是测试，都没法回避网络问题。但是，很多时候如果没有专门学习网络知识，对于跟网络相关的问题，就会无从下手，常见的表现就有： 面试时网络相关的八股文都会背，一遇到实际的网络故障，就不知道排查工作如何做起。; 对于网络问题，只会使用重启大法，简称 SRE（Server Restart Engineer）。;",meta:[{property:"og:url",content:"/basic-skills/network/"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"计算机网络"},{property:"og:description",content:"计算机网络 在实际工作中，无论是运维还是开发，无论是产品还是测试，都没法回避网络问题。但是，很多时候如果没有专门学习网络知识，对于跟网络相关的问题，就会无从下手，常见的表现就有： 面试时网络相关的八股文都会背，一遇到实际的网络故障，就不知道排查工作如何做起。; 对于网络问题，只会使用重启大法，简称 SRE（Server Restart Engineer）。;"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/network/",relativePath:"basic-skills/network/README.md",key:"v-9cbb4264",path:"/basic-skills/network/",readingTime:{minutes:3.11,words:933},updateTime:"2022年9月5日 11:27",updateTimeStamp:1662348475e3,createTime:"2022年8月11日 16:29",createTimeStamp:1660206592e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"如果已经建立了连接，但是客户端突然出现故障了怎么办？",frontmatter:{summary:"如果已经建立了连接，但是客户端突然出现故障了怎么办？ TCP 有一个机制是保活机制。这个机制的原理是这样的： 定义一个时间段，在这个时间段内，如果没有任何连接相关的活动，TCP 保活机制会开始作用，每隔一个时间间隔，发送一个探测报文，该探测报文包含的数据非常少，如果连续几个探测报文都没有得到响应，则认为当前的 TCP 连接已经死亡，系统内核将错误信息通知给上",meta:[{property:"og:url",content:"/basic-skills/network/tcp-connection-after-client-break-down.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"如果已经建立了连接，但是客户端突然出现故障了怎么办？"},{property:"og:description",content:"如果已经建立了连接，但是客户端突然出现故障了怎么办？ TCP 有一个机制是保活机制。这个机制的原理是这样的： 定义一个时间段，在这个时间段内，如果没有任何连接相关的活动，TCP 保活机制会开始作用，每隔一个时间间隔，发送一个探测报文，该探测报文包含的数据非常少，如果连续几个探测报文都没有得到响应，则认为当前的 TCP 连接已经死亡，系统内核将错误信息通知给上"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/network/tcp-connection-after-client-break-down.html",relativePath:"basic-skills/network/tcp-connection-after-client-break-down.md",key:"v-21a21a5d",path:"/basic-skills/network/tcp-connection-after-client-break-down/",readingTime:{minutes:3.93,words:1178},updateTime:"2022年9月4日 14:29",updateTimeStamp:1662272961e3,createTime:"2022年9月4日 14:29",createTimeStamp:1662272961e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"IP 地址",frontmatter:{summary:"IP 地址 简单介绍 IP 地址是一个网卡在网络世界的通讯地址，相当于我们现实世界的门牌号码。; IP 地址并不是根据主机台数来配置的，而是以网卡。服务器、路由器等设备往往会有两个以上网卡，即两个以上的 IP 地址。; IP 地址需要具有唯一性，如果地址冲突，会出现上不去网的情况。; 大部分的网卡都会有一个 IP 地址，但这不是必须的。; IP 地址组成 I",meta:[{property:"og:url",content:"/basic-skills/network/ip-address.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"IP 地址"},{property:"og:description",content:"IP 地址 简单介绍 IP 地址是一个网卡在网络世界的通讯地址，相当于我们现实世界的门牌号码。; IP 地址并不是根据主机台数来配置的，而是以网卡。服务器、路由器等设备往往会有两个以上网卡，即两个以上的 IP 地址。; IP 地址需要具有唯一性，如果地址冲突，会出现上不去网的情况。; 大部分的网卡都会有一个 IP 地址，但这不是必须的。; IP 地址组成 I"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/network/ip-address.html",relativePath:"basic-skills/network/ip-address.md",key:"v-faf4fa46",path:"/basic-skills/network/ip-address/",headers:[{level:2,title:"简单介绍",slug:"简单介绍"},{level:2,title:"IP 地址组成",slug:"ip-地址组成"},{level:2,title:"IP 地址划分",slug:"ip-地址划分"},{level:3,title:"五类划分",slug:"五类划分"},{level:3,title:"无类型域间选路（CIDR）",slug:"无类型域间选路-cidr"},{level:2,title:"公有 IP 地址和私有 IP 地址",slug:"公有-ip-地址和私有-ip-地址"},{level:2,title:"环回地址",slug:"环回地址"},{level:2,title:"MAC 地址",slug:"mac-地址"}],readingTime:{minutes:38.42,words:11525},updateTime:"2022年9月2日 10:02",updateTimeStamp:166208414e4,createTime:"2022年8月12日 15:24",createTimeStamp:1660289099e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"如果已经建立了连接，但是服务端的进程崩溃会发生什么？",frontmatter:{summary:"如果已经建立了连接，但是服务端的进程崩溃会发生什么？ 可以做个实验，使用 kill -9 来模拟进程崩溃的情况，发现在 kill 掉进程后，服务端会发送 FIN 报文，与客户端进行四次挥手。 （完）",meta:[{property:"og:url",content:"/basic-skills/network/tcp-connection-after-server-break-down.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"如果已经建立了连接，但是服务端的进程崩溃会发生什么？"},{property:"og:description",content:"如果已经建立了连接，但是服务端的进程崩溃会发生什么？ 可以做个实验，使用 kill -9 来模拟进程崩溃的情况，发现在 kill 掉进程后，服务端会发送 FIN 报文，与客户端进行四次挥手。 （完）"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/network/tcp-connection-after-server-break-down.html",relativePath:"basic-skills/network/tcp-connection-after-server-break-down.md",key:"v-581e8b5d",path:"/basic-skills/network/tcp-connection-after-server-break-down/",readingTime:{minutes:.24,words:72},updateTime:"2022年9月4日 14:33",updateTimeStamp:1662273229e3,createTime:"2022年9月4日 14:33",createTimeStamp:1662273229e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"网络分层模型",frontmatter:{summary:"网络分层模型 为什么要分层 如果不分层，那么应用程序就要包办一切：把应用层数据转化为二进制数据，然后操控网卡，把二进制数据发送到网络上。这期间，通信的连接方式、传输的可靠性、速度和效率的保证等等，都需要这个程序去实现。每次开发一个应用，都要把这些步骤重复做一遍。 如果分层，应用程序、操作系统、网络设备等环节各自分工：应用程序只负责实现应用层的业务逻辑，操作系",meta:[{property:"og:url",content:"/basic-skills/network/layered-network-model.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"网络分层模型"},{property:"og:description",content:"网络分层模型 为什么要分层 如果不分层，那么应用程序就要包办一切：把应用层数据转化为二进制数据，然后操控网卡，把二进制数据发送到网络上。这期间，通信的连接方式、传输的可靠性、速度和效率的保证等等，都需要这个程序去实现。每次开发一个应用，都要把这些步骤重复做一遍。 如果分层，应用程序、操作系统、网络设备等环节各自分工：应用程序只负责实现应用层的业务逻辑，操作系"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/network/layered-network-model.html",relativePath:"basic-skills/network/layered-network-model.md",key:"v-7be5d826",path:"/basic-skills/network/layered-network-model/",headers:[{level:2,title:"为什么要分层",slug:"为什么要分层"},{level:2,title:"OSI 七层模型",slug:"osi-七层模型"},{level:2,title:"TCP/IP 模型",slug:"tcp-ip-模型"},{level:2,title:"一些术语",slug:"一些术语"},{level:3,title:"TCP 流",slug:"tcp-流"},{level:3,title:"报文、帧、分组、段、数据包",slug:"报文、帧、分组、段、数据包"}],readingTime:{minutes:36.71,words:11012},updateTime:"2022年9月9日 16:15",updateTimeStamp:16627113e5,createTime:"2022年8月11日 16:29",createTimeStamp:1660206592e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"网络排查工具",frontmatter:{summary:"网络排查工具 本文介绍网络各层的排查工具。 应用层 作为前端开发者，主要以 HTTP 应用的排查工具为主（其他应用开发者应该会有各种熟悉的排查工具）。 现在主流的浏览器是 Google 的 Chrome，它本身就内置了一个开发者工具。在 Chrome 界面里按下 F12，或者是苹果系统的话，还可以按下组合键 option + command + I，启动开发",meta:[{property:"og:url",content:"/basic-skills/network/network-troubleshooting-tools.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"网络排查工具"},{property:"og:description",content:"网络排查工具 本文介绍网络各层的排查工具。 应用层 作为前端开发者，主要以 HTTP 应用的排查工具为主（其他应用开发者应该会有各种熟悉的排查工具）。 现在主流的浏览器是 Google 的 Chrome，它本身就内置了一个开发者工具。在 Chrome 界面里按下 F12，或者是苹果系统的话，还可以按下组合键 option + command + I，启动开发"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/network/network-troubleshooting-tools.html",relativePath:"basic-skills/network/network-troubleshooting-tools.md",key:"v-e9272f96",path:"/basic-skills/network/network-troubleshooting-tools/",headers:[{level:2,title:"应用层",slug:"应用层"},{level:3,title:"找到有问题的服务端 IP",slug:"找到有问题的服务端-ip"},{level:3,title:"辅助排查网页慢的问题",slug:"辅助排查网页慢的问题"},{level:3,title:"解决失效 Cookie 带来的问题",slug:"解决失效-cookie-带来的问题"},{level:2,title:"表示层和会话层",slug:"表示层和会话层"},{level:2,title:"传输层",slug:"传输层"},{level:3,title:"路径可达性测试",slug:"路径可达性测试"},{level:3,title:"查看当前连接状况",slug:"查看当前连接状况"},{level:3,title:"查看当前连接的传输速率",slug:"查看当前连接的传输速率"},{level:3,title:"查看丢包和乱序等的统计",slug:"查看丢包和乱序等的统计"},{level:3,title:"ss",slug:"ss"},{level:2,title:"网络层",slug:"网络层"},{level:3,title:"查看网络路径状况",slug:"查看网络路径状况"},{level:3,title:"查看路由",slug:"查看路由"},{level:2,title:"数据链路层和物理层",slug:"数据链路层和物理层"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:15.12,words:4537},updateTime:"2022年9月14日 11:46",updateTimeStamp:1663127214e3,createTime:"2022年9月13日 18:04",createTimeStamp:1663063499e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"TCP 协议重传机制",frontmatter:{summary:"TCP 协议重传机制 TCP 协议是一种可靠的，面向连接的，基于字节流的传输协议。既然是一种可靠的传输协议，那么必须有一种机制来保证接收方收到的数据是完整地，这就是 TCP 协议的重传机制。 常见包传输问题 假如要传输一个大小为 1M 的数据包，由于最大传输单元（MTU）的限制，需要将包拆分为 N 个小包进行传输，并且对每一个包进行编号，这里假如这个 N 为",meta:[{property:"og:url",content:"/basic-skills/network/tcp-retransmission.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"TCP 协议重传机制"},{property:"og:description",content:"TCP 协议重传机制 TCP 协议是一种可靠的，面向连接的，基于字节流的传输协议。既然是一种可靠的传输协议，那么必须有一种机制来保证接收方收到的数据是完整地，这就是 TCP 协议的重传机制。 常见包传输问题 假如要传输一个大小为 1M 的数据包，由于最大传输单元（MTU）的限制，需要将包拆分为 N 个小包进行传输，并且对每一个包进行编号，这里假如这个 N 为"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/network/tcp-retransmission.html",relativePath:"basic-skills/network/tcp-retransmission.md",key:"v-548f02fd",path:"/basic-skills/network/tcp-retransmission/",headers:[{level:2,title:"常见包传输问题",slug:"常见包传输问题"},{level:3,title:"乱序",slug:"乱序"},{level:3,title:"丢包",slug:"丢包"},{level:3,title:"重复包",slug:"重复包"},{level:2,title:"TCP 的重传机制",slug:"tcp-的重传机制"},{level:3,title:"超时重传机制",slug:"超时重传机制"},{level:3,title:"快速重传机制",slug:"快速重传机制"}],readingTime:{minutes:4.22,words:1266},updateTime:"2022年9月15日 14:32",updateTimeStamp:1663223548e3,createTime:"2022年9月15日 14:32",createTimeStamp:1663223548e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"Linux 系统是如何收发网络包的？",frontmatter:{summary:"Linux 系统是如何收发网络包的？ 网络模型 复习一下谈的最多的 OSI 网络模型，该模型主要有 7 层，每一层负责的职能都不同，如下： 应用层，负责给应用程序提供统一的接口。; 表示层，负责把数据转换成兼容另一个系统能识别的格式。; 会话层，负责建立、管理和终止表示层实体之间的通信会话。; 传输层，负责端到端的数据传输。; 网络层，负责数据的路由、转发、",meta:[{property:"og:url",content:"/basic-skills/network/how-os-deal-with-network-packets.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Linux 系统是如何收发网络包的？"},{property:"og:description",content:"Linux 系统是如何收发网络包的？ 网络模型 复习一下谈的最多的 OSI 网络模型，该模型主要有 7 层，每一层负责的职能都不同，如下： 应用层，负责给应用程序提供统一的接口。; 表示层，负责把数据转换成兼容另一个系统能识别的格式。; 会话层，负责建立、管理和终止表示层实体之间的通信会话。; 传输层，负责端到端的数据传输。; 网络层，负责数据的路由、转发、"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/network/how-os-deal-with-network-packets.html",relativePath:"basic-skills/network/how-os-deal-with-network-packets.md",key:"v-47ca231d",path:"/basic-skills/network/how-os-deal-with-network-packets/",headers:[{level:2,title:"网络模型",slug:"网络模型"},{level:2,title:"Linux 网络协议栈",slug:"linux-网络协议栈"},{level:2,title:"Linux 接收网络包的流程",slug:"linux-接收网络包的流程"},{level:3,title:"告诉操作系统网络包已到达",slug:"告诉操作系统网络包已到达"},{level:3,title:"软中断的处理",slug:"软中断的处理"},{level:3,title:"网络协议栈",slug:"网络协议栈"},{level:2,title:"Linux 发送网络包的流程",slug:"linux-发送网络包的流程"},{level:3,title:"应用层",slug:"应用层"},{level:3,title:"传输层",slug:"传输层"},{level:3,title:"网络层",slug:"网络层"},{level:3,title:"网络接口层",slug:"网络接口层"},{level:3,title:"通知网卡有包要发送",slug:"通知网卡有包要发送"},{level:3,title:"完成网络包的发送",slug:"完成网络包的发送"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:35.08,words:10524},updateTime:"2022年9月1日 14:33",updateTimeStamp:1662013996e3,createTime:"2022年8月16日 15:02",createTimeStamp:1660633327e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"拔掉网线几秒再插回去，原本的 TCP 连接还在吗？",frontmatter:{summary:"拔掉网线几秒再插回去，原本的 TCP 连接还在吗？ 现在有一个有趣的问题：拔掉网线几秒，再插回去，原本的 TCP 连接还存在吗？ 惯性思维是：网线都被拔掉了，说明物理层被断开了，那在上层的传输层理应也会断开，所以原本的 TCP 连接肯定不会存在了。就好像，我们拨打有线电话的时候，如果某一方的电话线被拔了，那么本次通话就彻底断了。 既然单独把这个问题拎出来，显",meta:[{property:"og:url",content:"/basic-skills/network/tcp-connection-after-unpluging-network-cable.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"拔掉网线几秒再插回去，原本的 TCP 连接还在吗？"},{property:"og:description",content:"拔掉网线几秒再插回去，原本的 TCP 连接还在吗？ 现在有一个有趣的问题：拔掉网线几秒，再插回去，原本的 TCP 连接还存在吗？ 惯性思维是：网线都被拔掉了，说明物理层被断开了，那在上层的传输层理应也会断开，所以原本的 TCP 连接肯定不会存在了。就好像，我们拨打有线电话的时候，如果某一方的电话线被拔了，那么本次通话就彻底断了。 既然单独把这个问题拎出来，显"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/network/tcp-connection-after-unpluging-network-cable.html",relativePath:"basic-skills/network/tcp-connection-after-unpluging-network-cable.md",key:"v-eec8ac46",path:"/basic-skills/network/tcp-connection-after-unpluging-network-cable/",headers:[{level:2,title:"做个实验",slug:"做个实验"},{level:2,title:"拔掉网线后，有数据传输",slug:"拔掉网线后-有数据传输"},{level:3,title:"超时重传",slug:"超时重传"},{level:3,title:"重传几次",slug:"重传几次"},{level:2,title:"拔掉网线后，没有数据传输",slug:"拔掉网线后-没有数据传输"},{level:3,title:"保活机制",slug:"保活机制"},{level:3,title:"保活原理",slug:"保活原理"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:33.6,words:10079},updateTime:"2022年9月3日 17:19",updateTimeStamp:1662196766e3,createTime:"2022年8月24日 22:00",createTimeStamp:1661349602e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"TCP 三次握手期间异常，会发生什么？",frontmatter:{summary:"TCP 三次握手期间异常，会发生什么？ 复习三次握手 TCP 是面向连接的协议，所以使用 TCP 前必须先建立连接，而建立连接是通过三次握手来进行的。三次握手的过程如下图： CLOSEDSYNSENTESTABLISHEDCLOSEDLISTENSYNRCVDESTABLISHED客户端服务端SYN, seq=xSYN, ACK, seq=y, ack=x+",meta:[{property:"og:url",content:"/basic-skills/network/tcp-handshake-exception.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"TCP 三次握手期间异常，会发生什么？"},{property:"og:description",content:"TCP 三次握手期间异常，会发生什么？ 复习三次握手 TCP 是面向连接的协议，所以使用 TCP 前必须先建立连接，而建立连接是通过三次握手来进行的。三次握手的过程如下图： CLOSEDSYNSENTESTABLISHEDCLOSEDLISTENSYNRCVDESTABLISHED客户端服务端SYN, seq=xSYN, ACK, seq=y, ack=x+"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/network/tcp-handshake-exception.html",relativePath:"basic-skills/network/tcp-handshake-exception.md",key:"v-25658fa6",path:"/basic-skills/network/tcp-handshake-exception/",headers:[{level:2,title:"复习三次握手",slug:"复习三次握手"},{level:2,title:"第一次握手丢失了，会发生什么？",slug:"第一次握手丢失了-会发生什么"},{level:2,title:"第二次握手丢失了，会发生什么？",slug:"第二次握手丢失了-会发生什么"},{level:2,title:"第三次握手丢失了，会发生什么？",slug:"第三次握手丢失了-会发生什么"},{level:2,title:"关于 SYN 攻击",slug:"关于-syn-攻击"},{level:3,title:"什么是 SYN 攻击",slug:"什么是-syn-攻击"},{level:3,title:"半连接和全连接队列",slug:"半连接和全连接队列"},{level:3,title:"避免 SYN 攻击方式",slug:"避免-syn-攻击方式"}],readingTime:{minutes:16.7,words:5011},updateTime:"2022年9月3日 16:58",updateTimeStamp:1662195491e3,createTime:"2022年9月2日 17:58",createTimeStamp:1662112719e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"TCP 四次挥手期间异常，会发生什么？",frontmatter:{summary:"TCP 四次挥手期间异常，会发生什么？ 复习四次挥手 TCP 断开连接是通过四次挥手方式。 双方都可以主动断开连接，断开连接后主机中的「资源」将被释放，四次挥手的过程如下图： ESTABLISHEDFINWAIT1FINWAIT2TIMEWAIT（等待 2MSL）CLOSED客户端服务端ESTABLISHEDCLOSEWAITLAST_ACKCLOSED数据",meta:[{property:"og:url",content:"/basic-skills/network/tcp-wave-exception.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"TCP 四次挥手期间异常，会发生什么？"},{property:"og:description",content:"TCP 四次挥手期间异常，会发生什么？ 复习四次挥手 TCP 断开连接是通过四次挥手方式。 双方都可以主动断开连接，断开连接后主机中的「资源」将被释放，四次挥手的过程如下图： ESTABLISHEDFINWAIT1FINWAIT2TIMEWAIT（等待 2MSL）CLOSED客户端服务端ESTABLISHEDCLOSEWAITLAST_ACKCLOSED数据"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/network/tcp-wave-exception.html",relativePath:"basic-skills/network/tcp-wave-exception.md",key:"v-78264d06",path:"/basic-skills/network/tcp-wave-exception/",headers:[{level:2,title:"复习四次挥手",slug:"复习四次挥手"},{level:2,title:"第一次挥手丢失了，会发生什么？",slug:"第一次挥手丢失了-会发生什么"},{level:2,title:"第二次挥手丢失了，会发生什么？",slug:"第二次挥手丢失了-会发生什么"},{level:2,title:"第三次挥手丢失了，会发生什么？",slug:"第三次挥手丢失了-会发生什么"},{level:2,title:"第四次挥手丢失了，会发生什么？",slug:"第四次挥手丢失了-会发生什么"},{level:2,title:"关于 TIME_WAIT",slug:"关于-time-wait"},{level:3,title:"为什么 TIME_WAIT 等待的时间是 2MSL？",slug:"为什么-time-wait-等待的时间是-2msl"},{level:3,title:"为什么需要 TIME_WAIT 状态？",slug:"为什么需要-time-wait-状态"},{level:3,title:"TIME_WAIT 过多有什么危害？",slug:"time-wait-过多有什么危害"},{level:3,title:"如何优化 TIME_WAIT？",slug:"如何优化-time-wait"}],readingTime:{minutes:20.56,words:6168},updateTime:"2022年9月3日 16:56",updateTimeStamp:1662195406e3,createTime:"2022年9月3日 16:56",createTimeStamp:1662195406e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"TCP 协议",frontmatter:{summary:"TCP 协议 基本认识 TCP 是面向连接的、可靠的、基于字节流的传输层通信协议。 面向连接可靠的字节流 （TCP 三大特点） 面向连接：一定是「一对一」才能连接，不能像 UDP 协议可以一个主机同时向多个主机发送消息，也就是一对多是无法做到的。; 可靠的：无论的网络链路中出现了怎样的链路变化，TCP 都可以保证一个报文一定能够到达接收端。; 字节流：用户消",meta:[{property:"og:url",content:"/basic-skills/network/tcp.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"TCP 协议"},{property:"og:description",content:"TCP 协议 基本认识 TCP 是面向连接的、可靠的、基于字节流的传输层通信协议。 面向连接可靠的字节流 （TCP 三大特点） 面向连接：一定是「一对一」才能连接，不能像 UDP 协议可以一个主机同时向多个主机发送消息，也就是一对多是无法做到的。; 可靠的：无论的网络链路中出现了怎样的链路变化，TCP 都可以保证一个报文一定能够到达接收端。; 字节流：用户消"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/network/tcp.html",relativePath:"basic-skills/network/tcp.md",key:"v-5df8d485",path:"/basic-skills/network/tcp/",headers:[{level:2,title:"基本认识",slug:"基本认识"},{level:2,title:"TCP 包头",slug:"tcp-包头"},{level:2,title:"TCP 的三次握手",slug:"tcp-的三次握手"},{level:3,title:"状态变化时序图",slug:"状态变化时序图"},{level:3,title:"保活机制",slug:"保活机制"},{level:3,title:"包的序号",slug:"包的序号"},{level:3,title:"为什么是三次",slug:"为什么是三次"},{level:2,title:"TCP 的四次挥手",slug:"tcp-的四次挥手"},{level:3,title:"状态变化时序图",slug:"状态变化时序图-2"},{level:3,title:"客户端延迟释放",slug:"客户端延迟释放"},{level:3,title:"为什么是四次",slug:"为什么是四次"},{level:2,title:"TCP 应用场景",slug:"tcp-应用场景"}],readingTime:{minutes:31.77,words:9532},updateTime:"2022年9月3日 17:19",updateTimeStamp:1662196766e3,createTime:"2022年8月14日 16:46",createTimeStamp:1660466819e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:9}]},{title:"UDP 协议",frontmatter:{summary:"UDP 协议 传输层里比较重要的两个协议，一个是 TCP，一个是 UDP。对于从事应用开发的人来讲，最常用的就是这两个协议。 TCP 和 UDP 的区别 1. 连接 TCP 是面向连接的传输层协议，传输数据前先要通过三次握手来建立连接。; UDP 是不需要连接，即刻传输数据。; 2. 服务对象 TCP 是一对一的两点服务，即一条连接只有两个端点。; UDP ",meta:[{property:"og:url",content:"/basic-skills/network/udp.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"UDP 协议"},{property:"og:description",content:"UDP 协议 传输层里比较重要的两个协议，一个是 TCP，一个是 UDP。对于从事应用开发的人来讲，最常用的就是这两个协议。 TCP 和 UDP 的区别 1. 连接 TCP 是面向连接的传输层协议，传输数据前先要通过三次握手来建立连接。; UDP 是不需要连接，即刻传输数据。; 2. 服务对象 TCP 是一对一的两点服务，即一条连接只有两个端点。; UDP "},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/network/udp.html",relativePath:"basic-skills/network/udp.md",key:"v-544f9676",path:"/basic-skills/network/udp/",headers:[{level:2,title:"TCP 和 UDP 的区别",slug:"tcp-和-udp-的区别"},{level:2,title:"UDP 包头",slug:"udp-包头"},{level:2,title:"UDP 三大特点",slug:"udp-三大特点"},{level:2,title:"UDP 应用场景",slug:"udp-应用场景"},{level:2,title:"UDP 在实际生活中的应用",slug:"udp-在实际生活中的应用"},{level:3,title:"网页或者 APP 的访问",slug:"网页或者-app-的访问"},{level:3,title:"流媒体的协议",slug:"流媒体的协议"},{level:3,title:"实时游戏",slug:"实时游戏"},{level:3,title:"IoT 物联网",slug:"iot-物联网"},{level:3,title:"移动通信领域",slug:"移动通信领域"}],readingTime:{minutes:10.43,words:3128},updateTime:"2022年8月15日 15:16",updateTimeStamp:1660547763e3,createTime:"2022年8月13日 17:29",createTimeStamp:1660382973e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:4}]},{title:"抓包与分析",frontmatter:{summary:"抓包与分析 前言 tcpdump 和 Wireshark 是最常用的网络抓包和分析工具，更是分析网络性能必不可少的利器。它们能把我们「看不见」的数据包，呈现在我们眼前，一目了然。 tcpdump 仅支持命令行格式使用，常用在 Linux 服务器中抓取和分析网络包。; Wireshark 除了可以抓包外，还提供了可视化分析网络包的图形页面。; 所以，这两者实际",meta:[{property:"og:url",content:"/basic-skills/network/tcpdump-and-wireshark.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"抓包与分析"},{property:"og:description",content:"抓包与分析 前言 tcpdump 和 Wireshark 是最常用的网络抓包和分析工具，更是分析网络性能必不可少的利器。它们能把我们「看不见」的数据包，呈现在我们眼前，一目了然。 tcpdump 仅支持命令行格式使用，常用在 Linux 服务器中抓取和分析网络包。; Wireshark 除了可以抓包外，还提供了可视化分析网络包的图形页面。; 所以，这两者实际"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/network/tcpdump-and-wireshark.html",relativePath:"basic-skills/network/tcpdump-and-wireshark.md",key:"v-901822ba",path:"/basic-skills/network/tcpdump-and-wireshark/",headers:[{level:2,title:"前言",slug:"前言"},{level:2,title:"使用 tcpdump 抓包",slug:"使用-tcpdump-抓包"},{level:3,title:"抓取 ping 包",slug:"抓取-ping-包"},{level:3,title:"常见用法整理",slug:"常见用法整理"},{level:2,title:"使用 Wireshark 分析包",slug:"使用-wireshark-分析包"},{level:3,title:"分析 ping 包",slug:"分析-ping-包"},{level:3,title:"分析 TCP 三次握手和四次挥手",slug:"分析-tcp-三次握手和四次挥手"}],readingTime:{minutes:22.67,words:6802},updateTime:"2023年2月23日 09:58",updateTimeStamp:1677117521e3,createTime:"2022年9月8日 15:20",createTimeStamp:1662621637e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:4}]},{title:"Nginx 常用命令",frontmatter:{summary:"Nginx 常用命令 Nginx 操作的命令 Linux 检查的命令 服务器防火墙相关命令 如果 Nginx 启动成功后，从浏览器访问还是连接不上，按如下步骤排查： 检查阿里云安全组是否开放端口（通过阿里云后台）; 服务器防火墙是否开放端口; （完）",meta:[{property:"og:url",content:"/basic-skills/nginx/common-commands.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Nginx 常用命令"},{property:"og:description",content:"Nginx 常用命令 Nginx 操作的命令 Linux 检查的命令 服务器防火墙相关命令 如果 Nginx 启动成功后，从浏览器访问还是连接不上，按如下步骤排查： 检查阿里云安全组是否开放端口（通过阿里云后台）; 服务器防火墙是否开放端口; （完）"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/nginx/common-commands.html",relativePath:"basic-skills/nginx/common-commands.md",key:"v-7798e04a",path:"/basic-skills/nginx/common-commands/",headers:[{level:2,title:"Nginx 操作的命令",slug:"nginx-操作的命令"},{level:2,title:"Linux 检查的命令",slug:"linux-检查的命令"},{level:2,title:"服务器防火墙相关命令",slug:"服务器防火墙相关命令"}],readingTime:{minutes:.84,words:252},updateTime:"2021年7月2日 21:26",updateTimeStamp:1625232401e3,createTime:"2021年7月2日 21:26",createTimeStamp:1625232401e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"Nginx",frontmatter:{summary:'Nginx " 本系列以 Nginx 1.18.0 作为安装版本进行知识点梳理，该版本目前属于 Legacy versions（老版本的稳定版）。" Nginx（engine x）是一个高性能的 HTTP 和反向代理 web 服务器，同时也提供了 IMAP/POP3/SMTP 服务。其特点是占有内存少，并发能力强。 Nginx 是一个安装非常的简单、配置文件',meta:[{property:"og:url",content:"/basic-skills/nginx/"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Nginx"},{property:"og:description",content:'Nginx " 本系列以 Nginx 1.18.0 作为安装版本进行知识点梳理，该版本目前属于 Legacy versions（老版本的稳定版）。" Nginx（engine x）是一个高性能的 HTTP 和反向代理 web 服务器，同时也提供了 IMAP/POP3/SMTP 服务。其特点是占有内存少，并发能力强。 Nginx 是一个安装非常的简单、配置文件'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/nginx/",relativePath:"basic-skills/nginx/README.md",key:"v-7c3f8bce",path:"/basic-skills/nginx/",readingTime:{minutes:1.96,words:588},updateTime:"2021年12月26日 16:41",updateTimeStamp:1640508075e3,createTime:"2021年6月29日 23:52",createTimeStamp:1624981968e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:4}]},{title:"Nginx 部署 Https 安全认证",frontmatter:{summary:'Nginx 部署 Https 安全认证 " 本文不介绍 https 相关知识，仅分享 Nginx 配置 https 服务的步骤。并且假设你已经购买了服务器、域名和 SSL 证书。" 模块介绍 网站启用 https 以后会在 SEO 和安全性方面都有一定的好处，这里不展开讲。已经启用 https 的网站，一个比较直观的变化就是浏览器的域名前面有一把小锁的图标，',meta:[{property:"og:url",content:"/basic-skills/nginx/deploy-https-security-auth.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Nginx 部署 Https 安全认证"},{property:"og:description",content:'Nginx 部署 Https 安全认证 " 本文不介绍 https 相关知识，仅分享 Nginx 配置 https 服务的步骤。并且假设你已经购买了服务器、域名和 SSL 证书。" 模块介绍 网站启用 https 以后会在 SEO 和安全性方面都有一定的好处，这里不展开讲。已经启用 https 的网站，一个比较直观的变化就是浏览器的域名前面有一把小锁的图标，'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/nginx/deploy-https-security-auth.html",relativePath:"basic-skills/nginx/deploy-https-security-auth.md",key:"v-47365006",path:"/basic-skills/nginx/deploy-https-security-auth/",headers:[{level:2,title:"模块介绍",slug:"模块介绍"},{level:2,title:"购买并下载 CA 证书",slug:"购买并下载-ca-证书"},{level:2,title:"上传证书到服务器",slug:"上传证书到服务器"},{level:2,title:"配置案例",slug:"配置案例"}],readingTime:{minutes:2.38,words:715},updateTime:"2022年6月16日 14:37",updateTimeStamp:1655361477e3,createTime:"2021年7月10日 23:12",createTimeStamp:1625929947e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"Ngixn 配置文件模板",frontmatter:{summary:"Ngixn 配置文件模板 本文基于 Nginx 1.18.0，整理一份配置文件 nginx.conf 的通用模板。 模块拆分 当项目或业务越来越多的时候，Nginx 的配置文件 nginx.conf 会越来越大和复杂，不便于管理，所以需要拆分出多个子配置文件。 以下命令，如果你是 root 账户，直接执行即可，不是的话前面加 sudo 获取权限。 首先建立子",meta:[{property:"og:url",content:"/basic-skills/nginx/config-file-generic-template.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Ngixn 配置文件模板"},{property:"og:description",content:"Ngixn 配置文件模板 本文基于 Nginx 1.18.0，整理一份配置文件 nginx.conf 的通用模板。 模块拆分 当项目或业务越来越多的时候，Nginx 的配置文件 nginx.conf 会越来越大和复杂，不便于管理，所以需要拆分出多个子配置文件。 以下命令，如果你是 root 账户，直接执行即可，不是的话前面加 sudo 获取权限。 首先建立子"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/nginx/config-file-generic-template.html",relativePath:"basic-skills/nginx/config-file-generic-template.md",key:"v-479859c6",path:"/basic-skills/nginx/config-file-generic-template/",headers:[{level:2,title:"模块拆分",slug:"模块拆分"},{level:2,title:"主配置文件",slug:"主配置文件"},{level:2,title:"子配置文件",slug:"子配置文件"}],readingTime:{minutes:2.67,words:801},updateTime:"2022年6月16日 14:37",updateTimeStamp:1655361477e3,createTime:"2021年7月6日 23:54",createTimeStamp:1625586875e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:7}]},{title:"输入 URL 到页面展示，中间发生了什么？",frontmatter:{summary:'输入 URL 到页面展示，中间发生了什么？ " 这个问题挺常问的，因为涉及到的内容很多，不同的角度会有不同的侧重点。" " " " 这篇文章其实是：输入 URL 到页面展示，中间发生了什么？（网络版）—— 侧重网络模型的行为过程" " " " 之前写过另一个：输入 URL 到页面展示，中间发生了什么？（前端版） —— 侧重客户端的行为过程" 应用层数据：HT',meta:[{property:"og:url",content:"/basic-skills/network/what-happens-after-url.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"输入 URL 到页面展示，中间发生了什么？"},{property:"og:description",content:'输入 URL 到页面展示，中间发生了什么？ " 这个问题挺常问的，因为涉及到的内容很多，不同的角度会有不同的侧重点。" " " " 这篇文章其实是：输入 URL 到页面展示，中间发生了什么？（网络版）—— 侧重网络模型的行为过程" " " " 之前写过另一个：输入 URL 到页面展示，中间发生了什么？（前端版） —— 侧重客户端的行为过程" 应用层数据：HT'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/network/what-happens-after-url.html",relativePath:"basic-skills/network/what-happens-after-url.md",key:"v-23f2a5bd",path:"/basic-skills/network/what-happens-after-url/",headers:[{level:2,title:"应用层数据：HTTP",slug:"应用层数据-http"},{level:2,title:"真实地址查询：DNS",slug:"真实地址查询-dns"},{level:3,title:"域名的层级关系",slug:"域名的层级关系"},{level:3,title:"域名解析的工作流程",slug:"域名解析的工作流程"},{level:3,title:"域名的缓存",slug:"域名的缓存"},{level:2,title:"传输工作负责人：协议栈",slug:"传输工作负责人-协议栈"},{level:2,title:"可靠传输：TCP",slug:"可靠传输-tcp"},{level:3,title:"TCP 报文头部",slug:"tcp-报文头部"},{level:3,title:"三次握手",slug:"三次握手"},{level:3,title:"查看连接状态",slug:"查看连接状态"},{level:3,title:"TCP 分割数据",slug:"tcp-分割数据"},{level:3,title:"TCP 报文生成",slug:"tcp-报文生成"},{level:2,title:"网络包发送：IP",slug:"网络包发送-ip"},{level:3,title:"IP 报文头部",slug:"ip-报文头部"},{level:3,title:"路由表",slug:"路由表"},{level:3,title:"IP 报文生成",slug:"ip-报文生成"},{level:2,title:"两点传输：MAC",slug:"两点传输-mac"},{level:3,title:"MAC 报文头部",slug:"mac-报文头部"},{level:3,title:"MAC 确认收发方",slug:"mac-确认收发方"},{level:3,title:"ARP 协议",slug:"arp-协议"},{level:3,title:"MAC 报文生成",slug:"mac-报文生成"},{level:2,title:"出口：网卡",slug:"出口-网卡"},{level:2,title:"送别者：交换机",slug:"送别者-交换机"},{level:3,title:"包接收操作",slug:"包接收操作"},{level:2,title:"最终出口：路由器",slug:"最终出口-路由器"},{level:3,title:"路由器与交换机的区别",slug:"路由器与交换机的区别"},{level:3,title:"路由器基本原理",slug:"路由器基本原理"},{level:3,title:"路由器的包接收操作",slug:"路由器的包接收操作"},{level:3,title:"查询路由表确定输出端口",slug:"查询路由表确定输出端口"},{level:3,title:"路由器的发送操作",slug:"路由器的发送操作"},{level:2,title:"互相拆包装：服务器与客户端",slug:"互相拆包装-服务器与客户端"}],readingTime:{minutes:193.82,words:58146},updateTime:"2022年9月1日 15:21",updateTimeStamp:1662016907e3,createTime:"2022年8月30日 18:03",createTimeStamp:1661853823e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"Ngixn 配置文件详解",frontmatter:{summary:"Ngixn 配置文件详解 本文基于 Nginx 1.18.0，介绍其配置文件 nginx.conf 的主要配置参数。 核心参数详解 全局日志的关闭 为了避免日志产生过大，也是处于模块化的思想，我们一般不在全局中（http 中）指定日志格式和输出位置，而是在子配置文件中（每个 server 中）单独配置。 但是如果 http 和 server 都不配置，默认会",meta:[{property:"og:url",content:"/basic-skills/nginx/config-file-params-explanation.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Ngixn 配置文件详解"},{property:"og:description",content:"Ngixn 配置文件详解 本文基于 Nginx 1.18.0，介绍其配置文件 nginx.conf 的主要配置参数。 核心参数详解 全局日志的关闭 为了避免日志产生过大，也是处于模块化的思想，我们一般不在全局中（http 中）指定日志格式和输出位置，而是在子配置文件中（每个 server 中）单独配置。 但是如果 http 和 server 都不配置，默认会"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/nginx/config-file-params-explanation.html",relativePath:"basic-skills/nginx/config-file-params-explanation.md",key:"v-94b49fc6",path:"/basic-skills/nginx/config-file-params-explanation/",headers:[{level:2,title:"核心参数详解",slug:"核心参数详解"},{level:2,title:"全局日志的关闭",slug:"全局日志的关闭"},{level:2,title:"日志 log_format 可选项",slug:"日志-log-format-可选项"},{level:2,title:"http、server、location 之间的关系",slug:"http、server、location-之间的关系"},{level:2,title:"更多其它参数",slug:"更多其它参数"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:6.84,words:2053},updateTime:"2022年10月6日 15:03",updateTimeStamp:1665039816e3,createTime:"2021年7月3日 17:53",createTimeStamp:1625306013e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:5}]},{title:"负载均衡",frontmatter:{summary:"负载均衡 前言 当一台服务器的性能达到极限时，我们可以使用服务器集群来提高网站的整体性能。那么，在服务器集群中，需要有一台服务器充当调度者的角色，用户的所有请求都会首先由它接收，调度者再根据每台服务器的负载情况将请求分配给某一台后端服务器去处理。 那么在这个过程中，调度者如何合理分配任务，保证所有后端服务器都将性能充分发挥，从而保持服务器集群的整体性能最优，",meta:[{property:"og:url",content:"/basic-skills/nginx/load-balancing.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"负载均衡"},{property:"og:description",content:"负载均衡 前言 当一台服务器的性能达到极限时，我们可以使用服务器集群来提高网站的整体性能。那么，在服务器集群中，需要有一台服务器充当调度者的角色，用户的所有请求都会首先由它接收，调度者再根据每台服务器的负载情况将请求分配给某一台后端服务器去处理。 那么在这个过程中，调度者如何合理分配任务，保证所有后端服务器都将性能充分发挥，从而保持服务器集群的整体性能最优，"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/nginx/load-balancing.html",relativePath:"basic-skills/nginx/load-balancing.md",key:"v-1a1a0446",path:"/basic-skills/nginx/load-balancing/",headers:[{level:2,title:"前言",slug:"前言"},{level:2,title:"轮询",slug:"轮询"},{level:2,title:"加权轮循",slug:"加权轮循"},{level:2,title:"最少连接数",slug:"最少连接数"},{level:2,title:"最少连接数慢启动时间",slug:"最少连接数慢启动时间"},{level:2,title:"加权最少连接",slug:"加权最少连接"},{level:2,title:"基于代理的自适应负载均衡",slug:"基于代理的自适应负载均衡"},{level:2,title:"固定权重",slug:"固定权重"},{level:2,title:"加权响应",slug:"加权响应"},{level:2,title:"源IP哈希",slug:"源ip哈希"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:7.38,words:2214},updateTime:"2022年8月26日 11:34",updateTimeStamp:1661484853e3,createTime:"2021年7月1日 12:55",createTimeStamp:1625115332e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"Nginx 的安装",frontmatter:{summary:'Nginx 的安装 Windows 下安装 " Windows 下的 Nginx 不能用于生产，一般用于开发目的或者尝鲜体验。" 下载 Nginx 从 官方网站 下载稳定版本。 以 nginx/Windows-1.18.0 为例，直接下载 nginx-1.18.0.zip。 下载后解压，解压后如下： （Nginx for Windows） 启动 Nginx ',meta:[{property:"og:url",content:"/basic-skills/nginx/installation-of-nginx.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Nginx 的安装"},{property:"og:description",content:'Nginx 的安装 Windows 下安装 " Windows 下的 Nginx 不能用于生产，一般用于开发目的或者尝鲜体验。" 下载 Nginx 从 官方网站 下载稳定版本。 以 nginx/Windows-1.18.0 为例，直接下载 nginx-1.18.0.zip。 下载后解压，解压后如下： （Nginx for Windows） 启动 Nginx '},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/nginx/installation-of-nginx.html",relativePath:"basic-skills/nginx/installation-of-nginx.md",key:"v-2325a081",path:"/basic-skills/nginx/installation-of-nginx/",headers:[{level:2,title:"Windows 下安装",slug:"windows-下安装"},{level:3,title:"下载 Nginx",slug:"下载-nginx"},{level:3,title:"启动 Nginx",slug:"启动-nginx"},{level:3,title:"检查 Nginx 是否启动成功",slug:"检查-nginx-是否启动成功"},{level:3,title:"配置监听",slug:"配置监听"},{level:3,title:"关闭 Nginx",slug:"关闭-nginx"},{level:2,title:"Linux 下安装",slug:"linux-下安装"},{level:3,title:"准备依赖环境",slug:"准备依赖环境"},{level:3,title:"准备源码包",slug:"准备源码包"},{level:3,title:"编译安装",slug:"编译安装"},{level:3,title:"添加 Nginx 用户",slug:"添加-nginx-用户"},{level:3,title:"验证安装成功",slug:"验证安装成功"}],readingTime:{minutes:7.14,words:2143},updateTime:"2022年3月4日 17:50",updateTimeStamp:1646387436e3,createTime:"2021年7月2日 00:15",createTimeStamp:1625156125e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:6}]},{title:"Nginx 安全访问控制",frontmatter:{summary:"Nginx 安全访问控制 模块介绍 有时候我们需要根据客户端 IP 来限制访问，如果是不允许的 IP 则返回 403 Forbidden，如下所示： （403 Forbidden） 该功能用到了 ngxhttpaccess_module 这个模块，该模块默认是关闭的。 语法： 配置允许访问：allow 地址值;; 配置拒绝访问：deny 地址值;; 地址值的",meta:[{property:"og:url",content:"/basic-skills/nginx/ngx-http-access-module.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Nginx 安全访问控制"},{property:"og:description",content:"Nginx 安全访问控制 模块介绍 有时候我们需要根据客户端 IP 来限制访问，如果是不允许的 IP 则返回 403 Forbidden，如下所示： （403 Forbidden） 该功能用到了 ngxhttpaccess_module 这个模块，该模块默认是关闭的。 语法： 配置允许访问：allow 地址值;; 配置拒绝访问：deny 地址值;; 地址值的"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/nginx/ngx-http-access-module.html",relativePath:"basic-skills/nginx/ngx-http-access-module.md",key:"v-ed1db946",path:"/basic-skills/nginx/ngx-http-access-module/",headers:[{level:2,title:"模块介绍",slug:"模块介绍"},{level:2,title:"配置案例",slug:"配置案例"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:.75,words:225},updateTime:"2021年7月10日 17:35",updateTimeStamp:162590972e4,createTime:"2021年7月10日 15:09",createTimeStamp:1625900958e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"Nginx 页面安全认证",frontmatter:{summary:'Nginx 页面安全认证 模块介绍 有时候出于权限和安全考虑，我们希望某些页面不允许随便访问，必须通过用户认证才可以访问，如下所示： （Nginx Http Auth Basic） 该功能用到了 ngxhttpauthbasicmodule 这个模块，该模块默认是关闭的。 语法： 配置弹框提示：auth_basic "提示语";; 配置密码路径：authba',meta:[{property:"og:url",content:"/basic-skills/nginx/ngx-http-auth-basic-module.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Nginx 页面安全认证"},{property:"og:description",content:'Nginx 页面安全认证 模块介绍 有时候出于权限和安全考虑，我们希望某些页面不允许随便访问，必须通过用户认证才可以访问，如下所示： （Nginx Http Auth Basic） 该功能用到了 ngxhttpauthbasicmodule 这个模块，该模块默认是关闭的。 语法： 配置弹框提示：auth_basic "提示语";; 配置密码路径：authba'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/nginx/ngx-http-auth-basic-module.html",relativePath:"basic-skills/nginx/ngx-http-auth-basic-module.md",key:"v-fcb07306",path:"/basic-skills/nginx/ngx-http-auth-basic-module/",headers:[{level:2,title:"模块介绍",slug:"模块介绍"},{level:2,title:"htpasswd 创建密码文件",slug:"htpasswd-创建密码文件"},{level:2,title:"配置案例",slug:"配置案例"},{level:2,title:"常见问题",slug:"常见问题"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:3.02,words:907},updateTime:"2022年11月21日 17:50",updateTimeStamp:1669024257e3,createTime:"2021年7月10日 17:35",createTimeStamp:162590972e4,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:5}]},{title:"正向代理与反向代理",frontmatter:{summary:"正向代理与反向代理 正向代理 正向代理其实相当于请求的中继，比如说，如果某个网站国内无法访问，也就是被墙了，这时我们可以通过一台可以访问到这个网站的服务器，也就是代理服务器，来进行访问。这台代理服务器，分析我们请求的信息，然后去对应的要去的网站上将内容取回来发给我，这样我就能读到想要访问的网站上的内容了。 基于这种技术原理，VPN 就是这样产生的。通过 VP",meta:[{property:"og:url",content:"/basic-skills/nginx/forward-proxy-and-reverse-proxy.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"正向代理与反向代理"},{property:"og:description",content:"正向代理与反向代理 正向代理 正向代理其实相当于请求的中继，比如说，如果某个网站国内无法访问，也就是被墙了，这时我们可以通过一台可以访问到这个网站的服务器，也就是代理服务器，来进行访问。这台代理服务器，分析我们请求的信息，然后去对应的要去的网站上将内容取回来发给我，这样我就能读到想要访问的网站上的内容了。 基于这种技术原理，VPN 就是这样产生的。通过 VP"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/nginx/forward-proxy-and-reverse-proxy.html",relativePath:"basic-skills/nginx/forward-proxy-and-reverse-proxy.md",key:"v-717482e3",path:"/basic-skills/nginx/forward-proxy-and-reverse-proxy/",headers:[{level:2,title:"正向代理",slug:"正向代理"},{level:2,title:"反向代理",slug:"反向代理"}],readingTime:{minutes:7.12,words:2137},updateTime:"2021年6月30日 22:49",updateTimeStamp:1625064546e3,createTime:"2021年6月30日 18:08",createTimeStamp:1625047738e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"Nginx 设置开机自启",frontmatter:{summary:'Nginx 设置开机自启 在生产环境中，如果我们的服务器意外重启，此时要是 Nginx 没有随服务器启动起来，我们的 Web 站点就会是无应答的状态，这会给我们带来不同程度损失。 因此我们需要设置 Nginx 开机自启。 Ubuntu 设置开机自启 " 以下所有命令，如果你是 root 账户，直接执行即可，不是的话前面加 sudo 获取权限。" 在 Ubun',meta:[{property:"og:url",content:"/basic-skills/nginx/set-auto-start-after-server-reboot.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Nginx 设置开机自启"},{property:"og:description",content:'Nginx 设置开机自启 在生产环境中，如果我们的服务器意外重启，此时要是 Nginx 没有随服务器启动起来，我们的 Web 站点就会是无应答的状态，这会给我们带来不同程度损失。 因此我们需要设置 Nginx 开机自启。 Ubuntu 设置开机自启 " 以下所有命令，如果你是 root 账户，直接执行即可，不是的话前面加 sudo 获取权限。" 在 Ubun'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/nginx/set-auto-start-after-server-reboot.html",relativePath:"basic-skills/nginx/set-auto-start-after-server-reboot.md",key:"v-cb1acac6",path:"/basic-skills/nginx/set-auto-start-after-server-reboot/",headers:[{level:2,title:"Ubuntu 设置开机自启",slug:"ubuntu-设置开机自启"},{level:3,title:"创建启动脚本",slug:"创建启动脚本"},{level:3,title:"修改部分参数",slug:"修改部分参数"},{level:3,title:"添加执行权限",slug:"添加执行权限"},{level:3,title:"添加至开机自启动",slug:"添加至开机自启动"},{level:2,title:"CentOS 6.x 设置开机自启",slug:"centos-6-x-设置开机自启"},{level:3,title:"创建启动脚本",slug:"创建启动脚本-2"},{level:3,title:"修改部分参数",slug:"修改部分参数-2"},{level:3,title:"添加执行权限",slug:"添加执行权限-2"},{level:3,title:"添加至开机自启动",slug:"添加至开机自启动-2"},{level:3,title:"开机自启脚本提供的快捷命令",slug:"开机自启脚本提供的快捷命令"},{level:2,title:"CentOS 7.x 设置开机自启",slug:"centos-7-x-设置开机自启"},{level:3,title:"建立服务文件",slug:"建立服务文件"},{level:3,title:"修改部分参数",slug:"修改部分参数-3"},{level:3,title:"添加执行权限",slug:"添加执行权限-3"},{level:3,title:"添加至开机自启动",slug:"添加至开机自启动-3"},{level:3,title:"Nginx 服务管理",slug:"nginx-服务管理"},{level:3,title:"systemd 提供的一些命令",slug:"systemd-提供的一些命令"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:8.72,words:2616},updateTime:"2023年8月29日 09:39",updateTimeStamp:1693273155e3,createTime:"2021年7月4日 13:20",createTimeStamp:162537605e4,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:6}]},{title:"Nginx 部署前后端分离项目",frontmatter:{summary:"Nginx 部署前后端分离项目 部署目标 解决前后端分离项目的跨域问题; 前端路由采用 HTML5 History 模式; 配置反向代理 Websocket; 部署前准备 将前端代码打包成为纯静态文件，上传至服务器; 后端代码启动在服务器，监听 30000 端口; Nginx 配置 location 为代理接口，可以转发代理后端的请求接口域名或者 ip，即可",meta:[{property:"og:url",content:"/basic-skills/nginx/practice-in-front-end-separation-project.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Nginx 部署前后端分离项目"},{property:"og:description",content:"Nginx 部署前后端分离项目 部署目标 解决前后端分离项目的跨域问题; 前端路由采用 HTML5 History 模式; 配置反向代理 Websocket; 部署前准备 将前端代码打包成为纯静态文件，上传至服务器; 后端代码启动在服务器，监听 30000 端口; Nginx 配置 location 为代理接口，可以转发代理后端的请求接口域名或者 ip，即可"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/nginx/practice-in-front-end-separation-project.html",relativePath:"basic-skills/nginx/practice-in-front-end-separation-project.md",key:"v-28a3d59d",path:"/basic-skills/nginx/practice-in-front-end-separation-project/",headers:[{level:2,title:"部署目标",slug:"部署目标"},{level:2,title:"部署前准备",slug:"部署前准备"},{level:2,title:"Nginx 配置",slug:"nginx-配置"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:2.04,words:612},updateTime:"2023年2月8日 16:58",updateTimeStamp:1675846703e3,createTime:"2021年7月11日 17:14",createTimeStamp:1625994883e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"Nginx 文件列表功能",frontmatter:{summary:"Nginx 文件列表功能 模块介绍 有时候我们需要搭建一个文件下载平台，类似镜像站的内容列表，供用户下载，如下所示： （中国科学技术大学开源镜像站） 该功能用到了 ngxhttpautoindex_module 这个模块，该模块默认是关闭的。 语法： 开启文件列表功能：autoindex on;; 可以将它配置在 http，server，location 中",meta:[{property:"og:url",content:"/basic-skills/nginx/ngx-http-autoindex-module.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Nginx 文件列表功能"},{property:"og:description",content:"Nginx 文件列表功能 模块介绍 有时候我们需要搭建一个文件下载平台，类似镜像站的内容列表，供用户下载，如下所示： （中国科学技术大学开源镜像站） 该功能用到了 ngxhttpautoindex_module 这个模块，该模块默认是关闭的。 语法： 开启文件列表功能：autoindex on;; 可以将它配置在 http，server，location 中"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/nginx/ngx-http-autoindex-module.html",relativePath:"basic-skills/nginx/ngx-http-autoindex-module.md",key:"v-10366655",path:"/basic-skills/nginx/ngx-http-autoindex-module/",headers:[{level:2,title:"模块介绍",slug:"模块介绍"},{level:2,title:"配置案例",slug:"配置案例"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:.7,words:210},updateTime:"2021年7月10日 17:35",updateTimeStamp:162590972e4,createTime:"2021年7月10日 15:35",createTimeStamp:1625902511e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"Nginx 的卸载",frontmatter:{summary:"Nginx 的卸载 我一般都是通过源码编译安装的方式，所以这里主要介绍如何卸载编译安装的 Nginx。 编译安装的 Nginx 卸载非常方便，直接将 Nginx 的安装目录删除即可，同时可以把 Nginx 使用的日志目录和临时目录一并删除。 停止 Nginx 服务 首先输入命令 ps -ef | grep nginx 检查一下 Nginx 服务是否在运行，在",meta:[{property:"og:url",content:"/basic-skills/nginx/uninstallation-of-nginx.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Nginx 的卸载"},{property:"og:description",content:"Nginx 的卸载 我一般都是通过源码编译安装的方式，所以这里主要介绍如何卸载编译安装的 Nginx。 编译安装的 Nginx 卸载非常方便，直接将 Nginx 的安装目录删除即可，同时可以把 Nginx 使用的日志目录和临时目录一并删除。 停止 Nginx 服务 首先输入命令 ps -ef | grep nginx 检查一下 Nginx 服务是否在运行，在"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/nginx/uninstallation-of-nginx.html",relativePath:"basic-skills/nginx/uninstallation-of-nginx.md",key:"v-6b061873",path:"/basic-skills/nginx/uninstallation-of-nginx/",headers:[{level:2,title:"停止 Nginx 服务",slug:"停止-nginx-服务"},{level:2,title:"删除 Nginx 安装目录",slug:"删除-nginx-安装目录"},{level:2,title:"Ubuntu 删除 Nginx 自启动",slug:"ubuntu-删除-nginx-自启动"},{level:2,title:"CentOS 7.x 删除 Nginx 自启动",slug:"centos-7-x-删除-nginx-自启动"},{level:2,title:"find 查找相关文件并删除",slug:"find-查找相关文件并删除"}],readingTime:{minutes:1.42,words:426},updateTime:"2022年3月4日 17:58",updateTimeStamp:1646387914e3,createTime:"2021年7月2日 21:02",createTimeStamp:1625230961e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"Nginx 限流常用模块",frontmatter:{summary:"Nginx 限流常用模块 限流是一个比较常见的需求，它可以限制某个用户在一定时间内产生的 HTTP 请求数。常用于安全方面，通过限制请求速度来防止外部暴力扫描，或者减慢暴力密码破解攻击，可以结合日志标记出目标 URL 来帮助防范 DDoS 攻击，也可以解决流量突发的问题（如整点活动）。 模块介绍 Nginx 有两个限流常用模块： ngxhttplimitco",meta:[{property:"og:url",content:"/basic-skills/nginx/traffic-limiting-modules.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Nginx 限流常用模块"},{property:"og:description",content:"Nginx 限流常用模块 限流是一个比较常见的需求，它可以限制某个用户在一定时间内产生的 HTTP 请求数。常用于安全方面，通过限制请求速度来防止外部暴力扫描，或者减慢暴力密码破解攻击，可以结合日志标记出目标 URL 来帮助防范 DDoS 攻击，也可以解决流量突发的问题（如整点活动）。 模块介绍 Nginx 有两个限流常用模块： ngxhttplimitco"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/basic-skills/nginx/traffic-limiting-modules.html",relativePath:"basic-skills/nginx/traffic-limiting-modules.md",key:"v-c1b26806",path:"/basic-skills/nginx/traffic-limiting-modules/",headers:[{level:2,title:"模块介绍",slug:"模块介绍"},{level:2,title:"限制并发",slug:"限制并发"},{level:3,title:"1. 添加 limit_conn_zone",slug:"_1-添加-limit-conn-zone"},{level:3,title:"2. 添加 limit_conn",slug:"_2-添加-limit-conn"},{level:2,title:"限制 IP 访问频率",slug:"限制-ip-访问频率"},{level:3,title:"1. 添加 limit_req_zone",slug:"_1-添加-limit-req-zone"},{level:3,title:"2. 添加 limit_req",slug:"_2-添加-limit-req"},{level:2,title:"限制并发 + 限制 IP 访问频率",slug:"限制并发-限制-ip-访问频率"},{level:2,title:"总结",slug:"总结"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:3.64,words:1092},updateTime:"2021年12月3日 15:01",updateTimeStamp:1638514916e3,createTime:"2021年7月22日 18:17",createTimeStamp:1626949063e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"课外学习",frontmatter:{summary:"课外学习 职业技能： 合抱之木，生于毫末；九层之台，起于累土；千里之行，始于足下。专注于自己的本职领域，不断学习，夯实基础，寻求能力的突破。 多元思维： 这个时代的高手，一定是具备跨界学习能力的人。大学四年学什么专业不重要，重要的是要有发现问题和解决问题的能力。正如查理芒格所提倡的那样：通过不断学习众多学科的知识来形成多元思维模型。",meta:[{property:"og:url",content:"/extracurricular/"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"课外学习"},{property:"og:description",content:"课外学习 职业技能： 合抱之木，生于毫末；九层之台，起于累土；千里之行，始于足下。专注于自己的本职领域，不断学习，夯实基础，寻求能力的突破。 多元思维： 这个时代的高手，一定是具备跨界学习能力的人。大学四年学什么专业不重要，重要的是要有发现问题和解决问题的能力。正如查理芒格所提倡的那样：通过不断学习众多学科的知识来形成多元思维模型。"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/extracurricular/",relativePath:"extracurricular/README.md",key:"v-0cd29e7b",path:"/extracurricular/",readingTime:{minutes:1.21,words:363},updateTime:"2021年11月9日 15:30",updateTimeStamp:163644301e4,createTime:"2021年11月8日 17:59",createTimeStamp:1636365553e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"包管理工具",frontmatter:{summary:"包管理工具 包管理工具是随着前端模块化的出现而诞生的，它是为了解决下载使用第三方库的时候会遇到的一些问题： 下载过程繁琐; 进入官网或 github 主页; 找到并下载相应的版本; 拷贝到工程的目录中; 如果遇到有同名的库，需要更改名称; 如果该库需要依赖其他库，还需要按照要求先下载其他库; 开发环境中安装的大量的库如何在生产环境中还原，又如何区分; 更新一",meta:[{property:"og:url",content:"/frontend-engineering/package/"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"包管理工具"},{property:"og:description",content:"包管理工具 包管理工具是随着前端模块化的出现而诞生的，它是为了解决下载使用第三方库的时候会遇到的一些问题： 下载过程繁琐; 进入官网或 github 主页; 找到并下载相应的版本; 拷贝到工程的目录中; 如果遇到有同名的库，需要更改名称; 如果该库需要依赖其他库，还需要按照要求先下载其他库; 开发环境中安装的大量的库如何在生产环境中还原，又如何区分; 更新一"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-engineering/package/",relativePath:"frontend-engineering/package/README.md",key:"v-fac24aa4",path:"/frontend-engineering/package/",readingTime:{minutes:1.19,words:358},updateTime:"2022年4月21日 11:16",updateTimeStamp:1650510971e3,createTime:"2022年4月21日 11:16",createTimeStamp:1650510971e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"npm、yarn、pnpm 区别",frontmatter:{summary:"npm、yarn、pnpm 区别 npm 常用命令 1）初始化 2）安装依赖 --save-exact 的作用就是固定依赖包的版本，不要带 ^ 或 ~，避免出现小版本，有利于版本统一。 3）查询依赖 4）更新依赖 5）卸载依赖 6）配置 npm 脚本（scripts） 在开发的过程中，我们可能会反复使用很多的 CLI 命令，例如： 启动工程命令（node 或",meta:[{property:"og:url",content:"/frontend-engineering/package/npm-yarn-pnpm.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"npm、yarn、pnpm 区别"},{property:"og:description",content:"npm、yarn、pnpm 区别 npm 常用命令 1）初始化 2）安装依赖 --save-exact 的作用就是固定依赖包的版本，不要带 ^ 或 ~，避免出现小版本，有利于版本统一。 3）查询依赖 4）更新依赖 5）卸载依赖 6）配置 npm 脚本（scripts） 在开发的过程中，我们可能会反复使用很多的 CLI 命令，例如： 启动工程命令（node 或"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-engineering/package/npm-yarn-pnpm.html",relativePath:"frontend-engineering/package/npm-yarn-pnpm.md",key:"v-05709ce5",path:"/frontend-engineering/package/npm-yarn-pnpm/",headers:[{level:2,title:"npm",slug:"npm"},{level:3,title:"常用命令",slug:"常用命令"},{level:3,title:"npm 脚本（scripts）",slug:"npm-脚本-scripts"},{level:3,title:"语义版本书写规则",slug:"语义版本书写规则"},{level:3,title:"npm 安装机制",slug:"npm-安装机制"},{level:3,title:"npm 缓存机制",slug:"npm-缓存机制"},{level:2,title:"yarn",slug:"yarn"},{level:3,title:"介绍",slug:"介绍"},{level:3,title:"常用命令",slug:"常用命令-2"},{level:3,title:"yarn 的特别命令",slug:"yarn-的特别命令"},{level:3,title:"yarn 安装机制",slug:"yarn-安装机制"},{level:2,title:"pnpm",slug:"pnpm"},{level:3,title:"介绍",slug:"介绍-2"},{level:3,title:"安装和使用",slug:"安装和使用"},{level:3,title:"pnpm 安装机制",slug:"pnpm-安装机制"}],readingTime:{minutes:11.29,words:3388},updateTime:"2022年9月2日 10:18",updateTimeStamp:1662085124e3,createTime:"2022年4月21日 11:16",createTimeStamp:1650510971e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"认知偏差知识手册",frontmatter:{summary:'认知偏差知识手册 本手册仅作为心理学知识词条的普及，不具有产品设计指导意义。 决策、信念与行为偏差 " 💡决策、信念与行为偏差" " " " 这些偏差多半会影响信念的形成、商业与经济决策、以及其他一般的人类行为它们是可复制与再现的，面临特定情境时，一般可预期人们会有相应的偏差倾向。" （决策、信念与行为偏差） 1. 不明确性效应 Ambiguity Eff',meta:[{property:"og:url",content:"/extracurricular/cognitive-biases.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"认知偏差知识手册"},{property:"og:description",content:'认知偏差知识手册 本手册仅作为心理学知识词条的普及，不具有产品设计指导意义。 决策、信念与行为偏差 " 💡决策、信念与行为偏差" " " " 这些偏差多半会影响信念的形成、商业与经济决策、以及其他一般的人类行为它们是可复制与再现的，面临特定情境时，一般可预期人们会有相应的偏差倾向。" （决策、信念与行为偏差） 1. 不明确性效应 Ambiguity Eff'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/extracurricular/cognitive-biases.html",relativePath:"extracurricular/cognitive-biases.md",key:"v-06e7a0b8",path:"/extracurricular/cognitive-biases/",headers:[{level:2,title:"决策、信念与行为偏差",slug:"决策、信念与行为偏差"},{level:3,title:"1. 不明确性效应 Ambiguity Effect",slug:"_1-不明确性效应-ambiguity-effect"},{level:3,title:"2. 锚定效应 Anchoring Effect",slug:"_2-锚定效应-anchoring-effect"},{level:3,title:"3. 注意力偏差 Attentional Bias",slug:"_3-注意力偏差-attentional-bias"},{level:3,title:"4. 获得性启发 Availability Heuristic",slug:"_4-获得性启发-availability-heuristic"},{level:3,title:"5. 可获性层叠 Availability Heuristic",slug:"_5-可获性层叠-availability-heuristic"},{level:3,title:"6. 逆火效应 Backfire Effect",slug:"_6-逆火效应-backfire-effect"},{level:3,title:"7. 从众效应 Bandwagon Effect",slug:"_7-从众效应-bandwagon-effect"},{level:3,title:"8. 信念偏差 Belief Bias",slug:"_8-信念偏差-belief-bias"},{level:3,title:"9. 选择支持偏差 Choice-Supportive Bias",slug:"_9-选择支持偏差-choice-supportive-bias"},{level:3,title:"10. 确认偏差 Confirmation Bias",slug:"_10-确认偏差-confirmation-bias"},{level:3,title:"11 知识的诅咒 Curse of Knowledge",slug:"_11-知识的诅咒-curse-of-knowledge"},{level:3,title:"12. 诱饵效应 Decoy Effect",slug:"_12-诱饵效应-decoy-effect"},{level:3,title:"13. 差异偏差 Distinction Bias",slug:"_13-差异偏差-distinction-bias"},{level:3,title:"14. 禀赋效应 Endowment Effect",slug:"_14-禀赋效应-endowment-effect"},{level:3,title:"15. 功能固着 Functional Fixedness",slug:"_15-功能固着-functional-fixedness"},{level:3,title:"16. 巴纳姆效应 Barnum Effect",slug:"_16-巴纳姆效应-barnum-effect"},{level:3,title:"17. 框架效应 Framing Effect",slug:"_17-框架效应-framing-effect"},{level:3,title:"18. 频率错觉 Frequency Illusion",slug:"_18-频率错觉-frequency-illusion"},{level:3,title:"19. 后见之明偏差 Hindsight Bias",slug:"_19-后见之明偏差-hindsight-bias"},{level:3,title:"20. 当下偏差 Current Moment Bias",slug:"_20-当下偏差-current-moment-bias"},{level:3,title:"21. 可辨识受害者效应 Identifiable Victim Effect",slug:"_21-可辨识受害者效应-identifiable-victim-effect"},{level:3,title:"22. 宜家效应 IKEA Effect",slug:"_22-宜家效应-ikea-effect"},{level:3,title:"23. 影响力偏差 Impact Bias",slug:"_23-影响力偏差-impact-bias"},{level:3,title:"24. 资讯偏差 Information Bias",slug:"_24-资讯偏差-information-bias"},{level:3,title:"25. 沉没成本谬误 Sunk Cost Fallacy",slug:"_25-沉没成本谬误-sunk-cost-fallacy"},{level:3,title:"26. 损失趋避 Loss Aversion",slug:"_26-损失趋避-loss-aversion"},{level:3,title:"27. 单纯接触效应 Mere Exposure Effect",slug:"_27-单纯接触效应-mere-exposure-effect"},{level:3,title:"28. 负面偏差 Negativity Bias",slug:"_28-负面偏差-negativity-bias"},{level:3,title:"29. 忽略可能性 Neglect of Probability",slug:"_29-忽略可能性-neglect-of-probability"},{level:3,title:"30. 乐观偏差 Optimism Bias",slug:"_30-乐观偏差-optimism-bias"},{level:3,title:"31. 鸵鸟效应 Ostrich Effect",slug:"_31-鸵鸟效应-ostrich-effect"},{level:3,title:"32. 规划谬误 Planning Fallacy",slug:"_32-规划谬误-planning-fallacy"},{level:3,title:"33. 对抗心理 Reactance",slug:"_33-对抗心理-reactance"},{level:3,title:"34. 自制偏差 Restraint Bias",slug:"_34-自制偏差-restraint-bias"},{level:3,title:"35. 韵律当理由效应 Rhyme as Reason Effect",slug:"_35-韵律当理由效应-rhyme-as-reason-effect"},{level:3,title:"36. 风险补偿 Risk Compensation",slug:"_36-风险补偿-risk-compensation"},{level:3,title:"37. 选择性知觉 Selective Perception",slug:"_37-选择性知觉-selective-perception"},{level:3,title:"38. 幸存者偏差 Survivorship Bias",slug:"_38-幸存者偏差-survivorship-bias"},{level:3,title:"39. 零风险偏差 Zero-Risk Bias",slug:"_39-零风险偏差-zero-risk-bias"},{level:3,title:"40. 感知价值偏差 Perceived Value Bias",slug:"_40-感知价值偏差-perceived-value-bias"},{level:3,title:"41. 分析瘫痪 Analysis Paralysis",slug:"_41-分析瘫痪-analysis-paralysis"},{level:3,title:"42. 稀缺效应 Scarcity Effect",slug:"_42-稀缺效应-scarcity-effect"},{level:3,title:"43. 流畅性启发 Fluency Heuristic",slug:"_43-流畅性启发-fluency-heuristic"},{level:2,title:"社会偏差",slug:"社会偏差"},{level:3,title:"44. 行动者-观察者偏差 Actor-Observer Bias",slug:"_44-行动者-观察者偏差-actor-observer-bias"},{level:3,title:"45. 达克效应 Dunning–Kruger Effect",slug:"_45-达克效应-dunning-kruger-effect"},{level:3,title:"46. 错误共识效应 False Consensus Effect",slug:"_46-错误共识效应-false-consensus-effect"},{level:3,title:"47. 基本归因谬误 Fundamental Attribution Error",slug:"_47-基本归因谬误-fundamental-attribution-error"},{level:3,title:"48. 晕轮效应 Halo Effect",slug:"_48-晕轮效应-halo-effect"},{level:3,title:"49. 群内偏差 Ingroup Bias",slug:"_49-群内偏差-ingroup-bias"},{level:3,title:"50. 权威偏见 Authority Bias",slug:"_50-权威偏见-authority-bias"},{level:3,title:"51. 得寸进尺法 Foot-in-the-Door Technique",slug:"_51-得寸进尺法-foot-in-the-door-technique"},{level:2,title:"记忆错误与偏差",slug:"记忆错误与偏差"},{level:3,title:"52. 谷歌效应 Google Effect",slug:"_52-谷歌效应-google-effect"},{level:3,title:"53. 幽默效应 Humor Effect",slug:"_53-幽默效应-humor-effect"},{level:3,title:"54. 真相错觉效应 Illusion of Truth Effect",slug:"_54-真相错觉效应-illusion-of-truth-effect"},{level:3,title:"55. 峰终法则 Peak-End Rule",slug:"_55-峰终法则-peak-end-rule"},{level:3,title:"56. 图片优势效应  Picture Superiority Effect",slug:"_56-图片优势效应-picture-superiority-effect"},{level:3,title:"57. 首因效应 Primacy Effect",slug:"_57-首因效应-primacy-effect"},{level:3,title:"58. 雷斯多夫效应 Von Restorff Effect",slug:"_58-雷斯多夫效应-von-restorff-effect"},{level:3,title:"59. 蔡格尼效应 Zeigarnik Effect",slug:"_59-蔡格尼效应-zeigarnik-effect"},{level:2,title:"统计与几率偏差",slug:"统计与几率偏差"},{level:3,title:"60. 基本比率谬误 Base Rate fallacy",slug:"_60-基本比率谬误-base-rate-fallacy"},{level:3,title:"61. 赌徒谬误 Gambler's Fallacy",slug:"_61-赌徒谬误-gambler-s-fallacy"},{level:3,title:"62. 热手谬误 Hot-Hand Fallacy",slug:"_62-热手谬误-hot-hand-fallacy"},{level:3,title:"63. 对样本数不敏锐 Insensitivity to Sample Size",slug:"_63-对样本数不敏锐-insensitivity-to-sample-size"},{level:2,title:"实验与研究偏差",slug:"实验与研究偏差"},{level:3,title:"64. 取样偏差 Sampling Bias",slug:"_64-取样偏差-sampling-bias"},{level:3,title:"65. 观察者期望效应  Observer-Expectancy Effect",slug:"_65-观察者期望效应-observer-expectancy-effect"},{level:3,title:"66. 社会期许偏差 Social Desirability Bias",slug:"_66-社会期许偏差-social-desirability-bias"},{level:3,title:"67. 遗漏变数偏差 Omitted-Variable Bias",slug:"_67-遗漏变数偏差-omitted-variable-bias"},{level:2,title:"认知偏差学习资料",slug:"认知偏差学习资料"}],readingTime:{minutes:31.17,words:9351},updateTime:"2021年12月9日 16:58",updateTimeStamp:1639040335e3,createTime:"2021年11月8日 17:59",createTimeStamp:1636365553e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:4}]},{title:"React",frontmatter:{summary:"React React 是一个用于动态构建用户界面的 JavaScript 库（只关注于视图）。 起源于 Facebook 的内部项目，用来架设 Instagram 的网站，并于 2013 年 5 月开源。 React 特点： 声明式设计：React 采用声明式编码，可以轻松描述应用。; 高效：React 使用虚拟 DOM，不总是直接操作页面真实 DOM；通",meta:[{property:"og:url",content:"/frontend-engineering/react/"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"React"},{property:"og:description",content:"React React 是一个用于动态构建用户界面的 JavaScript 库（只关注于视图）。 起源于 Facebook 的内部项目，用来架设 Instagram 的网站，并于 2013 年 5 月开源。 React 特点： 声明式设计：React 采用声明式编码，可以轻松描述应用。; 高效：React 使用虚拟 DOM，不总是直接操作页面真实 DOM；通"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-engineering/react/",relativePath:"frontend-engineering/react/README.md",key:"v-694a7b4e",path:"/frontend-engineering/react/",readingTime:{minutes:4.57,words:1371},updateTime:"2022年4月13日 16:52",updateTimeStamp:1649839922e3,createTime:"2021年11月19日 11:27",createTimeStamp:1637292423e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"产品与人性 | 28个心理学效应",frontmatter:{summary:'产品与人性 | 28个心理学效应 " 普通的产品解决问题，中等的产品服务用户，优秀的产品洞察人性。 " " 心理学效应在产品中的应用，可以让产品经理向洞察人性更进一步。" 前言 这是从数百个心理学效应中筛选出的产品设计中常用到的 28 个心理学效应，并且介绍了这些效应在产品中的一小部分应用场景。 产品经理必懂的 28 个心理学效应 1. 晕轮效应 定义：在生',meta:[{property:"og:url",content:"/extracurricular/product-and-humanity.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"产品与人性 | 28个心理学效应"},{property:"og:description",content:'产品与人性 | 28个心理学效应 " 普通的产品解决问题，中等的产品服务用户，优秀的产品洞察人性。 " " 心理学效应在产品中的应用，可以让产品经理向洞察人性更进一步。" 前言 这是从数百个心理学效应中筛选出的产品设计中常用到的 28 个心理学效应，并且介绍了这些效应在产品中的一小部分应用场景。 产品经理必懂的 28 个心理学效应 1. 晕轮效应 定义：在生'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/extracurricular/product-and-humanity.html",relativePath:"extracurricular/product-and-humanity.md",key:"v-63bf2382",path:"/extracurricular/product-and-humanity/",headers:[{level:2,title:"前言",slug:"前言"},{level:2,title:"产品经理必懂的 28 个心理学效应",slug:"产品经理必懂的-28-个心理学效应"},{level:3,title:"1. 晕轮效应",slug:"_1-晕轮效应"},{level:3,title:"2. 首因效应",slug:"_2-首因效应"},{level:3,title:"3. 登门槛效应",slug:"_3-登门槛效应"},{level:3,title:"4. 巴纳姆效应",slug:"_4-巴纳姆效应"},{level:3,title:"5. 旁观者效应",slug:"_5-旁观者效应"},{level:3,title:"6.  二八法则",slug:"_6-二八法则"},{level:3,title:"7. 搭便车效应",slug:"_7-搭便车效应"},{level:3,title:"8. 结伴效应",slug:"_8-结伴效应"},{level:3,title:"9. 社会刻板效应",slug:"_9-社会刻板效应"},{level:3,title:"10. 近因效应",slug:"_10-近因效应"},{level:3,title:"11. 霍桑效应",slug:"_11-霍桑效应"},{level:3,title:"12. 鸟笼逻辑",slug:"_12-鸟笼逻辑"},{level:3,title:"13. 破窗效应",slug:"_13-破窗效应"},{level:3,title:"14. 凡勃伦效应",slug:"_14-凡勃伦效应"},{level:3,title:"15. 马斯洛需求层次理论",slug:"_15-马斯洛需求层次理论"},{level:3,title:"16. 边际效应",slug:"_16-边际效应"},{level:3,title:"17. 超限效应",slug:"_17-超限效应"},{level:3,title:"18. 鲶鱼效应",slug:"_18-鲶鱼效应"},{level:3,title:"19. 暗示效应",slug:"_19-暗示效应"},{level:3,title:"20. 留白效应",slug:"_20-留白效应"},{level:3,title:"21. 紫格尼克记忆效应",slug:"_21-紫格尼克记忆效应"},{level:3,title:"22. 色彩心理学",slug:"_22-色彩心理学"},{level:3,title:"23. 达维多定律",slug:"_23-达维多定律"},{level:3,title:"24. 名人效应",slug:"_24-名人效应"},{level:3,title:"25. 狮羊效应",slug:"_25-狮羊效应"},{level:3,title:"26. 莫扎特效应",slug:"_26-莫扎特效应"},{level:3,title:"27. 长尾效应",slug:"_27-长尾效应"},{level:3,title:"28. 半途效应",slug:"_28-半途效应"},{level:2,title:"总结",slug:"总结"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:22.45,words:6736},updateTime:"2021年12月9日 17:44",updateTimeStamp:1639043062e3,createTime:"2021年12月9日 17:44",createTimeStamp:1639043062e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"受控组件和非受控组件",frontmatter:{summary:"受控组件和非受控组件 两种表单组件 React 中对表单组件的处理分为两种：受控组件和非受控组件。 受控组件：组件的 value 属性与 React 中的状态绑定，组件内声明了 onChange 事件结合 setState() 来处理 value 的变化。; 例如 ``; React 没有类似 Vue 里 v-model 这种双向绑定功能，我们不能通过一个指",meta:[{property:"og:url",content:"/frontend-engineering/react/controlled-and-uncontrolled-components.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"受控组件和非受控组件"},{property:"og:description",content:"受控组件和非受控组件 两种表单组件 React 中对表单组件的处理分为两种：受控组件和非受控组件。 受控组件：组件的 value 属性与 React 中的状态绑定，组件内声明了 onChange 事件结合 setState() 来处理 value 的变化。; 例如 ``; React 没有类似 Vue 里 v-model 这种双向绑定功能，我们不能通过一个指"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-engineering/react/controlled-and-uncontrolled-components.html",relativePath:"frontend-engineering/react/controlled-and-uncontrolled-components.md",key:"v-6705783d",path:"/frontend-engineering/react/controlled-and-uncontrolled-components/",headers:[{level:2,title:"两种表单组件",slug:"两种表单组件"},{level:2,title:"受控组件的用法",slug:"受控组件的用法"},{level:2,title:"非受控组件的用法",slug:"非受控组件的用法"},{level:2,title:"使用 Hooks 简化表单处理",slug:"使用-hooks-简化表单处理"},{level:2,title:"使用 Hooks 处理表单验证",slug:"使用-hooks-处理表单验证"}],readingTime:{minutes:4.64,words:1391},updateTime:"2022年5月28日 14:59",updateTimeStamp:1653721198e3,createTime:"2022年5月28日 14:59",createTimeStamp:1653721198e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"函数组件设计模式",frontmatter:{summary:"函数组件设计模式 容器模式 定义 容器模式，就是把原来需要条件运行的 Hooks 拆分成子组件，然后通过一个容器组件来进行实际的条件判断，从而渲染不同的组件，实现按条件渲染的目的。 这在一些复杂的场景之下，也能达到拆分复杂度，让每个组件更加精简的目的。 举例 Hooks 有一个重要规则，即：Hooks 必须在顶层作用域调用，而不能放在条件判断、循环等语句中，",meta:[{property:"og:url",content:"/frontend-engineering/react/function-component-design-patterns.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"函数组件设计模式"},{property:"og:description",content:"函数组件设计模式 容器模式 定义 容器模式，就是把原来需要条件运行的 Hooks 拆分成子组件，然后通过一个容器组件来进行实际的条件判断，从而渲染不同的组件，实现按条件渲染的目的。 这在一些复杂的场景之下，也能达到拆分复杂度，让每个组件更加精简的目的。 举例 Hooks 有一个重要规则，即：Hooks 必须在顶层作用域调用，而不能放在条件判断、循环等语句中，"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-engineering/react/function-component-design-patterns.html",relativePath:"frontend-engineering/react/function-component-design-patterns.md",key:"v-a3a9d506",path:"/frontend-engineering/react/function-component-design-patterns/",headers:[{level:2,title:"容器模式",slug:"容器模式"},{level:3,title:"定义",slug:"定义"},{level:3,title:"举例",slug:"举例"},{level:3,title:"对比",slug:"对比"},{level:2,title:"render props 模式",slug:"render-props-模式"},{level:3,title:"定义",slug:"定义-2"},{level:3,title:"举例",slug:"举例-2"}],readingTime:{minutes:4.28,words:1283},updateTime:"2022年5月15日 10:34",updateTimeStamp:1652582089e3,createTime:"2022年5月15日 10:34",createTimeStamp:1652582089e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"React Hooks（内置）",frontmatter:{summary:"React Hooks（内置） React 内置提供了一些 Hooks，这里仅整理常用的几个。 useState useState 这个 Hook 是用来管理 state 的，它可以让函数组件具有维持状态的能力。 也就是说，在一个函数组件的多次渲染之间，这个 state 是共享的。 用法示例 第五行中，count 是这个 state 的变量名，setCoun",meta:[{property:"og:url",content:"/frontend-engineering/react/react-internal-hooks.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"React Hooks（内置）"},{property:"og:description",content:"React Hooks（内置） React 内置提供了一些 Hooks，这里仅整理常用的几个。 useState useState 这个 Hook 是用来管理 state 的，它可以让函数组件具有维持状态的能力。 也就是说，在一个函数组件的多次渲染之间，这个 state 是共享的。 用法示例 第五行中，count 是这个 state 的变量名，setCoun"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-engineering/react/react-internal-hooks.html",relativePath:"frontend-engineering/react/react-internal-hooks.md",key:"v-0c3c129d",path:"/frontend-engineering/react/react-internal-hooks/",headers:[{level:2,title:"useState",slug:"usestate"},{level:3,title:"用法示例",slug:"用法示例"},{level:3,title:"和类组件区别",slug:"和类组件区别"},{level:3,title:"使用场景",slug:"使用场景"},{level:3,title:"弊端",slug:"弊端"},{level:2,title:"useEffect",slug:"useeffect"},{level:3,title:"用法示例",slug:"用法示例-2"},{level:3,title:"和类组件区别",slug:"和类组件区别-2"},{level:3,title:"特殊用法",slug:"特殊用法"},{level:3,title:"使用场景",slug:"使用场景-2"},{level:2,title:"useCallback",slug:"usecallback"},{level:3,title:"用法示例",slug:"用法示例-3"},{level:2,title:"useMemo",slug:"usememo"},{level:3,title:"用法示例",slug:"用法示例-4"},{level:3,title:"useMemo 与 useCallback",slug:"usememo-与-usecallback"},{level:2,title:"useRef",slug:"useref"},{level:3,title:"用法示例",slug:"用法示例-5"},{level:3,title:"useRef 和 useState",slug:"useref-和-usestate"},{level:2,title:"useContext",slug:"usecontext"},{level:3,title:"用法示例",slug:"用法示例-6"},{level:3,title:"Context 和全局变量",slug:"context-和全局变量"},{level:3,title:"弊端",slug:"弊端-2"},{level:2,title:"Hooks 的使用规则",slug:"hooks-的使用规则"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:14.06,words:4217},updateTime:"2022年5月8日 13:14",updateTimeStamp:1651986877e3,createTime:"2022年5月5日 17:39",createTimeStamp:1651743548e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"Vue.js",frontmatter:{summary:"Vue.js Vue.js 是一款渐进式 JavaScript 框架。 虽然没有完全遵循 MVVM 模型，但是 Vue 的设计也受到了它的启发。因此经常会使用 vm（ViewModel 的缩写）这个变量名表示 Vue 实例。 对 MVVM 的理解： （MVVM 图示，图来源于官网文档） MVVM 分为 Model、View、ViewModel 三者。 Mod",meta:[{property:"og:url",content:"/frontend-engineering/vuejs/"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Vue.js"},{property:"og:description",content:"Vue.js Vue.js 是一款渐进式 JavaScript 框架。 虽然没有完全遵循 MVVM 模型，但是 Vue 的设计也受到了它的启发。因此经常会使用 vm（ViewModel 的缩写）这个变量名表示 Vue 实例。 对 MVVM 的理解： （MVVM 图示，图来源于官网文档） MVVM 分为 Model、View、ViewModel 三者。 Mod"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-engineering/vuejs/",relativePath:"frontend-engineering/vuejs/README.md",key:"v-47ab994e",path:"/frontend-engineering/vuejs/",readingTime:{minutes:1.56,words:468},updateTime:"2021年12月26日 16:41",updateTimeStamp:1640508075e3,createTime:"2021年11月19日 11:27",createTimeStamp:1637292423e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"React JSX",frontmatter:{summary:"React JSX JSX 简介 JSX 的全称是 JavaScript XML，它是 React 定义的一种类似于 XML 的 JS 扩展语法。 JS + XML 本质是 React.createElement(component, props, ...children) 方法的语法糖。 JSX 作用：用来简化创建虚拟 DOM： 写法：var ele = ",meta:[{property:"og:url",content:"/frontend-engineering/react/react-jsx.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"React JSX"},{property:"og:description",content:"React JSX JSX 简介 JSX 的全称是 JavaScript XML，它是 React 定义的一种类似于 XML 的 JS 扩展语法。 JS + XML 本质是 React.createElement(component, props, ...children) 方法的语法糖。 JSX 作用：用来简化创建虚拟 DOM： 写法：var ele = "},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-engineering/react/react-jsx.html",relativePath:"frontend-engineering/react/react-jsx.md",key:"v-5e31ed35",path:"/frontend-engineering/react/react-jsx/",headers:[{level:2,title:"JSX 简介",slug:"jsx-简介"},{level:2,title:"JSX 语法规则",slug:"jsx-语法规则"},{level:3,title:"创建虚拟 DOM 时，不要写引号",slug:"创建虚拟-dom-时-不要写引号"},{level:3,title:"标签中混入 JS 表达式的写法",slug:"标签中混入-js-表达式的写法"},{level:3,title:"标签中类名的写法",slug:"标签中类名的写法"},{level:3,title:"标签中内联样式的写法",slug:"标签中内联样式的写法"},{level:3,title:"label 标签 for 属性写法",slug:"label-标签-for-属性写法"},{level:3,title:"多级结构使用小括号包裹",slug:"多级结构使用小括号包裹"},{level:3,title:"只能有一个根标签",slug:"只能有一个根标签"},{level:3,title:"标签必须闭合",slug:"标签必须闭合"},{level:3,title:"关于标签首字母",slug:"关于标签首字母"},{level:3,title:"注释需要写在花括号中",slug:"注释需要写在花括号中"}],readingTime:{minutes:4.19,words:1256},updateTime:"2022年5月19日 14:12",updateTimeStamp:1652940777e3,createTime:"2021年11月19日 11:27",createTimeStamp:1637292423e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"React Hooks（自定义）",frontmatter:{summary:"React Hooks（自定义） Hooks 的两个核心优点： 方便进行逻辑复用; 帮助关注分离; 创建规则 创建自定义 Hooks 的规则： 名字一定是以 use 开头的函数，这样 React 才能够知道这个函数是一个 Hook。; 函数内部一定调用了其它的 Hooks，可以是内置的 Hooks，也可以是其它自定义 Hooks。否则也只能算是一个普通函数。",meta:[{property:"og:url",content:"/frontend-engineering/react/react-custom-hooks.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"React Hooks（自定义）"},{property:"og:description",content:"React Hooks（自定义） Hooks 的两个核心优点： 方便进行逻辑复用; 帮助关注分离; 创建规则 创建自定义 Hooks 的规则： 名字一定是以 use 开头的函数，这样 React 才能够知道这个函数是一个 Hook。; 函数内部一定调用了其它的 Hooks，可以是内置的 Hooks，也可以是其它自定义 Hooks。否则也只能算是一个普通函数。"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-engineering/react/react-custom-hooks.html",relativePath:"frontend-engineering/react/react-custom-hooks.md",key:"v-45e0b4dd",path:"/frontend-engineering/react/react-custom-hooks/",headers:[{level:2,title:"创建规则",slug:"创建规则"},{level:2,title:"抽取业务逻辑",slug:"抽取业务逻辑"},{level:2,title:"封装通用逻辑",slug:"封装通用逻辑"},{level:2,title:"监听浏览器状态",slug:"监听浏览器状态"},{level:2,title:"拆分复杂组件",slug:"拆分复杂组件"}],readingTime:{minutes:8,words:2399},updateTime:"2022年5月9日 16:35",updateTimeStamp:16520853e5,createTime:"2022年5月9日 16:35",createTimeStamp:16520853e5,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"高级用法特性",frontmatter:{summary:"高级用法特性 自定义 v-model 使用场景：在自定义的组件中，v-model 默认会利用名为 value 的 prop 和名为 input 的事件。但是像单选框、复选框等类型的输入控件，它们的 value 属性有其它用途。此时 model 选项可以用来避免这样的冲突。 下面演示一个例子（改自官方文档）： 编写一个自定义的复选框组件 BaseCheckbo",meta:[{property:"og:url",content:"/frontend-engineering/vuejs/advanced-use.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"高级用法特性"},{property:"og:description",content:"高级用法特性 自定义 v-model 使用场景：在自定义的组件中，v-model 默认会利用名为 value 的 prop 和名为 input 的事件。但是像单选框、复选框等类型的输入控件，它们的 value 属性有其它用途。此时 model 选项可以用来避免这样的冲突。 下面演示一个例子（改自官方文档）： 编写一个自定义的复选框组件 BaseCheckbo"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-engineering/vuejs/advanced-use.html",relativePath:"frontend-engineering/vuejs/advanced-use.md",key:"v-1a231c5d",path:"/frontend-engineering/vuejs/advanced-use/",headers:[{level:2,title:"自定义 v-model",slug:"自定义-v-model"},{level:2,title:"$nextTick",slug:"nexttick"},{level:2,title:"slot 插槽",slug:"slot-插槽"},{level:3,title:"基本使用",slug:"基本使用"},{level:3,title:"作用域插槽",slug:"作用域插槽"},{level:3,title:"具名插槽",slug:"具名插槽"},{level:2,title:"动态组件",slug:"动态组件"},{level:2,title:"异步组件",slug:"异步组件"},{level:2,title:"缓存组件",slug:"缓存组件"},{level:2,title:"mixin",slug:"mixin"}],readingTime:{minutes:6.3,words:1889},updateTime:"2021年11月19日 11:27",updateTimeStamp:1637292423e3,createTime:"2021年11月19日 11:27",createTimeStamp:1637292423e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"组件渲染与更新",frontmatter:{summary:'组件渲染与更新 " Vue 原理的三大模块分别为响应式、vdom 和模板编译，前面已经分别学习过，现在通过总结渲染过程来将它们串起来回顾。" 初次渲染过程 Step1：解析模板为 render 函数（这步操作或在开发中通过 vue-loader 已完成）; Step2：触发响应式，监听 data 属性 getter 和 setter（下一步执行 render',meta:[{property:"og:url",content:"/frontend-engineering/vuejs/component-render-and-update.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"组件渲染与更新"},{property:"og:description",content:'组件渲染与更新 " Vue 原理的三大模块分别为响应式、vdom 和模板编译，前面已经分别学习过，现在通过总结渲染过程来将它们串起来回顾。" 初次渲染过程 Step1：解析模板为 render 函数（这步操作或在开发中通过 vue-loader 已完成）; Step2：触发响应式，监听 data 属性 getter 和 setter（下一步执行 render'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-engineering/vuejs/component-render-and-update.html",relativePath:"frontend-engineering/vuejs/component-render-and-update.md",key:"v-739d8c0b",path:"/frontend-engineering/vuejs/component-render-and-update/",headers:[{level:2,title:"初次渲染过程",slug:"初次渲染过程"},{level:2,title:"更新过程",slug:"更新过程"},{level:2,title:"完整流程图",slug:"完整流程图"}],readingTime:{minutes:1.33,words:400},updateTime:"2021年11月19日 11:27",updateTimeStamp:1637292423e3,createTime:"2021年11月19日 11:27",createTimeStamp:1637292423e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"响应式原理",frontmatter:{summary:"响应式原理 定义 响应式指的是组件 data 的数据一旦变化，立刻触发视图的更新。它是实现数据驱动视图的第一步。 监听 data 变化的核心 API Vue 实现响应式的一个核心 API 是 Object.defineProperty。该方法会直接在一个对象上定义一个新属性，或者修改一个对象的现有属性，并返回此对象。 基本用法： 利用 Object.defi",meta:[{property:"og:url",content:"/frontend-engineering/vuejs/reactive-data.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"响应式原理"},{property:"og:description",content:"响应式原理 定义 响应式指的是组件 data 的数据一旦变化，立刻触发视图的更新。它是实现数据驱动视图的第一步。 监听 data 变化的核心 API Vue 实现响应式的一个核心 API 是 Object.defineProperty。该方法会直接在一个对象上定义一个新属性，或者修改一个对象的现有属性，并返回此对象。 基本用法： 利用 Object.defi"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-engineering/vuejs/reactive-data.html",relativePath:"frontend-engineering/vuejs/reactive-data.md",key:"v-ed653f4a",path:"/frontend-engineering/vuejs/reactive-data/",headers:[{level:2,title:"定义",slug:"定义"},{level:2,title:"监听 data 变化的核心 API",slug:"监听-data-变化的核心-api"},{level:2,title:"如何监听 data 变化",slug:"如何监听-data-变化"},{level:2,title:"如何深度监听 data 变化",slug:"如何深度监听-data-变化"},{level:2,title:"Object.defineProperty 缺点",slug:"object-defineproperty-缺点"},{level:2,title:"如何监听数组变化",slug:"如何监听数组变化"}],readingTime:{minutes:4.28,words:1285},updateTime:"2021年11月19日 11:27",updateTimeStamp:1637292423e3,createTime:"2021年11月19日 11:27",createTimeStamp:1637292423e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"基础用法要点",frontmatter:{summary:"基础用法要点 循环列表渲染 v-for 支持遍历数组和对象，其中 key 很重要，但不能乱写（如 random 或者 index），尽量要写和业务有关联的信息（比如 id）。 v-for 和 v-if 不能一起使用，否则 ESLint 会报错（因为 v-for 的计算优先级更高，会生成一系列带有 v-if 属性的标签，产生重复判断）。 事件参数 event ",meta:[{property:"og:url",content:"/frontend-engineering/vuejs/basic-use.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"基础用法要点"},{property:"og:description",content:"基础用法要点 循环列表渲染 v-for 支持遍历数组和对象，其中 key 很重要，但不能乱写（如 random 或者 index），尽量要写和业务有关联的信息（比如 id）。 v-for 和 v-if 不能一起使用，否则 ESLint 会报错（因为 v-for 的计算优先级更高，会生成一系列带有 v-if 属性的标签，产生重复判断）。 事件参数 event "},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-engineering/vuejs/basic-use.html",relativePath:"frontend-engineering/vuejs/basic-use.md",key:"v-eb23c6f2",path:"/frontend-engineering/vuejs/basic-use/",headers:[{level:2,title:"循环列表渲染",slug:"循环列表渲染"},{level:2,title:"事件参数 event",slug:"事件参数-event"},{level:2,title:"事件修饰符",slug:"事件修饰符"},{level:2,title:"按键修饰符",slug:"按键修饰符"},{level:2,title:"表单绑定 v-model",slug:"表单绑定-v-model"},{level:3,title:"作用范围",slug:"作用范围"},{level:3,title:"使用特例",slug:"使用特例"},{level:3,title:"修饰符 lazy number trim",slug:"修饰符-lazy-number-trim"},{level:2,title:"父子组件通信",slug:"父子组件通信"},{level:3,title:"通过 prop 实现父传子",slug:"通过-prop-实现父传子"},{level:3,title:"通过 $emit 实现子传父",slug:"通过-emit-实现子传父"},{level:3,title:"通过 $ref 获取子组件实例",slug:"通过-ref-获取子组件实例"},{level:2,title:"兄弟组件通信",slug:"兄弟组件通信"},{level:2,title:"组件生命周期（单个组件）",slug:"组件生命周期-单个组件"},{level:2,title:"组件生命周期（父子组件）",slug:"组件生命周期-父子组件"}],readingTime:{minutes:7.89,words:2367},updateTime:"2021年11月19日 11:27",updateTimeStamp:1637292423e3,createTime:"2021年11月19日 11:27",createTimeStamp:1637292423e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"模板编译",frontmatter:{summary:"模板编译 前置知识点：with 语法 首先复习一个 JS 的冷门知识点：with 语法。 常规作用域查找变量方式： 使用 with 后，能改变 {} 内自由变量的查找方式：将 {} 内自由变量当作 obj 的属性来查找： 在平时开发中，一般慎用 with 语法，这是因为它打破了作用域规则，使代码易读性变差了。但这里把它作为前置知识点是因为模板编译中用到了。 ",meta:[{property:"og:url",content:"/frontend-engineering/vuejs/template-compile.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"模板编译"},{property:"og:description",content:"模板编译 前置知识点：with 语法 首先复习一个 JS 的冷门知识点：with 语法。 常规作用域查找变量方式： 使用 with 后，能改变 {} 内自由变量的查找方式：将 {} 内自由变量当作 obj 的属性来查找： 在平时开发中，一般慎用 with 语法，这是因为它打破了作用域规则，使代码易读性变差了。但这里把它作为前置知识点是因为模板编译中用到了。 "},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-engineering/vuejs/template-compile.html",relativePath:"frontend-engineering/vuejs/template-compile.md",key:"v-680c045d",path:"/frontend-engineering/vuejs/template-compile/",headers:[{level:2,title:"前置知识点：with 语法",slug:"前置知识点-with-语法"},{level:2,title:"Vue 模板被编译成什么",slug:"vue-模板被编译成什么"},{level:2,title:"Vue 模板编译过程",slug:"vue-模板编译过程"},{level:2,title:"vue 组件中使用 render 代替 template",slug:"vue-组件中使用-render-代替-template"}],readingTime:{minutes:1.91,words:573},updateTime:"2021年11月19日 11:27",updateTimeStamp:1637292423e3,createTime:"2021年11月19日 11:27",createTimeStamp:1637292423e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"虚拟 DOM 与 diff 算法",frontmatter:{summary:"虚拟 DOM 与 diff 算法 虚拟 DOM 虚拟 DOM（Virtual DOM）的简写为 vdom，它是实现 Vue 和 React 的重要基石。 在 jQuery 及更早的时代，我们需要手动调整 DOM，这是一个非常耗费性能的操作，因此需要自行控制 DOM 操作的时机来优化 jQuery 性能。 DOM 更新非常耗时，但 JS 执行速度很快，因此现代",meta:[{property:"og:url",content:"/frontend-engineering/vuejs/virtual-dom-and-diff.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"虚拟 DOM 与 diff 算法"},{property:"og:description",content:"虚拟 DOM 与 diff 算法 虚拟 DOM 虚拟 DOM（Virtual DOM）的简写为 vdom，它是实现 Vue 和 React 的重要基石。 在 jQuery 及更早的时代，我们需要手动调整 DOM，这是一个非常耗费性能的操作，因此需要自行控制 DOM 操作的时机来优化 jQuery 性能。 DOM 更新非常耗时，但 JS 执行速度很快，因此现代"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-engineering/vuejs/virtual-dom-and-diff.html",relativePath:"frontend-engineering/vuejs/virtual-dom-and-diff.md",key:"v-059a1edd",path:"/frontend-engineering/vuejs/virtual-dom-and-diff/",headers:[{level:2,title:"虚拟 DOM",slug:"虚拟-dom"},{level:2,title:"diff 算法",slug:"diff-算法"},{level:2,title:"snabbdom",slug:"snabbdom"},{level:3,title:"Example 解读",slug:"example-解读"},{level:3,title:"生成 vnode 的源码",slug:"生成-vnode-的源码"},{level:3,title:"patch 函数的源码",slug:"patch-函数的源码"},{level:3,title:"patchVnode 函数的源码",slug:"patchvnode-函数的源码"},{level:3,title:"updateChildren 函数的源码",slug:"updatechildren-函数的源码"}],readingTime:{minutes:7.04,words:2112},updateTime:"2021年11月19日 11:27",updateTimeStamp:1637292423e3,createTime:"2021年11月19日 11:27",createTimeStamp:1637292423e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"前端路由原理",frontmatter:{summary:"前端路由原理 两种路由模式 vue-router 有两种路由模式，分别是： hash; H5 history; 其中，H5 history 模式需要后端的支持。 hash 模式 网页 url 组成部分 首先需要知道网页 url 组成部分，以及如何通过 JS 去获取各部分。 hash 模式的特点 hash 变化会触发网页跳转，即浏览器的前进、后退; hash ",meta:[{property:"og:url",content:"/frontend-engineering/vuejs/vue-router.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"前端路由原理"},{property:"og:description",content:"前端路由原理 两种路由模式 vue-router 有两种路由模式，分别是： hash; H5 history; 其中，H5 history 模式需要后端的支持。 hash 模式 网页 url 组成部分 首先需要知道网页 url 组成部分，以及如何通过 JS 去获取各部分。 hash 模式的特点 hash 变化会触发网页跳转，即浏览器的前进、后退; hash "},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-engineering/vuejs/vue-router.html",relativePath:"frontend-engineering/vuejs/vue-router.md",key:"v-7d2b53c6",path:"/frontend-engineering/vuejs/vue-router/",headers:[{level:2,title:"两种路由模式",slug:"两种路由模式"},{level:2,title:"hash 模式",slug:"hash-模式"},{level:3,title:"网页 url 组成部分",slug:"网页-url-组成部分"},{level:3,title:"hash 模式的特点",slug:"hash-模式的特点"},{level:3,title:"hash 模式的核心方法",slug:"hash-模式的核心方法"},{level:3,title:"hash 模式的实现原理",slug:"hash-模式的实现原理"},{level:2,title:"H5 history 模式",slug:"h5-history-模式"},{level:3,title:"H5 history 模式的特点",slug:"h5-history-模式的特点"},{level:3,title:"H5 history 模式的核心方法",slug:"h5-history-模式的核心方法"},{level:3,title:"H5 history 模式的实现原理",slug:"h5-history-模式的实现原理"}],readingTime:{minutes:3.07,words:922},updateTime:"2021年11月19日 11:27",updateTimeStamp:1637292423e3,createTime:"2021年11月19日 11:27",createTimeStamp:1637292423e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"Webpack5",frontmatter:{summary:'Webpack5 " 本系列主要针对 Webpack5 进行知识点梳理，该版本目前（2021 年）是最新稳定版。" TODO... 有些内容还是使用了废弃的特性，这个系列计划在有时间的时候重新整理撰写。 由于接下来有其它学习安排，目前可以先参考 webpack-template，这个仓库是按照最新的官方文档搭建的 Webpack5 通用配置模板。 Webpa',meta:[{property:"og:url",content:"/frontend-engineering/webpack/"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Webpack5"},{property:"og:description",content:'Webpack5 " 本系列主要针对 Webpack5 进行知识点梳理，该版本目前（2021 年）是最新稳定版。" TODO... 有些内容还是使用了废弃的特性，这个系列计划在有时间的时候重新整理撰写。 由于接下来有其它学习安排，目前可以先参考 webpack-template，这个仓库是按照最新的官方文档搭建的 Webpack5 通用配置模板。 Webpa'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-engineering/webpack/",relativePath:"frontend-engineering/webpack/README.md",key:"v-ab5f66e4",path:"/frontend-engineering/webpack/",readingTime:{minutes:3.59,words:1076},updateTime:"2022年4月13日 16:52",updateTimeStamp:1649839922e3,createTime:"2022年4月13日 16:52",createTimeStamp:1649839922e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"核心概念",frontmatter:{summary:"核心概念 Webpack 五个核心概念 Entry 入口（Entry）是打包时，第一个被访问的源码文件。默认是 src/index.js （可以通过配置文件指定）。 Webpack 通过入口，加载整个项目的依赖。 （Webpack 入口） Output 出口（Output）是打包后，输出的文件名称，默认是 dist/main.js（可以通过配置文件指定）。 ",meta:[{property:"og:url",content:"/frontend-engineering/webpack/core-concept.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"核心概念"},{property:"og:description",content:"核心概念 Webpack 五个核心概念 Entry 入口（Entry）是打包时，第一个被访问的源码文件。默认是 src/index.js （可以通过配置文件指定）。 Webpack 通过入口，加载整个项目的依赖。 （Webpack 入口） Output 出口（Output）是打包后，输出的文件名称，默认是 dist/main.js（可以通过配置文件指定）。 "},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-engineering/webpack/core-concept.html",relativePath:"frontend-engineering/webpack/core-concept.md",key:"v-6b031946",path:"/frontend-engineering/webpack/core-concept/",headers:[{level:2,title:"Webpack 五个核心概念",slug:"webpack-五个核心概念"},{level:3,title:"Entry",slug:"entry"},{level:3,title:"Output",slug:"output"},{level:3,title:"Loader",slug:"loader"},{level:3,title:"Plugins",slug:"plugins"},{level:3,title:"Mode",slug:"mode"},{level:2,title:"module chunk bundle 的区别",slug:"module-chunk-bundle-的区别"}],readingTime:{minutes:2.24,words:673},updateTime:"2022年6月2日 09:43",updateTimeStamp:16541342e5,createTime:"2022年4月13日 16:52",createTimeStamp:1649839922e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"高级配置",frontmatter:{summary:"高级配置 基本配置主要确保项目能够在 demo 环境运行，而用于线上环境时往往需要进行一些高级配置。 Webpack 的高级配置主要分为 6 个方面，根据需要进行选择： 多入口; 抽离压缩 CSS 文件; 抽离公共代码; 懒加载 - 异步加载 JS; 处理 JSX; 处理 Vue; 多入口 通过基本配置，我们在打包编译后产生的页面只是一个文件 index.h",meta:[{property:"og:url",content:"/frontend-engineering/webpack/advanced-config.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"高级配置"},{property:"og:description",content:"高级配置 基本配置主要确保项目能够在 demo 环境运行，而用于线上环境时往往需要进行一些高级配置。 Webpack 的高级配置主要分为 6 个方面，根据需要进行选择： 多入口; 抽离压缩 CSS 文件; 抽离公共代码; 懒加载 - 异步加载 JS; 处理 JSX; 处理 Vue; 多入口 通过基本配置，我们在打包编译后产生的页面只是一个文件 index.h"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-engineering/webpack/advanced-config.html",relativePath:"frontend-engineering/webpack/advanced-config.md",key:"v-18a132fe",path:"/frontend-engineering/webpack/advanced-config/",headers:[{level:2,title:"多入口",slug:"多入口"},{level:2,title:"抽离压缩 CSS 文件",slug:"抽离压缩-css-文件"},{level:2,title:"抽离公共代码",slug:"抽离公共代码"},{level:2,title:"懒加载 - 异步加载 JS",slug:"懒加载-异步加载-js"},{level:2,title:"处理 JSX",slug:"处理-jsx"},{level:2,title:"处理 Vue",slug:"处理-vue"}],readingTime:{minutes:7.52,words:2255},updateTime:"2022年4月13日 16:52",updateTimeStamp:1649839922e3,createTime:"2022年4月13日 16:52",createTimeStamp:1649839922e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"最佳实践 - 通用模板",frontmatter:{summary:'最佳实践 - 通用模板 " 通过最少量的代码，实际操作一下，总结一份 Webpack5 的通用配置文件模板。" 初始化项目 Webpack5 最小支持的 Node.js 版本已经为 8。 安装 Webpack 当前（2021 年）执行安装命令时，默认安装的是 Webpack5。 如果需要安装 Webpack4，就执行 npm install webpack@',meta:[{property:"og:url",content:"/frontend-engineering/webpack/generic-template.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"最佳实践 - 通用模板"},{property:"og:description",content:'最佳实践 - 通用模板 " 通过最少量的代码，实际操作一下，总结一份 Webpack5 的通用配置文件模板。" 初始化项目 Webpack5 最小支持的 Node.js 版本已经为 8。 安装 Webpack 当前（2021 年）执行安装命令时，默认安装的是 Webpack5。 如果需要安装 Webpack4，就执行 npm install webpack@'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-engineering/webpack/generic-template.html",relativePath:"frontend-engineering/webpack/generic-template.md",key:"v-65afe81d",path:"/frontend-engineering/webpack/generic-template/",headers:[{level:2,title:"初始化项目",slug:"初始化项目"},{level:2,title:"安装 Webpack",slug:"安装-webpack"},{level:2,title:"创建入口文件",slug:"创建入口文件"},{level:2,title:"执行打包（必须指定 mode）",slug:"执行打包-必须指定-mode"},{level:2,title:"通用模板",slug:"通用模板"}],readingTime:{minutes:1.76,words:527},updateTime:"2022年4月13日 16:52",updateTimeStamp:1649839922e3,createTime:"2022年4月13日 16:52",createTimeStamp:1649839922e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"性能优化 - 构建速度",frontmatter:{summary:'性能优化 - 构建速度 " Webpack 性能优化主要有两个方向：优化打包构建速度 - 提高开发体验和效率，优化产出代码 - 提升产品性能，本文主要介绍如何优化构建速度。" 构建速度的优化措施有 8 点： 优化 babel-loader; IgnorePlugin; noParse; happyPack; ParallelUglifyPlugin; 自动刷',meta:[{property:"og:url",content:"/frontend-engineering/webpack/performance-optimization-in-build.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"性能优化 - 构建速度"},{property:"og:description",content:'性能优化 - 构建速度 " Webpack 性能优化主要有两个方向：优化打包构建速度 - 提高开发体验和效率，优化产出代码 - 提升产品性能，本文主要介绍如何优化构建速度。" 构建速度的优化措施有 8 点： 优化 babel-loader; IgnorePlugin; noParse; happyPack; ParallelUglifyPlugin; 自动刷'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-engineering/webpack/performance-optimization-in-build.html",relativePath:"frontend-engineering/webpack/performance-optimization-in-build.md",key:"v-505d9089",path:"/frontend-engineering/webpack/performance-optimization-in-build/",headers:[{level:2,title:"优化 babel-loader",slug:"优化-babel-loader"},{level:2,title:"IgnorePlugin 避免引入无用模块",slug:"ignoreplugin-避免引入无用模块"},{level:2,title:"noParse 避免重复打包",slug:"noparse-避免重复打包"},{level:2,title:"happyPack 多进程打包",slug:"happypack-多进程打包"},{level:2,title:"ParallelUglifyPlugin 多进程压缩 JS",slug:"paralleluglifyplugin-多进程压缩-js"},{level:2,title:"自动刷新",slug:"自动刷新"},{level:2,title:"热更新",slug:"热更新"},{level:2,title:"DllPlugin 动态链接库插件",slug:"dllplugin-动态链接库插件"}],readingTime:{minutes:6.27,words:1880},updateTime:"2022年4月13日 16:52",updateTimeStamp:1649839922e3,createTime:"2022年4月13日 16:52",createTimeStamp:1649839922e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"基本配置",frontmatter:{summary:"基本配置 Webpack 的基本配置主要分为 6 个方面： 拆分配置和 merge; 启动本地服务; 处理 ES6; 处理样式; 处理图片; 模块化; 完成基本配置后，项目就能够在 demo 环境运行。 拆分配置和 merge 传统方式，会在项目中新建一个 webpack.config.js 文件，将所有配置汇总在一起。 而如果拆分配置，我们会将它分为三个文",meta:[{property:"og:url",content:"/frontend-engineering/webpack/basic-config.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"基本配置"},{property:"og:description",content:"基本配置 Webpack 的基本配置主要分为 6 个方面： 拆分配置和 merge; 启动本地服务; 处理 ES6; 处理样式; 处理图片; 模块化; 完成基本配置后，项目就能够在 demo 环境运行。 拆分配置和 merge 传统方式，会在项目中新建一个 webpack.config.js 文件，将所有配置汇总在一起。 而如果拆分配置，我们会将它分为三个文"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-engineering/webpack/basic-config.html",relativePath:"frontend-engineering/webpack/basic-config.md",key:"v-546b7ffd",path:"/frontend-engineering/webpack/basic-config/",headers:[{level:2,title:"拆分配置和 merge",slug:"拆分配置和-merge"},{level:2,title:"启动本地服务",slug:"启动本地服务"},{level:2,title:"处理 ES6",slug:"处理-es6"},{level:2,title:"处理样式",slug:"处理样式"},{level:2,title:"处理图片",slug:"处理图片"},{level:2,title:"模块化",slug:"模块化"}],readingTime:{minutes:6.74,words:2023},updateTime:"2022年4月13日 16:52",updateTimeStamp:1649839922e3,createTime:"2022年4月13日 16:52",createTimeStamp:1649839922e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"浏览器缓存机制",frontmatter:{summary:"浏览器缓存机制 缓存可以减少网络 IO 消耗，提高访问速度。浏览器缓存机制有四个方面，它们按照获取资源时请求的优先级依次排列如下： Memory Cache; Service Worker Cache; HTTP Cache; Push Cache; 在浏览器的 Network 面板，Size 那一栏写着形如 (from disk cache) 这样描述的，",meta:[{property:"og:url",content:"/frontend-knowledge/browser/browser-caching-mechanism.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"浏览器缓存机制"},{property:"og:description",content:"浏览器缓存机制 缓存可以减少网络 IO 消耗，提高访问速度。浏览器缓存机制有四个方面，它们按照获取资源时请求的优先级依次排列如下： Memory Cache; Service Worker Cache; HTTP Cache; Push Cache; 在浏览器的 Network 面板，Size 那一栏写着形如 (from disk cache) 这样描述的，"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/browser/browser-caching-mechanism.html",relativePath:"frontend-knowledge/browser/browser-caching-mechanism.md",key:"v-7efb1b43",path:"/frontend-knowledge/browser/browser-caching-mechanism/",headers:[{level:2,title:"HTTP 缓存机制",slug:"http-缓存机制"},{level:3,title:"强缓存",slug:"强缓存"},{level:3,title:"协商缓存",slug:"协商缓存"},{level:3,title:"如何配置缓存策略",slug:"如何配置缓存策略"},{level:2,title:"MemoryCache",slug:"memorycache"},{level:2,title:"Service Worker Cache",slug:"service-worker-cache"},{level:2,title:"Push Cache",slug:"push-cache"}],readingTime:{minutes:7.86,words:2358},updateTime:"2023年6月15日 14:37",updateTimeStamp:1686811024e3,createTime:"2023年5月31日 17:12",createTimeStamp:1685524335e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:5}]},{title:"性能优化 - 产出代码",frontmatter:{summary:'性能优化 - 产出代码 " Webpack 性能优化主要有两个方向：优化打包构建速度 - 提高开发体验和效率，优化产出代码 - 提升产品性能，本文主要介绍如何优化产出代码。" 优化产出代码后可以带来的效果： 体积更小，加载更快; 合理分包，不重复加载; 速度更快，内存使用更少; 产出代码的优化措施有 8 点： 小图片 base64 编码; bundle 加 ',meta:[{property:"og:url",content:"/frontend-engineering/webpack/performance-optimization-in-output.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"性能优化 - 产出代码"},{property:"og:description",content:'性能优化 - 产出代码 " Webpack 性能优化主要有两个方向：优化打包构建速度 - 提高开发体验和效率，优化产出代码 - 提升产品性能，本文主要介绍如何优化产出代码。" 优化产出代码后可以带来的效果： 体积更小，加载更快; 合理分包，不重复加载; 速度更快，内存使用更少; 产出代码的优化措施有 8 点： 小图片 base64 编码; bundle 加 '},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-engineering/webpack/performance-optimization-in-output.html",relativePath:"frontend-engineering/webpack/performance-optimization-in-output.md",key:"v-7437241d",path:"/frontend-engineering/webpack/performance-optimization-in-output/",headers:[{level:2,title:"小图片 base64 编码",slug:"小图片-base64-编码"},{level:2,title:"bundle 加 hash",slug:"bundle-加-hash"},{level:2,title:"懒加载",slug:"懒加载"},{level:2,title:"提取公共代码",slug:"提取公共代码"},{level:2,title:"IgnorePlugin",slug:"ignoreplugin"},{level:2,title:"使用 CDN 加速",slug:"使用-cdn-加速"},{level:2,title:"使用 production",slug:"使用-production"},{level:2,title:"使用 Scope Hosting",slug:"使用-scope-hosting"}],readingTime:{minutes:4.37,words:1310},updateTime:"2022年4月13日 16:52",updateTimeStamp:1649839922e3,createTime:"2022年4月13日 16:52",createTimeStamp:1649839922e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"浏览器相关",frontmatter:{summary:"浏览器相关 作为一名前端开发者，虽然经常基于浏览器做应用层开发，但在工作中很少会去深究浏览器的内部运行原理，比如 JavaScript 是怎样运行，页面是怎样渲染出来的，浏览器中的网络和安全问题等等。 市面上浅显易懂的学习资料不多，李兵老师出的《浏览器基本原理与实践》这门课确实不错，它是我的主要学习资料。后来查询更多资料时发现，前端社区很多浏览器方面的课程和",meta:[{property:"og:url",content:"/frontend-knowledge/browser/"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"浏览器相关"},{property:"og:description",content:"浏览器相关 作为一名前端开发者，虽然经常基于浏览器做应用层开发，但在工作中很少会去深究浏览器的内部运行原理，比如 JavaScript 是怎样运行，页面是怎样渲染出来的，浏览器中的网络和安全问题等等。 市面上浅显易懂的学习资料不多，李兵老师出的《浏览器基本原理与实践》这门课确实不错，它是我的主要学习资料。后来查询更多资料时发现，前端社区很多浏览器方面的课程和"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/browser/",relativePath:"frontend-knowledge/browser/README.md",key:"v-4c6063e4",path:"/frontend-knowledge/browser/",readingTime:{minutes:2.05,words:615},updateTime:"2022年5月7日 23:02",updateTimeStamp:1651935729e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"V8 引擎的工作原理",frontmatter:{summary:"V8 引擎的工作原理 V8 是用 C++ 编写的 Google 开源高性能 JavaScript 和 WebAssembly 引擎，它用于 Chrome 和 Node.js 等，既可以独立运行，也可以嵌入到任何 C++ 应用程序中。 V8 引擎本身的源码非常复杂，大概有超过 100w 行 C++ 代码，作为前端开发者我暂时没有对它进行深入研究。只是通过了解它",meta:[{property:"og:url",content:"/frontend-knowledge/browser/execution-details-of-v8-engine.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"V8 引擎的工作原理"},{property:"og:description",content:"V8 引擎的工作原理 V8 是用 C++ 编写的 Google 开源高性能 JavaScript 和 WebAssembly 引擎，它用于 Chrome 和 Node.js 等，既可以独立运行，也可以嵌入到任何 C++ 应用程序中。 V8 引擎本身的源码非常复杂，大概有超过 100w 行 C++ 代码，作为前端开发者我暂时没有对它进行深入研究。只是通过了解它"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/browser/execution-details-of-v8-engine.html",relativePath:"frontend-knowledge/browser/execution-details-of-v8-engine.md",key:"v-03b19106",path:"/frontend-knowledge/browser/execution-details-of-v8-engine/",headers:[{level:2,title:"核心概念",slug:"核心概念"},{level:2,title:"执行流程",slug:"执行流程"},{level:2,title:"Parse 过程",slug:"parse-过程"}],readingTime:{minutes:6.42,words:1927},updateTime:"2021年12月26日 15:36",updateTimeStamp:1640504163e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"回流与重绘",frontmatter:{summary:"回流与重绘 概念介绍 通常对 DOM 的修改后，浏览器会执行这样的操作： Render Tree 发生变化 ——> 回流 ——> 重绘 其中：\r回流：当我们对 DOM 的修改引发了 DOM 几何尺寸的变化（比如修改元素的宽、高或隐藏元素等）时，浏览器需要重新计算元素的几何属性（其他元素的几何属性和位置也会因此受到影响），然后再将计算的结果绘制出来。这个过程就",meta:[{property:"og:url",content:"/frontend-knowledge/browser/reflow-and-repaint.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"回流与重绘"},{property:"og:description",content:"回流与重绘 概念介绍 通常对 DOM 的修改后，浏览器会执行这样的操作： Render Tree 发生变化 ——> 回流 ——> 重绘 其中：\r回流：当我们对 DOM 的修改引发了 DOM 几何尺寸的变化（比如修改元素的宽、高或隐藏元素等）时，浏览器需要重新计算元素的几何属性（其他元素的几何属性和位置也会因此受到影响），然后再将计算的结果绘制出来。这个过程就"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/browser/reflow-and-repaint.html",relativePath:"frontend-knowledge/browser/reflow-and-repaint.md",key:"v-33a93d86",path:"/frontend-knowledge/browser/reflow-and-repaint/",headers:[{level:2,title:"概念介绍",slug:"概念介绍"},{level:2,title:"触发重绘的操作",slug:"触发重绘的操作"},{level:2,title:"触发回流的操作",slug:"触发回流的操作"},{level:3,title:"改变 DOM 元素的几何属性",slug:"改变-dom-元素的几何属性"},{level:3,title:"改变 DOM 树的结构",slug:"改变-dom-树的结构"},{level:3,title:"获取一些特定属性的值",slug:"获取一些特定属性的值"},{level:2,title:"如何规避回流与重绘",slug:"如何规避回流与重绘"},{level:3,title:"避免频繁获取会触发回流的属性，将它们缓存起来",slug:"避免频繁获取会触发回流的属性-将它们缓存起来"},{level:3,title:"避免逐条改变样式，使用类名去合并样式",slug:"避免逐条改变样式-使用类名去合并样式"},{level:3,title:"将 DOM 离线",slug:"将-dom-离线"},{level:3,title:"Flush 队列：浏览器并没有那么简单",slug:"flush-队列-浏览器并没有那么简单"}],readingTime:{minutes:5.61,words:1683},updateTime:"2023年6月16日 10:47",updateTimeStamp:1686883656e3,createTime:"2023年6月16日 10:47",createTimeStamp:1686883656e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"渲染引擎的工作原理",frontmatter:{summary:"渲染引擎的工作原理 这个系列的第一篇文章中对「浏览器从输入 URL 到页面展示」的整个流程做了小结，但其实最后一步在获得到 HTML、CSS 和 JavaScript 文件后，对渲染进程做的工作只是简单概括了一下，这里单独写一篇作为细节扩充。 HTML、CSS 和 JavaScript 是如何变成页面的 渲染引擎的工作过程相当复杂，所以渲染模块在执行过程中会",meta:[{property:"og:url",content:"/frontend-knowledge/browser/execution-details-of-rendering-process.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"渲染引擎的工作原理"},{property:"og:description",content:"渲染引擎的工作原理 这个系列的第一篇文章中对「浏览器从输入 URL 到页面展示」的整个流程做了小结，但其实最后一步在获得到 HTML、CSS 和 JavaScript 文件后，对渲染进程做的工作只是简单概括了一下，这里单独写一篇作为细节扩充。 HTML、CSS 和 JavaScript 是如何变成页面的 渲染引擎的工作过程相当复杂，所以渲染模块在执行过程中会"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/browser/execution-details-of-rendering-process.html",relativePath:"frontend-knowledge/browser/execution-details-of-rendering-process.md",key:"v-24fb6add",path:"/frontend-knowledge/browser/execution-details-of-rendering-process/",headers:[{level:2,title:"HTML、CSS 和 JavaScript 是如何变成页面的",slug:"html、css-和-javascript-是如何变成页面的"},{level:3,title:"流程小结",slug:"流程小结"},{level:3,title:"完整流程示意图",slug:"完整流程示意图"},{level:2,title:"重排、重绘、和合成",slug:"重排、重绘、和合成"},{level:3,title:"重排：更新了元素的几何属性",slug:"重排-更新了元素的几何属性"},{level:3,title:"重绘：更新元素的绘制属性",slug:"重绘-更新元素的绘制属性"},{level:3,title:"合成：直接合成阶段",slug:"合成-直接合成阶段"},{level:2,title:"优化策略：减少重排和重绘",slug:"优化策略-减少重排和重绘"},{level:3,title:"1.对 dom 属性的读写操作要分离",slug:"_1-对-dom-属性的读写操作要分离"},{level:3,title:"2.使用 class 操作样式，而不是频繁操作 style",slug:"_2-使用-class-操作样式-而不是频繁操作-style"},{level:3,title:"3.缓存布局信息",slug:"_3-缓存布局信息"},{level:3,title:"4.离线改变 DOM",slug:"_4-离线改变-dom"},{level:3,title:"5.position 属性为 absolute 或 fixed",slug:"_5-position-属性为-absolute-或-fixed"},{level:3,title:"6.优化动画",slug:"_6-优化动画"},{level:3,title:"7.对 window resize 事件做防抖处理",slug:"_7-对-window-resize-事件做防抖处理"},{level:3,title:"8.不要使用 table 布局",slug:"_8-不要使用-table-布局"},{level:3,title:"9.尽可能不要修改影响范围比较大的 DOM",slug:"_9-尽可能不要修改影响范围比较大的-dom"},{level:3,title:"10.慎用 CSS 表达式",slug:"_10-慎用-css-表达式"}],readingTime:{minutes:9,words:2700},updateTime:"2021年12月26日 15:36",updateTimeStamp:1640504163e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"浏览器宏观认识",frontmatter:{summary:"浏览器宏观认识 浏览器的架构 线程和进程 线程和进程的区别： 多线程可以并行处理任务，但是线程是不能单独存在的，它是由进程来启动和管理的。; 一个进程就是一个程序的运行实例。启动一个程序的时候，操作系统会为该程序创建一块内存，用来存放代码、运行中的数据和一个执行任务的主线程，我们把这样的一个运行环境叫进程。; 进程和线程的关系： 线程需要依附于进程，而进程中",meta:[{property:"og:url",content:"/frontend-knowledge/browser/browser-macro-knowledge.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"浏览器宏观认识"},{property:"og:description",content:"浏览器宏观认识 浏览器的架构 线程和进程 线程和进程的区别： 多线程可以并行处理任务，但是线程是不能单独存在的，它是由进程来启动和管理的。; 一个进程就是一个程序的运行实例。启动一个程序的时候，操作系统会为该程序创建一块内存，用来存放代码、运行中的数据和一个执行任务的主线程，我们把这样的一个运行环境叫进程。; 进程和线程的关系： 线程需要依附于进程，而进程中"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/browser/browser-macro-knowledge.html",relativePath:"frontend-knowledge/browser/browser-macro-knowledge.md",key:"v-5582f1c2",path:"/frontend-knowledge/browser/browser-macro-knowledge/",headers:[{level:2,title:"浏览器的架构",slug:"浏览器的架构"},{level:3,title:"线程和进程",slug:"线程和进程"},{level:3,title:"Chrome 架构",slug:"chrome-架构"},{level:2,title:"TCP/IP 协议",slug:"tcp-ip-协议"},{level:3,title:"IP：把数据包送达目的主机",slug:"ip-把数据包送达目的主机"},{level:3,title:"UDP：把数据包送达应用程序",slug:"udp-把数据包送达应用程序"},{level:3,title:"TCP：把数据完整地送达应用程序",slug:"tcp-把数据完整地送达应用程序"},{level:2,title:"HTTP 请求流程",slug:"http-请求流程"},{level:3,title:"带着问题去学习",slug:"带着问题去学习"},{level:3,title:"浏览器地址栏键入域名后的动作",slug:"浏览器地址栏键入域名后的动作"},{level:3,title:"问题解答",slug:"问题解答"},{level:2,title:"输入 URL 到页面展示",slug:"输入-url-到页面展示"},{level:3,title:"完整流程小结",slug:"完整流程小结"},{level:3,title:"完整流程示意图",slug:"完整流程示意图"}],readingTime:{minutes:17.67,words:5301},updateTime:"2021年12月26日 15:36",updateTimeStamp:1640504163e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"网络安全协议（HTTPS）",frontmatter:{summary:"网络安全协议（HTTPS） HTTP 的明文传输 HTTP 协议最初是为了传输超文本文件，没有加密传输数据的需求，所以是明文传输的。 在将 HTTP 数据提交给 TCP 层之后，数据会经过用户电脑、WiFi 路由器、运营商和目标服务器，在这中间的每个环节中，数据都有可能被窃取或篡改。比如用户电脑被黑客安装了恶意软件，那么恶意软件就能抓取和篡改所发出的 HTT",meta:[{property:"og:url",content:"/frontend-knowledge/browser/https.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"网络安全协议（HTTPS）"},{property:"og:description",content:"网络安全协议（HTTPS） HTTP 的明文传输 HTTP 协议最初是为了传输超文本文件，没有加密传输数据的需求，所以是明文传输的。 在将 HTTP 数据提交给 TCP 层之后，数据会经过用户电脑、WiFi 路由器、运营商和目标服务器，在这中间的每个环节中，数据都有可能被窃取或篡改。比如用户电脑被黑客安装了恶意软件，那么恶意软件就能抓取和篡改所发出的 HTT"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/browser/https.html",relativePath:"frontend-knowledge/browser/https.md",key:"v-0e07050e",path:"/frontend-knowledge/browser/https/",headers:[{level:2,title:"HTTP 的明文传输",slug:"http-的明文传输"},{level:2,title:"在 HTTP 协议栈中引入安全层",slug:"在-http-协议栈中引入安全层"},{level:3,title:"第一版：使用对称加密",slug:"第一版-使用对称加密"},{level:3,title:"第二版：使用非对称加密",slug:"第二版-使用非对称加密"},{level:3,title:"第三版：对称加密和非对称加密搭配使用",slug:"第三版-对称加密和非对称加密搭配使用"},{level:3,title:"第四版：添加数字证书",slug:"第四版-添加数字证书"},{level:2,title:"总结：HTTPS 的握手过程",slug:"总结-https-的握手过程"}],readingTime:{minutes:7.83,words:2348},updateTime:"2022年5月15日 10:34",updateTimeStamp:1652582089e3,createTime:"2022年5月13日 14:32",createTimeStamp:1652423542e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"CSRF 攻击",frontmatter:{summary:'CSRF 攻击 " 陌生链接不要随便点！！！" 什么是 CSRF 攻击 CSRF 英文全称是 Cross-site request forgery，所以又称为「跨站请求伪造」，是指黑客引诱用户打开黑客的网站，在黑客的网站中，利用用户的登录状态发起的跨站请求。 简单来讲，CSRF 攻击就是黑客利用了用户的登录状态，并通过第三方的站点来做一些坏事。 和 XSS ',meta:[{property:"og:url",content:"/frontend-knowledge/browser/csrf.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"CSRF 攻击"},{property:"og:description",content:'CSRF 攻击 " 陌生链接不要随便点！！！" 什么是 CSRF 攻击 CSRF 英文全称是 Cross-site request forgery，所以又称为「跨站请求伪造」，是指黑客引诱用户打开黑客的网站，在黑客的网站中，利用用户的登录状态发起的跨站请求。 简单来讲，CSRF 攻击就是黑客利用了用户的登录状态，并通过第三方的站点来做一些坏事。 和 XSS '},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/browser/csrf.html",relativePath:"frontend-knowledge/browser/csrf.md",key:"v-665456c6",path:"/frontend-knowledge/browser/csrf/",headers:[{level:2,title:"什么是 CSRF 攻击",slug:"什么是-csrf-攻击"},{level:2,title:"CSRF 攻击方式",slug:"csrf-攻击方式"},{level:3,title:"自动发起 Get 请求",slug:"自动发起-get-请求"},{level:3,title:"自动发起 POST 请求",slug:"自动发起-post-请求"},{level:3,title:"引诱用户点击链接",slug:"引诱用户点击链接"},{level:2,title:"CSRF 攻击的前置条件",slug:"csrf-攻击的前置条件"},{level:2,title:"如何防止 CSRF 攻击",slug:"如何防止-csrf-攻击"},{level:3,title:"充分利用好 Cookie 的 SameSite 属性",slug:"充分利用好-cookie-的-samesite-属性"},{level:3,title:"验证请求的来源站点",slug:"验证请求的来源站点"},{level:3,title:"CSRF Token",slug:"csrf-token"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:5.71,words:1713},updateTime:"2022年5月12日 10:59",updateTimeStamp:1652324363e3,createTime:"2022年5月12日 10:59",createTimeStamp:1652324363e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"浏览器内核与 JavaScript 引擎",frontmatter:{summary:"浏览器内核与 JavaScript 引擎 浏览器内核 不同的浏览器有不同的内核组成： Gecko：早期被 Netscape 和 Mozilla Firefox 浏览器浏览器使用。; Trident：微软开发，被 IE4 - IE11 浏览器使用，但是 Edge 浏览器已经转向 Blink。; Webkit：苹果基于 KHTML 开发、开源的，用于 Safar",meta:[{property:"og:url",content:"/frontend-knowledge/browser/kernel-and-javascript-engine.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"浏览器内核与 JavaScript 引擎"},{property:"og:description",content:"浏览器内核与 JavaScript 引擎 浏览器内核 不同的浏览器有不同的内核组成： Gecko：早期被 Netscape 和 Mozilla Firefox 浏览器浏览器使用。; Trident：微软开发，被 IE4 - IE11 浏览器使用，但是 Edge 浏览器已经转向 Blink。; Webkit：苹果基于 KHTML 开发、开源的，用于 Safar"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/browser/kernel-and-javascript-engine.html",relativePath:"frontend-knowledge/browser/kernel-and-javascript-engine.md",key:"v-2a023ec6",path:"/frontend-knowledge/browser/kernel-and-javascript-engine/",headers:[{level:2,title:"浏览器内核",slug:"浏览器内核"},{level:2,title:"JavaScript 引擎",slug:"javascript-引擎"},{level:2,title:"两者的关系",slug:"两者的关系"}],readingTime:{minutes:1.96,words:588},updateTime:"2021年12月26日 15:36",updateTimeStamp:1640504163e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"跨站脚本攻击（XSS）",frontmatter:{summary:"跨站脚本攻击（XSS） 什么是 XSS 攻击 XSS 攻击全称是跨站脚本攻击，它是因为同源策略支持了页面中的第三方资源引用和 CORS，所带来的安全问题。 这种攻击是指黑客往 HTML 文件中或者 DOM 中注入恶意脚本，从而在用户浏览页面时利用注入的恶意脚本对用户实施攻击的一种手段。 XSS 的攻击方向 如果页面被注入了恶意 JavaScript 脚本，恶",meta:[{property:"og:url",content:"/frontend-knowledge/browser/xss.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"跨站脚本攻击（XSS）"},{property:"og:description",content:"跨站脚本攻击（XSS） 什么是 XSS 攻击 XSS 攻击全称是跨站脚本攻击，它是因为同源策略支持了页面中的第三方资源引用和 CORS，所带来的安全问题。 这种攻击是指黑客往 HTML 文件中或者 DOM 中注入恶意脚本，从而在用户浏览页面时利用注入的恶意脚本对用户实施攻击的一种手段。 XSS 的攻击方向 如果页面被注入了恶意 JavaScript 脚本，恶"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/browser/xss.html",relativePath:"frontend-knowledge/browser/xss.md",key:"v-394f5f1f",path:"/frontend-knowledge/browser/xss/",headers:[{level:2,title:"什么是 XSS 攻击",slug:"什么是-xss-攻击"},{level:2,title:"XSS 的攻击方向",slug:"xss-的攻击方向"},{level:2,title:"恶意脚本是怎么注入的",slug:"恶意脚本是怎么注入的"},{level:3,title:"存储型 XSS 攻击",slug:"存储型-xss-攻击"},{level:3,title:"反射型 XSS 攻击",slug:"反射型-xss-攻击"},{level:3,title:"基于 DOM 的 XSS 攻击",slug:"基于-dom-的-xss-攻击"},{level:2,title:"如何阻止 XSS 攻击",slug:"如何阻止-xss-攻击"},{level:3,title:"服务器对输入脚本进行过滤或转码",slug:"服务器对输入脚本进行过滤或转码"},{level:3,title:"充分利用 CSP",slug:"充分利用-csp"},{level:3,title:"使用 HttpOnly 属性",slug:"使用-httponly-属性"},{level:2,title:"各岗位防范 XSS 攻击的职责",slug:"各岗位防范-xss-攻击的职责"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:5.19,words:1557},updateTime:"2022年5月11日 16:23",updateTimeStamp:1652257383e3,createTime:"2022年5月11日 16:23",createTimeStamp:1652257383e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"同源策略",frontmatter:{summary:"同源策略 什么是同源策略 如果两个 URL 的协议、域名和端口都相同，我们就称这两个 URL 同源。 而同源策略是基于安全考虑指定的策略，它对两个不同的源之间进行了互相访问的约束。具体表现在： DOM 层面：同源策略限制了来自不同源的 JavaScript 脚本对当前 DOM 对象读和写的操作。; 数据层面：同源策略限制了不同源的站点读取当前站点的 Cook",meta:[{property:"og:url",content:"/frontend-knowledge/browser/same-origin-policy.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"同源策略"},{property:"og:description",content:"同源策略 什么是同源策略 如果两个 URL 的协议、域名和端口都相同，我们就称这两个 URL 同源。 而同源策略是基于安全考虑指定的策略，它对两个不同的源之间进行了互相访问的约束。具体表现在： DOM 层面：同源策略限制了来自不同源的 JavaScript 脚本对当前 DOM 对象读和写的操作。; 数据层面：同源策略限制了不同源的站点读取当前站点的 Cook"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/browser/same-origin-policy.html",relativePath:"frontend-knowledge/browser/same-origin-policy.md",key:"v-31e2f21d",path:"/frontend-knowledge/browser/same-origin-policy/",headers:[{level:2,title:"什么是同源策略",slug:"什么是同源策略"},{level:2,title:"浏览器对同源策略的让步",slug:"浏览器对同源策略的让步"},{level:3,title:"页面中可以嵌入第三方资源",slug:"页面中可以嵌入第三方资源"},{level:3,title:"跨域资源共享和跨文档消息机制",slug:"跨域资源共享和跨文档消息机制"},{level:2,title:"总结",slug:"总结"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:2.44,words:731},updateTime:"2022年5月10日 17:59",updateTimeStamp:1652176763e3,createTime:"2022年5月10日 17:49",createTimeStamp:1652176191e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"CSS",frontmatter:{summary:"CSS 在 Web 前端页面中， HTML 属于结构层，负责描绘出内容的结构；; CSS 属于表现层，负责「如何显示有关内容」；; JavaScript 属于行为层，负责「内容应如何对事件做出反应」。; 关于 CSS 的知识点，主要参考： 《精通CSS 高级Web标准解决方案（第3版）》; 《深入解析CSS》; W3school 的 HTML/CSS 部分;",meta:[{property:"og:url",content:"/frontend-knowledge/css/"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"CSS"},{property:"og:description",content:"CSS 在 Web 前端页面中， HTML 属于结构层，负责描绘出内容的结构；; CSS 属于表现层，负责「如何显示有关内容」；; JavaScript 属于行为层，负责「内容应如何对事件做出反应」。; 关于 CSS 的知识点，主要参考： 《精通CSS 高级Web标准解决方案（第3版）》; 《深入解析CSS》; W3school 的 HTML/CSS 部分;"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/css/",relativePath:"frontend-knowledge/css/README.md",key:"v-29f419ae",path:"/frontend-knowledge/css/",readingTime:{minutes:.77,words:232},updateTime:"2022年9月26日 17:04",updateTimeStamp:166418305e4,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"BFC",frontmatter:{summary:'BFC 常见定位方案 在讲 BFC 之前，我们先来了解一下常见的定位方案，定位方案用于控制元素的布局，有三种常见方案： 普通流（normal flow）; " 在普通流中，元素按照其在 HTML 中的先后位置至上而下布局，在这个过程中，行内元素水平排列，直到当行被占满然后换行，块级元素则会被渲染为完整的一个新行，除非另外指定，否则所有元素默认都是普通流定位，',meta:[{property:"og:url",content:"/frontend-knowledge/css/bfc.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"BFC"},{property:"og:description",content:'BFC 常见定位方案 在讲 BFC 之前，我们先来了解一下常见的定位方案，定位方案用于控制元素的布局，有三种常见方案： 普通流（normal flow）; " 在普通流中，元素按照其在 HTML 中的先后位置至上而下布局，在这个过程中，行内元素水平排列，直到当行被占满然后换行，块级元素则会被渲染为完整的一个新行，除非另外指定，否则所有元素默认都是普通流定位，'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/css/bfc.html",relativePath:"frontend-knowledge/css/bfc.md",key:"v-5f81eedb",path:"/frontend-knowledge/css/bfc/",headers:[{level:2,title:"常见定位方案",slug:"常见定位方案"},{level:2,title:"BFC 概念",slug:"bfc-概念"},{level:3,title:"Box：CSS 布局的基本单位",slug:"box-css-布局的基本单位"},{level:3,title:"Formatting Context",slug:"formatting-context"},{level:2,title:"BFC 特性及示例",slug:"bfc-特性及示例"},{level:3,title:"特性",slug:"特性"},{level:3,title:"示例",slug:"示例"},{level:2,title:"哪些元素会生成 BFC",slug:"哪些元素会生成-bfc"},{level:2,title:"BFC 的应用",slug:"bfc-的应用"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:5.8,words:1741},updateTime:"2022年4月20日 14:30",updateTimeStamp:1650436246e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"Flexbox 布局",frontmatter:{summary:"Flexbox 布局 布局的传统解决方案，是基于盒模型，通过它的 display、position、float 等属性来进行布局。它对于一些特殊布局不是很方便，比如垂直居中水平居中，如果运用了浮动特性的话，就需要清除浮动，不但比较麻烦，一不小心还会出现意料之外的布局，最后呈现的结果往往不尽人意。 基础知识 Flexbox（全称 Flexible Box）布局",meta:[{property:"og:url",content:"/frontend-knowledge/css/flexbox.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Flexbox 布局"},{property:"og:description",content:"Flexbox 布局 布局的传统解决方案，是基于盒模型，通过它的 display、position、float 等属性来进行布局。它对于一些特殊布局不是很方便，比如垂直居中水平居中，如果运用了浮动特性的话，就需要清除浮动，不但比较麻烦，一不小心还会出现意料之外的布局，最后呈现的结果往往不尽人意。 基础知识 Flexbox（全称 Flexible Box）布局"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/css/flexbox.html",relativePath:"frontend-knowledge/css/flexbox.md",key:"v-0c4becb5",path:"/frontend-knowledge/css/flexbox/",headers:[{level:2,title:"基础知识",slug:"基础知识"},{level:2,title:"容器属性",slug:"容器属性"},{level:3,title:"flex-direction",slug:"flex-direction"},{level:3,title:"flex-wrap",slug:"flex-wrap"},{level:3,title:"flex-flow",slug:"flex-flow"},{level:3,title:"justify-content",slug:"justify-content"},{level:3,title:"align-items",slug:"align-items"},{level:3,title:"align-content",slug:"align-content"},{level:2,title:"项目属性",slug:"项目属性"},{level:3,title:"order",slug:"order"},{level:3,title:"flex-grow",slug:"flex-grow"},{level:3,title:"flex-shrink",slug:"flex-shrink"},{level:3,title:"flex-basis",slug:"flex-basis"},{level:3,title:"flex",slug:"flex"},{level:3,title:"align-self",slug:"align-self"},{level:2,title:"简单实例",slug:"简单实例"},{level:3,title:"三栏布局",slug:"三栏布局"},{level:3,title:"居中问题",slug:"居中问题"},{level:2,title:"浏览器兼容性及其他",slug:"浏览器兼容性及其他"}],readingTime:{minutes:12.47,words:3741},updateTime:"2021年12月26日 15:36",updateTimeStamp:1640504163e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"盒模型",frontmatter:{summary:"盒模型 盒模型是 CSS 的核心概念，描述了元素如何显示，以及元素之间如何相互作用、相互影响。 边距和边框 在网页布局中，我们可以将 HTML 标签看成一个个矩形盒子，盒模型就是用来描述这些矩形盒子所占的空间大小。每个盒子都包括内容（content）、内边距（padding）、边框（border）和外边距（margin）。如下图所示： （盒模型） 内边距：内",meta:[{property:"og:url",content:"/frontend-knowledge/css/box-model.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"盒模型"},{property:"og:description",content:"盒模型 盒模型是 CSS 的核心概念，描述了元素如何显示，以及元素之间如何相互作用、相互影响。 边距和边框 在网页布局中，我们可以将 HTML 标签看成一个个矩形盒子，盒模型就是用来描述这些矩形盒子所占的空间大小。每个盒子都包括内容（content）、内边距（padding）、边框（border）和外边距（margin）。如下图所示： （盒模型） 内边距：内"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/css/box-model.html",relativePath:"frontend-knowledge/css/box-model.md",key:"v-0a10528b",path:"/frontend-knowledge/css/box-model/",headers:[{level:2,title:"边距和边框",slug:"边距和边框"},{level:3,title:"外边距折叠",slug:"外边距折叠"},{level:2,title:"块级元素和行内元素",slug:"块级元素和行内元素"},{level:3,title:"块级元素",slug:"块级元素"},{level:3,title:"行内元素",slug:"行内元素"},{level:3,title:"行内块级元素",slug:"行内块级元素"},{level:3,title:"显示模式的转换",slug:"显示模式的转换"},{level:2,title:"标准盒模型和 IE 盒模型",slug:"标准盒模型和-ie-盒模型"},{level:3,title:"标准盒模型",slug:"标准盒模型"},{level:3,title:"IE 盒模型",slug:"ie-盒模型"},{level:3,title:"两种模型区别",slug:"两种模型区别"},{level:3,title:"浏览器兼容性及其它",slug:"浏览器兼容性及其它"}],readingTime:{minutes:20.71,words:6212},updateTime:"2021年12月26日 15:36",updateTimeStamp:1640504163e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"Grid 布局",frontmatter:{summary:"Grid 布局 待定项 Grid 网格布局虽然强大，但由于其兼容性比 Flex 更差一点，目前并未得到全面应用。这主要取决于现代化浏览器的普及率（有些单位还是会更多地使用 IE）。 但作为一种全新的布局方式，随着现代化浏览器的逐渐普及，再加上不可能总是做面向 IE 客户的产品，Grid 网格布局未来也许会是一种趋势。 因此这一章节先放两篇比较好的Grid 网",meta:[{property:"og:url",content:"/frontend-knowledge/css/grid.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Grid 布局"},{property:"og:description",content:"Grid 布局 待定项 Grid 网格布局虽然强大，但由于其兼容性比 Flex 更差一点，目前并未得到全面应用。这主要取决于现代化浏览器的普及率（有些单位还是会更多地使用 IE）。 但作为一种全新的布局方式，随着现代化浏览器的逐渐普及，再加上不可能总是做面向 IE 客户的产品，Grid 网格布局未来也许会是一种趋势。 因此这一章节先放两篇比较好的Grid 网"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/css/grid.html",relativePath:"frontend-knowledge/css/grid.md",key:"v-5f9c817d",path:"/frontend-knowledge/css/grid/",headers:[{level:2,title:"待定项",slug:"待定项"},{level:2,title:"应用场景",slug:"应用场景"}],readingTime:{minutes:1.23,words:368},updateTime:"2022年5月4日 17:43",updateTimeStamp:1651657423e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"浮动（float）",frontmatter:{summary:"浮动（float） float 属性的取值 left：元素向左浮动; right：元素向右浮动; none：默认值，元素不会浮动，并会显示在其文本中出现的位置; 特性 浮动元素会从常规文档流中脱离。如果其兄弟元素为块级元素，该元素会忽视浮动元素并占据它的位置，但内部的文字和其他行内元素都会环绕浮动元素；如果兄弟元素为内联元素，则元素会环绕浮动元素排列。; 不",meta:[{property:"og:url",content:"/frontend-knowledge/css/float-property.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"浮动（float）"},{property:"og:description",content:"浮动（float） float 属性的取值 left：元素向左浮动; right：元素向右浮动; none：默认值，元素不会浮动，并会显示在其文本中出现的位置; 特性 浮动元素会从常规文档流中脱离。如果其兄弟元素为块级元素，该元素会忽视浮动元素并占据它的位置，但内部的文字和其他行内元素都会环绕浮动元素；如果兄弟元素为内联元素，则元素会环绕浮动元素排列。; 不"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/css/float-property.html",relativePath:"frontend-knowledge/css/float-property.md",key:"v-3363b27d",path:"/frontend-knowledge/css/float-property/",headers:[{level:2,title:"float 属性的取值",slug:"float-属性的取值"},{level:2,title:"特性",slug:"特性"},{level:2,title:"浮动元素的展示规则",slug:"浮动元素的展示规则"},{level:3,title:"规则",slug:"规则"},{level:3,title:"详解",slug:"详解"},{level:2,title:"重叠问题",slug:"重叠问题"},{level:2,title:"父元素高度塌陷问题",slug:"父元素高度塌陷问题"},{level:2,title:"清除浮动的方法",slug:"清除浮动的方法"},{level:3,title:"方法一：给父元素定义高度",slug:"方法一-给父元素定义高度"},{level:3,title:"方法二：使用空元素结合 clear 属性",slug:"方法二-使用空元素结合-clear-属性"},{level:3,title:"方法三：让父元素也一起浮动",slug:"方法三-让父元素也一起浮动"},{level:3,title:"方法四：父元素设置为 display: table",slug:"方法四-父元素设置为-display-table"},{level:3,title:"方法五：父元素设置 overflow: hidden 或 auto",slug:"方法五-父元素设置-overflow-hidden-或-auto"},{level:3,title:"方法六：父元素伪元素清除浮动",slug:"方法六-父元素伪元素清除浮动"},{level:3,title:"方法七：父元素双伪元素清除浮动",slug:"方法七-父元素双伪元素清除浮动"},{level:2,title:"浮动的应用",slug:"浮动的应用"}],readingTime:{minutes:7.48,words:2244},updateTime:"2021年12月26日 15:36",updateTimeStamp:1640504163e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"定位（position）",frontmatter:{summary:"定位（position） 文档流 在介绍 position 之前，有必要先了解下文档流。 简单说就是元素按照其在 HTML 中的位置顺序决定排布的过程。HTML的布局机制就是用文档流模型的，即块元素（block）独占一行，内联元素（inline），不独占一行。 在不使用其他与排列和定位相关的特殊 CSS 规则（float 和绝对定位）时，元素的默认排列规则就",meta:[{property:"og:url",content:"/frontend-knowledge/css/position-property.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"定位（position）"},{property:"og:description",content:"定位（position） 文档流 在介绍 position 之前，有必要先了解下文档流。 简单说就是元素按照其在 HTML 中的位置顺序决定排布的过程。HTML的布局机制就是用文档流模型的，即块元素（block）独占一行，内联元素（inline），不独占一行。 在不使用其他与排列和定位相关的特殊 CSS 规则（float 和绝对定位）时，元素的默认排列规则就"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/css/position-property.html",relativePath:"frontend-knowledge/css/position-property.md",key:"v-7c0e9667",path:"/frontend-knowledge/css/position-property/",headers:[{level:2,title:"文档流",slug:"文档流"},{level:2,title:"position 属性介绍",slug:"position-属性介绍"},{level:3,title:"static 静态定位",slug:"static-静态定位"},{level:3,title:"relative 相对定位",slug:"relative-相对定位"},{level:3,title:"absolute 绝对定位",slug:"absolute-绝对定位"},{level:3,title:"fixed 固定定位",slug:"fixed-固定定位"}],readingTime:{minutes:4.94,words:1481},updateTime:"2021年12月26日 15:36",updateTimeStamp:1640504163e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"伪元素和伪类",frontmatter:{summary:"伪元素和伪类 伪元素 伪元素写法 有时候我们想选择的页面区域不是通过元素来表示的（比如想选择一段话的第一个字），而我们也不想为此给页面添加额外的标记。CSS 为这种情况提供了一些特殊选择符，叫作伪元素。 伪元素是一个附加至选择符末的关键词，允许你对被选择元素的特定部分修改样式。 常用的伪元素如下表所示： 属性描述 :---:-- ::first-letter",meta:[{property:"og:url",content:"/frontend-knowledge/css/pseudo-elements-and-pseudo-classes.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"伪元素和伪类"},{property:"og:description",content:"伪元素和伪类 伪元素 伪元素写法 有时候我们想选择的页面区域不是通过元素来表示的（比如想选择一段话的第一个字），而我们也不想为此给页面添加额外的标记。CSS 为这种情况提供了一些特殊选择符，叫作伪元素。 伪元素是一个附加至选择符末的关键词，允许你对被选择元素的特定部分修改样式。 常用的伪元素如下表所示： 属性描述 :---:-- ::first-letter"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/css/pseudo-elements-and-pseudo-classes.html",relativePath:"frontend-knowledge/css/pseudo-elements-and-pseudo-classes.md",key:"v-f4039486",path:"/frontend-knowledge/css/pseudo-elements-and-pseudo-classes/",headers:[{level:2,title:"伪元素",slug:"伪元素"},{level:3,title:"伪元素写法",slug:"伪元素写法"},{level:3,title:"伪元素应用",slug:"伪元素应用"},{level:3,title:"伪元素注意事项",slug:"伪元素注意事项"},{level:2,title:"伪类",slug:"伪类"},{level:3,title:"状态伪类",slug:"状态伪类"},{level:3,title:"目标伪类",slug:"目标伪类"},{level:3,title:"反选伪类",slug:"反选伪类"},{level:3,title:"结构化伪类",slug:"结构化伪类"},{level:3,title:"表单伪类",slug:"表单伪类"},{level:2,title:"区别",slug:"区别"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:3.1,words:929},updateTime:"2022年6月28日 14:47",updateTimeStamp:1656398841e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"未完待续",frontmatter:{summary:"未完待续 知识点正在火速整理中",meta:[{property:"og:url",content:"/frontend-knowledge/css/to-be-continued.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"未完待续"},{property:"og:description",content:"未完待续 知识点正在火速整理中"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/css/to-be-continued.html",relativePath:"frontend-knowledge/css/to-be-continued.md",key:"v-386ea74f",path:"/frontend-knowledge/css/to-be-continued/",headers:[{level:2,title:"知识点正在火速整理中",slug:"知识点正在火速整理中"}],readingTime:{minutes:.05,words:14},updateTime:"2021年12月26日 15:36",updateTimeStamp:1640504163e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"经典布局",frontmatter:{summary:"经典布局 网页布局（layout）是 CSS 的一个重点应用，在实际开发中，前端工程师在拿到设计稿后，都会先梳理页面的大致结构，构思完页面的布局后，再进行 coding。大多数网站都有着相似的布局，掌握这些布局套路便可以快速高效的完成开发工作。 相关属性 与布局相关的 CSS 属性主要有 3 个：display、position 和 float。 displ",meta:[{property:"og:url",content:"/frontend-knowledge/css/layout.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"经典布局"},{property:"og:description",content:"经典布局 网页布局（layout）是 CSS 的一个重点应用，在实际开发中，前端工程师在拿到设计稿后，都会先梳理页面的大致结构，构思完页面的布局后，再进行 coding。大多数网站都有着相似的布局，掌握这些布局套路便可以快速高效的完成开发工作。 相关属性 与布局相关的 CSS 属性主要有 3 个：display、position 和 float。 displ"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/css/layout.html",relativePath:"frontend-knowledge/css/layout.md",key:"v-7eb00dfd",path:"/frontend-knowledge/css/layout/",headers:[{level:2,title:"相关属性",slug:"相关属性"},{level:3,title:"display",slug:"display"},{level:3,title:"position",slug:"position"},{level:3,title:"float",slug:"float"},{level:2,title:"布局示例：两栏布局",slug:"布局示例-两栏布局"},{level:3,title:"设置 display 为 inline-block",slug:"设置-display-为-inline-block"},{level:3,title:"使用 float",slug:"使用-float"},{level:3,title:"使用 absolute",slug:"使用-absolute"},{level:2,title:"布局示例：三栏布局",slug:"布局示例-三栏布局"},{level:3,title:"圣杯布局",slug:"圣杯布局"},{level:3,title:"双飞翼布局",slug:"双飞翼布局"}],readingTime:{minutes:9.87,words:2960},updateTime:"2021年12月26日 15:36",updateTimeStamp:1640504163e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"长度和单位",frontmatter:{summary:'长度和单位 " CSS 单位 px，em，rem，vw，vh，%，vm 的区别" px px 就是 pixel 的缩写，意为像素。它是一张图片最小的一个点，一张位图就是千千万万的这样的点构成的，比如常常听到的电脑像素是 1024x768，表示的是水平方向是 1024 个像素点，垂直方向是 768 个像素点。 在网页设计中，px 是最常用的基本单位，它是相对于',meta:[{property:"og:url",content:"/frontend-knowledge/css/length-and-units.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"长度和单位"},{property:"og:description",content:'长度和单位 " CSS 单位 px，em，rem，vw，vh，%，vm 的区别" px px 就是 pixel 的缩写，意为像素。它是一张图片最小的一个点，一张位图就是千千万万的这样的点构成的，比如常常听到的电脑像素是 1024x768，表示的是水平方向是 1024 个像素点，垂直方向是 768 个像素点。 在网页设计中，px 是最常用的基本单位，它是相对于'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/css/length-and-units.html",relativePath:"frontend-knowledge/css/length-and-units.md",key:"v-9667b206",path:"/frontend-knowledge/css/length-and-units/",headers:[{level:2,title:"px",slug:"px"},{level:2,title:"em",slug:"em"},{level:2,title:"rem",slug:"rem"},{level:3,title:"简介",slug:"简介"},{level:3,title:"62.5% 和 10px 的区别",slug:"_62-5-和-10px-的区别"},{level:3,title:"Chrome 浏览器 12px 的坑",slug:"chrome-浏览器-12px-的坑"},{level:2,title:"vw、vh",slug:"vw、vh"},{level:3,title:"简介",slug:"简介-2"},{level:3,title:"vw、vh 与 % 百分比的区别",slug:"vw、vh-与-百分比的区别"},{level:3,title:"vmin、vmax 用处",slug:"vmin、vmax-用处"},{level:2,title:"百分比 %",slug:"百分比"},{level:2,title:"常见问题",slug:"常见问题"}],readingTime:{minutes:7.07,words:2121},updateTime:"2021年12月26日 15:36",updateTimeStamp:1640504163e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"选择器与样式优先级",frontmatter:{summary:"选择器与样式优先级 选择器写法 一般选择符 类型选择符（通过元素名指定）; ID 选择符（由井号 # 开头）; 类选择符（由句点 . 开头）; 可以将类型选择符和类选择符结合使用，以指定特定的 HTML 元素下特定 class 的样式。 实例： 组合选择符 后代选择符（以空格分隔）; 子选择符（以大于号分隔）; 相邻同辈选择符（以加号分隔）; 一般同辈选择符",meta:[{property:"og:url",content:"/frontend-knowledge/css/selectors-and-selector-priority.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"选择器与样式优先级"},{property:"og:description",content:"选择器与样式优先级 选择器写法 一般选择符 类型选择符（通过元素名指定）; ID 选择符（由井号 # 开头）; 类选择符（由句点 . 开头）; 可以将类型选择符和类选择符结合使用，以指定特定的 HTML 元素下特定 class 的样式。 实例： 组合选择符 后代选择符（以空格分隔）; 子选择符（以大于号分隔）; 相邻同辈选择符（以加号分隔）; 一般同辈选择符"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/css/selectors-and-selector-priority.html",relativePath:"frontend-knowledge/css/selectors-and-selector-priority.md",key:"v-9720d3da",path:"/frontend-knowledge/css/selectors-and-selector-priority/",headers:[{level:2,title:"选择器写法",slug:"选择器写法"},{level:3,title:"一般选择符",slug:"一般选择符"},{level:3,title:"组合选择符",slug:"组合选择符"},{level:3,title:"通用选择符",slug:"通用选择符"},{level:3,title:"属性选择符",slug:"属性选择符"},{level:2,title:"样式优先级",slug:"样式优先级"},{level:2,title:"经验法则",slug:"经验法则"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:13.8,words:4141},updateTime:"2022年4月25日 16:26",updateTimeStamp:1650875166e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"CSS 引入方式",frontmatter:{summary:"CSS 引入方式 引入方式 css 引入页面的方式有四种： 内联样式：即行内样式，通过标签的 style 属性，在标签上直接写样式。; 嵌入样式：通过 style 标签，在网页上创建嵌入的样式表。; 外链样式：通过 link 标签，链接外部样式文件到页面中。; 导入样式：通过 CSS 提供的 @import 语法，在样式表中链接其他样式表。; link 和 ",meta:[{property:"og:url",content:"/frontend-knowledge/css/ways-to-insert-css.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"CSS 引入方式"},{property:"og:description",content:"CSS 引入方式 引入方式 css 引入页面的方式有四种： 内联样式：即行内样式，通过标签的 style 属性，在标签上直接写样式。; 嵌入样式：通过 style 标签，在网页上创建嵌入的样式表。; 外链样式：通过 link 标签，链接外部样式文件到页面中。; 导入样式：通过 CSS 提供的 @import 语法，在样式表中链接其他样式表。; link 和 "},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/css/ways-to-insert-css.html",relativePath:"frontend-knowledge/css/ways-to-insert-css.md",key:"v-14a93986",path:"/frontend-knowledge/css/ways-to-insert-css/",headers:[{level:2,title:"引入方式",slug:"引入方式"},{level:2,title:"link 和 @import 的区别",slug:"link-和-import-的区别"},{level:2,title:"@import 引入 CSS 的弊端",slug:"import-引入-css-的弊端"}],readingTime:{minutes:1.57,words:472},updateTime:"2021年12月26日 15:36",updateTimeStamp:1640504163e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"修订 Function.prototype.toString()",frontmatter:{summary:"修订 Function.prototype.toString() 函数是对象，并且每个对象都有一个 .toString() 方法，因为它最初存在于 Object.prototype.toString() 上。所有对象（包括函数）都是通过基于原型的类继承从它继承的。这意味着我们以前已经有 funcion.toString() 方法了。 Function.pro",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es10-function.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"修订 Function.prototype.toString()"},{property:"og:description",content:"修订 Function.prototype.toString() 函数是对象，并且每个对象都有一个 .toString() 方法，因为它最初存在于 Object.prototype.toString() 上。所有对象（包括函数）都是通过基于原型的类继承从它继承的。这意味着我们以前已经有 funcion.toString() 方法了。 Function.pro"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es10-function.html",relativePath:"frontend-knowledge/es6-and-beyond/es10-function.md",key:"v-7e62023a",path:"/frontend-knowledge/es6-and-beyond/es10-function/",readingTime:{minutes:.48,words:145},updateTime:"2022年2月8日 19:30",updateTimeStamp:1644319851e3,createTime:"2022年2月8日 19:30",createTimeStamp:1644319851e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"Array 扩展",frontmatter:{summary:'Array 扩展 Array.prototype.flat() flat() 方法会按照一个可指定的深度递归遍历数组，并将所有元素与遍历到的子数组中的元素合并为一个新数组返回。 语法 " const newArray = arr.flat(depth)" 解释 参数 含义 必选 ----- ----------------------------------',meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es10-array.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Array 扩展"},{property:"og:description",content:'Array 扩展 Array.prototype.flat() flat() 方法会按照一个可指定的深度递归遍历数组，并将所有元素与遍历到的子数组中的元素合并为一个新数组返回。 语法 " const newArray = arr.flat(depth)" 解释 参数 含义 必选 ----- ----------------------------------'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es10-array.html",relativePath:"frontend-knowledge/es6-and-beyond/es10-array.md",key:"v-39a6f80b",path:"/frontend-knowledge/es6-and-beyond/es10-array/",headers:[{level:2,title:"Array.prototype.flat()",slug:"array-prototype-flat"},{level:2,title:"Array.prototype.flatMap()",slug:"array-prototype-flatmap"},{level:2,title:"推荐阅读",slug:"推荐阅读"}],readingTime:{minutes:1.58,words:473},updateTime:"2022年2月8日 17:16",updateTimeStamp:1644311802e3,createTime:"2022年2月8日 17:16",createTimeStamp:1644311802e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"可选的 Catch Binding",frontmatter:{summary:"可选的 Catch Binding 可以省略 catch 子句的错误变量 在 ES10 之前我们都是这样捕获异常的（即使不使用错误变量，也必须始终声明它）： 在这里 err 是必须的参数，在 ES10 可以省略这个参数： 通常，我们不希望忽略应用程序中的错误。至少希望将它们打印到控制台。然而，在一些罕见的情况下，可能根本不需要 catch 变量绑定，比如下面",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es10-catch.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"可选的 Catch Binding"},{property:"og:description",content:"可选的 Catch Binding 可以省略 catch 子句的错误变量 在 ES10 之前我们都是这样捕获异常的（即使不使用错误变量，也必须始终声明它）： 在这里 err 是必须的参数，在 ES10 可以省略这个参数： 通常，我们不希望忽略应用程序中的错误。至少希望将它们打印到控制台。然而，在一些罕见的情况下，可能根本不需要 catch 变量绑定，比如下面"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es10-catch.html",relativePath:"frontend-knowledge/es6-and-beyond/es10-catch.md",key:"v-cafb3472",path:"/frontend-knowledge/es6-and-beyond/es10-catch/",headers:[{level:2,title:"可以省略 catch 子句的错误变量",slug:"可以省略-catch-子句的错误变量"},{level:2,title:"案例 1：验证参数是否为 json 格式",slug:"案例-1-验证参数是否为-json-格式"},{level:2,title:"案例 2：日志代码中的防错逻辑",slug:"案例-2-日志代码中的防错逻辑"}],readingTime:{minutes:1.03,words:309},updateTime:"2022年2月8日 19:50",updateTimeStamp:1644321023e3,createTime:"2022年2月8日 19:50",createTimeStamp:1644321023e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"ES6 - ES12 新特性",frontmatter:{summary:"ES6 - ES12 新特性 什么是 ECMAScript（What）？ ECMAScript 和 JavaScript 的关系是，前者是后者的规格，后者是前者的一种实现。 狭义的理解，我们写的大部分 JavaScript 代码都是 ES5 代码，而 ES6，ES7，ES8，ES9，ES10，ES11，ES12 以及后面出的版本，为我们引入了很多新特性。 为",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"ES6 - ES12 新特性"},{property:"og:description",content:"ES6 - ES12 新特性 什么是 ECMAScript（What）？ ECMAScript 和 JavaScript 的关系是，前者是后者的规格，后者是前者的一种实现。 狭义的理解，我们写的大部分 JavaScript 代码都是 ES5 代码，而 ES6，ES7，ES8，ES9，ES10，ES11，ES12 以及后面出的版本，为我们引入了很多新特性。 为"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/",relativePath:"frontend-knowledge/es6-and-beyond/README.md",key:"v-45202a8a",path:"/frontend-knowledge/es6-and-beyond/",readingTime:{minutes:1.94,words:582},updateTime:"2022年9月26日 17:04",updateTimeStamp:166418305e4,createTime:"2021年12月26日 17:08",createTimeStamp:1640509737e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:4}]},{title:"JSON 扩展",frontmatter:{summary:"JSON 扩展 JSON superset JSON 超集，简而言之就是让 ECMAScript 兼容所有 JSON 支持的文本。ECMAScript 曾在标准 JSON.parse 部分阐明 JSON 确为其一个子集，但由于 JSON 内容可以正常包含 U+2028 行分隔符 与 U+2029 段分隔符，而 ECMAScript 却不行。 JSON.str",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es10-json.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"JSON 扩展"},{property:"og:description",content:"JSON 扩展 JSON superset JSON 超集，简而言之就是让 ECMAScript 兼容所有 JSON 支持的文本。ECMAScript 曾在标准 JSON.parse 部分阐明 JSON 确为其一个子集，但由于 JSON 内容可以正常包含 U+2028 行分隔符 与 U+2029 段分隔符，而 ECMAScript 却不行。 JSON.str"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es10-json.html",relativePath:"frontend-knowledge/es6-and-beyond/es10-json.md",key:"v-453dbd63",path:"/frontend-knowledge/es6-and-beyond/es10-json/",headers:[{level:2,title:"JSON superset",slug:"json-superset"},{level:2,title:"JSON.stringify() 增强能力",slug:"json-stringify-增强能力"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:.95,words:285},updateTime:"2022年2月9日 17:54",updateTimeStamp:1644400466e3,createTime:"2022年2月9日 17:54",createTimeStamp:1644400466e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"Object.fromEntries()",frontmatter:{summary:"Object.fromEntries() 方法 Object.fromEntries() 把键值对列表转换为一个对象，这个方法是和 Object.entries() 相对的。 案例 1：Object 转换操作 案例 2：Map 转 Object 案例 3：过滤 course 表示所有课程，想请求课程分数大于 80 的课程组成的对象： 参考资料 proposa",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es10-object.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Object.fromEntries()"},{property:"og:description",content:"Object.fromEntries() 方法 Object.fromEntries() 把键值对列表转换为一个对象，这个方法是和 Object.entries() 相对的。 案例 1：Object 转换操作 案例 2：Map 转 Object 案例 3：过滤 course 表示所有课程，想请求课程分数大于 80 的课程组成的对象： 参考资料 proposa"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es10-object.html",relativePath:"frontend-knowledge/es6-and-beyond/es10-object.md",key:"v-10574b7a",path:"/frontend-knowledge/es6-and-beyond/es10-object/",headers:[{level:2,title:"案例 1：Object 转换操作",slug:"案例-1-object-转换操作"},{level:2,title:"案例 2：Map 转 Object",slug:"案例-2-map-转-object"},{level:2,title:"案例 3：过滤",slug:"案例-3-过滤"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:.67,words:201},updateTime:"2022年2月8日 15:46",updateTimeStamp:1644306378e3,createTime:"2022年2月8日 15:46",createTimeStamp:1644306378e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"Symbol 扩展",frontmatter:{summary:"Symbol 扩展 Symbol.prototype.description 我们知道，Symbol 的描述只被存储在内部的 description，没有直接对外暴露，只有调用 Symbol 的 toString() 时才可以读取这个属性： 现在可以通过 description 方法获取 Symbol 的描述： （完）",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es10-symbol.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Symbol 扩展"},{property:"og:description",content:"Symbol 扩展 Symbol.prototype.description 我们知道，Symbol 的描述只被存储在内部的 description，没有直接对外暴露，只有调用 Symbol 的 toString() 时才可以读取这个属性： 现在可以通过 description 方法获取 Symbol 的描述： （完）"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es10-symbol.html",relativePath:"frontend-knowledge/es6-and-beyond/es10-symbol.md",key:"v-7ab1e5ba",path:"/frontend-knowledge/es6-and-beyond/es10-symbol/",headers:[{level:2,title:"Symbol.prototype.description",slug:"symbol-prototype-description"}],readingTime:{minutes:.36,words:109},updateTime:"2022年2月13日 15:16",updateTimeStamp:1644736569e3,createTime:"2022年2月13日 15:16",createTimeStamp:1644736569e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"String 扩展",frontmatter:{summary:'String 扩展 String.prototype.trimStart() trimStart() 方法从字符串的开头删除空格，trimLeft() 是此方法的别名。 语法 " str.trimStart()" 或 " str.trimLeft()" 虽然 trimLeft 是 trimStart 的别名，但是你会发现 String.prototype.t',meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es10-string.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"String 扩展"},{property:"og:description",content:'String 扩展 String.prototype.trimStart() trimStart() 方法从字符串的开头删除空格，trimLeft() 是此方法的别名。 语法 " str.trimStart()" 或 " str.trimLeft()" 虽然 trimLeft 是 trimStart 的别名，但是你会发现 String.prototype.t'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es10-string.html",relativePath:"frontend-knowledge/es6-and-beyond/es10-string.md",key:"v-208c7c03",path:"/frontend-knowledge/es6-and-beyond/es10-string/",headers:[{level:2,title:"String.prototype.trimStart()",slug:"string-prototype-trimstart"},{level:2,title:"String.prototype.trimEnd()",slug:"string-prototype-trimend"}],readingTime:{minutes:.53,words:158},updateTime:"2022年2月8日 16:08",updateTimeStamp:1644307733e3,createTime:"2022年2月8日 16:08",createTimeStamp:1644307733e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"BigInt",frontmatter:{summary:"BigInt 介绍 在 ES11 增加了新的原始数据类型：BigInt，表示一个任意精度的整数，可以表示超长数据，可以超出 2 的 53 次方。 JS 中 Number 类型只能安全的表示 -(2⁵³-1) 至 2⁵³-1 范围的值 使用 BigInt 有两种方式： 方式一：数字后面增加 n 方式二：使用 BigInt 函数 参考资料 BigInt; （完）",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es11-bigint.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"BigInt"},{property:"og:description",content:"BigInt 介绍 在 ES11 增加了新的原始数据类型：BigInt，表示一个任意精度的整数，可以表示超长数据，可以超出 2 的 53 次方。 JS 中 Number 类型只能安全的表示 -(2⁵³-1) 至 2⁵³-1 范围的值 使用 BigInt 有两种方式： 方式一：数字后面增加 n 方式二：使用 BigInt 函数 参考资料 BigInt; （完）"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es11-bigint.html",relativePath:"frontend-knowledge/es6-and-beyond/es11-bigint.md",key:"v-35870b3a",path:"/frontend-knowledge/es6-and-beyond/es11-bigint/",headers:[{level:2,title:"介绍",slug:"介绍"},{level:3,title:"方式一：数字后面增加 n",slug:"方式一-数字后面增加-n"},{level:3,title:"方式二：使用 BigInt 函数",slug:"方式二-使用-bigint-函数"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:.53,words:158},updateTime:"2022年9月21日 17:55",updateTimeStamp:166375413e4,createTime:"2022年2月25日 21:44",createTimeStamp:1645796645e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"可选链 Optional chaining",frontmatter:{summary:"可选链 Optional chaining 可让我们在查询具有多层级的对象时，不再需要进行冗余的各种前置校验。 在之前的语法中，想获取到深层属性或方法，不得不做的前置校验，否则很容易命中 Uncaught TypeError: Cannot read property... 这种错误，这极有可能让你整个应用挂掉。 用了 Optional Chaining ，",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es11-chaining.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"可选链 Optional chaining"},{property:"og:description",content:"可选链 Optional chaining 可让我们在查询具有多层级的对象时，不再需要进行冗余的各种前置校验。 在之前的语法中，想获取到深层属性或方法，不得不做的前置校验，否则很容易命中 Uncaught TypeError: Cannot read property... 这种错误，这极有可能让你整个应用挂掉。 用了 Optional Chaining ，"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es11-chaining.html",relativePath:"frontend-knowledge/es6-and-beyond/es11-chaining.md",key:"v-0b0d83e3",path:"/frontend-knowledge/es6-and-beyond/es11-chaining/",headers:[{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:.86,words:257},updateTime:"2022年2月26日 10:23",updateTimeStamp:1645842217e3,createTime:"2022年2月26日 10:23",createTimeStamp:1645842217e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"globalThis",frontmatter:{summary:"globalThis Javascript 在不同的环境获取全局对象有不通的方式： node 中通过 global; web 中通过 window，self 等; self：打开任何一个网页，浏览器会首先创建一个窗口，这个窗口就是一个 window 对象，也是 JS 运行所依附的全局环境对象和全局作用域对象。 self 指窗口本身，它返回的对象跟 windo",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es11-globalthis.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"globalThis"},{property:"og:description",content:"globalThis Javascript 在不同的环境获取全局对象有不通的方式： node 中通过 global; web 中通过 window，self 等; self：打开任何一个网页，浏览器会首先创建一个窗口，这个窗口就是一个 window 对象，也是 JS 运行所依附的全局环境对象和全局作用域对象。 self 指窗口本身，它返回的对象跟 windo"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es11-globalthis.html",relativePath:"frontend-knowledge/es6-and-beyond/es11-globalthis.md",key:"v-1b16eba3",path:"/frontend-knowledge/es6-and-beyond/es11-globalthis/",headers:[{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:1.1,words:329},updateTime:"2022年2月25日 21:58",updateTimeStamp:1645797504e3,createTime:"2022年2月25日 21:58",createTimeStamp:1645797504e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"动态引入",frontmatter:{summary:"动态引入 动态 import 提案几年前就已提出，如今已经进入 ES 正式规范。这里理解成「按需」更为贴切。 现代前端打包资源越来越大，打包成几 M 的 JS 资源已成常态，而往往前端应用初始化时根本不需要全量加载逻辑资源，为了首屏渲染速度更快，很多时候都是按需加载，比如懒加载图片等。而这些按需执行逻辑资源都体现在某一个事件回调中去加载。 案例 页面上有一个",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es11-dynamic-import.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"动态引入"},{property:"og:description",content:"动态引入 动态 import 提案几年前就已提出，如今已经进入 ES 正式规范。这里理解成「按需」更为贴切。 现代前端打包资源越来越大，打包成几 M 的 JS 资源已成常态，而往往前端应用初始化时根本不需要全量加载逻辑资源，为了首屏渲染速度更快，很多时候都是按需加载，比如懒加载图片等。而这些按需执行逻辑资源都体现在某一个事件回调中去加载。 案例 页面上有一个"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es11-dynamic-import.html",relativePath:"frontend-knowledge/es6-and-beyond/es11-dynamic-import.md",key:"v-2102823a",path:"/frontend-knowledge/es6-and-beyond/es11-dynamic-import/",headers:[{level:2,title:"案例",slug:"案例"}],readingTime:{minutes:.73,words:218},updateTime:"2022年2月25日 21:44",updateTimeStamp:1645796645e3,createTime:"2022年2月25日 21:44",createTimeStamp:1645796645e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"空值合并运算符",frontmatter:{summary:"空值合并运算符 空值合并运算符（??）是一个逻辑运算符。当左侧操作数为 null 或 undefined 时，其返回右侧的操作数。否则返回左侧的操作数。 当我们查询某个属性时，经常会遇到，如果没有该属性就会设置一个默认的值。 空值合并运算符 ?? 我们仅在第一项为 null 或 undefined 时设置默认值。 参考资料 空值合并运算符; （完）",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es11-nullish.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"空值合并运算符"},{property:"og:description",content:"空值合并运算符 空值合并运算符（??）是一个逻辑运算符。当左侧操作数为 null 或 undefined 时，其返回右侧的操作数。否则返回左侧的操作数。 当我们查询某个属性时，经常会遇到，如果没有该属性就会设置一个默认的值。 空值合并运算符 ?? 我们仅在第一项为 null 或 undefined 时设置默认值。 参考资料 空值合并运算符; （完）"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es11-nullish.html",relativePath:"frontend-knowledge/es6-and-beyond/es11-nullish.md",key:"v-f8ef68e6",path:"/frontend-knowledge/es6-and-beyond/es11-nullish/",headers:[{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:.53,words:160},updateTime:"2022年5月18日 22:20",updateTimeStamp:1652883657e3,createTime:"2022年5月18日 22:20",createTimeStamp:1652883657e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"Promise.allSettled()",frontmatter:{summary:"Promise.allSettled() ES6 的新特性中，Promise.all() 具有并发执行异步任务的能力。但它的最大问题就是如果其中某个任务出现异常（reject），所有任务都会挂掉，Promise 直接进入 reject 状态。 场景：现在页面上有三个请求，分别请求不同的数据，如果一个接口服务异常，整个都是失败的，都无法渲染出数据。 我们需要一",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es11-promise.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Promise.allSettled()"},{property:"og:description",content:"Promise.allSettled() ES6 的新特性中，Promise.all() 具有并发执行异步任务的能力。但它的最大问题就是如果其中某个任务出现异常（reject），所有任务都会挂掉，Promise 直接进入 reject 状态。 场景：现在页面上有三个请求，分别请求不同的数据，如果一个接口服务异常，整个都是失败的，都无法渲染出数据。 我们需要一"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es11-promise.html",relativePath:"frontend-knowledge/es6-and-beyond/es11-promise.md",key:"v-5879ea85",path:"/frontend-knowledge/es6-and-beyond/es11-promise/",headers:[{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:.89,words:267},updateTime:"2022年2月25日 21:50",updateTimeStamp:1645797011e3,createTime:"2022年2月25日 21:50",createTimeStamp:1645797011e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"数字分隔符",frontmatter:{summary:"数字分隔符 这个新特性是为了方便程序员看代码而出现的，如果数字比较大，那么看起来就不是那么一目了然，比如下面的长数字： 一眼看不出这个数字的体量到底是多大，所以 ES12 提供了数字分隔符 _。 分隔符不仅可以分割十进制，也可以分割二净值或者十六净值的数据，非常好用。 上面例子分别代表了十进制，二进制和十六进制的数据，非常直观好用。 （完）",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es12-number.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"数字分隔符"},{property:"og:description",content:"数字分隔符 这个新特性是为了方便程序员看代码而出现的，如果数字比较大，那么看起来就不是那么一目了然，比如下面的长数字： 一眼看不出这个数字的体量到底是多大，所以 ES12 提供了数字分隔符 _。 分隔符不仅可以分割十进制，也可以分割二净值或者十六净值的数据，非常好用。 上面例子分别代表了十进制，二进制和十六进制的数据，非常直观好用。 （完）"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es12-number.html",relativePath:"frontend-knowledge/es6-and-beyond/es12-number.md",key:"v-da87dd7a",path:"/frontend-knowledge/es6-and-beyond/es12-number/",readingTime:{minutes:.53,words:160},updateTime:"2022年2月27日 12:22",updateTimeStamp:1645935734e3,createTime:"2022年2月27日 12:22",createTimeStamp:1645935734e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"String 扩展",frontmatter:{summary:'String 扩展 String.prototype.matchAll() matchAll() 方法返回一个包含所有匹配正则表达式及分组捕获结果的迭代器。 语法 " str.matchAll(regexp)" 解释 参数 含义 必选 ------ ------------- ---- regexp 正则表达式对象 Y 1. 如果所传参数不是一个正则表达式对',meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es11-string.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"String 扩展"},{property:"og:description",content:'String 扩展 String.prototype.matchAll() matchAll() 方法返回一个包含所有匹配正则表达式及分组捕获结果的迭代器。 语法 " str.matchAll(regexp)" 解释 参数 含义 必选 ------ ------------- ---- regexp 正则表达式对象 Y 1. 如果所传参数不是一个正则表达式对'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es11-string.html",relativePath:"frontend-knowledge/es6-and-beyond/es11-string.md",key:"v-b9641bba",path:"/frontend-knowledge/es6-and-beyond/es11-string/",headers:[{level:2,title:"String.prototype.matchAll()",slug:"string-prototype-matchall"},{level:3,title:"ES10 之前，有三种正则全部遍历的方法",slug:"es10-之前-有三种正则全部遍历的方法"},{level:3,title:"ES10，使用 matchAll 全部遍历",slug:"es10-使用-matchall-全部遍历"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:2.42,words:726},updateTime:"2022年2月24日 23:58",updateTimeStamp:1645718326e3,createTime:"2022年2月24日 23:58",createTimeStamp:1645718326e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"新的逻辑操作符",frontmatter:{summary:"新的逻辑操作符 新特性结合了逻辑运算符（&&，||，??）和赋值表达式： 逻辑与赋值 逻辑与赋值运算符（x &&= y）仅在 x 为真值（在 Boolean 上下文中认定为 true 的值）时赋值。 逻辑或赋值 逻辑或赋值运算符（x ||= y）仅在 x 为虚值（在 Boolean 上下文中认定为 false 的值）时赋值。 逻辑空赋值 逻辑空赋值运算符（x",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es12-logical.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"新的逻辑操作符"},{property:"og:description",content:"新的逻辑操作符 新特性结合了逻辑运算符（&&，||，??）和赋值表达式： 逻辑与赋值 逻辑与赋值运算符（x &&= y）仅在 x 为真值（在 Boolean 上下文中认定为 true 的值）时赋值。 逻辑或赋值 逻辑或赋值运算符（x ||= y）仅在 x 为虚值（在 Boolean 上下文中认定为 false 的值）时赋值。 逻辑空赋值 逻辑空赋值运算符（x"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es12-logical.html",relativePath:"frontend-knowledge/es6-and-beyond/es12-logical.md",key:"v-20d339b2",path:"/frontend-knowledge/es6-and-beyond/es12-logical/",headers:[{level:2,title:"逻辑与赋值",slug:"逻辑与赋值"},{level:2,title:"逻辑或赋值",slug:"逻辑或赋值"},{level:2,title:"逻辑空赋值",slug:"逻辑空赋值"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:.76,words:228},updateTime:"2022年2月28日 22:09",updateTimeStamp:1646057391e3,createTime:"2022年2月28日 22:09",createTimeStamp:1646057391e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"类私有域",frontmatter:{summary:"类私有域 类属性和类方法在默认情况下是公有的，但可以通过增加 # 前缀的方法来定义私有类字段，这样标识后的私有字段只能在类内部调用，外部无法访问到。 私有属性 通常，对于属性，我们能以 get 修饰符来进行修饰，然后就可以直接通过属性名来访问了： 在属性名前面加上 #，让其变成私有变量，如下所示： 要想访问上述的私有属性，则可以用公有属性去调用私有属性方法：",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es12-private-class-fields.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"类私有域"},{property:"og:description",content:"类私有域 类属性和类方法在默认情况下是公有的，但可以通过增加 # 前缀的方法来定义私有类字段，这样标识后的私有字段只能在类内部调用，外部无法访问到。 私有属性 通常，对于属性，我们能以 get 修饰符来进行修饰，然后就可以直接通过属性名来访问了： 在属性名前面加上 #，让其变成私有变量，如下所示： 要想访问上述的私有属性，则可以用公有属性去调用私有属性方法："},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es12-private-class-fields.html",relativePath:"frontend-knowledge/es6-and-beyond/es12-private-class-fields.md",key:"v-4a297d23",path:"/frontend-knowledge/es6-and-beyond/es12-private-class-fields/",headers:[{level:2,title:"私有属性",slug:"私有属性"},{level:2,title:"私有方法",slug:"私有方法"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:1.53,words:460},updateTime:"2022年2月26日 11:29",updateTimeStamp:1645846167e3,createTime:"2022年2月26日 11:29",createTimeStamp:1645846167e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"Promise.any() 和 AggregateError",frontmatter:{summary:"Promise.any() 和 AggregateError Promise.any() 接收一个 Promise 可迭代对象，只要其中的一个 promise 提前成功，就直接返回那个已经成功的 promise。 如果可迭代对象中没有一个 promise 成功（即所有的 promise 都失败/拒绝），就返回一个失败的 promise 和 Aggregate",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es12-promise.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Promise.any() 和 AggregateError"},{property:"og:description",content:"Promise.any() 和 AggregateError Promise.any() 接收一个 Promise 可迭代对象，只要其中的一个 promise 提前成功，就直接返回那个已经成功的 promise。 如果可迭代对象中没有一个 promise 成功（即所有的 promise 都失败/拒绝），就返回一个失败的 promise 和 Aggregate"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es12-promise.html",relativePath:"frontend-knowledge/es6-and-beyond/es12-promise.md",key:"v-8e8e8ffa",path:"/frontend-knowledge/es6-and-beyond/es12-promise/",headers:[{level:2,title:"举例演示",slug:"举例演示"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:1.23,words:369},updateTime:"2022年2月26日 11:38",updateTimeStamp:164584671e4,createTime:"2022年2月26日 11:38",createTimeStamp:164584671e4,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"解构赋值",frontmatter:{summary:"解构赋值 数组解构赋值 基本用法 将值从数组中取出，赋值给其他变量。这是一个拷贝过程，原数组和元素本身不会被改变。 可以是任意可遍历的对象 赋值的元素不仅是数组，它可以是任意可遍历的对象。 使用场景 1）循环体中使用，配合 Object.entries() 每次遍历得到一个数组，该数组的元素是给定对象自身可枚举属性的键和值; 接下来的解构操作本质上就是解构的",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es6-destructuring.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"解构赋值"},{property:"og:description",content:"解构赋值 数组解构赋值 基本用法 将值从数组中取出，赋值给其他变量。这是一个拷贝过程，原数组和元素本身不会被改变。 可以是任意可遍历的对象 赋值的元素不仅是数组，它可以是任意可遍历的对象。 使用场景 1）循环体中使用，配合 Object.entries() 每次遍历得到一个数组，该数组的元素是给定对象自身可枚举属性的键和值; 接下来的解构操作本质上就是解构的"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es6-destructuring.html",relativePath:"frontend-knowledge/es6-and-beyond/es6-destructuring.md",key:"v-cab12aba",path:"/frontend-knowledge/es6-and-beyond/es6-destructuring/",headers:[{level:2,title:"数组解构赋值",slug:"数组解构赋值"},{level:3,title:"基本用法",slug:"基本用法"},{level:3,title:"可以是任意可遍历的对象",slug:"可以是任意可遍历的对象"},{level:3,title:"使用场景",slug:"使用场景"},{level:3,title:"跳过赋值元素",slug:"跳过赋值元素"},{level:3,title:"rest 参数",slug:"rest-参数"},{level:3,title:"默认值",slug:"默认值"},{level:2,title:"对象解构赋值",slug:"对象解构赋值"},{level:3,title:"基本用法",slug:"基本用法-2"},{level:3,title:"rest 运算符",slug:"rest-运算符"},{level:3,title:"默认值",slug:"默认值-2"},{level:3,title:"嵌套对象",slug:"嵌套对象"},{level:2,title:"字符串解构赋值",slug:"字符串解构赋值"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:3.11,words:933},updateTime:"2022年1月1日 21:26",updateTimeStamp:1641043583e3,createTime:"2022年1月1日 21:26",createTimeStamp:1641043583e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"Array 扩展",frontmatter:{summary:"Array 扩展 ES5 中数组遍历方式 for 循环 forEach() 没有返回值，只是针对每个元素调用 func。 优点是不需要通过索引来获取数组项，缺点是不支持 break、continue。 易混淆点：在 forEach() 的循环体里使用 return 起的作用是 continue（离开当前循环，进入下一次循环），而不是原本的结束遍历。 map(",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es6-array.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Array 扩展"},{property:"og:description",content:"Array 扩展 ES5 中数组遍历方式 for 循环 forEach() 没有返回值，只是针对每个元素调用 func。 优点是不需要通过索引来获取数组项，缺点是不支持 break、continue。 易混淆点：在 forEach() 的循环体里使用 return 起的作用是 continue（离开当前循环，进入下一次循环），而不是原本的结束遍历。 map("},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es6-array.html",relativePath:"frontend-knowledge/es6-and-beyond/es6-array.md",key:"v-f0c48a3a",path:"/frontend-knowledge/es6-and-beyond/es6-array/",headers:[{level:2,title:"ES5 中数组遍历方式",slug:"es5-中数组遍历方式"},{level:3,title:"for 循环",slug:"for-循环"},{level:3,title:"forEach()",slug:"foreach"},{level:3,title:"map()",slug:"map"},{level:3,title:"filter()",slug:"filter"},{level:3,title:"some()",slug:"some"},{level:3,title:"every()",slug:"every"},{level:3,title:"reduce()",slug:"reduce"},{level:2,title:"ES6 中数组遍历方式",slug:"es6-中数组遍历方式"},{level:3,title:"for...of",slug:"for-of"},{level:2,title:"数组的新增方法",slug:"数组的新增方法"},{level:3,title:"Array.from()",slug:"array-from"},{level:3,title:"Array.of()",slug:"array-of"},{level:3,title:"Array.prototype.fill()",slug:"array-prototype-fill"},{level:3,title:"Array.prototype.find()",slug:"array-prototype-find"},{level:3,title:"Array.prototype.findIndex()",slug:"array-prototype-findindex"},{level:3,title:"Array.prototype.copyWithin()",slug:"array-prototype-copywithin"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:4.92,words:1477},updateTime:"2022年1月11日 17:14",updateTimeStamp:1641892464e3,createTime:"2022年1月1日 21:26",createTimeStamp:1641043583e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"String 扩展",frontmatter:{summary:'String 扩展 String.prototype.replaceAll() replaceAll() 方法返回一个全新的字符串，所有符合匹配规则的字符都将被替换掉。 语法 " const newStr = str.replaceAll(regexpsubstr, newSubstrfunction)" 第一个参数（匹配项）可以是一个字符串或者一个正则表达',meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es12-string.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"String 扩展"},{property:"og:description",content:'String 扩展 String.prototype.replaceAll() replaceAll() 方法返回一个全新的字符串，所有符合匹配规则的字符都将被替换掉。 语法 " const newStr = str.replaceAll(regexpsubstr, newSubstrfunction)" 第一个参数（匹配项）可以是一个字符串或者一个正则表达'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es12-string.html",relativePath:"frontend-knowledge/es6-and-beyond/es12-string.md",key:"v-260f6843",path:"/frontend-knowledge/es6-and-beyond/es12-string/",headers:[{level:2,title:"String.prototype.replaceAll()",slug:"string-prototype-replaceall"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:.63,words:190},updateTime:"2022年2月26日 10:57",updateTimeStamp:1645844241e3,createTime:"2022年2月26日 10:57",createTimeStamp:1645844241e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"Class",frontmatter:{summary:"Class 对于面向对象编程而言，主要关注类的声明、属性、方法、静态方法、继承、多态、私有属性。 声明类 ES6 之前类是通过构造函数来实现的： 或者可以这样写： 上面这两种写法跟传统的面向对象语言差异很大，很容易让新学习这门语言的程序员感到困惑。 在 ES6 中把类的声明专业化了，通过 class 语法来代替 function 的方式: 这样就和其他编程语",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es6-class.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Class"},{property:"og:description",content:"Class 对于面向对象编程而言，主要关注类的声明、属性、方法、静态方法、继承、多态、私有属性。 声明类 ES6 之前类是通过构造函数来实现的： 或者可以这样写： 上面这两种写法跟传统的面向对象语言差异很大，很容易让新学习这门语言的程序员感到困惑。 在 ES6 中把类的声明专业化了，通过 class 语法来代替 function 的方式: 这样就和其他编程语"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es6-class.html",relativePath:"frontend-knowledge/es6-and-beyond/es6-class.md",key:"v-6b27567a",path:"/frontend-knowledge/es6-and-beyond/es6-class/",headers:[{level:2,title:"声明类",slug:"声明类"},{level:2,title:"构造函数 constructor",slug:"构造函数-constructor"},{level:2,title:"类的实例化",slug:"类的实例化"},{level:2,title:"Setters & Getters",slug:"setters-getters"},{level:2,title:"静态方法 static",slug:"静态方法-static"},{level:2,title:"关键字 super",slug:"关键字-super"},{level:2,title:"继承 extends",slug:"继承-extends"},{level:2,title:"不存在变量提升",slug:"不存在变量提升"},{level:2,title:"总结",slug:"总结"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:10.56,words:3169},updateTime:"2022年3月8日 00:09",updateTimeStamp:1646669361e3,createTime:"2022年1月2日 12:25",createTimeStamp:1641097513e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:4}]},{title:"Function 扩展",frontmatter:{summary:"Function 扩展 默认参数 在 ES5 中函数如果需要支持默认参数，需要这么写： ES6 中改变了这种繁琐的写法，现在可以这么写： Rest 参数 以求和运算为例，ES5 中处理不定参数是借助 arguments 来做的： ES6 引入 Rest 参数（形式为 ...变量名），用于获取函数的多余参数，这样就不需要使用 arguments 对象了。 Re",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es6-function.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Function 扩展"},{property:"og:description",content:"Function 扩展 默认参数 在 ES5 中函数如果需要支持默认参数，需要这么写： ES6 中改变了这种繁琐的写法，现在可以这么写： Rest 参数 以求和运算为例，ES5 中处理不定参数是借助 arguments 来做的： ES6 引入 Rest 参数（形式为 ...变量名），用于获取函数的多余参数，这样就不需要使用 arguments 对象了。 Re"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es6-function.html",relativePath:"frontend-knowledge/es6-and-beyond/es6-function.md",key:"v-8cfd387a",path:"/frontend-knowledge/es6-and-beyond/es6-function/",headers:[{level:2,title:"默认参数",slug:"默认参数"},{level:2,title:"Rest 参数",slug:"rest-参数"},{level:2,title:"扩展运算符",slug:"扩展运算符"},{level:2,title:"length 属性",slug:"length-属性"},{level:2,title:"name 属性",slug:"name-属性"},{level:2,title:"箭头函数",slug:"箭头函数"},{level:3,title:"参数和括号",slug:"参数和括号"},{level:3,title:"返回值",slug:"返回值"},{level:3,title:"this 指向",slug:"this-指向"},{level:3,title:"注意点",slug:"注意点"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:2.52,words:757},updateTime:"2022年1月4日 17:23",updateTimeStamp:1641288193e3,createTime:"2022年1月1日 22:19",createTimeStamp:1641046779e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"let 和 const",frontmatter:{summary:"let 和 const 前言 这两个关键字是 ES6 新增的声明变量方式，与 var 的区别： var 有变量提升，值可变。允许重复声明。; let 不存在变量提升，值可变。不允许重复声明。; const 不存在变量提升，值不可变，但如果是定义对象，则属性可变。不允许重复声明。; let 全局声明时不是全局对象的属性 let 声明的全局变量不是全局对象 wi",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es6-let-const.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"let 和 const"},{property:"og:description",content:"let 和 const 前言 这两个关键字是 ES6 新增的声明变量方式，与 var 的区别： var 有变量提升，值可变。允许重复声明。; let 不存在变量提升，值可变。不允许重复声明。; const 不存在变量提升，值不可变，但如果是定义对象，则属性可变。不允许重复声明。; let 全局声明时不是全局对象的属性 let 声明的全局变量不是全局对象 wi"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es6-let-const.html",relativePath:"frontend-knowledge/es6-and-beyond/es6-let-const.md",key:"v-4f7d6f63",path:"/frontend-knowledge/es6-and-beyond/es6-let-const/",headers:[{level:2,title:"前言",slug:"前言"},{level:2,title:"let",slug:"let"},{level:3,title:"全局声明时不是全局对象的属性",slug:"全局声明时不是全局对象的属性"},{level:3,title:"拥有块级作用域",slug:"拥有块级作用域"},{level:3,title:"暂时性死区",slug:"暂时性死区"},{level:3,title:"隐蔽的暂时性死区",slug:"隐蔽的暂时性死区"},{level:2,title:"const",slug:"const"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:2.38,words:713},updateTime:"2022年1月1日 20:12",updateTimeStamp:1641039136e3,createTime:"2021年12月31日 18:28",createTimeStamp:1640946491e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"Map",frontmatter:{summary:"Map ES6 提供了 Map 数据结构。它类似于对象，也是键值对的集合，但是「键」的范围不限于字符串，各种类型的值（包括对象）都可以当作键。也就是说，Object 结构提供了「字符串—值」的对应，Map 结构提供了「值—值」的对应，是一种更完善的 Hash 结构实现。如果你需要「键值对」的数据结构，Map 比 Object 更合适。 基本语法 实例化 It",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es6-map.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Map"},{property:"og:description",content:"Map ES6 提供了 Map 数据结构。它类似于对象，也是键值对的集合，但是「键」的范围不限于字符串，各种类型的值（包括对象）都可以当作键。也就是说，Object 结构提供了「字符串—值」的对应，Map 结构提供了「值—值」的对应，是一种更完善的 Hash 结构实现。如果你需要「键值对」的数据结构，Map 比 Object 更合适。 基本语法 实例化 It"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es6-map.html",relativePath:"frontend-knowledge/es6-and-beyond/es6-map.md",key:"v-a905e97a",path:"/frontend-knowledge/es6-and-beyond/es6-map/",headers:[{level:2,title:"基本语法",slug:"基本语法"},{level:3,title:"实例化",slug:"实例化"},{level:3,title:"添加数据",slug:"添加数据"},{level:3,title:"删除数据",slug:"删除数据"},{level:3,title:"统计数据",slug:"统计数据"},{level:3,title:"查询数据",slug:"查询数据"},{level:2,title:"遍历方式",slug:"遍历方式"},{level:2,title:"WeekMap",slug:"weekmap"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:3.39,words:1018},updateTime:"2022年1月4日 16:56",updateTimeStamp:164128656e4,createTime:"2022年1月4日 16:56",createTimeStamp:164128656e4,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"Module",frontmatter:{summary:"Module 模块化的发展 随着项目中引入的 js 文件越来越多，模块化解决的问题： 全局变量污染：各个文件的变量都是挂载到 window 对象上，污染全局变量。; 变量重名：不同文件中的变量如果重名，后面的会覆盖前面的，造成程序运行错误。; 文件依赖顺序：多个文件之间存在依赖关系，需要保证一定加载顺序问题严重。; 在模块化思想中，每个 js 文件被看作是一",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es6-module.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Module"},{property:"og:description",content:"Module 模块化的发展 随着项目中引入的 js 文件越来越多，模块化解决的问题： 全局变量污染：各个文件的变量都是挂载到 window 对象上，污染全局变量。; 变量重名：不同文件中的变量如果重名，后面的会覆盖前面的，造成程序运行错误。; 文件依赖顺序：多个文件之间存在依赖关系，需要保证一定加载顺序问题严重。; 在模块化思想中，每个 js 文件被看作是一"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es6-module.html",relativePath:"frontend-knowledge/es6-and-beyond/es6-module.md",key:"v-72aadeca",path:"/frontend-knowledge/es6-and-beyond/es6-module/",headers:[{level:2,title:"模块化的发展",slug:"模块化的发展"},{level:3,title:"CommonJS 规范",slug:"commonjs-规范"},{level:3,title:"AMD 规范",slug:"amd-规范"},{level:3,title:"CMD 规范",slug:"cmd-规范"},{level:3,title:"ES6 规范",slug:"es6-规范"},{level:2,title:"export",slug:"export"},{level:3,title:"导出变量或者常量",slug:"导出变量或者常量"},{level:3,title:"导出函数",slug:"导出函数"},{level:3,title:"导出 Object",slug:"导出-object"},{level:3,title:"导出 Class",slug:"导出-class"},{level:2,title:"as",slug:"as"},{level:2,title:"export default",slug:"export-default"},{level:2,title:"import",slug:"import"},{level:3,title:"直接导入",slug:"直接导入"},{level:3,title:"修改导入名称",slug:"修改导入名称"},{level:3,title:"批量导入",slug:"批量导入"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:5.09,words:1526},updateTime:"2022年9月15日 14:31",updateTimeStamp:1663223515e3,createTime:"2022年1月17日 17:55",createTimeStamp:1642413303e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"Generator",frontmatter:{summary:"Generator Generators 是可以用来控制迭代器的函数。它们可以暂停，然后在任何时候恢复。 常规循环： 利用 Generator： 常规的循环只能一次遍历完所有值，Generator 可以通过调用 next() 方法拿到依次遍历的值，让遍历的执行变得「可控」。 基本语法 定义 这个是 Generator 的定义方法，有几个点值得注意： 比普通函",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es6-generator.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Generator"},{property:"og:description",content:"Generator Generators 是可以用来控制迭代器的函数。它们可以暂停，然后在任何时候恢复。 常规循环： 利用 Generator： 常规的循环只能一次遍历完所有值，Generator 可以通过调用 next() 方法拿到依次遍历的值，让遍历的执行变得「可控」。 基本语法 定义 这个是 Generator 的定义方法，有几个点值得注意： 比普通函"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es6-generator.html",relativePath:"frontend-knowledge/es6-and-beyond/es6-generator.md",key:"v-6f0552ba",path:"/frontend-knowledge/es6-and-beyond/es6-generator/",headers:[{level:2,title:"基本语法",slug:"基本语法"},{level:3,title:"定义",slug:"定义"},{level:3,title:"yield 表达式",slug:"yield-表达式"},{level:3,title:"方法",slug:"方法"},{level:2,title:"应用场景",slug:"应用场景"},{level:3,title:"场景 1",slug:"场景-1"},{level:3,title:"场景 2",slug:"场景-2"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:4.38,words:1313},updateTime:"2022年1月16日 22:03",updateTimeStamp:1642341825e3,createTime:"2022年1月15日 22:58",createTimeStamp:1642258694e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"Object 扩展",frontmatter:{summary:"Object 扩展 属性简洁表示法 在 ES6 之前 Object 的属性必须是 key-value 形式。 在 ES6 之后是可以用简写的形式来表达。 属性名表达式 在 ES6 可以直接用变量或者表达式来定义 Object 的 key。 Object.is() 判断两个对象是否相等，与严格比较运算符（===）的行为基本一致。 Object.assign()",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es6-object.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Object 扩展"},{property:"og:description",content:"Object 扩展 属性简洁表示法 在 ES6 之前 Object 的属性必须是 key-value 形式。 在 ES6 之后是可以用简写的形式来表达。 属性名表达式 在 ES6 可以直接用变量或者表达式来定义 Object 的 key。 Object.is() 判断两个对象是否相等，与严格比较运算符（===）的行为基本一致。 Object.assign()"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es6-object.html",relativePath:"frontend-knowledge/es6-and-beyond/es6-object.md",key:"v-c648fe96",path:"/frontend-knowledge/es6-and-beyond/es6-object/",headers:[{level:2,title:"属性简洁表示法",slug:"属性简洁表示法"},{level:2,title:"属性名表达式",slug:"属性名表达式"},{level:2,title:"Object.is()",slug:"object-is"},{level:2,title:"Object.assign()",slug:"object-assign"},{level:2,title:"对象的遍历方式",slug:"对象的遍历方式"},{level:3,title:"for...in",slug:"for-in"},{level:3,title:"Object.keys()",slug:"object-keys"},{level:3,title:"Object.getOwnPropertyNames()",slug:"object-getownpropertynames"},{level:3,title:"Reflect.ownKeys()",slug:"reflect-ownkeys"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:2.08,words:624},updateTime:"2022年1月11日 17:14",updateTimeStamp:1641892464e3,createTime:"2022年1月2日 10:56",createTimeStamp:1641092212e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"Number",frontmatter:{summary:"Number 二进制与八进制 在 ES5 中把十进制转化为二进制的方式： 把二进制转化为十进制的方式： ES6 提供了二进制和八进制数值的新的写法，分别用前缀 0b（或 0B）和 0o（或 0O）表示。 新增方法 Number.isFinite() 用来检查一个数值是否为有限的（finite），即不是 Infinity。 Number.isNaN() 用来检",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es6-number.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Number"},{property:"og:description",content:"Number 二进制与八进制 在 ES5 中把十进制转化为二进制的方式： 把二进制转化为十进制的方式： ES6 提供了二进制和八进制数值的新的写法，分别用前缀 0b（或 0B）和 0o（或 0O）表示。 新增方法 Number.isFinite() 用来检查一个数值是否为有限的（finite），即不是 Infinity。 Number.isNaN() 用来检"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es6-number.html",relativePath:"frontend-knowledge/es6-and-beyond/es6-number.md",key:"v-05647921",path:"/frontend-knowledge/es6-and-beyond/es6-number/",headers:[{level:2,title:"二进制与八进制",slug:"二进制与八进制"},{level:2,title:"新增方法",slug:"新增方法"},{level:3,title:"Number.isFinite()",slug:"number-isfinite"},{level:3,title:"Number.isNaN()",slug:"number-isnan"},{level:3,title:"Number.parseInt()",slug:"number-parseint"},{level:3,title:"Number.parseFloat()",slug:"number-parsefloat"},{level:3,title:"Number.isInteger()",slug:"number-isinteger"},{level:3,title:"Number.isSafeInteger()",slug:"number-issafeinteger"},{level:3,title:"Number.MAXSAFEINTEGER",slug:"number-max-safe-integer"},{level:3,title:"Number.MINSAFEINTEGER",slug:"number-min-safe-integer"},{level:2,title:"Math 扩展",slug:"math-扩展"},{level:3,title:"Math.trunc()",slug:"math-trunc"},{level:3,title:"Math.sign()",slug:"math-sign"},{level:3,title:"Math.cbrt()",slug:"math-cbrt"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:2.76,words:827},updateTime:"2022年9月21日 17:55",updateTimeStamp:166375413e4,createTime:"2022年1月6日 17:40",createTimeStamp:1641462057e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"Proxy",frontmatter:{summary:"Proxy 缺乏实战 Proxy 在学习的时候深感很强大、很强大。但是实际用的时候，很多时候觉得发挥不出它的精华，所以没有找到一用就如虎添翼的感觉。 后续有待从开源项目（以知名框架为主）中学习它的应用场景。 在 ES6 标准中新增的一个非常强大的功能是 Proxy，它可以用于修改某些操作的默认行为，等同于在语言层面做出修改，所以属于一种「元编程」（meta ",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es6-proxy.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Proxy"},{property:"og:description",content:"Proxy 缺乏实战 Proxy 在学习的时候深感很强大、很强大。但是实际用的时候，很多时候觉得发挥不出它的精华，所以没有找到一用就如虎添翼的感觉。 后续有待从开源项目（以知名框架为主）中学习它的应用场景。 在 ES6 标准中新增的一个非常强大的功能是 Proxy，它可以用于修改某些操作的默认行为，等同于在语言层面做出修改，所以属于一种「元编程」（meta "},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es6-proxy.html",relativePath:"frontend-knowledge/es6-and-beyond/es6-proxy.md",key:"v-711f0f83",path:"/frontend-knowledge/es6-and-beyond/es6-proxy/",headers:[{level:2,title:"基本语法",slug:"基本语法"},{level:2,title:"拦截操作场景",slug:"拦截操作场景"},{level:3,title:"读操作场景",slug:"读操作场景"},{level:3,title:"写操作场景 1",slug:"写操作场景-1"},{level:3,title:"写操作场景 2",slug:"写操作场景-2"},{level:3,title:"写操作场景 3",slug:"写操作场景-3"},{level:2,title:"常用拦截操作",slug:"常用拦截操作"},{level:3,title:"get",slug:"get"},{level:3,title:"set",slug:"set"},{level:3,title:"has",slug:"has"},{level:3,title:"ownKeys",slug:"ownkeys"},{level:3,title:"deleteProperty",slug:"deleteproperty"},{level:3,title:"apply",slug:"apply"},{level:3,title:"construct",slug:"construct"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:8.34,words:2501},updateTime:"2022年6月19日 11:52",updateTimeStamp:1655610768e3,createTime:"2022年1月8日 22:01",createTimeStamp:1641650498e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"Promise",frontmatter:{summary:"Promise Promise 简介 Promise 是一种处理异步代码的方式，支持链式调用，可以解决回调地狱问题。 jQuery 回调地狱写法 Promise 链式调用写法 Promise 对象有三种状态：pending（等待中）、fulfilled（已成功）和 rejected（已失败）。只有异步操作的结果，可以决定当前是哪一种状态，任何其他操作都无法改",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es6-promise.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Promise"},{property:"og:description",content:"Promise Promise 简介 Promise 是一种处理异步代码的方式，支持链式调用，可以解决回调地狱问题。 jQuery 回调地狱写法 Promise 链式调用写法 Promise 对象有三种状态：pending（等待中）、fulfilled（已成功）和 rejected（已失败）。只有异步操作的结果，可以决定当前是哪一种状态，任何其他操作都无法改"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es6-promise.html",relativePath:"frontend-knowledge/es6-and-beyond/es6-promise.md",key:"v-1b5bfd3a",path:"/frontend-knowledge/es6-and-beyond/es6-promise/",headers:[{level:2,title:"Promise 简介",slug:"promise-简介"},{level:2,title:"基本语法",slug:"基本语法"},{level:2,title:"Promise.prototype.then()",slug:"promise-prototype-then"},{level:2,title:"Promise.prototype.catch()",slug:"promise-prototype-catch"},{level:2,title:"Promise.resolve()",slug:"promise-resolve"},{level:2,title:"Promise.reject()",slug:"promise-reject"},{level:2,title:"Promise.all()",slug:"promise-all"},{level:2,title:"Promise.race()",slug:"promise-race"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:9.18,words:2755},updateTime:"2022年9月15日 14:31",updateTimeStamp:1663223515e3,createTime:"2022年1月13日 17:38",createTimeStamp:1642066704e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:5}]},{title:"Reflect",frontmatter:{summary:"Reflect Reflect 对象与 Proxy 对象一样，也是 ES6 为了操作对象而提供的新 API。 设计目的 1）将 Object 属于语言内部的方法放到 Reflect 上 比如 defineProperty 方法，它本来是 Object 对象上的，但为了让代码更加规范，会逐步将这些方法转移到 Reflect 上。 在使用上还是一样的： 2）修改",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es6-reflect.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Reflect"},{property:"og:description",content:"Reflect Reflect 对象与 Proxy 对象一样，也是 ES6 为了操作对象而提供的新 API。 设计目的 1）将 Object 属于语言内部的方法放到 Reflect 上 比如 defineProperty 方法，它本来是 Object 对象上的，但为了让代码更加规范，会逐步将这些方法转移到 Reflect 上。 在使用上还是一样的： 2）修改"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es6-reflect.html",relativePath:"frontend-knowledge/es6-and-beyond/es6-reflect.md",key:"v-38936923",path:"/frontend-knowledge/es6-and-beyond/es6-reflect/",headers:[{level:2,title:"设计目的",slug:"设计目的"},{level:2,title:"常用方法",slug:"常用方法"},{level:3,title:"Reflect.apply()",slug:"reflect-apply"},{level:3,title:"Reflect.construct()",slug:"reflect-construct"},{level:3,title:"Reflect.defineProperty()",slug:"reflect-defineproperty"},{level:3,title:"Reflect.deleteProperty()",slug:"reflect-deleteproperty"},{level:3,title:"Reflect.get()",slug:"reflect-get"},{level:3,title:"Reflect.getOwnPropertyDescriptor()",slug:"reflect-getownpropertydescriptor"},{level:3,title:"Reflect.getPrototypeOf()",slug:"reflect-getprototypeof"},{level:3,title:"Reflect.has()",slug:"reflect-has"},{level:3,title:"Reflect.isExtensible()",slug:"reflect-isextensible"},{level:3,title:"Reflect.ownKeys()",slug:"reflect-ownkeys"},{level:3,title:"Reflect.preventExtensions()",slug:"reflect-preventextensions"},{level:3,title:"Reflect.set()",slug:"reflect-set"},{level:3,title:"Reflect.setPrototypeOf()",slug:"reflect-setprototypeof"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:8.06,words:2418},updateTime:"2022年1月11日 17:14",updateTimeStamp:1641892464e3,createTime:"2022年1月9日 22:25",createTimeStamp:1641738303e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"String 扩展",frontmatter:{summary:"String 扩展 Unicode 表示法 ES6 加强了对 Unicode 的支持，允许采用 \\uxxxx 形式表示一个字符，其中 xxxx 表示字符的 Unicode 码点。 但是，这种表示法只限于码点在 \\u0000 ~ \\uFFFF 之间的字符。超出这个范围的字符，必须用两个双字节的形式表示。 上面代码表示，如果直接在 \\u 后面跟上超过 0xFFF",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es6-string.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"String 扩展"},{property:"og:description",content:"String 扩展 Unicode 表示法 ES6 加强了对 Unicode 的支持，允许采用 \\uxxxx 形式表示一个字符，其中 xxxx 表示字符的 Unicode 码点。 但是，这种表示法只限于码点在 \\u0000 ~ \\uFFFF 之间的字符。超出这个范围的字符，必须用两个双字节的形式表示。 上面代码表示，如果直接在 \\u 后面跟上超过 0xFFF"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es6-string.html",relativePath:"frontend-knowledge/es6-and-beyond/es6-string.md",key:"v-5f2c9991",path:"/frontend-knowledge/es6-and-beyond/es6-string/",headers:[{level:2,title:"Unicode 表示法",slug:"unicode-表示法"},{level:2,title:"遍历器接口",slug:"遍历器接口"},{level:2,title:"模板字符串",slug:"模板字符串"},{level:2,title:"扩展方法",slug:"扩展方法"},{level:3,title:"String.prototype.fromCodePoint()",slug:"string-prototype-fromcodepoint"},{level:3,title:"String.prototype.includes()",slug:"string-prototype-includes"},{level:3,title:"String.prototype.startsWith()",slug:"string-prototype-startswith"},{level:3,title:"String.prototype.endsWith()",slug:"string-prototype-endswith"},{level:3,title:"String.prototype.repeat()",slug:"string-prototype-repeat"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:2.85,words:856},updateTime:"2022年1月5日 16:00",updateTimeStamp:1641369608e3,createTime:"2022年1月4日 17:55",createTimeStamp:1641290141e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"Array.prototype.includes()",frontmatter:{summary:"Array.prototype.includes() 在 ES7 之前想判断数组中是否包含一个元素，一般这样写： 或者 ES7 引入的 Array.prototype.includes() 方法用来判断一个数组是否包含一个指定的值，根据情况，如果包含则返回 true，否则返回 false。 基本用法 接收两个参数 要搜索的值和搜索的开始索引。第二个参数可选。",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es7-array.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Array.prototype.includes()"},{property:"og:description",content:"Array.prototype.includes() 在 ES7 之前想判断数组中是否包含一个元素，一般这样写： 或者 ES7 引入的 Array.prototype.includes() 方法用来判断一个数组是否包含一个指定的值，根据情况，如果包含则返回 true，否则返回 false。 基本用法 接收两个参数 要搜索的值和搜索的开始索引。第二个参数可选。"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es7-array.html",relativePath:"frontend-knowledge/es6-and-beyond/es7-array.md",key:"v-bff5a5fa",path:"/frontend-knowledge/es6-and-beyond/es7-array/",headers:[{level:2,title:"基本用法",slug:"基本用法"},{level:2,title:"接收两个参数",slug:"接收两个参数"},{level:2,title:"与 indexOf() 比较",slug:"与-indexof-比较"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:1.55,words:466},updateTime:"2022年1月18日 17:16",updateTimeStamp:1642497408e3,createTime:"2022年1月18日 17:16",createTimeStamp:1642497408e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"幂运算符",frontmatter:{summary:'幂运算符 ES7 以前求幂运算 自己封装函数; 使用 Math.pow(); " Math.pow() 函数返回基数（base）的指数（exponent）次幂。" ES7 新方法 求幂运算符（**）返回将第一个操作数加到第二个操作数的幂的结果。它等效于 Math.pow()，不同之处在于它也接受 BigInt 作为操作数。 （完）',meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es7-pow.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"幂运算符"},{property:"og:description",content:'幂运算符 ES7 以前求幂运算 自己封装函数; 使用 Math.pow(); " Math.pow() 函数返回基数（base）的指数（exponent）次幂。" ES7 新方法 求幂运算符（**）返回将第一个操作数加到第二个操作数的幂的结果。它等效于 Math.pow()，不同之处在于它也接受 BigInt 作为操作数。 （完）'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es7-pow.html",relativePath:"frontend-knowledge/es6-and-beyond/es7-pow.md",key:"v-18c44fba",path:"/frontend-knowledge/es6-and-beyond/es7-pow/",headers:[{level:2,title:"ES7 以前求幂运算",slug:"es7-以前求幂运算"},{level:2,title:"ES7 新方法",slug:"es7-新方法"}],readingTime:{minutes:.42,words:127},updateTime:"2022年1月31日 15:57",updateTimeStamp:164361582e4,createTime:"2022年1月19日 16:34",createTimeStamp:1642581292e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"RegExp 扩展",frontmatter:{summary:"RegExp 扩展 y 修饰符 ES6 为正则表达式添加了 y 修饰符，叫做「粘连」（sticky）修饰符。 y 修饰符的作用与 g 修饰符类似，也是全局匹配，后一次匹配都从上一次匹配成功的下一个位置开始。 不同之处在于，g 修饰符只要剩余位置中存在匹配就可，而 y 修饰符确保匹配必须从剩余的第一个位置开始，这也就是「粘连」的涵义。 上面代码有两个正则表达式",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es6-regexp.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"RegExp 扩展"},{property:"og:description",content:"RegExp 扩展 y 修饰符 ES6 为正则表达式添加了 y 修饰符，叫做「粘连」（sticky）修饰符。 y 修饰符的作用与 g 修饰符类似，也是全局匹配，后一次匹配都从上一次匹配成功的下一个位置开始。 不同之处在于，g 修饰符只要剩余位置中存在匹配就可，而 y 修饰符确保匹配必须从剩余的第一个位置开始，这也就是「粘连」的涵义。 上面代码有两个正则表达式"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es6-regexp.html",relativePath:"frontend-knowledge/es6-and-beyond/es6-regexp.md",key:"v-2f51ada1",path:"/frontend-knowledge/es6-and-beyond/es6-regexp/",headers:[{level:2,title:"y 修饰符",slug:"y-修饰符"},{level:2,title:"u 修饰符",slug:"u-修饰符"},{level:3,title:"点字符",slug:"点字符"},{level:3,title:"Unicode 字符表示法",slug:"unicode-字符表示法"},{level:3,title:"量词",slug:"量词"},{level:3,title:"预定义模式",slug:"预定义模式"},{level:3,title:"i 修饰符",slug:"i-修饰符"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:3.96,words:1188},updateTime:"2022年1月6日 16:57",updateTimeStamp:1641459464e3,createTime:"2022年1月5日 17:48",createTimeStamp:1641376084e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"Symbol",frontmatter:{summary:"Symbol ES6 引入了一种新的原始数据类型 Symbol ，表示独一无二的值。 Symbol 值通过 Symbol 函数生成。这就是说，对象的属性名现在可以有两种类型，一种是原来就有的字符串，另一种就是新增的 Symbol 类型。凡是属性名属于 Symbol 类型，就都是独一无二的，可以保证不会与其他属性名产生冲突。 声明方式 Symbol 函数可以接",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es6-symbol.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Symbol"},{property:"og:description",content:"Symbol ES6 引入了一种新的原始数据类型 Symbol ，表示独一无二的值。 Symbol 值通过 Symbol 函数生成。这就是说，对象的属性名现在可以有两种类型，一种是原来就有的字符串，另一种就是新增的 Symbol 类型。凡是属性名属于 Symbol 类型，就都是独一无二的，可以保证不会与其他属性名产生冲突。 声明方式 Symbol 函数可以接"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es6-symbol.html",relativePath:"frontend-knowledge/es6-and-beyond/es6-symbol.md",key:"v-4daab143",path:"/frontend-knowledge/es6-and-beyond/es6-symbol/",headers:[{level:2,title:"声明方式",slug:"声明方式"},{level:2,title:"Symbol.for()",slug:"symbol-for"},{level:2,title:"Symbol.keyFor()",slug:"symbol-keyfor"},{level:2,title:"作为属性名",slug:"作为属性名"},{level:2,title:"属性遍历",slug:"属性遍历"},{level:2,title:"消除魔术字符串",slug:"消除魔术字符串"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:3.88,words:1164},updateTime:"2022年1月3日 17:07",updateTimeStamp:164120082e4,createTime:"2022年1月3日 17:07",createTimeStamp:164120082e4,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"Set",frontmatter:{summary:"Set ES6 提供了新的数据结构 Set。它类似于数组，但是成员的值都是唯一的，没有重复的值。 基本语法 生成 Set 实例 定义一个空的 Set 实例。 在实例化的同时传入默认的数据。 初始化的参数必须是可遍历的，可以是数组或者自定义遍历的数据结构。 添加数据 或者 Set 数据结构不允许数据重复，所以添加重复的数据是无效的。 删除数据 删除数据分两种，",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es6-set.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Set"},{property:"og:description",content:"Set ES6 提供了新的数据结构 Set。它类似于数组，但是成员的值都是唯一的，没有重复的值。 基本语法 生成 Set 实例 定义一个空的 Set 实例。 在实例化的同时传入默认的数据。 初始化的参数必须是可遍历的，可以是数组或者自定义遍历的数据结构。 添加数据 或者 Set 数据结构不允许数据重复，所以添加重复的数据是无效的。 删除数据 删除数据分两种，"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es6-set.html",relativePath:"frontend-knowledge/es6-and-beyond/es6-set.md",key:"v-0a1f7183",path:"/frontend-knowledge/es6-and-beyond/es6-set/",headers:[{level:2,title:"基本语法",slug:"基本语法"},{level:3,title:"生成 Set 实例",slug:"生成-set-实例"},{level:3,title:"添加数据",slug:"添加数据"},{level:3,title:"删除数据",slug:"删除数据"},{level:3,title:"统计数据",slug:"统计数据"},{level:3,title:"数组去重",slug:"数组去重"},{level:3,title:"合并去重",slug:"合并去重"},{level:3,title:"交集",slug:"交集"},{level:3,title:"差集",slug:"差集"},{level:2,title:"遍历方式",slug:"遍历方式"},{level:2,title:"WeakSet",slug:"weakset"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:2.89,words:867},updateTime:"2022年1月4日 16:56",updateTimeStamp:164128656e4,createTime:"2022年1月4日 15:49",createTimeStamp:1641282574e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"Object 扩展",frontmatter:{summary:"Object 扩展 ES6 支持了 Function 的 Rest 参数和扩展运算符和 ，而 ES9 给 Object 也赋予了这两个特性。 Rest 参数 当对象 key-value 不确定的时候，把必选的 key 赋值给一个变量，用另一个变量收敛其他可选的 key 数据，这在之前是做不到的。 扩展运算符 可以把 input 对象的数据都拓展到 outpu",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es9-object.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Object 扩展"},{property:"og:description",content:"Object 扩展 ES6 支持了 Function 的 Rest 参数和扩展运算符和 ，而 ES9 给 Object 也赋予了这两个特性。 Rest 参数 当对象 key-value 不确定的时候，把必选的 key 赋值给一个变量，用另一个变量收敛其他可选的 key 数据，这在之前是做不到的。 扩展运算符 可以把 input 对象的数据都拓展到 outpu"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es9-object.html",relativePath:"frontend-knowledge/es6-and-beyond/es9-object.md",key:"v-d075148a",path:"/frontend-knowledge/es6-and-beyond/es9-object/",headers:[{level:2,title:"Rest 参数",slug:"rest-参数"},{level:2,title:"扩展运算符",slug:"扩展运算符"}],readingTime:{minutes:.52,words:155},updateTime:"2022年2月7日 19:41",updateTimeStamp:1644234067e3,createTime:"2022年2月7日 19:41",createTimeStamp:1644234067e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"async / await",frontmatter:{summary:"async / await async 和 await 是一种更加优雅的异步编程解决方案，是 Promise 的拓展。 基本语法 前面添加了 async 的函数在执行后都会自动返回一个 Promise 对象： 相当于： await 后面需要跟异步操作，不然就没有意义，而且 await 后面的 Promise 对象不必写 then，因为 await 的作用之一",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es8-async-await.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"async / await"},{property:"og:description",content:"async / await async 和 await 是一种更加优雅的异步编程解决方案，是 Promise 的拓展。 基本语法 前面添加了 async 的函数在执行后都会自动返回一个 Promise 对象： 相当于： await 后面需要跟异步操作，不然就没有意义，而且 await 后面的 Promise 对象不必写 then，因为 await 的作用之一"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es8-async-await.html",relativePath:"frontend-knowledge/es6-and-beyond/es8-async-await.md",key:"v-45ad2263",path:"/frontend-knowledge/es6-and-beyond/es8-async-await/",headers:[{level:2,title:"基本语法",slug:"基本语法"},{level:2,title:"对于失败的处理",slug:"对于失败的处理"},{level:2,title:"应用",slug:"应用"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:1.53,words:458},updateTime:"2022年1月19日 17:44",updateTimeStamp:1642585448e3,createTime:"2022年1月19日 17:39",createTimeStamp:164258516e4,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"Object 扩展",frontmatter:{summary:"Object 扩展 以前遍历对象 以前是这样获取对象的每一个属性值的： ES8 中对象扩展补充了两个静态方法，用于遍历对象：Object.values()，Object.entries() Object.values() Object.values() 返回一个数组，其元素是在对象上找到的可枚举属性值。属性的顺序与通过手动循环对象的属性值（for...in）",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es8-object.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Object 扩展"},{property:"og:description",content:"Object 扩展 以前遍历对象 以前是这样获取对象的每一个属性值的： ES8 中对象扩展补充了两个静态方法，用于遍历对象：Object.values()，Object.entries() Object.values() Object.values() 返回一个数组，其元素是在对象上找到的可枚举属性值。属性的顺序与通过手动循环对象的属性值（for...in）"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es8-object.html",relativePath:"frontend-knowledge/es6-and-beyond/es8-object.md",key:"v-2266628e",path:"/frontend-knowledge/es6-and-beyond/es8-object/",headers:[{level:2,title:"以前遍历对象",slug:"以前遍历对象"},{level:2,title:"Object.values()",slug:"object-values"},{level:2,title:"Object.entries()",slug:"object-entries"},{level:2,title:"Object.getOwnPropertyDescriptors()",slug:"object-getownpropertydescriptors"},{level:3,title:"属性描述符",slug:"属性描述符"},{level:3,title:"函数介绍",slug:"函数介绍"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:2.05,words:614},updateTime:"2022年9月15日 14:31",updateTimeStamp:1663223515e3,createTime:"2022年1月19日 18:19",createTimeStamp:1642587543e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"String 扩展",frontmatter:{summary:"String 扩展 在 ES8 中 String 新增了两个实例函数 String.prototype.padStart() 和 String.prototype.padEnd()，允许将空字符串或其他字符串添加到原始字符串的开头或结尾。 String.prototype.padStart() 把指定字符串填充到字符串头部（如果需要的话则重复填充），返回新字",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es8-string.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"String 扩展"},{property:"og:description",content:"String 扩展 在 ES8 中 String 新增了两个实例函数 String.prototype.padStart() 和 String.prototype.padEnd()，允许将空字符串或其他字符串添加到原始字符串的开头或结尾。 String.prototype.padStart() 把指定字符串填充到字符串头部（如果需要的话则重复填充），返回新字"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es8-string.html",relativePath:"frontend-knowledge/es6-and-beyond/es8-string.md",key:"v-9dc430d6",path:"/frontend-knowledge/es6-and-beyond/es8-string/",headers:[{level:2,title:"String.prototype.padStart()",slug:"string-prototype-padstart"},{level:2,title:"String.prototype.padEnd()",slug:"string-prototype-padend"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:1.97,words:592},updateTime:"2022年1月29日 22:51",updateTimeStamp:164346791e4,createTime:"2022年1月27日 18:01",createTimeStamp:1643277695e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"尾逗号 Trailing commas",frontmatter:{summary:"尾逗号 Trailing commas ES8 以前 在 ES8 以前，函数定义和调用时，都不允许最后一个参数后面出现逗号。 上面代码中，如果在 param2 或 'world' 后面加一个逗号，就会报错。 ES8 新规定 如果像上面这样，将参数写成多行（即每个参数占据一行），以后修改代码的时候，想为函数 foo 添加第三个参数，或者调整参数的次序，就势必要",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es8-trailing-commas.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"尾逗号 Trailing commas"},{property:"og:description",content:"尾逗号 Trailing commas ES8 以前 在 ES8 以前，函数定义和调用时，都不允许最后一个参数后面出现逗号。 上面代码中，如果在 param2 或 'world' 后面加一个逗号，就会报错。 ES8 新规定 如果像上面这样，将参数写成多行（即每个参数占据一行），以后修改代码的时候，想为函数 foo 添加第三个参数，或者调整参数的次序，就势必要"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es8-trailing-commas.html",relativePath:"frontend-knowledge/es6-and-beyond/es8-trailing-commas.md",key:"v-aef22cba",path:"/frontend-knowledge/es6-and-beyond/es8-trailing-commas/",headers:[{level:2,title:"ES8 以前",slug:"es8-以前"},{level:2,title:"ES8 新规定",slug:"es8-新规定"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:.87,words:261},updateTime:"2022年1月31日 15:57",updateTimeStamp:164361582e4,createTime:"2022年1月31日 15:57",createTimeStamp:164361582e4,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"Promise.prototype.finally()",frontmatter:{summary:"Promise.prototype.finally() 指定不管最后状态如何都会执行的回调函数。 Promise.prototype.finally() 方法返回一个 Promise，在 promise 执行结束时，无论结果是 fulfilled 或者是 rejected，在执行 then() 和 catch() 后，都会执行 finally() 指定的回调",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es9-promise.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Promise.prototype.finally()"},{property:"og:description",content:"Promise.prototype.finally() 指定不管最后状态如何都会执行的回调函数。 Promise.prototype.finally() 方法返回一个 Promise，在 promise 执行结束时，无论结果是 fulfilled 或者是 rejected，在执行 then() 和 catch() 后，都会执行 finally() 指定的回调"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es9-promise.html",relativePath:"frontend-knowledge/es6-and-beyond/es9-promise.md",key:"v-7299eb03",path:"/frontend-knowledge/es6-and-beyond/es9-promise/",headers:[{level:2,title:"场景 1：loading 关闭",slug:"场景-1-loading-关闭"},{level:2,title:"场景 2：数据库断开链接",slug:"场景-2-数据库断开链接"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:1.07,words:321},updateTime:"2022年2月7日 19:51",updateTimeStamp:1644234715e3,createTime:"2022年2月7日 19:51",createTimeStamp:1644234715e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"RegExp 扩展",frontmatter:{summary:"RegExp 扩展 dotAll 模式 正则表达式中，点（.）是一个特殊字符，代表任意的单个字符，但是有两个例外。一个是四个字节的 UTF-16 字符，这个可以用 u 修饰符解决；另一个是行终止符（line terminator character）。 行终止符： U+000A 换行符（\\n）; U+000D 回车符（\\r）; U+2028 行分隔符（lin",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es9-regexp.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"RegExp 扩展"},{property:"og:description",content:"RegExp 扩展 dotAll 模式 正则表达式中，点（.）是一个特殊字符，代表任意的单个字符，但是有两个例外。一个是四个字节的 UTF-16 字符，这个可以用 u 修饰符解决；另一个是行终止符（line terminator character）。 行终止符： U+000A 换行符（\\n）; U+000D 回车符（\\r）; U+2028 行分隔符（lin"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es9-regexp.html",relativePath:"frontend-knowledge/es6-and-beyond/es9-regexp.md",key:"v-2a3ba2a7",path:"/frontend-knowledge/es6-and-beyond/es9-regexp/",headers:[{level:2,title:"dotAll 模式",slug:"dotall-模式"},{level:2,title:"具名组匹配",slug:"具名组匹配"},{level:2,title:"后行断言",slug:"后行断言"}],readingTime:{minutes:2.95,words:884},updateTime:"2022年2月7日 19:31",updateTimeStamp:1644233507e3,createTime:"2022年2月7日 19:31",createTimeStamp:1644233507e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"for await of",frontmatter:{summary:"for await of 异步迭代器（for-await-of）：循环等待每个 Promise 对象变为 resolved 状态才进入下一步。 我们知道 for...of 是同步运行的，但有时候一些任务集合是异步的，那这种遍历的输出顺序就不一定了。 这里写了几个小任务，分别是 2000ms 、100ms、3000ms 后任务结束。在上述遍历的过程中可以看到三",meta:[{property:"og:url",content:"/frontend-knowledge/es6-and-beyond/es9-for-await-of.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"for await of"},{property:"og:description",content:"for await of 异步迭代器（for-await-of）：循环等待每个 Promise 对象变为 resolved 状态才进入下一步。 我们知道 for...of 是同步运行的，但有时候一些任务集合是异步的，那这种遍历的输出顺序就不一定了。 这里写了几个小任务，分别是 2000ms 、100ms、3000ms 后任务结束。在上述遍历的过程中可以看到三"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/es6-and-beyond/es9-for-await-of.html",relativePath:"frontend-knowledge/es6-and-beyond/es9-for-await-of.md",key:"v-70390f55",path:"/frontend-knowledge/es6-and-beyond/es9-for-await-of/",readingTime:{minutes:1.84,words:553},updateTime:"2022年2月2日 16:41",updateTimeStamp:1643791277e3,createTime:"2022年2月1日 21:09",createTimeStamp:1643720954e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"未完待续",frontmatter:{summary:"未完待续 知识点正在火速整理中",meta:[{property:"og:url",content:"/frontend-knowledge/html/to-be-continued.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"未完待续"},{property:"og:description",content:"未完待续 知识点正在火速整理中"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/html/to-be-continued.html",relativePath:"frontend-knowledge/html/to-be-continued.md",key:"v-e11fbe3a",path:"/frontend-knowledge/html/to-be-continued/",headers:[{level:2,title:"知识点正在火速整理中",slug:"知识点正在火速整理中"}],readingTime:{minutes:.05,words:14},updateTime:"2021年12月26日 15:36",updateTimeStamp:1640504163e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"HTML",frontmatter:{summary:"HTML 在 Web 前端页面中， HTML 属于结构层，负责描绘出内容的结构；; CSS 属于表现层，负责「如何显示有关内容」；; JavaScript 属于行为层，负责「内容应如何对事件做出反应」。; 最近几年，提到 HTML 在广义上指的就是 HTML5。 回顾一下 HTML 的版本历史： HTML4/4.01（SGML）; HTML4 之前都是一脉相",meta:[{property:"og:url",content:"/frontend-knowledge/html/"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"HTML"},{property:"og:description",content:"HTML 在 Web 前端页面中， HTML 属于结构层，负责描绘出内容的结构；; CSS 属于表现层，负责「如何显示有关内容」；; JavaScript 属于行为层，负责「内容应如何对事件做出反应」。; 最近几年，提到 HTML 在广义上指的就是 HTML5。 回顾一下 HTML 的版本历史： HTML4/4.01（SGML）; HTML4 之前都是一脉相"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/html/",relativePath:"frontend-knowledge/html/README.md",key:"v-a2c108f0",path:"/frontend-knowledge/html/",readingTime:{minutes:2.14,words:641},updateTime:"2022年9月26日 17:04",updateTimeStamp:166418305e4,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"JavaScript 手写函数",frontmatter:{summary:"JavaScript 手写函数 现如今这个时代，已经有很多现成的库了，为什么还要手写？当然这并不是必须的，在实际的开发过程中，我也会去优先选择一些优秀的库，并不会到处造轮子，因为那会增加维护的成本。 对于手写代码，谈一点自己的思考。很多时候大家会谈论「CURD 工程师 / API 工程师」。没错，通过这些操作确实能够应付大部分业务开发了（好吧~我们面对的很多",meta:[{property:"og:url",content:"/frontend-knowledge/javascript-handwritten/"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"JavaScript 手写函数"},{property:"og:description",content:"JavaScript 手写函数 现如今这个时代，已经有很多现成的库了，为什么还要手写？当然这并不是必须的，在实际的开发过程中，我也会去优先选择一些优秀的库，并不会到处造轮子，因为那会增加维护的成本。 对于手写代码，谈一点自己的思考。很多时候大家会谈论「CURD 工程师 / API 工程师」。没错，通过这些操作确实能够应付大部分业务开发了（好吧~我们面对的很多"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/javascript-handwritten/",relativePath:"frontend-knowledge/javascript-handwritten/README.md",key:"v-0238470e",path:"/frontend-knowledge/javascript-handwritten/",readingTime:{minutes:2.01,words:602},updateTime:"2022年3月5日 23:00",updateTimeStamp:1646492441e3,createTime:"2022年1月20日 22:50",createTimeStamp:1642690203e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"HTML 基本结构",frontmatter:{summary:"HTML 基本结构 基本结构 现在绝大多数前端开发都是使用下面的结构： `` 是 HTML5 的文档声明，必须位于文档最前面位置。; 是一个 HTML 页面的根元素，lang 设置为 en ，页面也可以输出中文，只是浏览器会提示是否需要翻译此页，如果改成 zh-CN` 就没有翻译的选项了。; `` 这个元素包含关于文档的元信息。; 定义文档元数据，常用来描述",meta:[{property:"og:url",content:"/frontend-knowledge/html/html-basic-structure.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"HTML 基本结构"},{property:"og:description",content:"HTML 基本结构 基本结构 现在绝大多数前端开发都是使用下面的结构： `` 是 HTML5 的文档声明，必须位于文档最前面位置。; 是一个 HTML 页面的根元素，lang 设置为 en ，页面也可以输出中文，只是浏览器会提示是否需要翻译此页，如果改成 zh-CN` 就没有翻译的选项了。; `` 这个元素包含关于文档的元信息。; 定义文档元数据，常用来描述"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/html/html-basic-structure.html",relativePath:"frontend-knowledge/html/html-basic-structure.md",key:"v-4df0eedb",path:"/frontend-knowledge/html/html-basic-structure/",headers:[{level:2,title:"基本结构",slug:"基本结构"},{level:2,title:"主流元素分类",slug:"主流元素分类"}],readingTime:{minutes:1.64,words:492},updateTime:"2021年12月26日 15:36",updateTimeStamp:1640504163e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"语义类标签",frontmatter:{summary:"语义类标签 语义类标签的利弊 优势; 增强了可读性，易修改，易维护。 ; 无障碍阅读（机器阅读）支持。 ; 更适合搜索引擎检索（SEO）等等。; 缺点; 不恰当地使用语义标签，反而会造成负面作用。（例如给所有并列关系都用 ul，会造成大量冗余标签）; 原则：用对比不用好，不用比用错好。 几种比较重要的语义标签 用于消除歧义的标签（em） 有时候，HTML 的",meta:[{property:"og:url",content:"/frontend-knowledge/html/semantic-elements.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"语义类标签"},{property:"og:description",content:"语义类标签 语义类标签的利弊 优势; 增强了可读性，易修改，易维护。 ; 无障碍阅读（机器阅读）支持。 ; 更适合搜索引擎检索（SEO）等等。; 缺点; 不恰当地使用语义标签，反而会造成负面作用。（例如给所有并列关系都用 ul，会造成大量冗余标签）; 原则：用对比不用好，不用比用错好。 几种比较重要的语义标签 用于消除歧义的标签（em） 有时候，HTML 的"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/html/semantic-elements.html",relativePath:"frontend-knowledge/html/semantic-elements.md",key:"v-a3152afa",path:"/frontend-knowledge/html/semantic-elements/",headers:[{level:2,title:"语义类标签的利弊",slug:"语义类标签的利弊"},{level:2,title:"几种比较重要的语义标签",slug:"几种比较重要的语义标签"},{level:3,title:"用于消除歧义的标签（em）",slug:"用于消除歧义的标签-em"},{level:3,title:"用于强调重要内容的标签（strong）",slug:"用于强调重要内容的标签-strong"},{level:3,title:"作为整体结构的语义类标签",slug:"作为整体结构的语义类标签"},{level:3,title:"其它一些语义标签",slug:"其它一些语义标签"},{level:2,title:"更多资源",slug:"更多资源"}],readingTime:{minutes:5.22,words:1565},updateTime:"2021年12月26日 15:36",updateTimeStamp:1640504163e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"实现 apply 方法",frontmatter:{summary:"实现 apply 方法 功能描述 apply() 方法调用一个具有给定 this 值的函数，以及以一个数组（或类数组对象）的形式提供的参数。 apply() 该方法的语法和作用与 call() 方法类似，只有一个区别，就是 apply() 方法接受的是一个包含多个参数的数组，而 call() 方法接受的是一个参数列表。 基本用法如下： 实现思路 实现 app",meta:[{property:"og:url",content:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0apply%E6%96%B9%E6%B3%95.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"实现 apply 方法"},{property:"og:description",content:"实现 apply 方法 功能描述 apply() 方法调用一个具有给定 this 值的函数，以及以一个数组（或类数组对象）的形式提供的参数。 apply() 该方法的语法和作用与 call() 方法类似，只有一个区别，就是 apply() 方法接受的是一个包含多个参数的数组，而 call() 方法接受的是一个参数列表。 基本用法如下： 实现思路 实现 app"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0apply%E6%96%B9%E6%B3%95.html",relativePath:"frontend-knowledge/javascript-handwritten/实现apply方法.md",key:"v-15cc0077",path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0apply%E6%96%B9%E6%B3%95/",headers:[{level:2,title:"功能描述",slug:"功能描述"},{level:2,title:"实现思路",slug:"实现思路"},{level:2,title:"手写实现",slug:"手写实现"},{level:2,title:"测试用例",slug:"测试用例"}],readingTime:{minutes:1.55,words:465},updateTime:"2022年1月20日 22:50",updateTimeStamp:1642690203e3,createTime:"2022年1月20日 22:50",createTimeStamp:1642690203e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"实现符合 Promises/A+ 规范的 Promise",frontmatter:{summary:"实现符合 Promises/A+ 规范的 Promise Promises/A+ 规范 在手写实现前，肯定要先阅读 Promises/A+ 规范的原文：Promises/A+。 原文是英文版的，但是没有很多专业术语，所以如果有一些 Promise 的使用基础，阅读起来不会很困难。 这里对 Promises/A+ 规范做一个简单的翻译（非 1:1 翻译，开头引",meta:[{property:"og:url",content:"/frontend-knowledge/javascript-handwritten/my-promise.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"实现符合 Promises/A+ 规范的 Promise"},{property:"og:description",content:"实现符合 Promises/A+ 规范的 Promise Promises/A+ 规范 在手写实现前，肯定要先阅读 Promises/A+ 规范的原文：Promises/A+。 原文是英文版的，但是没有很多专业术语，所以如果有一些 Promise 的使用基础，阅读起来不会很困难。 这里对 Promises/A+ 规范做一个简单的翻译（非 1:1 翻译，开头引"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/javascript-handwritten/my-promise.html",relativePath:"frontend-knowledge/javascript-handwritten/my-promise.md",key:"v-43dc59f6",path:"/frontend-knowledge/javascript-handwritten/my-promise/",headers:[{level:2,title:"Promises/A+ 规范",slug:"promises-a-规范"},{level:3,title:"1. 术语",slug:"_1-术语"},{level:3,title:"2. 要求",slug:"_2-要求"},{level:3,title:"3. 注释",slug:"_3-注释"},{level:2,title:"完成一个基本的 Promise",slug:"完成一个基本的-promise"},{level:3,title:"定义一个 MyPromise",slug:"定义一个-mypromise"},{level:3,title:"初始化状态",slug:"初始化状态"},{level:3,title:"编写 resolve 和 reject 方法",slug:"编写-resolve-和-reject-方法"},{level:3,title:"编写 then 方法",slug:"编写-then-方法"},{level:3,title:"捕获错误",slug:"捕获错误"},{level:2,title:"处理 Promise 中的异步与多次调用的问题",slug:"处理-promise-中的异步与多次调用的问题"},{level:2,title:"实现 Promise 的链式调用功能",slug:"实现-promise-的链式调用功能"},{level:3,title:"原生 Promise 链式调用的特性",slug:"原生-promise-链式调用的特性"},{level:3,title:"then 方法返回一个新的 Promise",slug:"then-方法返回一个新的-promise"},{level:3,title:"新 Promise 对象的回调函数返回值 x",slug:"新-promise-对象的回调函数返回值-x"},{level:3,title:"then 方法内部异常捕获",slug:"then-方法内部异常捕获"},{level:3,title:"x 值的处理",slug:"x-值的处理"},{level:3,title:"用异步设置事件循环顺序",slug:"用异步设置事件循环顺序"},{level:3,title:"实现 resolvePromise 方法",slug:"实现-resolvepromise-方法"},{level:3,title:"修补 bug：支持 then 不带参数",slug:"修补-bug-支持-then-不带参数"},{level:3,title:"修补 bug：补充 catch 方法",slug:"修补-bug-补充-catch-方法"},{level:2,title:"Promises/A+ 测试",slug:"promises-a-测试"},{level:3,title:"安装官方测试工具",slug:"安装官方测试工具"},{level:3,title:"使用 ES6 Module 对外暴露 MyPromise 类",slug:"使用-es6-module-对外暴露-mypromise-类"},{level:3,title:"实现静态方法 deferred",slug:"实现静态方法-deferred"},{level:3,title:"配置 package.json",slug:"配置-package-json"},{level:3,title:"执行测试命令",slug:"执行测试命令"},{level:3,title:"修补最后一个 bug",slug:"修补最后一个-bug"},{level:3,title:"再次执行测试命令",slug:"再次执行测试命令"},{level:2,title:"Promise 其他扩展方法",slug:"promise-其他扩展方法"},{level:3,title:"实现 Promise.resolve",slug:"实现-promise-resolve"},{level:3,title:"实现 Promise.reject",slug:"实现-promise-reject"},{level:3,title:"实现 Promise.prototype.catch",slug:"实现-promise-prototype-catch"},{level:3,title:"实现 Promise.prototype.finally",slug:"实现-promise-prototype-finally"},{level:3,title:"实现 Promise.all",slug:"实现-promise-all"},{level:3,title:"实现 Promise.allSettled",slug:"实现-promise-allsettled"},{level:3,title:"实现 Promise.any",slug:"实现-promise-any"},{level:3,title:"实现 Promise.race()",slug:"实现-promise-race"},{level:2,title:"源码仓库",slug:"源码仓库"}],readingTime:{minutes:40.36,words:12109},updateTime:"2022年4月19日 10:53",updateTimeStamp:1650336813e3,createTime:"2022年3月6日 22:12",createTimeStamp:1646575976e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:15}]},{title:"实现 bind 方法",frontmatter:{summary:"实现 bind 方法 功能描述 bind() 方法创建一个新的函数，在 bind() 被调用时，这个新函数的 this 被指定为 bind() 的第一个参数，而其余参数将作为新函数的参数，供调用时使用。 基本用法如下： 上述代码可以简化如下： 实现思路 bind() 返回了一个函数，对于函数来说有两种方式调用，一种是直接调用，一种是通过 new 的方式; 直",meta:[{property:"og:url",content:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0bind%E6%96%B9%E6%B3%95.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"实现 bind 方法"},{property:"og:description",content:"实现 bind 方法 功能描述 bind() 方法创建一个新的函数，在 bind() 被调用时，这个新函数的 this 被指定为 bind() 的第一个参数，而其余参数将作为新函数的参数，供调用时使用。 基本用法如下： 上述代码可以简化如下： 实现思路 bind() 返回了一个函数，对于函数来说有两种方式调用，一种是直接调用，一种是通过 new 的方式; 直"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0bind%E6%96%B9%E6%B3%95.html",relativePath:"frontend-knowledge/javascript-handwritten/实现bind方法.md",key:"v-739f5645",path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0bind%E6%96%B9%E6%B3%95/",headers:[{level:2,title:"功能描述",slug:"功能描述"},{level:2,title:"实现思路",slug:"实现思路"},{level:2,title:"手写实现",slug:"手写实现"},{level:2,title:"测试用例",slug:"测试用例"},{level:2,title:"注意事项",slug:"注意事项"}],readingTime:{minutes:1.88,words:564},updateTime:"2022年1月20日 22:50",updateTimeStamp:1642690203e3,createTime:"2022年1月20日 22:50",createTimeStamp:1642690203e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"实现 Object.create 方法",frontmatter:{summary:"实现 Object.create 方法 功能描述 Object.create() 方法创建一个新对象，使用现有的对象来提供新创建的对象的 proto（新对象的 proto 属性会指向原对象）。 手写实现 测试用例 注意事项 原生的 Object.create(proto，[propertiesObject]) 方法支持两个参数： proto：必须，表示新建对",meta:[{property:"og:url",content:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0object-create%E6%96%B9%E6%B3%95.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"实现 Object.create 方法"},{property:"og:description",content:"实现 Object.create 方法 功能描述 Object.create() 方法创建一个新对象，使用现有的对象来提供新创建的对象的 proto（新对象的 proto 属性会指向原对象）。 手写实现 测试用例 注意事项 原生的 Object.create(proto，[propertiesObject]) 方法支持两个参数： proto：必须，表示新建对"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0object-create%E6%96%B9%E6%B3%95.html",relativePath:"frontend-knowledge/javascript-handwritten/实现object-create方法.md",key:"v-5e7e13f7",path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0object-create%E6%96%B9%E6%B3%95/",headers:[{level:2,title:"功能描述",slug:"功能描述"},{level:2,title:"手写实现",slug:"手写实现"},{level:2,title:"测试用例",slug:"测试用例"},{level:2,title:"注意事项",slug:"注意事项"}],readingTime:{minutes:.91,words:272},updateTime:"2022年1月20日 22:50",updateTimeStamp:1642690203e3,createTime:"2022年1月20日 22:50",createTimeStamp:1642690203e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"实现 instanceof 运算符",frontmatter:{summary:"实现 instanceof 运算符 功能描述 instanceof 运算符用于检测构造函数的 prototype 属性是否出现在某个实例对象的原型链上。 实现思路 instanceof 左侧必须是对象，才能找到它的原型链； instanceof 右侧必须是函数，函数才会有 prototype 属性。 通过迭代，左侧对象的原型不等于右侧的 prototype ",meta:[{property:"og:url",content:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0instanceof%E8%BF%90%E7%AE%97%E7%AC%A6.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"实现 instanceof 运算符"},{property:"og:description",content:"实现 instanceof 运算符 功能描述 instanceof 运算符用于检测构造函数的 prototype 属性是否出现在某个实例对象的原型链上。 实现思路 instanceof 左侧必须是对象，才能找到它的原型链； instanceof 右侧必须是函数，函数才会有 prototype 属性。 通过迭代，左侧对象的原型不等于右侧的 prototype "},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0instanceof%E8%BF%90%E7%AE%97%E7%AC%A6.html",relativePath:"frontend-knowledge/javascript-handwritten/实现instanceof运算符.md",key:"v-22f7f0e7",path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0instanceof%E8%BF%90%E7%AE%97%E7%AC%A6/",headers:[{level:2,title:"功能描述",slug:"功能描述"},{level:2,title:"实现思路",slug:"实现思路"},{level:2,title:"手写实现",slug:"手写实现"},{level:2,title:"测试用例",slug:"测试用例"}],readingTime:{minutes:1.14,words:342},updateTime:"2022年1月20日 22:50",updateTimeStamp:1642690203e3,createTime:"2022年1月20日 22:50",createTimeStamp:1642690203e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"实现浅拷贝（shallowClone）",frontmatter:{summary:"实现浅拷贝（shallowClone） 功能描述 浅克隆（shallowClone），只拷贝对象或数组的第一层内容。 注意：对于引用值时，浅克隆之后会出现你改我也改的情况。 手写实现 测试用例 （完）",meta:[{property:"og:url",content:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E6%B5%85%E6%8B%B7%E8%B4%9D-shallow-clone.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"实现浅拷贝（shallowClone）"},{property:"og:description",content:"实现浅拷贝（shallowClone） 功能描述 浅克隆（shallowClone），只拷贝对象或数组的第一层内容。 注意：对于引用值时，浅克隆之后会出现你改我也改的情况。 手写实现 测试用例 （完）"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E6%B5%85%E6%8B%B7%E8%B4%9D-shallow-clone.html",relativePath:"frontend-knowledge/javascript-handwritten/实现浅拷贝-shallow-clone.md",key:"v-20c183b2",path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E6%B5%85%E6%8B%B7%E8%B4%9D-shallow-clone/",headers:[{level:2,title:"功能描述",slug:"功能描述"},{level:2,title:"手写实现",slug:"手写实现"},{level:2,title:"测试用例",slug:"测试用例"}],readingTime:{minutes:.44,words:131},updateTime:"2023年4月9日 14:19",updateTimeStamp:1681021149e3,createTime:"2023年4月9日 14:19",createTimeStamp:1681021149e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"实现 call 方法",frontmatter:{summary:"实现 call 方法 功能描述 call() 方法使用一个指定的 this 值和单独给出的一个或多个参数来调用一个函数。 基本用法如下： 实现思路 如果不传入 context 参数，默认指向为 window; 将函数设为对象的属性; 指定函数中的 this 为对象，并传入给定实参，执行函数; 删除对象中我们添加的属性; 手写实现 测试用例 （完）",meta:[{property:"og:url",content:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0call%E6%96%B9%E6%B3%95.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"实现 call 方法"},{property:"og:description",content:"实现 call 方法 功能描述 call() 方法使用一个指定的 this 值和单独给出的一个或多个参数来调用一个函数。 基本用法如下： 实现思路 如果不传入 context 参数，默认指向为 window; 将函数设为对象的属性; 指定函数中的 this 为对象，并传入给定实参，执行函数; 删除对象中我们添加的属性; 手写实现 测试用例 （完）"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0call%E6%96%B9%E6%B3%95.html",relativePath:"frontend-knowledge/javascript-handwritten/实现call方法.md",key:"v-622086fa",path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0call%E6%96%B9%E6%B3%95/",headers:[{level:2,title:"功能描述",slug:"功能描述"},{level:2,title:"实现思路",slug:"实现思路"},{level:2,title:"手写实现",slug:"手写实现"},{level:2,title:"测试用例",slug:"测试用例"}],readingTime:{minutes:1.33,words:399},updateTime:"2022年1月20日 22:50",updateTimeStamp:1642690203e3,createTime:"2022年1月20日 22:50",createTimeStamp:1642690203e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"实现数组扁平化 flat 方法",frontmatter:{summary:"实现数组扁平化 flat 方法 功能描述 数组内置的 flat() 方法可以创建一个新的数组，并根据指定深度递归地将所有子数组元素拼接到新的数组中。默认是将二维元素拆分成一维的进行拼接，二维以上的原样保留。 基本用法如下： 实现思路 下面手写实现这个方法的时候，就简单处理，只实现 arr.flat(Infinity) 这一种情况，即将多维数组扁平化成一维数组",meta:[{property:"og:url",content:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E6%95%B0%E7%BB%84%E6%89%81%E5%B9%B3%E5%8C%96flat%E6%96%B9%E6%B3%95.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"实现数组扁平化 flat 方法"},{property:"og:description",content:"实现数组扁平化 flat 方法 功能描述 数组内置的 flat() 方法可以创建一个新的数组，并根据指定深度递归地将所有子数组元素拼接到新的数组中。默认是将二维元素拆分成一维的进行拼接，二维以上的原样保留。 基本用法如下： 实现思路 下面手写实现这个方法的时候，就简单处理，只实现 arr.flat(Infinity) 这一种情况，即将多维数组扁平化成一维数组"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E6%95%B0%E7%BB%84%E6%89%81%E5%B9%B3%E5%8C%96flat%E6%96%B9%E6%B3%95.html",relativePath:"frontend-knowledge/javascript-handwritten/实现数组扁平化flat方法.md",key:"v-ea969468",path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E6%95%B0%E7%BB%84%E6%89%81%E5%B9%B3%E5%8C%96flat%E6%96%B9%E6%B3%95/",headers:[{level:2,title:"功能描述",slug:"功能描述"},{level:2,title:"实现思路",slug:"实现思路"},{level:2,title:"手写实现",slug:"手写实现"},{level:3,title:"递归处理",slug:"递归处理"},{level:3,title:"用 reduce 实现",slug:"用-reduce-实现"},{level:2,title:"测试用例",slug:"测试用例"},{level:2,title:"还有一种会改变原数组的实现",slug:"还有一种会改变原数组的实现"}],readingTime:{minutes:1.39,words:418},updateTime:"2023年4月12日 15:40",updateTimeStamp:168128521e4,createTime:"2023年4月12日 15:40",createTimeStamp:168128521e4,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"实现 new 运算符",frontmatter:{summary:"实现 new 运算符 功能描述 new 运算符用于创建一个自定义对象的实例，或具有构造函数的内置对象的实例。 实现思路 步骤 1：创建构造函数的实例对象，这个对象的 proto 要指向构造函数的 prototype; 步骤 2：把构造函数当作普通函数执行，并改变 this 指向; 步骤 3：分析构造函数的返回值; 返回值为 object 或 function",meta:[{property:"og:url",content:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0new%E8%BF%90%E7%AE%97%E7%AC%A6.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"实现 new 运算符"},{property:"og:description",content:"实现 new 运算符 功能描述 new 运算符用于创建一个自定义对象的实例，或具有构造函数的内置对象的实例。 实现思路 步骤 1：创建构造函数的实例对象，这个对象的 proto 要指向构造函数的 prototype; 步骤 2：把构造函数当作普通函数执行，并改变 this 指向; 步骤 3：分析构造函数的返回值; 返回值为 object 或 function"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0new%E8%BF%90%E7%AE%97%E7%AC%A6.html",relativePath:"frontend-knowledge/javascript-handwritten/实现new运算符.md",key:"v-1a6e3889",path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0new%E8%BF%90%E7%AE%97%E7%AC%A6/",headers:[{level:2,title:"功能描述",slug:"功能描述"},{level:2,title:"实现思路",slug:"实现思路"},{level:2,title:"手写实现",slug:"手写实现"},{level:2,title:"测试用例",slug:"测试用例"}],readingTime:{minutes:1.02,words:306},updateTime:"2022年1月20日 22:50",updateTimeStamp:1642690203e3,createTime:"2022年1月20日 22:50",createTimeStamp:1642690203e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"实现深拷贝（deepClone）",frontmatter:{summary:"实现深拷贝（deepClone） 功能描述 深克隆（deepClone），层层拷贝对象或数组的每一层内容。 注意：对于引用值时，深克隆之后不会出现你改我也改的情况。 手写实现（简易版） 局限性： 如果对象有循环引用，拷贝时会报错。; 会抛弃对象的 constructor，所有的构造函数会指向 Object。; 无法拷贝一些特殊的对象，诸如 RegExp，Da",meta:[{property:"og:url",content:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E6%B7%B1%E6%8B%B7%E8%B4%9D-deep-clone.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"实现深拷贝（deepClone）"},{property:"og:description",content:"实现深拷贝（deepClone） 功能描述 深克隆（deepClone），层层拷贝对象或数组的每一层内容。 注意：对于引用值时，深克隆之后不会出现你改我也改的情况。 手写实现（简易版） 局限性： 如果对象有循环引用，拷贝时会报错。; 会抛弃对象的 constructor，所有的构造函数会指向 Object。; 无法拷贝一些特殊的对象，诸如 RegExp，Da"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E6%B7%B1%E6%8B%B7%E8%B4%9D-deep-clone.html",relativePath:"frontend-knowledge/javascript-handwritten/实现深拷贝-deep-clone.md",key:"v-b4c26c1e",path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E6%B7%B1%E6%8B%B7%E8%B4%9D-deep-clone/",headers:[{level:2,title:"功能描述",slug:"功能描述"},{level:2,title:"手写实现（简易版）",slug:"手写实现-简易版"},{level:2,title:"手写实现（面试版）",slug:"手写实现-面试版"},{level:2,title:"手写实现（完整版）",slug:"手写实现-完整版"},{level:3,title:"前置准备",slug:"前置准备"},{level:3,title:"完整代码",slug:"完整代码"}],readingTime:{minutes:5.13,words:1538},updateTime:"2023年4月11日 11:40",updateTimeStamp:1681184443e3,createTime:"2023年4月9日 14:19",createTimeStamp:1681021149e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"实现数组去重的方法",frontmatter:{summary:'实现数组去重的方法 功能描述 去除数组中的重复元素。 手写实现 思路一（ES5 时代常用） " 注意：因为用到了 splice，所以该方法会改变原数组。" 双层 for 循环：外层循环一次，内层从数组当前项的下一项开始循环。也就是外层从数组的第一项开始，分别在内层循环中，和数组的下一项开始逐一进行比较，如果出现重复元素就删掉。这种方法逻辑复杂且性能低，不推荐',meta:[{property:"og:url",content:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D%E7%9A%84%E6%96%B9%E6%B3%95.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"实现数组去重的方法"},{property:"og:description",content:'实现数组去重的方法 功能描述 去除数组中的重复元素。 手写实现 思路一（ES5 时代常用） " 注意：因为用到了 splice，所以该方法会改变原数组。" 双层 for 循环：外层循环一次，内层从数组当前项的下一项开始循环。也就是外层从数组的第一项开始，分别在内层循环中，和数组的下一项开始逐一进行比较，如果出现重复元素就删掉。这种方法逻辑复杂且性能低，不推荐'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D%E7%9A%84%E6%96%B9%E6%B3%95.html",relativePath:"frontend-knowledge/javascript-handwritten/实现数组去重的方法.md",key:"v-4494d5b3",path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D%E7%9A%84%E6%96%B9%E6%B3%95/",headers:[{level:2,title:"功能描述",slug:"功能描述"},{level:2,title:"手写实现",slug:"手写实现"},{level:3,title:"思路一（ES5 时代常用）",slug:"思路一-es5-时代常用"},{level:3,title:"思路二",slug:"思路二"},{level:3,title:"思路三",slug:"思路三"},{level:2,title:"测试用例",slug:"测试用例"}],readingTime:{minutes:1.41,words:422},updateTime:"2023年4月22日 11:04",updateTimeStamp:168213269e4,createTime:"2023年4月17日 18:12",createTimeStamp:1681726335e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"实现对象数组去重的方法",frontmatter:{summary:'实现对象数组去重的方法 功能描述 数组元素是对象，根据每个对象的某一个具体属性来进行去重。 手写实现 " 注意：该方法会返回一个新的去重后的数组。" 利用高阶函数 reduce 进行去重，需要注意该函数的第二个参数 initialValue 得放一个空数组 []，不然没法 push。 测试用例 （完）',meta:[{property:"og:url",content:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E5%AF%B9%E8%B1%A1%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D%E7%9A%84%E6%96%B9%E6%B3%95.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"实现对象数组去重的方法"},{property:"og:description",content:'实现对象数组去重的方法 功能描述 数组元素是对象，根据每个对象的某一个具体属性来进行去重。 手写实现 " 注意：该方法会返回一个新的去重后的数组。" 利用高阶函数 reduce 进行去重，需要注意该函数的第二个参数 initialValue 得放一个空数组 []，不然没法 push。 测试用例 （完）'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E5%AF%B9%E8%B1%A1%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D%E7%9A%84%E6%96%B9%E6%B3%95.html",relativePath:"frontend-knowledge/javascript-handwritten/实现对象数组去重的方法.md",key:"v-9fc93546",path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E5%AF%B9%E8%B1%A1%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D%E7%9A%84%E6%96%B9%E6%B3%95/",headers:[{level:2,title:"功能描述",slug:"功能描述"},{level:2,title:"手写实现",slug:"手写实现"},{level:2,title:"测试用例",slug:"测试用例"}],readingTime:{minutes:.57,words:172},updateTime:"2023年4月24日 21:36",updateTimeStamp:1682343384e3,createTime:"2023年4月24日 21:36",createTimeStamp:1682343384e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"实现节流函数（throttle）",frontmatter:{summary:'实现节流函数（throttle） 功能描述 设定一个特定的时间，让函数在特定的时间内只执行一次，不会频繁执行。 " 节流：第一个人说了算，在某段时间内，不管你触发了多少次回调，我都只认第一次。" 举例：fps 游戏里面的狙击枪，即使一直按住开枪键不松手，也会有储蓄时间，子弹不会一直发射，弹孔不会连成一条线。 手写实现 测试用例 常见应用场景 间隔一段时间执行',meta:[{property:"og:url",content:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E8%8A%82%E6%B5%81%E5%87%BD%E6%95%B0-throttle.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"实现节流函数（throttle）"},{property:"og:description",content:'实现节流函数（throttle） 功能描述 设定一个特定的时间，让函数在特定的时间内只执行一次，不会频繁执行。 " 节流：第一个人说了算，在某段时间内，不管你触发了多少次回调，我都只认第一次。" 举例：fps 游戏里面的狙击枪，即使一直按住开枪键不松手，也会有储蓄时间，子弹不会一直发射，弹孔不会连成一条线。 手写实现 测试用例 常见应用场景 间隔一段时间执行'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E8%8A%82%E6%B5%81%E5%87%BD%E6%95%B0-throttle.html",relativePath:"frontend-knowledge/javascript-handwritten/实现节流函数-throttle.md",key:"v-6a2812dd",path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E8%8A%82%E6%B5%81%E5%87%BD%E6%95%B0-throttle/",headers:[{level:2,title:"功能描述",slug:"功能描述"},{level:2,title:"手写实现",slug:"手写实现"},{level:2,title:"测试用例",slug:"测试用例"},{level:2,title:"常见应用场景",slug:"常见应用场景"},{level:2,title:"防抖与节流的异同比较",slug:"防抖与节流的异同比较"}],readingTime:{minutes:1.45,words:434},updateTime:"2023年6月19日 13:12",updateTimeStamp:1687151569e3,createTime:"2022年1月20日 22:50",createTimeStamp:1642690203e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"实现防抖函数（debounce）",frontmatter:{summary:'实现防抖函数（debounce） 功能描述 延迟要执行的动作，若在延迟的这段时间内再次触发了，则取消之前的动作，重新计时。 " 防抖：最后一个人说了算，在某段时间内，不管你触发了多少次回调，我都只认最后一次。" 举例：电脑或手机的休眠倒计时，一旦再次操作就重新计时。 手写实现 测试用例 常见应用场景 连续的事件，只需触发一次回调的场景有： 搜索框场景：搜索时',meta:[{property:"og:url",content:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E9%98%B2%E6%8A%96%E5%87%BD%E6%95%B0-debounce.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"实现防抖函数（debounce）"},{property:"og:description",content:'实现防抖函数（debounce） 功能描述 延迟要执行的动作，若在延迟的这段时间内再次触发了，则取消之前的动作，重新计时。 " 防抖：最后一个人说了算，在某段时间内，不管你触发了多少次回调，我都只认最后一次。" 举例：电脑或手机的休眠倒计时，一旦再次操作就重新计时。 手写实现 测试用例 常见应用场景 连续的事件，只需触发一次回调的场景有： 搜索框场景：搜索时'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E9%98%B2%E6%8A%96%E5%87%BD%E6%95%B0-debounce.html",relativePath:"frontend-knowledge/javascript-handwritten/实现防抖函数-debounce.md",key:"v-6d4fb105",path:"/frontend-knowledge/javascript-handwritten/%E5%AE%9E%E7%8E%B0%E9%98%B2%E6%8A%96%E5%87%BD%E6%95%B0-debounce/",headers:[{level:2,title:"功能描述",slug:"功能描述"},{level:2,title:"手写实现",slug:"手写实现"},{level:2,title:"测试用例",slug:"测试用例"},{level:2,title:"常见应用场景",slug:"常见应用场景"}],readingTime:{minutes:1.09,words:326},updateTime:"2023年6月19日 13:12",updateTimeStamp:1687151569e3,createTime:"2022年1月20日 22:50",createTimeStamp:1642690203e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"JavaScript",frontmatter:{summary:"JavaScript 在 Web 前端页面中， HTML 属于结构层，负责描绘出内容的结构；; CSS 属于表现层，负责「如何显示有关内容」；; JavaScript 属于行为层，负责「内容应如何对事件做出反应」。; 这个系列主要梳理 JavaScript 基础知识点，内容涵盖 ECMAScript 5.1（ES5）和 ECMAScript 2015（ES6",meta:[{property:"og:url",content:"/frontend-knowledge/javascript/"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"JavaScript"},{property:"og:description",content:"JavaScript 在 Web 前端页面中， HTML 属于结构层，负责描绘出内容的结构；; CSS 属于表现层，负责「如何显示有关内容」；; JavaScript 属于行为层，负责「内容应如何对事件做出反应」。; 这个系列主要梳理 JavaScript 基础知识点，内容涵盖 ECMAScript 5.1（ES5）和 ECMAScript 2015（ES6"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/javascript/",relativePath:"frontend-knowledge/javascript/README.md",key:"v-7a464378",path:"/frontend-knowledge/javascript/",readingTime:{minutes:1.59,words:478},updateTime:"2021年12月26日 16:41",updateTimeStamp:1640508075e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"闭包",frontmatter:{summary:'闭包 闭包的定义 " * 红宝书（第3版）：闭包是指有权访问另一个函数作用域中的变量的函数。（P178）" " * 小黄书（上）：当函数可以记住并访问所在的词法作用域时，就产生了闭包。（P44）" " * MDN：闭包可以让你从内部函数访问外部函数作用域。（原链接）" " * 大部分文章：当函数嵌套时，内层函数引用了外层函数作用域下的变量，并且内层函数在全局',meta:[{property:"og:url",content:"/frontend-knowledge/javascript/closure.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"闭包"},{property:"og:description",content:'闭包 闭包的定义 " * 红宝书（第3版）：闭包是指有权访问另一个函数作用域中的变量的函数。（P178）" " * 小黄书（上）：当函数可以记住并访问所在的词法作用域时，就产生了闭包。（P44）" " * MDN：闭包可以让你从内部函数访问外部函数作用域。（原链接）" " * 大部分文章：当函数嵌套时，内层函数引用了外层函数作用域下的变量，并且内层函数在全局'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/javascript/closure.html",relativePath:"frontend-knowledge/javascript/closure.md",key:"v-282459e3",path:"/frontend-knowledge/javascript/closure/",headers:[{level:2,title:"闭包的定义",slug:"闭包的定义"},{level:2,title:"闭包的表现形式",slug:"闭包的表现形式"},{level:3,title:"返回一个函数",slug:"返回一个函数"},{level:3,title:"作为函数参数传递",slug:"作为函数参数传递"},{level:3,title:"回调函数",slug:"回调函数"},{level:3,title:"IIFE（立即执行函数表达式）",slug:"iife-立即执行函数表达式"},{level:2,title:"闭包的作用",slug:"闭包的作用"},{level:2,title:"闭包内存释放",slug:"闭包内存释放"}],readingTime:{minutes:6.06,words:1818},updateTime:"2022年3月31日 19:07",updateTimeStamp:1648724821e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"数据类型",frontmatter:{summary:"数据类型 前言 最新的 ECMAScript 标准定义了 8 种数据类型: 7 种基本数据类型：; Undefined; Null; Boolean; Number; BigInt（ECMAScript 2020）; String; Symbol（ECMAScript 2015）; 1 种复杂数据类型（又称引用数据类型）：; Object; 基本数据类型保存",meta:[{property:"og:url",content:"/frontend-knowledge/javascript/data-types.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"数据类型"},{property:"og:description",content:"数据类型 前言 最新的 ECMAScript 标准定义了 8 种数据类型: 7 种基本数据类型：; Undefined; Null; Boolean; Number; BigInt（ECMAScript 2020）; String; Symbol（ECMAScript 2015）; 1 种复杂数据类型（又称引用数据类型）：; Object; 基本数据类型保存"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/javascript/data-types.html",relativePath:"frontend-knowledge/javascript/data-types.md",key:"v-75d3c752",path:"/frontend-knowledge/javascript/data-types/",headers:[{level:2,title:"前言",slug:"前言"},{level:2,title:"使用 typeof 操作符判断数据类型",slug:"使用-typeof-操作符判断数据类型"},{level:2,title:"8 种数据类型介绍",slug:"_8-种数据类型介绍"},{level:3,title:"Undefined 类型",slug:"undefined-类型"},{level:3,title:"Null 类型",slug:"null-类型"},{level:3,title:"Boolean 类型",slug:"boolean-类型"},{level:3,title:"Number 类型",slug:"number-类型"},{level:3,title:"BigInt 类型（ECMAScript 2020）",slug:"bigint-类型-ecmascript-2020"},{level:3,title:"String 类型",slug:"string-类型"},{level:3,title:"Symbol 类型（ECMAScript 2015）",slug:"symbol-类型-ecmascript-2015"},{level:3,title:"Object 类型",slug:"object-类型"},{level:2,title:"判断数据类型",slug:"判断数据类型"},{level:3,title:"typeof",slug:"typeof"},{level:3,title:"Object.prototype.toString.call()",slug:"object-prototype-tostring-call"},{level:3,title:"instanceof",slug:"instanceof"},{level:2,title:"数据类型转换",slug:"数据类型转换"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:8.33,words:2498},updateTime:"2022年9月21日 17:55",updateTimeStamp:166375413e4,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"调用函数的四种方式",frontmatter:{summary:'调用函数的四种方式 前言 函数定义从 function 关键字开始，构成函数主体的 JavaScript 代码在定义之时并不会执行，只有调用该函数时，它们才会执行。 " 关于变量提升：var 只有变量声明提前，变量的初始化代码仍然在原来的位置；然而 function 则会使函数名称和函数体均提前。" 函数调用方式共有四种： 作为函数调用; 作为方法调用; 作',meta:[{property:"og:url",content:"/frontend-knowledge/javascript/function-invocation.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"调用函数的四种方式"},{property:"og:description",content:'调用函数的四种方式 前言 函数定义从 function 关键字开始，构成函数主体的 JavaScript 代码在定义之时并不会执行，只有调用该函数时，它们才会执行。 " 关于变量提升：var 只有变量声明提前，变量的初始化代码仍然在原来的位置；然而 function 则会使函数名称和函数体均提前。" 函数调用方式共有四种： 作为函数调用; 作为方法调用; 作'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/javascript/function-invocation.html",relativePath:"frontend-knowledge/javascript/function-invocation.md",key:"v-50058523",path:"/frontend-knowledge/javascript/function-invocation/",headers:[{level:2,title:"前言",slug:"前言"},{level:2,title:"作为函数调用",slug:"作为函数调用"},{level:2,title:"作为方法调用",slug:"作为方法调用"},{level:2,title:"作为构造函数调用",slug:"作为构造函数调用"},{level:2,title:"上下文调用",slug:"上下文调用"},{level:3,title:"call 和 apply",slug:"call-和-apply"},{level:3,title:"bind",slug:"bind"},{level:3,title:"call、apply、bind 小结",slug:"call、apply、bind-小结"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:6.21,words:1863},updateTime:"2021年12月26日 15:36",updateTimeStamp:1640504163e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"数组遍历的几种方式",frontmatter:{summary:"数组遍历的几种方式 原生的 for 循环 最简单的一种循环遍历方法，也是使用频率最高的一种。 有一种说法是，通过使用临时变量，将长度缓存起来，避免重复获取数组长度，这样当数组较大时能产生比较明显的优化效果，如下代码所示： 但我查阅了很多资料，发现这已经是一种过时的优化方案了。随着浏览器解释器的不断改进，现在不再需要手动来优化，像 Chrome 的 V8 引擎",meta:[{property:"og:url",content:"/frontend-knowledge/javascript/array-iteration.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"数组遍历的几种方式"},{property:"og:description",content:"数组遍历的几种方式 原生的 for 循环 最简单的一种循环遍历方法，也是使用频率最高的一种。 有一种说法是，通过使用临时变量，将长度缓存起来，避免重复获取数组长度，这样当数组较大时能产生比较明显的优化效果，如下代码所示： 但我查阅了很多资料，发现这已经是一种过时的优化方案了。随着浏览器解释器的不断改进，现在不再需要手动来优化，像 Chrome 的 V8 引擎"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/javascript/array-iteration.html",relativePath:"frontend-knowledge/javascript/array-iteration.md",key:"v-e2210dba",path:"/frontend-knowledge/javascript/array-iteration/",headers:[{level:2,title:"原生的 for 循环",slug:"原生的-for-循环"},{level:2,title:"for...in...",slug:"for-in"},{level:2,title:"for...of...（ES6）",slug:"for-of-es6"},{level:2,title:"forEach",slug:"foreach"},{level:2,title:"map",slug:"map"},{level:2,title:"filter",slug:"filter"},{level:2,title:"some",slug:"some"},{level:2,title:"every",slug:"every"},{level:2,title:"find（ES6）",slug:"find-es6"},{level:2,title:"findIndex（ES6）",slug:"findindex-es6"},{level:2,title:"reduce、reduceRight",slug:"reduce、reduceright"},{level:3,title:"计算对象数组某一属性的总和",slug:"计算对象数组某一属性的总和"},{level:3,title:"对象数组的去重，并统计每一项重复次数",slug:"对象数组的去重-并统计每一项重复次数"},{level:3,title:"对象数组最大/最小值获取",slug:"对象数组最大-最小值获取"},{level:2,title:"总结",slug:"总结"},{level:3,title:"性能对比",slug:"性能对比"},{level:3,title:"终止遍历的支持度、性能对比",slug:"终止遍历的支持度、性能对比"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:5.55,words:1665},updateTime:"2022年5月17日 22:01",updateTimeStamp:1652796099e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"事件循环机制，微任务和宏任务的关系",frontmatter:{summary:'事件循环机制，微任务和宏任务的关系 " 本文涉及到的名词：事件循环（Event Loop），宏任务（macro-task）与微任务（micro-task），执行栈和任务队列等。" 前言 JavaScript 是单线程的，同一时间只能做一件事情。如果碰到某个耗时长的任务（比如一个需要 3s 的网络请求），那么后续的任务都要等待，这种效果是无法接受的，这时我们就',meta:[{property:"og:url",content:"/frontend-knowledge/javascript/event-loop.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"事件循环机制，微任务和宏任务的关系"},{property:"og:description",content:'事件循环机制，微任务和宏任务的关系 " 本文涉及到的名词：事件循环（Event Loop），宏任务（macro-task）与微任务（micro-task），执行栈和任务队列等。" 前言 JavaScript 是单线程的，同一时间只能做一件事情。如果碰到某个耗时长的任务（比如一个需要 3s 的网络请求），那么后续的任务都要等待，这种效果是无法接受的，这时我们就'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/javascript/event-loop.html",relativePath:"frontend-knowledge/javascript/event-loop.md",key:"v-3ca07f56",path:"/frontend-knowledge/javascript/event-loop/",headers:[{level:2,title:"前言",slug:"前言"},{level:2,title:"消息队列",slug:"消息队列"},{level:2,title:"事件循环",slug:"事件循环"},{level:2,title:"为什么要分两种任务",slug:"为什么要分两种任务"},{level:2,title:"代码示例",slug:"代码示例"},{level:2,title:"复杂情况",slug:"复杂情况"},{level:2,title:"应用场景",slug:"应用场景"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:13.5,words:4049},updateTime:"2022年1月7日 11:16",updateTimeStamp:164152539e4,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"垃圾回收",frontmatter:{summary:"垃圾回收 前置概念 内存管理 内存管理指申请内存空间、使用内存空间和释放内存空间的这一系列步骤。 JavaScript 不能像 C 或 C++ 那样由开发者主动调用 API 来完成内存管理，而是使用垃圾回收机制来自动管理内存，其好处是可以大幅简化程序的内存管理代码，降低程序员的负担，减少因长时间运转而带来的内存泄露问题。 何为垃圾 在 JavaScript ",meta:[{property:"og:url",content:"/frontend-knowledge/javascript/gc.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"垃圾回收"},{property:"og:description",content:"垃圾回收 前置概念 内存管理 内存管理指申请内存空间、使用内存空间和释放内存空间的这一系列步骤。 JavaScript 不能像 C 或 C++ 那样由开发者主动调用 API 来完成内存管理，而是使用垃圾回收机制来自动管理内存，其好处是可以大幅简化程序的内存管理代码，降低程序员的负担，减少因长时间运转而带来的内存泄露问题。 何为垃圾 在 JavaScript "},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/javascript/gc.html",relativePath:"frontend-knowledge/javascript/gc.md",key:"v-cd34276a",path:"/frontend-knowledge/javascript/gc/",headers:[{level:2,title:"前置概念",slug:"前置概念"},{level:2,title:"GC 算法",slug:"gc-算法"},{level:3,title:"GC 里的垃圾",slug:"gc-里的垃圾"},{level:3,title:"引用计数算法实现原理",slug:"引用计数算法实现原理"},{level:3,title:"标记清除算法实现原理",slug:"标记清除算法实现原理"},{level:3,title:"标记整理算法实现原理",slug:"标记整理算法实现原理"},{level:2,title:"V8 垃圾回收",slug:"v8-垃圾回收"},{level:3,title:"V8 内存分配",slug:"v8-内存分配"},{level:3,title:"V8 垃圾回收策略",slug:"v8-垃圾回收策略"},{level:2,title:"内存问题",slug:"内存问题"},{level:3,title:"内存泄漏和内存溢出",slug:"内存泄漏和内存溢出"},{level:3,title:"内存问题的体现",slug:"内存问题的体现"},{level:3,title:"监控内存的几种方式",slug:"监控内存的几种方式"},{level:2,title:"容易导致内存泄露的场景",slug:"容易导致内存泄露的场景"},{level:2,title:"实战中解决内存泄漏",slug:"实战中解决内存泄漏"},{level:3,title:"Vue 中容易出现内存泄露的几种情况",slug:"vue-中容易出现内存泄露的几种情况"},{level:3,title:"ES6 防止内存泄漏",slug:"es6-防止内存泄漏"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:22.64,words:6793},updateTime:"2022年1月6日 17:06",updateTimeStamp:1641459973e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"声明函数的六种方式",frontmatter:{summary:"声明函数的六种方式 前言 在 JavaScript 中，函数由许多组件组成并受它们影响： 函数体的代码; 参数列表; 可以从词法作用域访问的变量; 返回值; 调用该函数时的上下文 this; 命名函数或匿名函数; 保存函数对象的变量; arguments 对象（在箭头函数中没有）; 本文介绍六种声明 JavaScript 函数的方式，分别介绍他们的声明语法、",meta:[{property:"og:url",content:"/frontend-knowledge/javascript/function-declare.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"声明函数的六种方式"},{property:"og:description",content:"声明函数的六种方式 前言 在 JavaScript 中，函数由许多组件组成并受它们影响： 函数体的代码; 参数列表; 可以从词法作用域访问的变量; 返回值; 调用该函数时的上下文 this; 命名函数或匿名函数; 保存函数对象的变量; arguments 对象（在箭头函数中没有）; 本文介绍六种声明 JavaScript 函数的方式，分别介绍他们的声明语法、"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/javascript/function-declare.html",relativePath:"frontend-knowledge/javascript/function-declare.md",key:"v-55fcc299",path:"/frontend-knowledge/javascript/function-declare/",headers:[{level:2,title:"前言",slug:"前言"},{level:2,title:"函数声明",slug:"函数声明"},{level:3,title:"基本语法",slug:"基本语法"},{level:3,title:"变量提升",slug:"变量提升"},{level:3,title:"适用场景",slug:"适用场景"},{level:3,title:"和函数表达式的区别",slug:"和函数表达式的区别"},{level:3,title:"条件语句中的函数声明",slug:"条件语句中的函数声明"},{level:2,title:"函数表达式",slug:"函数表达式"},{level:3,title:"基本语法",slug:"基本语法-2"},{level:3,title:"变量提升",slug:"变量提升-2"},{level:3,title:"适用场景",slug:"适用场景-2"},{level:3,title:"匿名函数表达式",slug:"匿名函数表达式"},{level:3,title:"命名函数表达式",slug:"命名函数表达式"},{level:2,title:"方法的定义",slug:"方法的定义"},{level:3,title:"基本语法",slug:"基本语法-3"},{level:3,title:"适用场景",slug:"适用场景-3"},{level:3,title:"计算得到的属性名和方法",slug:"计算得到的属性名和方法"},{level:2,title:"箭头函数",slug:"箭头函数"},{level:3,title:"基本语法",slug:"基本语法-4"},{level:3,title:"上下文透明性",slug:"上下文透明性"},{level:3,title:"特点",slug:"特点"},{level:3,title:"短语法",slug:"短语法"},{level:2,title:"生成器函数",slug:"生成器函数"},{level:2,title:"构造函数",slug:"构造函数"},{level:3,title:"基本语法",slug:"基本语法-5"},{level:3,title:"实例用法",slug:"实例用法"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:14.25,words:4276},updateTime:"2021年12月26日 15:36",updateTimeStamp:1640504163e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"高阶函数",frontmatter:{summary:"高阶函数 前言 「JavaScript 中，函数是一等公民」，在各种书籍和文章中我们总能看到这句话。 通俗地解释就是：JS 中的函数也是对象，可以有属性，可以赋值给一个变量，可以放在数组里作为元素，可以作为其他对象的属性，普通对象能做的它能做，普通对象不能做的它也能做。 而所谓的高阶函数（Higher-order function），就是输入参数里有函数，或",meta:[{property:"og:url",content:"/frontend-knowledge/javascript/higher-order-function.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"高阶函数"},{property:"og:description",content:"高阶函数 前言 「JavaScript 中，函数是一等公民」，在各种书籍和文章中我们总能看到这句话。 通俗地解释就是：JS 中的函数也是对象，可以有属性，可以赋值给一个变量，可以放在数组里作为元素，可以作为其他对象的属性，普通对象能做的它能做，普通对象不能做的它也能做。 而所谓的高阶函数（Higher-order function），就是输入参数里有函数，或"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/javascript/higher-order-function.html",relativePath:"frontend-knowledge/javascript/higher-order-function.md",key:"v-70dcb4e3",path:"/frontend-knowledge/javascript/higher-order-function/",headers:[{level:2,title:"前言",slug:"前言"},{level:2,title:"柯里化",slug:"柯里化"},{level:3,title:"定义",slug:"定义"},{level:3,title:"应用",slug:"应用"},{level:3,title:"通用实现",slug:"通用实现"},{level:3,title:"应用一：参数复用",slug:"应用一-参数复用"},{level:3,title:"应用二：兼容性检测",slug:"应用二-兼容性检测"},{level:3,title:"应用三：实现一个 add 函数",slug:"应用三-实现一个-add-函数"},{level:2,title:"反柯里化",slug:"反柯里化"},{level:3,title:"定义",slug:"定义-2"},{level:3,title:"通用实现",slug:"通用实现-2"},{level:3,title:"区别",slug:"区别"},{level:2,title:"偏函数",slug:"偏函数"}],readingTime:{minutes:10.9,words:3269},updateTime:"2023年2月8日 16:58",updateTimeStamp:1675846703e3,createTime:"2022年4月1日 18:46",createTimeStamp:164880997e4,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"执行上下文和调用栈",frontmatter:{summary:"执行上下文和调用栈 执行上下文的分类 执行上下文是 JavaScript 执行一段代码时的运行环境，它一共有三种： 全局执行上下文：一个程序只有一个全局对象即 window 对象（浏览器的情况下），全局对象所处的执行上下文就是全局执行上下文。; 函数执行上下文：每当一个函数被调用时, 都会为该函数创建一个新的上下文。每个函数都有它自己的执行上下文，不过是在函",meta:[{property:"og:url",content:"/frontend-knowledge/javascript/execution-context.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"执行上下文和调用栈"},{property:"og:description",content:"执行上下文和调用栈 执行上下文的分类 执行上下文是 JavaScript 执行一段代码时的运行环境，它一共有三种： 全局执行上下文：一个程序只有一个全局对象即 window 对象（浏览器的情况下），全局对象所处的执行上下文就是全局执行上下文。; 函数执行上下文：每当一个函数被调用时, 都会为该函数创建一个新的上下文。每个函数都有它自己的执行上下文，不过是在函"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/javascript/execution-context.html",relativePath:"frontend-knowledge/javascript/execution-context.md",key:"v-66c39183",path:"/frontend-knowledge/javascript/execution-context/",headers:[{level:2,title:"执行上下文的分类",slug:"执行上下文的分类"},{level:2,title:"执行上下文的产生",slug:"执行上下文的产生"},{level:2,title:"JS 代码的编译阶段",slug:"js-代码的编译阶段"},{level:3,title:"词法环境（Lexical Environment）",slug:"词法环境-lexical-environment"},{level:3,title:"变量环境（Viriable Environment）",slug:"变量环境-viriable-environment"},{level:2,title:"JS 代码的执行阶段",slug:"js-代码的执行阶段"},{level:3,title:"调用栈：用来管理执行上下文",slug:"调用栈-用来管理执行上下文"},{level:3,title:"调用栈运行过程",slug:"调用栈运行过程"},{level:3,title:"调用栈大小",slug:"调用栈大小"},{level:2,title:"伪代码演示全过程",slug:"伪代码演示全过程"},{level:2,title:"曾经的 VO/AO",slug:"曾经的-vo-ao"},{level:3,title:"VO 变量对象",slug:"vo-变量对象"},{level:3,title:"AO 活动对象",slug:"ao-活动对象"},{level:2,title:"备注",slug:"备注"}],readingTime:{minutes:25.75,words:7725},updateTime:"2021年12月26日 15:36",updateTimeStamp:1640504163e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"继承的八种方式",frontmatter:{summary:'继承的八种方式 前言 在编写代码时，有些对象会有方法（函数），如果把这些方法都放在构造函数中声明就会导致内存的浪费。 如下，通过调用构造函数的方式来创建对象，Person 是 p1、p2 的构造函数。所有的 Person 对象都有 say 方法，并且功能相似，但是他们占据了不同的内存，会导致内存浪费（内存泄露）。 于是，我们就需要用到继承。 " 通过某种方式',meta:[{property:"og:url",content:"/frontend-knowledge/javascript/inheritance.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"继承的八种方式"},{property:"og:description",content:'继承的八种方式 前言 在编写代码时，有些对象会有方法（函数），如果把这些方法都放在构造函数中声明就会导致内存的浪费。 如下，通过调用构造函数的方式来创建对象，Person 是 p1、p2 的构造函数。所有的 Person 对象都有 say 方法，并且功能相似，但是他们占据了不同的内存，会导致内存浪费（内存泄露）。 于是，我们就需要用到继承。 " 通过某种方式'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/javascript/inheritance.html",relativePath:"frontend-knowledge/javascript/inheritance.md",key:"v-8e98abfa",path:"/frontend-knowledge/javascript/inheritance/",headers:[{level:2,title:"前言",slug:"前言"},{level:2,title:"原型链继承",slug:"原型链继承"},{level:2,title:"借用构造函数继承（对象冒充）",slug:"借用构造函数继承-对象冒充"},{level:2,title:"组合模式继承",slug:"组合模式继承"},{level:2,title:"共享原型继承",slug:"共享原型继承"},{level:2,title:"原型式继承",slug:"原型式继承"},{level:2,title:"寄生式继承",slug:"寄生式继承"},{level:2,title:"寄生组合式继承",slug:"寄生组合式继承"},{level:2,title:"class 继承",slug:"class-继承"}],readingTime:{minutes:11.86,words:3557},updateTime:"2021年12月26日 15:36",updateTimeStamp:1640504163e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"作用域",frontmatter:{summary:"作用域 作用域定义 作用域是指在程序中定义变量的区域，该位置决定了变量的生命周期。 通俗地理解，作用域就是变量与函数的可访问范围，即作用域控制着变量和函数的可见性和生命周期。 作用域的分类 JavaScript 一共有三种作用域： 全局作用域; 函数作用域; 块级作用域; 全局作用域和函数作用域 在 ES6 之前，ES 的作用域只有两种：全局作用域和函数作用",meta:[{property:"og:url",content:"/frontend-knowledge/javascript/scope.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"作用域"},{property:"og:description",content:"作用域 作用域定义 作用域是指在程序中定义变量的区域，该位置决定了变量的生命周期。 通俗地理解，作用域就是变量与函数的可访问范围，即作用域控制着变量和函数的可见性和生命周期。 作用域的分类 JavaScript 一共有三种作用域： 全局作用域; 函数作用域; 块级作用域; 全局作用域和函数作用域 在 ES6 之前，ES 的作用域只有两种：全局作用域和函数作用"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/javascript/scope.html",relativePath:"frontend-knowledge/javascript/scope.md",key:"v-57094fc3",path:"/frontend-knowledge/javascript/scope/",headers:[{level:2,title:"作用域定义",slug:"作用域定义"},{level:2,title:"作用域的分类",slug:"作用域的分类"},{level:3,title:"全局作用域和函数作用域",slug:"全局作用域和函数作用域"},{level:3,title:"块级作用域",slug:"块级作用域"},{level:2,title:"词法作用域",slug:"词法作用域"},{level:2,title:"作用域链",slug:"作用域链"}],readingTime:{minutes:4.36,words:1308},updateTime:"2021年12月26日 15:36",updateTimeStamp:1640504163e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"浅克隆与深克隆",frontmatter:{summary:"浅克隆与深克隆 前言 浅克隆：浅克隆只是拷贝基本类型数据。对于引用类型数据，是将栈内存中的引用复制一份，赋给一个新的变量，本质上两个指向堆内存中的同一地址，内容也相同，其中一个变化另一个内容也会变化。 深克隆：就是创建一个新的空对象，开辟一块内存，然后将原对象中的数据全部复制过去，完全切断两个对象间的联系。新对象跟原对象不共享内存，修改新对象不会改到原对象。",meta:[{property:"og:url",content:"/frontend-knowledge/javascript/shallow-clone-and-deep-clone.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"浅克隆与深克隆"},{property:"og:description",content:"浅克隆与深克隆 前言 浅克隆：浅克隆只是拷贝基本类型数据。对于引用类型数据，是将栈内存中的引用复制一份，赋给一个新的变量，本质上两个指向堆内存中的同一地址，内容也相同，其中一个变化另一个内容也会变化。 深克隆：就是创建一个新的空对象，开辟一块内存，然后将原对象中的数据全部复制过去，完全切断两个对象间的联系。新对象跟原对象不共享内存，修改新对象不会改到原对象。"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/javascript/shallow-clone-and-deep-clone.html",relativePath:"frontend-knowledge/javascript/shallow-clone-and-deep-clone.md",key:"v-0efbf7e6",path:"/frontend-knowledge/javascript/shallow-clone-and-deep-clone/",headers:[{level:2,title:"前言",slug:"前言"},{level:2,title:"浅克隆概念",slug:"浅克隆概念"},{level:2,title:"深克隆概念",slug:"深克隆概念"},{level:2,title:"应用实例",slug:"应用实例"},{level:3,title:"浅克隆方法",slug:"浅克隆方法"},{level:3,title:"深克隆方法",slug:"深克隆方法"}],readingTime:{minutes:2.56,words:769},updateTime:"2023年4月9日 14:19",updateTimeStamp:1681021149e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"对象遍历的几种方式",frontmatter:{summary:"对象遍历的几种方式 for...in... 要使用 (const i in obj) 而不是 (i in obj)，因为后者将会创建一个全局变量。 使用 for...in... 循环时，返回的是所有能够通过对象访问的、可枚举的属性，既包括存在于实例中的属性，也包括存在于原型中的实例。如果只需要获取对象的实例属性，可以使用 hasOwnProperty 进行过",meta:[{property:"og:url",content:"/frontend-knowledge/javascript/object-iteration.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"对象遍历的几种方式"},{property:"og:description",content:"对象遍历的几种方式 for...in... 要使用 (const i in obj) 而不是 (i in obj)，因为后者将会创建一个全局变量。 使用 for...in... 循环时，返回的是所有能够通过对象访问的、可枚举的属性，既包括存在于实例中的属性，也包括存在于原型中的实例。如果只需要获取对象的实例属性，可以使用 hasOwnProperty 进行过"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/javascript/object-iteration.html",relativePath:"frontend-knowledge/javascript/object-iteration.md",key:"v-db069a36",path:"/frontend-knowledge/javascript/object-iteration/",headers:[{level:2,title:"for...in...",slug:"for-in"},{level:2,title:"Object.keys",slug:"object-keys"},{level:2,title:"Object.values",slug:"object-values"},{level:2,title:"Object.entries",slug:"object-entries"},{level:2,title:"Object.getOwnPropertyNames",slug:"object-getownpropertynames"},{level:2,title:"Object.getOwnPropertySymbols()",slug:"object-getownpropertysymbols"},{level:2,title:"Reflect.ownKeys()",slug:"reflect-ownkeys"}],readingTime:{minutes:3.32,words:995},updateTime:"2021年12月26日 15:36",updateTimeStamp:1640504163e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"原型与原型链",frontmatter:{summary:"原型与原型链 前言 网上有句话：JavaScript 中万物皆对象，对象皆出自构造函数（这里的万物主要指引用类型）。 比如下面代码： 在这个例子中，Foo 就是一个构造函数，我们使用 new 创建了一个实例对象 foo。 函数对象和普通对象 在 ES6 以前没有 class 关键字，所以 JavaScript 用函数来模拟的类实现，也就是函数对象。因此 Ja",meta:[{property:"og:url",content:"/frontend-knowledge/javascript/prototype-and-prototype-chain.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"原型与原型链"},{property:"og:description",content:"原型与原型链 前言 网上有句话：JavaScript 中万物皆对象，对象皆出自构造函数（这里的万物主要指引用类型）。 比如下面代码： 在这个例子中，Foo 就是一个构造函数，我们使用 new 创建了一个实例对象 foo。 函数对象和普通对象 在 ES6 以前没有 class 关键字，所以 JavaScript 用函数来模拟的类实现，也就是函数对象。因此 Ja"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/javascript/prototype-and-prototype-chain.html",relativePath:"frontend-knowledge/javascript/prototype-and-prototype-chain.md",key:"v-2b78bbe3",path:"/frontend-knowledge/javascript/prototype-and-prototype-chain/",headers:[{level:2,title:"前言",slug:"前言"},{level:2,title:"函数对象和普通对象",slug:"函数对象和普通对象"},{level:2,title:"三大属性",slug:"三大属性"},{level:3,title:"prototype",slug:"prototype"},{level:3,title:"__proto__",slug:"proto"},{level:3,title:"constructor",slug:"constructor"},{level:2,title:"理清错综复杂的关系",slug:"理清错综复杂的关系"},{level:3,title:"区分：__proto__ 和 prototype",slug:"区分-proto-和-prototype"},{level:3,title:"区分：Object 和 Function",slug:"区分-object-和-function"},{level:2,title:"原型链",slug:"原型链"},{level:2,title:"一张图回顾",slug:"一张图回顾"}],readingTime:{minutes:32.47,words:9741},updateTime:"2022年9月1日 14:33",updateTimeStamp:1662013996e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"未完待续",frontmatter:{summary:"未完待续 知识点正在火速整理中",meta:[{property:"og:url",content:"/frontend-knowledge/javascript/to-be-continued.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"未完待续"},{property:"og:description",content:"未完待续 知识点正在火速整理中"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/javascript/to-be-continued.html",relativePath:"frontend-knowledge/javascript/to-be-continued.md",key:"v-2322ccba",path:"/frontend-knowledge/javascript/to-be-continued/",headers:[{level:2,title:"知识点正在火速整理中",slug:"知识点正在火速整理中"}],readingTime:{minutes:.05,words:14},updateTime:"2021年12月26日 15:36",updateTimeStamp:1640504163e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"栈空间和堆空间",frontmatter:{summary:"栈空间和堆空间 数据类型 目前 JavaScript 中的数据类型一共有 8 种，它们分别是： 类型 描述 --------- -------------------------------- Boolean 只有 true 和 false 两个值。 Null 只有一个值 null。 Undefined 一个没有被赋值的变量会有个默认值 undefined，",meta:[{property:"og:url",content:"/frontend-knowledge/javascript/stack-and-heap.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"栈空间和堆空间"},{property:"og:description",content:"栈空间和堆空间 数据类型 目前 JavaScript 中的数据类型一共有 8 种，它们分别是： 类型 描述 --------- -------------------------------- Boolean 只有 true 和 false 两个值。 Null 只有一个值 null。 Undefined 一个没有被赋值的变量会有个默认值 undefined，"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/javascript/stack-and-heap.html",relativePath:"frontend-knowledge/javascript/stack-and-heap.md",key:"v-0954de35",path:"/frontend-knowledge/javascript/stack-and-heap/",headers:[{level:2,title:"数据类型",slug:"数据类型"},{level:2,title:"内存空间",slug:"内存空间"},{level:3,title:"栈空间",slug:"栈空间"},{level:3,title:"堆空间",slug:"堆空间"},{level:2,title:"为什么分两种空间",slug:"为什么分两种空间"},{level:2,title:"不同数据类型赋值操作的区别",slug:"不同数据类型赋值操作的区别"}],readingTime:{minutes:3.7,words:1109},updateTime:"2021年12月26日 15:36",updateTimeStamp:1640504163e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"同步与异步",frontmatter:{summary:'同步与异步 " 在 ES5 中，异步编程的传统解决方案是通过回调函数或事件监听。 " " 在 ES6 中，Promise 成为了异步编程的一种更合理更强大的解决方案。 " " 在 ES7 中，async/await 优化了 ES6 异步编程的解决方案，比 Promise 更加优美。" 同步与异步概念 代码举例 同步：同步就是后一个任务等待前一个任务执行完毕后',meta:[{property:"og:url",content:"/frontend-knowledge/javascript/sync-and-async.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"同步与异步"},{property:"og:description",content:'同步与异步 " 在 ES5 中，异步编程的传统解决方案是通过回调函数或事件监听。 " " 在 ES6 中，Promise 成为了异步编程的一种更合理更强大的解决方案。 " " 在 ES7 中，async/await 优化了 ES6 异步编程的解决方案，比 Promise 更加优美。" 同步与异步概念 代码举例 同步：同步就是后一个任务等待前一个任务执行完毕后'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/javascript/sync-and-async.html",relativePath:"frontend-knowledge/javascript/sync-and-async.md",key:"v-f780d94a",path:"/frontend-knowledge/javascript/sync-and-async/",headers:[{level:2,title:"同步与异步概念",slug:"同步与异步概念"},{level:3,title:"代码举例",slug:"代码举例"},{level:3,title:"过程分析",slug:"过程分析"},{level:2,title:"回调函数",slug:"回调函数"},{level:2,title:"ajax（jQuery）",slug:"ajax-jquery"},{level:2,title:"Promise",slug:"promise"},{level:3,title:"基础用法",slug:"基础用法"},{level:3,title:"Promise 使用案例",slug:"promise-使用案例"},{level:3,title:"Promise 链式调用",slug:"promise-链式调用"},{level:3,title:"Promise 异常处理",slug:"promise-异常处理"},{level:3,title:"Promise 静态方法",slug:"promise-静态方法"},{level:3,title:"Promise 并行执行",slug:"promise-并行执行"},{level:2,title:"async/await",slug:"async-await"},{level:3,title:"基础用法",slug:"基础用法-2"},{level:3,title:"错误处理",slug:"错误处理"},{level:2,title:"总结",slug:"总结"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:13.88,words:4164},updateTime:"2022年1月6日 17:06",updateTimeStamp:1641459973e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"TypeScript",frontmatter:{summary:"TypeScript 什么是 TypeScript（What）？ TypeScript 是 JavaScript 的超集，它不仅包含了 JavaScript 当前主流的 ES5 标准，还包含了 ES6/7/8 等未来的标准以及一些处于实验阶段的语法（例如 decorator 装饰器）。 所以对于 TypeScript 的学习，也分为了三个递进的部分： 为 J",meta:[{property:"og:url",content:"/frontend-knowledge/typescript/"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"TypeScript"},{property:"og:description",content:"TypeScript 什么是 TypeScript（What）？ TypeScript 是 JavaScript 的超集，它不仅包含了 JavaScript 当前主流的 ES5 标准，还包含了 ES6/7/8 等未来的标准以及一些处于实验阶段的语法（例如 decorator 装饰器）。 所以对于 TypeScript 的学习，也分为了三个递进的部分： 为 J"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/typescript/",relativePath:"frontend-knowledge/typescript/README.md",key:"v-543f93d8",path:"/frontend-knowledge/typescript/",readingTime:{minutes:3.57,words:1071},updateTime:"2022年10月28日 17:51",updateTimeStamp:1666950673e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:7}]},{title:"this 指向",frontmatter:{summary:'this 指向 this 的定义 " * 红宝书（第3版）：this 对象是在运行时基于函数的执行环境绑定的：在全局函数中，this 等于 window，而当函数被作为某个对象的方法调用时，this 等于那个对象。（P182）" " * 小黄书（上）：this 是在运行时进行绑定的，并不是在编写时绑定，它的上下文取决于函数调用时的各种条件。this 既不指向',meta:[{property:"og:url",content:"/frontend-knowledge/javascript/this-keyword.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"this 指向"},{property:"og:description",content:'this 指向 this 的定义 " * 红宝书（第3版）：this 对象是在运行时基于函数的执行环境绑定的：在全局函数中，this 等于 window，而当函数被作为某个对象的方法调用时，this 等于那个对象。（P182）" " * 小黄书（上）：this 是在运行时进行绑定的，并不是在编写时绑定，它的上下文取决于函数调用时的各种条件。this 既不指向'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/javascript/this-keyword.html",relativePath:"frontend-knowledge/javascript/this-keyword.md",key:"v-48b70e8f",path:"/frontend-knowledge/javascript/this-keyword/",headers:[{level:2,title:"this 的定义",slug:"this-的定义"},{level:2,title:"this 的作用",slug:"this-的作用"},{level:2,title:"寻找函数的调用位置",slug:"寻找函数的调用位置"},{level:3,title:"通过浏览器调试工具查找",slug:"通过浏览器调试工具查找"},{level:3,title:"通过分析代码查找",slug:"通过分析代码查找"},{level:2,title:"在调用位置查找 this 绑定对象",slug:"在调用位置查找-this-绑定对象"},{level:3,title:"new 绑定",slug:"new-绑定"},{level:3,title:"显式绑定",slug:"显式绑定"},{level:3,title:"隐式绑定",slug:"隐式绑定"},{level:3,title:"默认绑定",slug:"默认绑定"},{level:3,title:"例外情况",slug:"例外情况"},{level:2,title:"this 的缺陷以及应对方案",slug:"this-的缺陷以及应对方案"},{level:3,title:"嵌套函数中的 this 不会从外层函数中继承",slug:"嵌套函数中的-this-不会从外层函数中继承"},{level:3,title:"普通函数中的 this 默认指向全局对象 window",slug:"普通函数中的-this-默认指向全局对象-window"},{level:2,title:"总结：如何判断 this 指向谁",slug:"总结-如何判断-this-指向谁"}],readingTime:{minutes:10.84,words:3253},updateTime:"2021年12月26日 15:36",updateTimeStamp:1640504163e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"内置类型和类型断言",frontmatter:{summary:'内置类型和类型断言\r" 之前的基础类型标注、字面量类型与枚举、函数与 Class 等概念，在 JavaScript 中或多或少会有相关联的成分。但本文开始涉及到的知识点就是 TypeScript 独有的了。" any TypeScript 中提供了一个内置类型 any 表示「任意类型」： any 能兼容所有类型，也能够被所有类型兼容。但是滥用它的话就把 Ty',meta:[{property:"og:url",content:"/frontend-knowledge/typescript/any-unknown-never.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"内置类型和类型断言"},{property:"og:description",content:'内置类型和类型断言\r" 之前的基础类型标注、字面量类型与枚举、函数与 Class 等概念，在 JavaScript 中或多或少会有相关联的成分。但本文开始涉及到的知识点就是 TypeScript 独有的了。" any TypeScript 中提供了一个内置类型 any 表示「任意类型」： any 能兼容所有类型，也能够被所有类型兼容。但是滥用它的话就把 Ty'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/typescript/any-unknown-never.html",relativePath:"frontend-knowledge/typescript/any-unknown-never.md",key:"v-7cc38343",path:"/frontend-knowledge/typescript/any-unknown-never/",headers:[{level:2,title:"any",slug:"any"},{level:2,title:"unknown",slug:"unknown"},{level:2,title:"never",slug:"never"},{level:2,title:"类型断言：警告编译器不准报错",slug:"类型断言-警告编译器不准报错"},{level:3,title:"双重断言",slug:"双重断言"},{level:3,title:"非空断言",slug:"非空断言"}],readingTime:{minutes:3.98,words:1195},updateTime:"2022年10月27日 18:02",updateTimeStamp:1666864974e3,createTime:"2022年10月27日 18:02",createTimeStamp:1666864974e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"类类型",frontmatter:{summary:"类类型 ES6 引入 class 关键字后，TypeScript 作为 JavaScript 的超集，也支持了 class 的全部特性，并且还可以对类的属性、方法等进行静态类型检测。 类 如果使用传统的 JavaScript 代码定义类，我们需要使用函数+原型链的形式进行模拟，如下代码所示： 在第 1～ 3 行，我们定义了 Dog 类的构造函数，并在构造函数",meta:[{property:"og:url",content:"/frontend-knowledge/typescript/class.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"类类型"},{property:"og:description",content:"类类型 ES6 引入 class 关键字后，TypeScript 作为 JavaScript 的超集，也支持了 class 的全部特性，并且还可以对类的属性、方法等进行静态类型检测。 类 如果使用传统的 JavaScript 代码定义类，我们需要使用函数+原型链的形式进行模拟，如下代码所示： 在第 1～ 3 行，我们定义了 Dog 类的构造函数，并在构造函数"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/typescript/class.html",relativePath:"frontend-knowledge/typescript/class.md",key:"v-208b2b43",path:"/frontend-knowledge/typescript/class/",headers:[{level:2,title:"类",slug:"类"},{level:2,title:"继承",slug:"继承"},{level:3,title:"extend 关键字",slug:"extend-关键字"},{level:3,title:"super() 方法",slug:"super-方法"},{level:2,title:"公共、私有与受保护的修饰符",slug:"公共、私有与受保护的修饰符"},{level:3,title:"private 修饰符",slug:"private-修饰符"},{level:3,title:"protected 修饰符",slug:"protected-修饰符"},{level:2,title:"只读修饰符",slug:"只读修饰符"},{level:2,title:"存取器",slug:"存取器"},{level:2,title:"静态属性",slug:"静态属性"},{level:2,title:"抽象类",slug:"抽象类"},{level:2,title:"类的类型",slug:"类的类型"}],readingTime:{minutes:8.17,words:2452},updateTime:"2022年4月12日 17:36",updateTimeStamp:164975621e4,createTime:"2022年4月12日 17:36",createTimeStamp:164975621e4,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"基础类型（始于 JS）",frontmatter:{summary:'基础类型（始于 JS） " TypeScript 可以通过为 JavaScript 代码添加类型与类型检查来确保健壮性。因此「类型」它是最核心的部分。" 在 TypeScript 语法中，类型的标注主要通过类型后置语法来实现，即用 : 作为分割变量和类型的分隔符。而没有写类型标注的 TypeScript 与 JavaScript 完全一致，因此可以把 Typ',meta:[{property:"og:url",content:"/frontend-knowledge/typescript/basic-types.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"基础类型（始于 JS）"},{property:"og:description",content:'基础类型（始于 JS） " TypeScript 可以通过为 JavaScript 代码添加类型与类型检查来确保健壮性。因此「类型」它是最核心的部分。" 在 TypeScript 语法中，类型的标注主要通过类型后置语法来实现，即用 : 作为分割变量和类型的分隔符。而没有写类型标注的 TypeScript 与 JavaScript 完全一致，因此可以把 Typ'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/typescript/basic-types.html",relativePath:"frontend-knowledge/typescript/basic-types.md",key:"v-0080c103",path:"/frontend-knowledge/typescript/basic-types/",headers:[{level:2,title:"原始类型的类型标注",slug:"原始类型的类型标注"},{level:3,title:"null 与 undefined",slug:"null-与-undefined"},{level:3,title:"void",slug:"void"},{level:2,title:"数组的类型标注",slug:"数组的类型标注"},{level:3,title:"数组",slug:"数组"},{level:3,title:"元组",slug:"元组"},{level:2,title:"对象的类型标注",slug:"对象的类型标注"},{level:3,title:"声明方式",slug:"声明方式"},{level:3,title:"修饰接口属性",slug:"修饰接口属性"},{level:3,title:"type 与 interface",slug:"type-与-interface"},{level:3,title:"object、Object 以及 {}",slug:"object、object-以及"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:9.43,words:2830},updateTime:"2022年10月27日 16:44",updateTimeStamp:1666860279e3,createTime:"2022年4月4日 21:21",createTimeStamp:1649078474e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:5}]},{title:"枚举",frontmatter:{summary:"枚举 简单例子 枚举类型用于取值被限定在一定范围内的场景，比如一周只能有七天，颜色限定为红绿蓝等。 格式是 enum + 枚举名字 + 一对花括弧，花括弧里则是被命名了的常量成员。 比如用枚举类型来实现星期： 枚举成员会被赋值为从 0 开始递增的数字，同时也会对枚举值到枚举名进行反向映射： 在上述示例中，Days 既可以表示集合，也可以表示集合的类型，所有成",meta:[{property:"og:url",content:"/frontend-knowledge/typescript/enum.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"枚举"},{property:"og:description",content:"枚举 简单例子 枚举类型用于取值被限定在一定范围内的场景，比如一周只能有七天，颜色限定为红绿蓝等。 格式是 enum + 枚举名字 + 一对花括弧，花括弧里则是被命名了的常量成员。 比如用枚举类型来实现星期： 枚举成员会被赋值为从 0 开始递增的数字，同时也会对枚举值到枚举名进行反向映射： 在上述示例中，Days 既可以表示集合，也可以表示集合的类型，所有成"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/typescript/enum.html",relativePath:"frontend-knowledge/typescript/enum.md",key:"v-41c08831",path:"/frontend-knowledge/typescript/enum/",headers:[{level:2,title:"简单例子",slug:"简单例子"},{level:2,title:"手动赋值",slug:"手动赋值"},{level:2,title:"常数项和计算所得项",slug:"常数项和计算所得项"},{level:2,title:"常数枚举",slug:"常数枚举"},{level:2,title:"外部枚举",slug:"外部枚举"}],readingTime:{minutes:5.24,words:1573},updateTime:"2022年4月12日 17:36",updateTimeStamp:164975621e4,createTime:"2022年4月12日 17:36",createTimeStamp:164975621e4,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"函数与 class 类型",frontmatter:{summary:'函数与 class 类型\r" 日常开发中，除了各种变量，函数和 class 也是必不可少的一部分。TypeScript 不光带来了函数与 class 的类型标注，还引入了其独有的概念比如重载与面向对象的编程等。" 函数\r" 函数部分，主要关注其参数类型、返回值类型以及重载的应用。 " 函数的类型标注 如果说变量的类型是描述了这个变量的值类型，那么函数的类型就',meta:[{property:"og:url",content:"/frontend-knowledge/typescript/function-and-class.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"函数与 class 类型"},{property:"og:description",content:'函数与 class 类型\r" 日常开发中，除了各种变量，函数和 class 也是必不可少的一部分。TypeScript 不光带来了函数与 class 的类型标注，还引入了其独有的概念比如重载与面向对象的编程等。" 函数\r" 函数部分，主要关注其参数类型、返回值类型以及重载的应用。 " 函数的类型标注 如果说变量的类型是描述了这个变量的值类型，那么函数的类型就'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/typescript/function-and-class.html",relativePath:"frontend-knowledge/typescript/function-and-class.md",key:"v-439a9f59",path:"/frontend-knowledge/typescript/function-and-class/",headers:[{level:2,title:"函数",slug:"函数"},{level:3,title:"函数的类型标注",slug:"函数的类型标注"},{level:3,title:"void 类型",slug:"void-类型"},{level:3,title:"可选参数与 rest 参数",slug:"可选参数与-rest-参数"},{level:3,title:"重载",slug:"重载"},{level:3,title:"异步函数、Generator 函数等类型签名",slug:"异步函数、generator-函数等类型签名"},{level:2,title:"class",slug:"class"},{level:3,title:"类与类成员的类型标注",slug:"类与类成员的类型标注"},{level:3,title:"修饰符",slug:"修饰符"},{level:3,title:"静态成员",slug:"静态成员"},{level:3,title:"继承、实现、抽象类",slug:"继承、实现、抽象类"}],readingTime:{minutes:8.58,words:2574},updateTime:"2022年10月27日 16:44",updateTimeStamp:1666860261e3,createTime:"2022年10月27日 16:44",createTimeStamp:1666860261e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"泛型",frontmatter:{summary:"泛型 TypeScript 中常说的类型编程，其实就是对类型进行编程。而泛型就是这门语言里的（函数）参数。 类型别名中的泛型 基本用法 类型别名如果声明了泛型坑位，那其实就等价于一个接受参数的函数： 类型别名中的泛型大多是用来进行工具类型封装，比如下面两个： 泛型约束与默认值 像函数参数一样，给泛型设置默认值以后，在调用时就可以不带任何参数了： 此外泛型还有",meta:[{property:"og:url",content:"/frontend-knowledge/typescript/generic-types.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"泛型"},{property:"og:description",content:"泛型 TypeScript 中常说的类型编程，其实就是对类型进行编程。而泛型就是这门语言里的（函数）参数。 类型别名中的泛型 基本用法 类型别名如果声明了泛型坑位，那其实就等价于一个接受参数的函数： 类型别名中的泛型大多是用来进行工具类型封装，比如下面两个： 泛型约束与默认值 像函数参数一样，给泛型设置默认值以后，在调用时就可以不带任何参数了： 此外泛型还有"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/typescript/generic-types.html",relativePath:"frontend-knowledge/typescript/generic-types.md",key:"v-024046a3",path:"/frontend-knowledge/typescript/generic-types/",headers:[{level:2,title:"类型别名中的泛型",slug:"类型别名中的泛型"},{level:3,title:"基本用法",slug:"基本用法"},{level:3,title:"泛型约束与默认值",slug:"泛型约束与默认值"},{level:3,title:"多泛型关联",slug:"多泛型关联"},{level:2,title:"对象类型中的泛型",slug:"对象类型中的泛型"},{level:3,title:"基本用法",slug:"基本用法-2"},{level:3,title:"泛型嵌套",slug:"泛型嵌套"},{level:2,title:"函数中的泛型",slug:"函数中的泛型"},{level:3,title:"基本用法",slug:"基本用法-3"},{level:3,title:"约束与默认值",slug:"约束与默认值"},{level:2,title:"Class 中的泛型",slug:"class-中的泛型"},{level:2,title:"内置方法中的泛型",slug:"内置方法中的泛型"},{level:3,title:"Promise 中的泛型",slug:"promise-中的泛型"},{level:3,title:"数组中的泛型",slug:"数组中的泛型"},{level:3,title:"React 中的泛型",slug:"react-中的泛型"}],readingTime:{minutes:6.17,words:1852},updateTime:"2022年11月14日 17:18",updateTimeStamp:1668417504e3,createTime:"2022年11月13日 16:22",createTimeStamp:1668327739e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"函数类型",frontmatter:{summary:"函数类型 定义函数 在 JavaScript 中，有两种常见的定义函数的方式 —— 函数声明（Function Declaration）和函数表达式（Function Expression）： 函数声明 在 TypeScript 中，函数声明的类型定义较简单： 输入多余的（或者少于要求的）参数，是不被允许的： 函数表达式 在 TypeScript 中，函数表",meta:[{property:"og:url",content:"/frontend-knowledge/typescript/function.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"函数类型"},{property:"og:description",content:"函数类型 定义函数 在 JavaScript 中，有两种常见的定义函数的方式 —— 函数声明（Function Declaration）和函数表达式（Function Expression）： 函数声明 在 TypeScript 中，函数声明的类型定义较简单： 输入多余的（或者少于要求的）参数，是不被允许的： 函数表达式 在 TypeScript 中，函数表"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/typescript/function.html",relativePath:"frontend-knowledge/typescript/function.md",key:"v-0791c683",path:"/frontend-knowledge/typescript/function/",headers:[{level:2,title:"定义函数",slug:"定义函数"},{level:3,title:"函数声明",slug:"函数声明"},{level:3,title:"函数表达式",slug:"函数表达式"},{level:2,title:"返回值类型",slug:"返回值类型"},{level:3,title:"没有返回值",slug:"没有返回值"},{level:3,title:"可缺省和可推断的返回值类型",slug:"可缺省和可推断的返回值类型"},{level:3,title:"Generator 函数的返回值",slug:"generator-函数的返回值"},{level:2,title:"参数类型",slug:"参数类型"},{level:3,title:"可选参数",slug:"可选参数"},{level:3,title:"默认参数",slug:"默认参数"},{level:3,title:"剩余参数",slug:"剩余参数"},{level:2,title:"this",slug:"this"},{level:2,title:"函数重载",slug:"函数重载"},{level:2,title:"类型谓词（is）",slug:"类型谓词-is"}],readingTime:{minutes:9.31,words:2792},updateTime:"2022年4月12日 17:36",updateTimeStamp:164975621e4,createTime:"2022年4月12日 17:36",createTimeStamp:164975621e4,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"接口类型与类型别名",frontmatter:{summary:"接口类型与类型别名 前面的 TypeScript 基础类型、函数类型和类类型，在 JavaScript 中都有对应的语法。而接口类型与类型别名是 TS 新增的特性，它们能用于描述较为复杂的数据结构，就像代码的文档和注释一样。 Interface 接口类型 介绍 TypeScript 中的接口是一个非常灵活的概念，除了可用于对类的一部分行为进行抽象以外，也常用",meta:[{property:"og:url",content:"/frontend-knowledge/typescript/interface-and-type.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"接口类型与类型别名"},{property:"og:description",content:"接口类型与类型别名 前面的 TypeScript 基础类型、函数类型和类类型，在 JavaScript 中都有对应的语法。而接口类型与类型别名是 TS 新增的特性，它们能用于描述较为复杂的数据结构，就像代码的文档和注释一样。 Interface 接口类型 介绍 TypeScript 中的接口是一个非常灵活的概念，除了可用于对类的一部分行为进行抽象以外，也常用"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/typescript/interface-and-type.html",relativePath:"frontend-knowledge/typescript/interface-and-type.md",key:"v-416261aa",path:"/frontend-knowledge/typescript/interface-and-type/",headers:[{level:2,title:"Interface 接口类型",slug:"interface-接口类型"},{level:3,title:"介绍",slug:"介绍"},{level:3,title:"简单的例子",slug:"简单的例子"},{level:3,title:"可选属性",slug:"可选属性"},{level:3,title:"索引签名",slug:"索引签名"},{level:3,title:"只读属性",slug:"只读属性"},{level:2,title:"Type 类型别名",slug:"type-类型别名"},{level:2,title:"Interface 与 Type 的区别",slug:"interface-与-type-的区别"}],readingTime:{minutes:5.92,words:1777},updateTime:"2022年4月11日 15:22",updateTimeStamp:1649661753e3,createTime:"2022年4月9日 22:58",createTimeStamp:1649516304e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"泛型",frontmatter:{summary:"泛型 泛型指的是类型参数化，即将原来某种具体的类型进行参数化。和定义函数参数一样，我们可以给泛型定义若干个类型参数，并在调用时给泛型传入明确的类型参数。 设计泛型的目的在于有效约束类型成员之间的关系，比如函数参数和返回值、类或者接口成员和方法之间的关系。 泛型类型参数 泛型最常用的场景是用来约束函数参数的类型，我们可以给函数定义若干个被调用时才会传入明确类型",meta:[{property:"og:url",content:"/frontend-knowledge/typescript/generics.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"泛型"},{property:"og:description",content:"泛型 泛型指的是类型参数化，即将原来某种具体的类型进行参数化。和定义函数参数一样，我们可以给泛型定义若干个类型参数，并在调用时给泛型传入明确的类型参数。 设计泛型的目的在于有效约束类型成员之间的关系，比如函数参数和返回值、类或者接口成员和方法之间的关系。 泛型类型参数 泛型最常用的场景是用来约束函数参数的类型，我们可以给函数定义若干个被调用时才会传入明确类型"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/typescript/generics.html",relativePath:"frontend-knowledge/typescript/generics.md",key:"v-4b7b453b",path:"/frontend-knowledge/typescript/generics/",headers:[{level:2,title:"泛型类型参数",slug:"泛型类型参数"},{level:2,title:"泛型类",slug:"泛型类"},{level:2,title:"泛型类型",slug:"泛型类型"},{level:2,title:"泛型约束",slug:"泛型约束"}],readingTime:{minutes:7.27,words:2180},updateTime:"2022年5月5日 15:46",updateTimeStamp:1651736778e3,createTime:"2022年4月12日 17:36",createTimeStamp:164975621e4,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:7}]},{title:"未完待续",frontmatter:{summary:"未完待续 知识点正在火速整理中",meta:[{property:"og:url",content:"/frontend-knowledge/typescript/to-be-continued.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"未完待续"},{property:"og:description",content:"未完待续 知识点正在火速整理中"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/typescript/to-be-continued.html",relativePath:"frontend-knowledge/typescript/to-be-continued.md",key:"v-5fa486a3",path:"/frontend-knowledge/typescript/to-be-continued/",headers:[{level:2,title:"知识点正在火速整理中",slug:"知识点正在火速整理中"}],readingTime:{minutes:.05,words:14},updateTime:"2021年12月26日 15:36",updateTimeStamp:1640504163e3,createTime:"2021年12月26日 15:36",createTimeStamp:1640504163e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"字面量类型与枚举",frontmatter:{summary:'字面量类型与枚举\r" 字面量类型以及枚举，在某些方面其实可以理解为是原始类型与对象类型的进一步延伸，也同样是日常会被重度使用的语法。" 字面量类型 字面量类型主要包括字符串字面量类型、数字字面量类型、布尔字面量类型和对象字面量类型，它们可以直接作为类型标注： 没错，所谓的字面量类型，就是把一个「具体的值」作为一种类型。它代表着比原始类型更精确的类型，同时也是',meta:[{property:"og:url",content:"/frontend-knowledge/typescript/literal-and-enum.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"字面量类型与枚举"},{property:"og:description",content:'字面量类型与枚举\r" 字面量类型以及枚举，在某些方面其实可以理解为是原始类型与对象类型的进一步延伸，也同样是日常会被重度使用的语法。" 字面量类型 字面量类型主要包括字符串字面量类型、数字字面量类型、布尔字面量类型和对象字面量类型，它们可以直接作为类型标注： 没错，所谓的字面量类型，就是把一个「具体的值」作为一种类型。它代表着比原始类型更精确的类型，同时也是'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/typescript/literal-and-enum.html",relativePath:"frontend-knowledge/typescript/literal-and-enum.md",key:"v-36d0e289",path:"/frontend-knowledge/typescript/literal-and-enum/",headers:[{level:2,title:"字面量类型",slug:"字面量类型"},{level:3,title:"对象字面量类型",slug:"对象字面量类型"},{level:3,title:"字面量类型的使用",slug:"字面量类型的使用"},{level:2,title:"联合类型",slug:"联合类型"},{level:2,title:"枚举",slug:"枚举"},{level:3,title:"枚举值的递增",slug:"枚举值的递增"},{level:3,title:"数字枚举",slug:"数字枚举"},{level:3,title:"双向映射特性",slug:"双向映射特性"},{level:3,title:"常量枚举",slug:"常量枚举"}],readingTime:{minutes:4.56,words:1369},updateTime:"2022年10月27日 14:53",updateTimeStamp:1666853636e3,createTime:"2022年10月27日 14:53",createTimeStamp:1666853636e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"类型安全保护",frontmatter:{summary:'类型安全保护 所谓类型保护，就是在编写 TS 代码时通过一些语法来进一步地提升类型安全性。其中需要用到的就是类型查询操作符 typeof 和类型守卫。 类型查询操作符 TypeScript 中的 typeof 操作符有两种不同的功能： JS 中，用于检查变量类型，返回："string" / "number" / "object" / "undefined" ',meta:[{property:"og:url",content:"/frontend-knowledge/typescript/to-protect-type.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"类型安全保护"},{property:"og:description",content:'类型安全保护 所谓类型保护，就是在编写 TS 代码时通过一些语法来进一步地提升类型安全性。其中需要用到的就是类型查询操作符 typeof 和类型守卫。 类型查询操作符 TypeScript 中的 typeof 操作符有两种不同的功能： JS 中，用于检查变量类型，返回："string" / "number" / "object" / "undefined" '},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/typescript/to-protect-type.html",relativePath:"frontend-knowledge/typescript/to-protect-type.md",key:"v-729f9ffa",path:"/frontend-knowledge/typescript/to-protect-type/",headers:[{level:2,title:"类型查询操作符",slug:"类型查询操作符"},{level:2,title:"类型守卫",slug:"类型守卫"},{level:3,title:"产生背景",slug:"产生背景"},{level:3,title:"类型断言守卫",slug:"类型断言守卫"}],readingTime:{minutes:4,words:1199},updateTime:"2022年11月14日 11:20",updateTimeStamp:1668396035e3,createTime:"2022年11月11日 22:27",createTimeStamp:1668176861e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"字面量类型",frontmatter:{summary:"字面量类型 类型推断 在 TypeScript 中，类型标注声明是在变量之后（即类型后置），它不像 Java 语言一样，先声明变量的类型，再声明变量的名称。 使用类型标注后置的好处是编译器可以通过代码所在的上下文推导其对应的类型，无须再声明变量类型，示例如下： 在上述代码中，x1 的类型被推断为 number，将变量赋值给 number 类型的变量 x2 后",meta:[{property:"og:url",content:"/frontend-knowledge/typescript/literal.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"字面量类型"},{property:"og:description",content:"字面量类型 类型推断 在 TypeScript 中，类型标注声明是在变量之后（即类型后置），它不像 Java 语言一样，先声明变量的类型，再声明变量的名称。 使用类型标注后置的好处是编译器可以通过代码所在的上下文推导其对应的类型，无须再声明变量类型，示例如下： 在上述代码中，x1 的类型被推断为 number，将变量赋值给 number 类型的变量 x2 后"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/typescript/literal.html",relativePath:"frontend-knowledge/typescript/literal.md",key:"v-c49ec73a",path:"/frontend-knowledge/typescript/literal/",headers:[{level:2,title:"类型推断",slug:"类型推断"},{level:2,title:"上下文推断",slug:"上下文推断"},{level:2,title:"字面量类型",slug:"字面量类型-2"},{level:3,title:"介绍",slug:"介绍"},{level:3,title:"应用",slug:"应用"},{level:3,title:"字面量类型拓宽",slug:"字面量类型拓宽"},{level:3,title:"其他类型拓宽",slug:"其他类型拓宽"},{level:3,title:"类型缩小",slug:"类型缩小"}],readingTime:{minutes:6.64,words:1993},updateTime:"2022年4月12日 17:36",updateTimeStamp:164975621e4,createTime:"2022年4月12日 17:36",createTimeStamp:164975621e4,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"类型创建",frontmatter:{summary:"类型创建 所谓类型创建，就是基于已有类型，创建出新的类型。创建新类型需要用到的工具有类型别名、交叉类型、索引类型与映射类型。 类型别名 类型别名的作用主要是对一组类型或一个特定类型结构进行封装，以便于在其它地方进行复用。 语法是使用 type 关键字，例如： 工具类型 类型别名结合泛型，就成了工具类型。 工具类型能够接受泛型参数（就像函数的参数），然后内部逻",meta:[{property:"og:url",content:"/frontend-knowledge/typescript/to-create-type.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"类型创建"},{property:"og:description",content:"类型创建 所谓类型创建，就是基于已有类型，创建出新的类型。创建新类型需要用到的工具有类型别名、交叉类型、索引类型与映射类型。 类型别名 类型别名的作用主要是对一组类型或一个特定类型结构进行封装，以便于在其它地方进行复用。 语法是使用 type 关键字，例如： 工具类型 类型别名结合泛型，就成了工具类型。 工具类型能够接受泛型参数（就像函数的参数），然后内部逻"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/typescript/to-create-type.html",relativePath:"frontend-knowledge/typescript/to-create-type.md",key:"v-3d2f9041",path:"/frontend-knowledge/typescript/to-create-type/",headers:[{level:2,title:"类型别名",slug:"类型别名"},{level:3,title:"工具类型",slug:"工具类型"},{level:2,title:"联合类型与交叉类型",slug:"联合类型与交叉类型"},{level:2,title:"索引类型",slug:"索引类型"},{level:3,title:"索引签名类型",slug:"索引签名类型"},{level:3,title:"索引类型查询",slug:"索引类型查询"},{level:3,title:"索引类型访问",slug:"索引类型访问"},{level:2,title:"映射类型",slug:"映射类型"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:15.53,words:4658},updateTime:"2022年11月11日 22:26",updateTimeStamp:1668176816e3,createTime:"2022年11月11日 22:26",createTimeStamp:1668176816e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"类型守卫",frontmatter:{summary:"类型守卫 类型守卫是一种机制，在参数、值的类型是联合类型或枚举类型的时候，它通过触发类型缩小，来确保本次传入的参数、值在允许类型的范围内，并且根据具体的类型进行不同的业务处理。 如何区分联合类型 使用类型守卫来区分联合类型的不同成员时，常用的类型守卫包括 switch、字面量恒等、typeof、instanceof、in 和自定义类型守卫这几种。 switc",meta:[{property:"og:url",content:"/frontend-knowledge/typescript/type-guard.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"类型守卫"},{property:"og:description",content:"类型守卫 类型守卫是一种机制，在参数、值的类型是联合类型或枚举类型的时候，它通过触发类型缩小，来确保本次传入的参数、值在允许类型的范围内，并且根据具体的类型进行不同的业务处理。 如何区分联合类型 使用类型守卫来区分联合类型的不同成员时，常用的类型守卫包括 switch、字面量恒等、typeof、instanceof、in 和自定义类型守卫这几种。 switc"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/typescript/type-guard.html",relativePath:"frontend-knowledge/typescript/type-guard.md",key:"v-65707fe2",path:"/frontend-knowledge/typescript/type-guard/",headers:[{level:2,title:"如何区分联合类型",slug:"如何区分联合类型"},{level:3,title:"switch",slug:"switch"},{level:3,title:"字面量恒等",slug:"字面量恒等"},{level:3,title:"typeof",slug:"typeof"},{level:3,title:"instanceof",slug:"instanceof"},{level:3,title:"in",slug:"in"},{level:3,title:"自定义类型守卫",slug:"自定义类型守卫"},{level:2,title:"如何区分枚举类型",slug:"如何区分枚举类型"},{level:2,title:"失效的类型守卫",slug:"失效的类型守卫"}],readingTime:{minutes:5.07,words:1522},updateTime:"2022年4月13日 14:56",updateTimeStamp:1649832983e3,createTime:"2022年4月13日 14:56",createTimeStamp:1649832983e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"联合类型与交叉类型",frontmatter:{summary:"联合类型与交叉类型 前面介绍的基础类型、字面量类型、函数类型及接口类型，它们都是单一、原子的类型元素。在一些稍微复杂、实际编程场景中，我们还需要通过组合/结合单一、原子类型构造更复杂的类型，以此描述更复杂的数据和结构。于是引入了联合和交叉类型。 联合类型 联合类型表示取值可以为多种类型中的一种，通过 | 操作符分隔类型的语法来表示联合类型。 当 TypeSc",meta:[{property:"og:url",content:"/frontend-knowledge/typescript/union-and-intersection.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"联合类型与交叉类型"},{property:"og:description",content:"联合类型与交叉类型 前面介绍的基础类型、字面量类型、函数类型及接口类型，它们都是单一、原子的类型元素。在一些稍微复杂、实际编程场景中，我们还需要通过组合/结合单一、原子类型构造更复杂的类型，以此描述更复杂的数据和结构。于是引入了联合和交叉类型。 联合类型 联合类型表示取值可以为多种类型中的一种，通过 | 操作符分隔类型的语法来表示联合类型。 当 TypeSc"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/frontend-knowledge/typescript/union-and-intersection.html",relativePath:"frontend-knowledge/typescript/union-and-intersection.md",key:"v-20752c79",path:"/frontend-knowledge/typescript/union-and-intersection/",headers:[{level:2,title:"联合类型",slug:"联合类型"},{level:2,title:"交叉类型",slug:"交叉类型"},{level:3,title:"合并接口类型",slug:"合并接口类型"},{level:3,title:"合并联合类型",slug:"合并联合类型"},{level:2,title:"联合、交叉组合",slug:"联合、交叉组合"},{level:2,title:"类型缩减",slug:"类型缩减"},{level:3,title:"高级用法",slug:"高级用法"}],readingTime:{minutes:7.35,words:2205},updateTime:"2022年4月12日 17:36",updateTimeStamp:164975621e4,createTime:"2022年4月12日 17:36",createTimeStamp:164975621e4,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"数据结构与算法",frontmatter:{summary:"数据结构与算法 为什么要学习数据结构与算法（Why）： 我本科读的非科班，靠自学入的行，因此这块知识需要补齐。; 掌握了数据结构与算法，平时能有意识和能力写出性能更优的代码。; 长期来看，拥有算法思维能有效训练自己大脑的思考能力，对工作和生活都有益。; 现在大厂都喜欢考算法，这已经成了敲门砖。; 什么是数据结构与算法（What）： 从广义上讲，数据结构就是指",meta:[{property:"og:url",content:"/in-depth-learning/algorithm/"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"数据结构与算法"},{property:"og:description",content:"数据结构与算法 为什么要学习数据结构与算法（Why）： 我本科读的非科班，靠自学入的行，因此这块知识需要补齐。; 掌握了数据结构与算法，平时能有意识和能力写出性能更优的代码。; 长期来看，拥有算法思维能有效训练自己大脑的思考能力，对工作和生活都有益。; 现在大厂都喜欢考算法，这已经成了敲门砖。; 什么是数据结构与算法（What）： 从广义上讲，数据结构就是指"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/in-depth-learning/algorithm/",relativePath:"in-depth-learning/algorithm/README.md",key:"v-2f6665e0",path:"/in-depth-learning/algorithm/",readingTime:{minutes:2.64,words:791},updateTime:"2022年3月30日 14:40",updateTimeStamp:1648622443e3,createTime:"2021年11月19日 11:27",createTimeStamp:1637292423e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"更新日志",frontmatter:{sidebar:"auto",anchorDisplay:!1,summary:"更新日志 记录走过的每一步…… 前端知识 - HTML 2020.07.17 &emsp; 添加《HTML 基本结构》章节。; 2020.07.12 &emsp; 添加《语义类标签》章节。; 前端知识 - CSS 2020.11.01 &emsp; 添加《经典布局》章节。; 2020.10.28 &emsp; 添加《Flexbox 布局》章节。; 2020.",meta:[{property:"og:url",content:"/history/"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"更新日志"},{property:"og:description",content:"更新日志 记录走过的每一步…… 前端知识 - HTML 2020.07.17 &emsp; 添加《HTML 基本结构》章节。; 2020.07.12 &emsp; 添加《语义类标签》章节。; 前端知识 - CSS 2020.11.01 &emsp; 添加《经典布局》章节。; 2020.10.28 &emsp; 添加《Flexbox 布局》章节。; 2020."},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/history/",relativePath:"history/README.md",key:"v-1a4c311b",path:"/history/",headers:[{level:2,title:"前端知识 - HTML",slug:"前端知识-html"},{level:2,title:"前端知识 - CSS",slug:"前端知识-css"},{level:2,title:"前端知识 - JavaScript",slug:"前端知识-javascript"},{level:2,title:"前端知识 - TypeScript",slug:"前端知识-typescript"},{level:2,title:"工程化 - Vue.js",slug:"工程化-vue-js"},{level:2,title:"工程化 - React",slug:"工程化-react"},{level:2,title:"工程化 - Webpack",slug:"工程化-webpack"},{level:2,title:"后端知识 - Python",slug:"后端知识-python"},{level:2,title:"必知必会 - Nginx",slug:"必知必会-nginx"},{level:2,title:"深入学习 - 数据结构与算法",slug:"深入学习-数据结构与算法"},{level:2,title:"深入学习 - 源码阅读与学习",slug:"深入学习-源码阅读与学习"},{level:2,title:"手写系列 - JavaScript 手写函数",slug:"手写系列-javascript-手写函数"},{level:2,title:"面试相关",slug:"面试相关"},{level:2,title:"维护",slug:"维护"}],readingTime:{minutes:5.14,words:1541},updateTime:"2023年4月9日 14:19",updateTimeStamp:1681021149e3,createTime:"2020年8月8日 17:13",createTimeStamp:1596878038e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:121},{name:"winyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"数据结构之数组",frontmatter:{summary:"数据结构之数组 数组的定义 数组（Array）是一种线性表数据结构。它用一组连续的内存空间，来存储一组具有相同类型的数据。 线性表 线性表就是数据排成像一条线一样的结构。每个线性表上的数据最多只有前和后两个方向。 不仅是数组，链表、队列、栈等也是线性表结构。 与线性表相对立的概念是非线性表，比如二叉树、堆、图等。之所以叫非线性，是因为在非线性表中，数据之间并",meta:[{property:"og:url",content:"/in-depth-learning/algorithm/array.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"数据结构之数组"},{property:"og:description",content:"数据结构之数组 数组的定义 数组（Array）是一种线性表数据结构。它用一组连续的内存空间，来存储一组具有相同类型的数据。 线性表 线性表就是数据排成像一条线一样的结构。每个线性表上的数据最多只有前和后两个方向。 不仅是数组，链表、队列、栈等也是线性表结构。 与线性表相对立的概念是非线性表，比如二叉树、堆、图等。之所以叫非线性，是因为在非线性表中，数据之间并"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/in-depth-learning/algorithm/array.html",relativePath:"in-depth-learning/algorithm/array.md",key:"v-6a22c26e",path:"/in-depth-learning/algorithm/array/",headers:[{level:2,title:"数组的定义",slug:"数组的定义"},{level:3,title:"线性表",slug:"线性表"},{level:3,title:"随机访问",slug:"随机访问"},{level:2,title:"高效的查找操作",slug:"高效的查找操作"},{level:2,title:"低效的插入和删除操作",slug:"低效的插入和删除操作"},{level:3,title:"插入操作",slug:"插入操作"},{level:3,title:"删除操作",slug:"删除操作"},{level:2,title:"支持动态扩容的容器",slug:"支持动态扩容的容器"}],readingTime:{minutes:4.39,words:1316},updateTime:"2021年11月19日 11:27",updateTimeStamp:1637292423e3,createTime:"2021年11月19日 11:27",createTimeStamp:1637292423e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"复杂度分析",frontmatter:{summary:"复杂度分析 复杂度是什么 数据结构和算法解决的是如何让代码运行得更快，如何让代码更省存储空间。 因此需从执行时间和占用空间两个维度来评估数据结构和算法的性能，这两个维度的性能指标分别用时间复杂度和空间复杂度两个概念来描述，二者统称为复杂度。 复杂度表示法 复杂度描述的是算法执行时间（或占用空间）与数据规模的增长关系，通常采用大 O 表示法。 时间复杂度 算法",meta:[{property:"og:url",content:"/in-depth-learning/algorithm/complexity-analysis.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"复杂度分析"},{property:"og:description",content:"复杂度分析 复杂度是什么 数据结构和算法解决的是如何让代码运行得更快，如何让代码更省存储空间。 因此需从执行时间和占用空间两个维度来评估数据结构和算法的性能，这两个维度的性能指标分别用时间复杂度和空间复杂度两个概念来描述，二者统称为复杂度。 复杂度表示法 复杂度描述的是算法执行时间（或占用空间）与数据规模的增长关系，通常采用大 O 表示法。 时间复杂度 算法"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/in-depth-learning/algorithm/complexity-analysis.html",relativePath:"in-depth-learning/algorithm/complexity-analysis.md",key:"v-37752409",path:"/in-depth-learning/algorithm/complexity-analysis/",headers:[{level:2,title:"复杂度是什么",slug:"复杂度是什么"},{level:2,title:"复杂度表示法",slug:"复杂度表示法"},{level:2,title:"时间复杂度",slug:"时间复杂度"},{level:2,title:"时间复杂度分析",slug:"时间复杂度分析"},{level:3,title:"1）只关注循环执行次数最多的一段代码",slug:"_1-只关注循环执行次数最多的一段代码"},{level:3,title:"2）加法法则：总复杂度等于量级最大的那段代码的复杂度",slug:"_2-加法法则-总复杂度等于量级最大的那段代码的复杂度"},{level:3,title:"3）乘法法则：嵌套代码的复杂度等于嵌套内外代码复杂度的乘积",slug:"_3-乘法法则-嵌套代码的复杂度等于嵌套内外代码复杂度的乘积"},{level:2,title:"时间复杂度实例",slug:"时间复杂度实例"},{level:3,title:"1）O(1)",slug:"_1-o-1"},{level:3,title:"2）O(logn)",slug:"_2-o-logn"},{level:3,title:"3）O(nlogn)",slug:"_3-o-nlogn"},{level:3,title:"4）O(m+n)、O(m*n)",slug:"_4-o-m-n-、o-m-n"},{level:2,title:"空间复杂度",slug:"空间复杂度"}],readingTime:{minutes:8.47,words:2541},updateTime:"2021年11月19日 11:27",updateTimeStamp:1637292423e3,createTime:"2021年11月19日 11:27",createTimeStamp:1637292423e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"设计原则",frontmatter:{summary:"设计原则 何为设计 即按照哪一种思路或者标准来实现功能; 功能相同，可以有不同设计方案来实现; 伴随着需求增加，设计的作用才能体现出来; UNIX/LINUX 设计哲学 《UNIX/LINUX 设计哲学》这是一本书的名字，它里面讲了很多的设计准则。由于 UNIX/LINUX 是比较成功的操作系统，书的作者通过了解这两个操作系统，总结出了设计软件时应该遵循的 ",meta:[{property:"og:url",content:"/in-depth-learning/design-patterns/5-principles.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"设计原则"},{property:"og:description",content:"设计原则 何为设计 即按照哪一种思路或者标准来实现功能; 功能相同，可以有不同设计方案来实现; 伴随着需求增加，设计的作用才能体现出来; UNIX/LINUX 设计哲学 《UNIX/LINUX 设计哲学》这是一本书的名字，它里面讲了很多的设计准则。由于 UNIX/LINUX 是比较成功的操作系统，书的作者通过了解这两个操作系统，总结出了设计软件时应该遵循的 "},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/in-depth-learning/design-patterns/5-principles.html",relativePath:"in-depth-learning/design-patterns/5-principles.md",key:"v-63fe585f",path:"/in-depth-learning/design-patterns/5-principles/",headers:[{level:2,title:"何为设计",slug:"何为设计"},{level:2,title:"UNIX/LINUX 设计哲学",slug:"unix-linux-设计哲学"},{level:2,title:"五大设计原则：SOLID",slug:"五大设计原则-solid"},{level:3,title:"S - 单一职责原则（single）",slug:"s-单一职责原则-single"},{level:3,title:"O - 开放封闭原则（open）",slug:"o-开放封闭原则-open"},{level:3,title:"L - 李氏置换原则",slug:"l-李氏置换原则"},{level:3,title:"I - 接口独立原则",slug:"i-接口独立原则"},{level:3,title:"D - 依赖导致原则",slug:"d-依赖导致原则"}],readingTime:{minutes:4.4,words:1320},updateTime:"2022年3月20日 11:41",updateTimeStamp:16477477e5,createTime:"2022年3月20日 11:41",createTimeStamp:16477477e5,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"未完待续",frontmatter:{summary:"未完待续 知识点正在火速整理中",meta:[{property:"og:url",content:"/in-depth-learning/algorithm/to-be-continued.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"未完待续"},{property:"og:description",content:"未完待续 知识点正在火速整理中"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/in-depth-learning/algorithm/to-be-continued.html",relativePath:"in-depth-learning/algorithm/to-be-continued.md",key:"v-3eafe449",path:"/in-depth-learning/algorithm/to-be-continued/",headers:[{level:2,title:"知识点正在火速整理中",slug:"知识点正在火速整理中"}],readingTime:{minutes:.05,words:14},updateTime:"2021年11月19日 11:27",updateTimeStamp:1637292423e3,createTime:"2021年11月19日 11:27",createTimeStamp:1637292423e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"设计模式简介",frontmatter:{summary:'设计模式简介 一共有 23 种设计模式，它们分为三种类型。 " 对于前端开发来说，并不是所有设计模式都是适合 JavaScript 的，需要重点的是工厂模式、单例模式、观察者模式。" " " " 因此，对于一些不那么常用的模式，了解一下，知道其主要思想即可。下面加粗的是前端常用的设计模式，未加粗的是前端不常用的设计模式。" 创建型模式 创建型模式关注如何创建',meta:[{property:"og:url",content:"/in-depth-learning/design-patterns/23-patterns.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"设计模式简介"},{property:"og:description",content:'设计模式简介 一共有 23 种设计模式，它们分为三种类型。 " 对于前端开发来说，并不是所有设计模式都是适合 JavaScript 的，需要重点的是工厂模式、单例模式、观察者模式。" " " " 因此，对于一些不那么常用的模式，了解一下，知道其主要思想即可。下面加粗的是前端常用的设计模式，未加粗的是前端不常用的设计模式。" 创建型模式 创建型模式关注如何创建'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/in-depth-learning/design-patterns/23-patterns.html",relativePath:"in-depth-learning/design-patterns/23-patterns.md",key:"v-5acdc02e",path:"/in-depth-learning/design-patterns/23-patterns/",headers:[{level:2,title:"创建型模式",slug:"创建型模式"},{level:2,title:"结构型模式",slug:"结构型模式"},{level:2,title:"行为型模式",slug:"行为型模式"}],readingTime:{minutes:3.51,words:1052},updateTime:"2022年3月30日 23:28",updateTimeStamp:1648654138e3,createTime:"2022年3月20日 11:41",createTimeStamp:16477477e5,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:7}]},{title:"抽象工厂模式",frontmatter:{summary:"抽象工厂模式 介绍 工厂模式（Factory Pattern），根据输入的不同返回不同类的实例，一般用来创建同一类对象。工厂方式的主要思想是将对象的创建与对象的实现分离。 抽象工厂模式（Abstract Factory Pattern），通过对类的工厂抽象使其业务用于对产品类簇的创建，而不是负责创建某一类产品的实例。关键在于使用抽象类制定了实例的结构，调用者",meta:[{property:"og:url",content:"/in-depth-learning/design-patterns/abstract-factory-pattern.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"抽象工厂模式"},{property:"og:description",content:"抽象工厂模式 介绍 工厂模式（Factory Pattern），根据输入的不同返回不同类的实例，一般用来创建同一类对象。工厂方式的主要思想是将对象的创建与对象的实现分离。 抽象工厂模式（Abstract Factory Pattern），通过对类的工厂抽象使其业务用于对产品类簇的创建，而不是负责创建某一类产品的实例。关键在于使用抽象类制定了实例的结构，调用者"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/in-depth-learning/design-patterns/abstract-factory-pattern.html",relativePath:"in-depth-learning/design-patterns/abstract-factory-pattern.md",key:"v-40447ab9",path:"/in-depth-learning/design-patterns/abstract-factory-pattern/",headers:[{level:2,title:"介绍",slug:"介绍"},{level:2,title:"通俗的示例",slug:"通俗的示例"},{level:2,title:"抽象工厂模式的通用实现",slug:"抽象工厂模式的通用实现"},{level:2,title:"设计原则验证",slug:"设计原则验证"},{level:2,title:"抽象工厂模式的优缺点",slug:"抽象工厂模式的优缺点"},{level:2,title:"抽象工厂模式的适用场景",slug:"抽象工厂模式的适用场景"},{level:2,title:"其他相关模式",slug:"其他相关模式"},{level:3,title:"抽象工厂模式与工厂模式",slug:"抽象工厂模式与工厂模式"}],readingTime:{minutes:5.66,words:1699},updateTime:"2022年3月30日 22:38",updateTimeStamp:1648651137e3,createTime:"2022年3月30日 16:33",createTimeStamp:1648629212e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"数据结构之链表",frontmatter:{summary:"数据结构之链表 链表的定义 我们知道，数组需要一块连续的内存空间来存储，对内存的要求比较高。如果我们申请一个 100MB 大小的数组，当内存中没有连续的、足够大的存储空间时，即便内存的剩余总可用空间大于 100MB，仍然会申请失败。 而链表（Linked List）恰恰相反，它并不需要一块连续的内存空间，它通过「指针」将一组零散的内存块串联起来使用，所以如果",meta:[{property:"og:url",content:"/in-depth-learning/algorithm/linked-list.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"数据结构之链表"},{property:"og:description",content:"数据结构之链表 链表的定义 我们知道，数组需要一块连续的内存空间来存储，对内存的要求比较高。如果我们申请一个 100MB 大小的数组，当内存中没有连续的、足够大的存储空间时，即便内存的剩余总可用空间大于 100MB，仍然会申请失败。 而链表（Linked List）恰恰相反，它并不需要一块连续的内存空间，它通过「指针」将一组零散的内存块串联起来使用，所以如果"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/in-depth-learning/algorithm/linked-list.html",relativePath:"in-depth-learning/algorithm/linked-list.md",key:"v-33e88869",path:"/in-depth-learning/algorithm/linked-list/",headers:[{level:2,title:"链表的定义",slug:"链表的定义"},{level:2,title:"链表的类型",slug:"链表的类型"},{level:3,title:"单链表",slug:"单链表"},{level:3,title:"循环链表",slug:"循环链表"},{level:3,title:"双向链表",slug:"双向链表"},{level:3,title:"双向循环链表",slug:"双向循环链表"},{level:2,title:"链表 VS 数组",slug:"链表-vs-数组"}],readingTime:{minutes:19.64,words:5891},updateTime:"2022年9月1日 14:33",updateTimeStamp:1662013996e3,createTime:"2021年11月19日 11:27",createTimeStamp:1637292423e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"适配器模式",frontmatter:{summary:"适配器模式 介绍 适配器模式（Adapter Pattern）又称包装器模式，将一个类（对象）的接口（方法、属性）转化为用户需要的另一个接口，解决类（对象）之间接口不兼容的问题。 主要功能是进行转换匹配，目的是复用已有的功能，而不是来实现新的接口。也就是说，如果访问者需要的功能应该是已经实现好了的，就不需要适配器模式来实现。适配器模式主要是负责把不兼容的接口",meta:[{property:"og:url",content:"/in-depth-learning/design-patterns/adapter-pattern.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"适配器模式"},{property:"og:description",content:"适配器模式 介绍 适配器模式（Adapter Pattern）又称包装器模式，将一个类（对象）的接口（方法、属性）转化为用户需要的另一个接口，解决类（对象）之间接口不兼容的问题。 主要功能是进行转换匹配，目的是复用已有的功能，而不是来实现新的接口。也就是说，如果访问者需要的功能应该是已经实现好了的，就不需要适配器模式来实现。适配器模式主要是负责把不兼容的接口"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/in-depth-learning/design-patterns/adapter-pattern.html",relativePath:"in-depth-learning/design-patterns/adapter-pattern.md",key:"v-429ee0ee",path:"/in-depth-learning/design-patterns/adapter-pattern/",headers:[{level:2,title:"介绍",slug:"介绍"},{level:2,title:"通俗的示例",slug:"通俗的示例"},{level:2,title:"适配器模式的通用实现",slug:"适配器模式的通用实现"},{level:2,title:"适配器模式的实际应用",slug:"适配器模式的实际应用"},{level:3,title:"jQuery.ajax 适配 Axios",slug:"jquery-ajax-适配-axios"},{level:3,title:"业务数据适配",slug:"业务数据适配"},{level:3,title:"Vue 计算属性",slug:"vue-计算属性"},{level:3,title:"Axios 源码中的适配器模式",slug:"axios-源码中的适配器模式"},{level:2,title:"设计原则验证",slug:"设计原则验证"},{level:2,title:"适配器模式的优缺点",slug:"适配器模式的优缺点"},{level:2,title:"适配器模式的适用场景",slug:"适配器模式的适用场景"},{level:2,title:"其他相关模式",slug:"其他相关模式"},{level:3,title:"适配器模式与代理模式",slug:"适配器模式与代理模式"},{level:3,title:"适配器模式、装饰者模式与代理模式",slug:"适配器模式、装饰者模式与代理模式"}],readingTime:{minutes:8.65,words:2594},updateTime:"2022年5月26日 17:33",updateTimeStamp:1653557603e3,createTime:"2022年3月22日 23:19",createTimeStamp:164796236e4,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:4}]},{title:"桥接模式",frontmatter:{summary:"桥接模式 介绍 桥接模式（Bridge Pattern）又称桥梁模式，将抽象部分与它的实现部分分离，使它们都可以独立地变化。使用组合关系代替继承关系，降低抽象和实现两者间的耦合度。 抽象部分和实现部分可能不太好理解，举个例子，香蕉、苹果、西瓜，它们共同的抽象部分就是水果，可以吃，实现部分就是不同的水果实体。再比如黑色手提包、红色钱包、蓝色公文包，它们共同的抽",meta:[{property:"og:url",content:"/in-depth-learning/design-patterns/bridge-pattern.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"桥接模式"},{property:"og:description",content:"桥接模式 介绍 桥接模式（Bridge Pattern）又称桥梁模式，将抽象部分与它的实现部分分离，使它们都可以独立地变化。使用组合关系代替继承关系，降低抽象和实现两者间的耦合度。 抽象部分和实现部分可能不太好理解，举个例子，香蕉、苹果、西瓜，它们共同的抽象部分就是水果，可以吃，实现部分就是不同的水果实体。再比如黑色手提包、红色钱包、蓝色公文包，它们共同的抽"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/in-depth-learning/design-patterns/bridge-pattern.html",relativePath:"in-depth-learning/design-patterns/bridge-pattern.md",key:"v-7756c8e5",path:"/in-depth-learning/design-patterns/bridge-pattern/",headers:[{level:2,title:"介绍",slug:"介绍"},{level:2,title:"通俗的示例",slug:"通俗的示例"},{level:2,title:"桥接模式的通用实现",slug:"桥接模式的通用实现"},{level:2,title:"桥接模式的原理",slug:"桥接模式的原理"},{level:2,title:"桥接模式的实际应用",slug:"桥接模式的实际应用"},{level:2,title:"设计原则验证",slug:"设计原则验证"},{level:2,title:"桥接模式的优缺点",slug:"桥接模式的优缺点"},{level:2,title:"桥接模式的适用场景",slug:"桥接模式的适用场景"},{level:2,title:"其他相关模式",slug:"其他相关模式"},{level:3,title:"桥接模式和策略模式",slug:"桥接模式和策略模式"},{level:3,title:"桥接模式与模板方法模式",slug:"桥接模式与模板方法模式"},{level:3,title:"桥接模式与抽象工厂模式",slug:"桥接模式与抽象工厂模式"}],readingTime:{minutes:6.45,words:1936},updateTime:"2022年3月28日 18:10",updateTimeStamp:1648462203e3,createTime:"2022年3月28日 18:10",createTimeStamp:1648462203e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"建造者模式",frontmatter:{summary:"建造者模式 介绍 建造者模式（Builder Pattern）又称生成器模式，分步构建一个复杂对象，并允许按步骤构造。同样的构建过程可以采用不同的表示，将一个复杂对象的构建层与其表示层分离。 在工厂模式中，创建的结果都是一个完整的个体，我们对创建的过程并不关心，只需了解创建的结果。而在建造者模式中，我们关心的是对象的创建过程，因此我们通常将创建的复杂对象的模",meta:[{property:"og:url",content:"/in-depth-learning/design-patterns/builder-pattern.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"建造者模式"},{property:"og:description",content:"建造者模式 介绍 建造者模式（Builder Pattern）又称生成器模式，分步构建一个复杂对象，并允许按步骤构造。同样的构建过程可以采用不同的表示，将一个复杂对象的构建层与其表示层分离。 在工厂模式中，创建的结果都是一个完整的个体，我们对创建的过程并不关心，只需了解创建的结果。而在建造者模式中，我们关心的是对象的创建过程，因此我们通常将创建的复杂对象的模"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/in-depth-learning/design-patterns/builder-pattern.html",relativePath:"in-depth-learning/design-patterns/builder-pattern.md",key:"v-739cafee",path:"/in-depth-learning/design-patterns/builder-pattern/",headers:[{level:2,title:"介绍",slug:"介绍"},{level:2,title:"通俗的示例",slug:"通俗的示例"},{level:2,title:"建造者模式的通用实现",slug:"建造者模式的通用实现"},{level:2,title:"建造者模式的实际应用",slug:"建造者模式的实际应用"},{level:3,title:"重构一个具有很多参数的构造函数",slug:"重构一个具有很多参数的构造函数"},{level:3,title:"重构 React 的书写形式",slug:"重构-react-的书写形式"},{level:2,title:"设计原则验证",slug:"设计原则验证"},{level:2,title:"建造者模式的优缺点",slug:"建造者模式的优缺点"},{level:2,title:"建造者模式的适用场景",slug:"建造者模式的适用场景"},{level:2,title:"其他相关模式",slug:"其他相关模式"},{level:3,title:"建造者模式与工厂模式",slug:"建造者模式与工厂模式"},{level:3,title:"建造者模式与模版方法模式",slug:"建造者模式与模版方法模式"}],readingTime:{minutes:8.45,words:2535},updateTime:"2022年3月30日 23:28",updateTimeStamp:1648654138e3,createTime:"2022年3月30日 23:28",createTimeStamp:1648654138e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"设计模式",frontmatter:{summary:"设计模式 为什么要学习设计模式（Why）： 我本科读的非科班，靠自学入的行，因此这块知识需要补齐。; 对于项目技术负责人来说，设计能力是必要基础。; 从写好代码，到做好设计，设计模式是必经之路。; 现在很多框架的源码中大量运用了各种设计模式，想要读懂框架源码，这是前置条件。; 中高级开发工程师的面试也会考察设计能力。; 怎么学设计模式（How）： 设计模式拆",meta:[{property:"og:url",content:"/in-depth-learning/design-patterns/"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"设计模式"},{property:"og:description",content:"设计模式 为什么要学习设计模式（Why）： 我本科读的非科班，靠自学入的行，因此这块知识需要补齐。; 对于项目技术负责人来说，设计能力是必要基础。; 从写好代码，到做好设计，设计模式是必经之路。; 现在很多框架的源码中大量运用了各种设计模式，想要读懂框架源码，这是前置条件。; 中高级开发工程师的面试也会考察设计能力。; 怎么学设计模式（How）： 设计模式拆"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/in-depth-learning/design-patterns/",relativePath:"in-depth-learning/design-patterns/README.md",key:"v-00ab83ec",path:"/in-depth-learning/design-patterns/",readingTime:{minutes:2.55,words:766},updateTime:"2022年3月30日 14:40",updateTimeStamp:1648622443e3,createTime:"2022年3月18日 22:11",createTimeStamp:164761267e4,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:4}]},{title:"职责链模式",frontmatter:{summary:"职责链模式 介绍 职责链模式（Chain of Responsibility Pattern）就是在一步操作可能分为多个职责角色来完成时，把这些角色都分开，然后用一个链串起来，将发起者和各个处理者进行隔离（各个处理者之间也相互隔离）。 通俗的示例 这里举个请假的例子： 你需要请两天假。首先跟你的小组领导提了一句，小领导说不行呐我只能批半天假，建议找部门经理。",meta:[{property:"og:url",content:"/in-depth-learning/design-patterns/chain-of-responsibility-pattern.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"职责链模式"},{property:"og:description",content:"职责链模式 介绍 职责链模式（Chain of Responsibility Pattern）就是在一步操作可能分为多个职责角色来完成时，把这些角色都分开，然后用一个链串起来，将发起者和各个处理者进行隔离（各个处理者之间也相互隔离）。 通俗的示例 这里举个请假的例子： 你需要请两天假。首先跟你的小组领导提了一句，小领导说不行呐我只能批半天假，建议找部门经理。"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/in-depth-learning/design-patterns/chain-of-responsibility-pattern.html",relativePath:"in-depth-learning/design-patterns/chain-of-responsibility-pattern.md",key:"v-7a02cc2e",path:"/in-depth-learning/design-patterns/chain-of-responsibility-pattern/",headers:[{level:2,title:"介绍",slug:"介绍"},{level:2,title:"通俗的示例",slug:"通俗的示例"},{level:2,title:"职责链模式的通用实现",slug:"职责链模式的通用实现"},{level:2,title:"职责链模式的原理",slug:"职责链模式的原理"},{level:2,title:"设计原则验证",slug:"设计原则验证"},{level:2,title:"职责链模式的优缺点",slug:"职责链模式的优缺点"},{level:2,title:"职责链模式的适用场景",slug:"职责链模式的适用场景"},{level:2,title:"其他相关模式",slug:"其他相关模式"},{level:3,title:"职责链模式与组合模式",slug:"职责链模式与组合模式"},{level:3,title:"职责链模式与装饰器模式",slug:"职责链模式与装饰器模式"}],readingTime:{minutes:8.46,words:2538},updateTime:"2022年3月30日 13:39",updateTimeStamp:1648618748e3,createTime:"2022年3月29日 17:35",createTimeStamp:1648546515e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"组合模式",frontmatter:{summary:"组合模式 介绍 组合模式（Composite Pattern）又叫整体-部分模式，它允许你将对象组合成树形结构来表现整体-部分层次结构，让使用者可以以一致的方式处理组合对象以及部分对象。 通俗的示例 电脑里的文件目录结构，文件夹下面可以有子文件夹，也可以有文件，子文件夹下面还可以有文件夹和文件，以此类推，共同组成了一个文件树，结构如下： 文件夹是树形结构的容",meta:[{property:"og:url",content:"/in-depth-learning/design-patterns/composite-pattern.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"组合模式"},{property:"og:description",content:"组合模式 介绍 组合模式（Composite Pattern）又叫整体-部分模式，它允许你将对象组合成树形结构来表现整体-部分层次结构，让使用者可以以一致的方式处理组合对象以及部分对象。 通俗的示例 电脑里的文件目录结构，文件夹下面可以有子文件夹，也可以有文件，子文件夹下面还可以有文件夹和文件，以此类推，共同组成了一个文件树，结构如下： 文件夹是树形结构的容"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/in-depth-learning/design-patterns/composite-pattern.html",relativePath:"in-depth-learning/design-patterns/composite-pattern.md",key:"v-672138ee",path:"/in-depth-learning/design-patterns/composite-pattern/",headers:[{level:2,title:"介绍",slug:"介绍"},{level:2,title:"通俗的示例",slug:"通俗的示例"},{level:2,title:"组合模式的通用实现",slug:"组合模式的通用实现"},{level:2,title:"组合模式的概念",slug:"组合模式的概念"},{level:2,title:"组合模式的实际应用",slug:"组合模式的实际应用"},{level:2,title:"设计原则验证",slug:"设计原则验证"},{level:2,title:"组合模式的优缺点",slug:"组合模式的优缺点"},{level:2,title:"组合模式的适用场景",slug:"组合模式的适用场景"},{level:2,title:"其他相关模式",slug:"其他相关模式"},{level:3,title:"组合模式和职责链模式",slug:"组合模式和职责链模式"},{level:3,title:"组合模式和迭代器模式",slug:"组合模式和迭代器模式"},{level:3,title:"组合模式和命令模式",slug:"组合模式和命令模式"}],readingTime:{minutes:7.71,words:2314},updateTime:"2022年3月30日 13:39",updateTimeStamp:1648618748e3,createTime:"2022年3月28日 21:31",createTimeStamp:1648474266e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"装饰器模式",frontmatter:{summary:"装饰器模式 介绍 装饰器模式（Decorator Pattern）又称装饰者模式，在不改变原对象的基础上，通过对其添加属性或方法来进行包装拓展，使得原有对象可以动态具有更多功能。 本质是功能动态组合，即动态地给一个对象添加额外的职责，就增加功能角度来看，使用装饰器模式比用继承更为灵活。好处是有效地把对象的核心职责和装饰功能区分开，并且通过动态增删装饰去除目标",meta:[{property:"og:url",content:"/in-depth-learning/design-patterns/decorator-pattern.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"装饰器模式"},{property:"og:description",content:"装饰器模式 介绍 装饰器模式（Decorator Pattern）又称装饰者模式，在不改变原对象的基础上，通过对其添加属性或方法来进行包装拓展，使得原有对象可以动态具有更多功能。 本质是功能动态组合，即动态地给一个对象添加额外的职责，就增加功能角度来看，使用装饰器模式比用继承更为灵活。好处是有效地把对象的核心职责和装饰功能区分开，并且通过动态增删装饰去除目标"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/in-depth-learning/design-patterns/decorator-pattern.html",relativePath:"in-depth-learning/design-patterns/decorator-pattern.md",key:"v-652fae09",path:"/in-depth-learning/design-patterns/decorator-pattern/",headers:[{level:2,title:"介绍",slug:"介绍"},{level:2,title:"通俗的示例",slug:"通俗的示例"},{level:2,title:"装饰器模式的通用实现",slug:"装饰器模式的通用实现"},{level:2,title:"装饰器模式的实际应用",slug:"装饰器模式的实际应用"},{level:3,title:"给浏览器事件添加新功能",slug:"给浏览器事件添加新功能"},{level:3,title:"TypeScript 中的装饰器",slug:"typescript-中的装饰器"},{level:2,title:"设计原则验证",slug:"设计原则验证"},{level:2,title:"装饰器模式的优缺点",slug:"装饰器模式的优缺点"},{level:2,title:"装饰器模式的适用场景",slug:"装饰器模式的适用场景"},{level:2,title:"其他相关模式",slug:"其他相关模式"},{level:3,title:"装饰器模式与适配器模式",slug:"装饰器模式与适配器模式"},{level:3,title:"装饰器模式与组合模式",slug:"装饰器模式与组合模式"},{level:3,title:"装饰器模式与策略模式",slug:"装饰器模式与策略模式"}],readingTime:{minutes:7.76,words:2328},updateTime:"2022年4月10日 18:08",updateTimeStamp:1649585305e3,createTime:"2022年3月24日 21:58",createTimeStamp:1648130335e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:5}]},{title:"外观模式",frontmatter:{summary:"外观模式 介绍 外观模式（Facade Pattern）又叫门面模式，它用于为子系统中的一组接口提供一个高层接口，使用者使用这个高层接口。外观模式让外界减少与子系统内多个模块的直接交互，从而减少耦合，让外界可以更轻松地使用子系统。本质是封装交互，简化调用。 外观模式在源码中使用很多，具体可以参考后文中源码阅读部分。 通俗的示例 比如常见的空调、冰箱、洗衣机，",meta:[{property:"og:url",content:"/in-depth-learning/design-patterns/facade-pattern.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"外观模式"},{property:"og:description",content:"外观模式 介绍 外观模式（Facade Pattern）又叫门面模式，它用于为子系统中的一组接口提供一个高层接口，使用者使用这个高层接口。外观模式让外界减少与子系统内多个模块的直接交互，从而减少耦合，让外界可以更轻松地使用子系统。本质是封装交互，简化调用。 外观模式在源码中使用很多，具体可以参考后文中源码阅读部分。 通俗的示例 比如常见的空调、冰箱、洗衣机，"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/in-depth-learning/design-patterns/facade-pattern.html",relativePath:"in-depth-learning/design-patterns/facade-pattern.md",key:"v-814446fa",path:"/in-depth-learning/design-patterns/facade-pattern/",headers:[{level:2,title:"介绍",slug:"介绍"},{level:2,title:"通俗的示例",slug:"通俗的示例"},{level:2,title:"外观模式的通用实现",slug:"外观模式的通用实现"},{level:2,title:"外观模式的实际应用",slug:"外观模式的实际应用"},{level:3,title:"函数参数重载",slug:"函数参数重载"},{level:3,title:"抹平浏览器兼容性问题",slug:"抹平浏览器兼容性问题"},{level:3,title:"Vue 源码中的函数参数重载",slug:"vue-源码中的函数参数重载"},{level:3,title:"Lodash 源码中的函数参数重载",slug:"lodash-源码中的函数参数重载"},{level:3,title:"jQuery 源码中的函数参数重载",slug:"jquery-源码中的函数参数重载"},{level:3,title:"jQuery 源码中的外观模式",slug:"jquery-源码中的外观模式"},{level:3,title:"Axios 源码中的外观模式",slug:"axios-源码中的外观模式"},{level:2,title:"设计原则验证",slug:"设计原则验证"},{level:2,title:"外观模式的优缺点",slug:"外观模式的优缺点"},{level:2,title:"外观模式的适用场景",slug:"外观模式的适用场景"},{level:2,title:"其他相关模式",slug:"其他相关模式"},{level:3,title:"外观模式与中介者模式",slug:"外观模式与中介者模式"},{level:3,title:"外观模式与单例模式",slug:"外观模式与单例模式"}],readingTime:{minutes:10.12,words:3036},updateTime:"2022年3月26日 14:53",updateTimeStamp:1648277634e3,createTime:"2022年3月26日 14:53",createTimeStamp:1648277634e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"享元模式",frontmatter:{summary:"享元模式 介绍 享元模式（Flyweight Pattern）运用共享技术来有效地支持大量细粒度对象的复用，以减少创建的对象的数量。 享元模式的主要思想是共享细粒度对象，也就是说如果系统中存在多个相同的对象，那么只需共享一份就可以了，不必每个都去实例化每一个对象，这样来精简内存资源，提升性能和效率。 简单来说， 共享内存（主要考虑内存，而非效率）; 相同的数",meta:[{property:"og:url",content:"/in-depth-learning/design-patterns/flyweight-pattern.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"享元模式"},{property:"og:description",content:"享元模式 介绍 享元模式（Flyweight Pattern）运用共享技术来有效地支持大量细粒度对象的复用，以减少创建的对象的数量。 享元模式的主要思想是共享细粒度对象，也就是说如果系统中存在多个相同的对象，那么只需共享一份就可以了，不必每个都去实例化每一个对象，这样来精简内存资源，提升性能和效率。 简单来说， 共享内存（主要考虑内存，而非效率）; 相同的数"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/in-depth-learning/design-patterns/flyweight-pattern.html",relativePath:"in-depth-learning/design-patterns/flyweight-pattern.md",key:"v-5aa12c09",path:"/in-depth-learning/design-patterns/flyweight-pattern/",headers:[{level:2,title:"介绍",slug:"介绍"},{level:2,title:"通俗的示例",slug:"通俗的示例"},{level:2,title:"享元模式的通用实现",slug:"享元模式的通用实现"},{level:2,title:"享元模式改进",slug:"享元模式改进"},{level:2,title:"资源池",slug:"资源池"},{level:3,title:"线程池",slug:"线程池"},{level:3,title:"缓存",slug:"缓存"},{level:3,title:"连接池",slug:"连接池"},{level:3,title:"字符常量池",slug:"字符常量池"},{level:2,title:"设计原则验证",slug:"设计原则验证"},{level:2,title:"享元模式的优缺点",slug:"享元模式的优缺点"},{level:2,title:"享元模式的适用场景",slug:"享元模式的适用场景"},{level:2,title:"其他相关模式",slug:"其他相关模式"},{level:3,title:"享元模式和工厂模式、单例模式",slug:"享元模式和工厂模式、单例模式"},{level:3,title:"享元模式和组合模式",slug:"享元模式和组合模式"},{level:3,title:"享元模式和策略模式",slug:"享元模式和策略模式"}],readingTime:{minutes:17.46,words:5238},updateTime:"2022年3月30日 10:59",updateTimeStamp:1648609148e3,createTime:"2022年3月28日 22:34",createTimeStamp:1648478068e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"命令模式",frontmatter:{summary:"命令模式 介绍 命令模式（Command Pattern）又称事务模式，将请求封装成对象，将命令的发送者和接受者解耦。本质上是对方法调用的封装。 通过封装方法调用，也可以做一些有意思的事，例如记录日志，或者重复使用这些封装来实现撤销（undo）、重做（redo）操作。 通俗的示例 比较经典的例子是餐馆订餐，客人需要向厨师发送请求，但是不知道这些厨师的联系方式",meta:[{property:"og:url",content:"/in-depth-learning/design-patterns/command-pattern.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"命令模式"},{property:"og:description",content:"命令模式 介绍 命令模式（Command Pattern）又称事务模式，将请求封装成对象，将命令的发送者和接受者解耦。本质上是对方法调用的封装。 通过封装方法调用，也可以做一些有意思的事，例如记录日志，或者重复使用这些封装来实现撤销（undo）、重做（redo）操作。 通俗的示例 比较经典的例子是餐馆订餐，客人需要向厨师发送请求，但是不知道这些厨师的联系方式"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/in-depth-learning/design-patterns/command-pattern.html",relativePath:"in-depth-learning/design-patterns/command-pattern.md",key:"v-e2540bee",path:"/in-depth-learning/design-patterns/command-pattern/",headers:[{level:2,title:"介绍",slug:"介绍"},{level:2,title:"通俗的示例",slug:"通俗的示例"},{level:2,title:"命令模式的通用实现",slug:"命令模式的通用实现"},{level:3,title:"不使用命令模式",slug:"不使用命令模式"},{level:3,title:"使用命令模式",slug:"使用命令模式"},{level:3,title:"命令模式升级",slug:"命令模式升级"},{level:2,title:"设计原则验证",slug:"设计原则验证"},{level:2,title:"命令模式的优缺点",slug:"命令模式的优缺点"},{level:2,title:"命令模式的适用场景",slug:"命令模式的适用场景"},{level:2,title:"其他相关模式",slug:"其他相关模式"},{level:3,title:"命令模式与职责链模式",slug:"命令模式与职责链模式"},{level:3,title:"命令模式与组合模式",slug:"命令模式与组合模式"},{level:3,title:"命令模式与工厂模式",slug:"命令模式与工厂模式"}],readingTime:{minutes:8.72,words:2616},updateTime:"2022年3月29日 17:54",updateTimeStamp:1648547693e3,createTime:"2022年3月29日 17:54",createTimeStamp:1648547693e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"迭代器模式",frontmatter:{summary:"迭代器模式 介绍 迭代器模式（Iterator Pattern）用于顺序地访问聚合对象内部的元素，又无需知道对象内部结构。使用了迭代器之后，使用者不需要关心对象的内部构造，就可以按序访问其中的每个元素。 通俗的示例 银行里的点钞机就是一个迭代器，放入点钞机的钞票里有不同版次的人民币，每张钞票的冠字号也不一样，但当一沓钞票被放入点钞机中，使用者并不关心这些差别",meta:[{property:"og:url",content:"/in-depth-learning/design-patterns/iterator-pattern.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"迭代器模式"},{property:"og:description",content:"迭代器模式 介绍 迭代器模式（Iterator Pattern）用于顺序地访问聚合对象内部的元素，又无需知道对象内部结构。使用了迭代器之后，使用者不需要关心对象的内部构造，就可以按序访问其中的每个元素。 通俗的示例 银行里的点钞机就是一个迭代器，放入点钞机的钞票里有不同版次的人民币，每张钞票的冠字号也不一样，但当一沓钞票被放入点钞机中，使用者并不关心这些差别"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/in-depth-learning/design-patterns/iterator-pattern.html",relativePath:"in-depth-learning/design-patterns/iterator-pattern.md",key:"v-b03316ca",path:"/in-depth-learning/design-patterns/iterator-pattern/",headers:[{level:2,title:"介绍",slug:"介绍"},{level:2,title:"通俗的示例",slug:"通俗的示例"},{level:2,title:"JS 中迭代器的实现",slug:"js-中迭代器的实现"},{level:3,title:"jQuery 源码中迭代器实现",slug:"jquery-源码中迭代器实现"},{level:3,title:"JavaScript 原生支持",slug:"javascript-原生支持"},{level:3,title:"ES6 中的迭代器",slug:"es6-中的迭代器"},{level:2,title:"迭代器模式总结",slug:"迭代器模式总结"}],readingTime:{minutes:5.09,words:1526},updateTime:"2022年3月27日 14:40",updateTimeStamp:1648363249e3,createTime:"2022年3月27日 14:40",createTimeStamp:1648363249e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"中介者模式",frontmatter:{summary:"中介者模式 介绍 中介者模式（Mediator Pattern）又称调停模式，使得各对象不用显式地相互引用，将对象与对象之间紧密的耦合关系变得松散，从而可以独立地改变他们。核心是多个对象之间复杂交互的封装。 根据最少知识原则，一个对象应该尽量少地了解其他对象。如果对象之间耦合性太高，改动一个对象则会影响到很多其他对象，可维护性差。复杂的系统，对象之间的耦合关",meta:[{property:"og:url",content:"/in-depth-learning/design-patterns/mediator-pattern.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"中介者模式"},{property:"og:description",content:"中介者模式 介绍 中介者模式（Mediator Pattern）又称调停模式，使得各对象不用显式地相互引用，将对象与对象之间紧密的耦合关系变得松散，从而可以独立地改变他们。核心是多个对象之间复杂交互的封装。 根据最少知识原则，一个对象应该尽量少地了解其他对象。如果对象之间耦合性太高，改动一个对象则会影响到很多其他对象，可维护性差。复杂的系统，对象之间的耦合关"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/in-depth-learning/design-patterns/mediator-pattern.html",relativePath:"in-depth-learning/design-patterns/mediator-pattern.md",key:"v-77713591",path:"/in-depth-learning/design-patterns/mediator-pattern/",headers:[{level:2,title:"介绍",slug:"介绍"},{level:2,title:"通俗的示例",slug:"通俗的示例"},{level:2,title:"中介者模式的通用实现",slug:"中介者模式的通用实现"},{level:2,title:"设计原则验证",slug:"设计原则验证"},{level:2,title:"中介者模式的优缺点",slug:"中介者模式的优缺点"},{level:2,title:"中介者模式的适用场景",slug:"中介者模式的适用场景"},{level:2,title:"其他相关模式",slug:"其他相关模式"},{level:3,title:"中介者模式和外观模式",slug:"中介者模式和外观模式"},{level:3,title:"中介者模式与观察者模式",slug:"中介者模式与观察者模式"},{level:3,title:"中介者模式与代理模式",slug:"中介者模式与代理模式"}],readingTime:{minutes:10.5,words:3149},updateTime:"2022年3月30日 13:39",updateTimeStamp:1648618748e3,createTime:"2022年3月30日 13:39",createTimeStamp:1648618748e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"工厂模式",frontmatter:{summary:'工厂模式 " 此处介绍的工厂模式是基于前端场景下的设计模式应用，因此会与传统的设计模式有所区别，主要体现在过程会更简化。" 介绍 工厂模式（Factory Pattern），根据不同的输入返回不同类的实例，一般用来创建同一类对象。工厂方式的主要思想是将对象的创建与对象的实现分离。 通俗的示例 我们去 KFC 购买汉堡，只需直接点餐、取餐，不用自己亲手做; K',meta:[{property:"og:url",content:"/in-depth-learning/design-patterns/factory-pattern.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"工厂模式"},{property:"og:description",content:'工厂模式 " 此处介绍的工厂模式是基于前端场景下的设计模式应用，因此会与传统的设计模式有所区别，主要体现在过程会更简化。" 介绍 工厂模式（Factory Pattern），根据不同的输入返回不同类的实例，一般用来创建同一类对象。工厂方式的主要思想是将对象的创建与对象的实现分离。 通俗的示例 我们去 KFC 购买汉堡，只需直接点餐、取餐，不用自己亲手做; K'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/in-depth-learning/design-patterns/factory-pattern.html",relativePath:"in-depth-learning/design-patterns/factory-pattern.md",key:"v-607e1ca9",path:"/in-depth-learning/design-patterns/factory-pattern/",headers:[{level:2,title:"介绍",slug:"介绍"},{level:2,title:"通俗的示例",slug:"通俗的示例"},{level:2,title:"工厂模式的通用实现",slug:"工厂模式的通用实现"},{level:2,title:"工厂模式的实际应用",slug:"工厂模式的实际应用"},{level:3,title:"Vue/React 源码中的工厂模式",slug:"vue-react-源码中的工厂模式"},{level:3,title:"vue-router 源码中的工厂模式",slug:"vue-router-源码中的工厂模式"},{level:2,title:"设计原则验证",slug:"设计原则验证"},{level:2,title:"工厂模式的优缺点",slug:"工厂模式的优缺点"},{level:2,title:"工厂模式的适用场景",slug:"工厂模式的适用场景"}],readingTime:{minutes:5.63,words:1690},updateTime:"2022年3月24日 21:58",updateTimeStamp:1648130335e3,createTime:"2022年3月19日 22:35",createTimeStamp:1647700522e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:6}]},{title:"备忘录模式",frontmatter:{summary:"备忘录模式 介绍 备忘录模式（Memento Pattern）用于随时记录一个对象的状态变化，随时可以恢复之前的某个状态（如撤销功能）。 通俗的示例 前端实现的一些工具比如编辑器中比较常见，其它场景用的比较少。 备忘录模式的通用实现 以一个编辑器为例，代码如下： 设计原则验证 状态对象与使用者分开，解耦; 符合开放封闭原则; （完）",meta:[{property:"og:url",content:"/in-depth-learning/design-patterns/memento-pattern.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"备忘录模式"},{property:"og:description",content:"备忘录模式 介绍 备忘录模式（Memento Pattern）用于随时记录一个对象的状态变化，随时可以恢复之前的某个状态（如撤销功能）。 通俗的示例 前端实现的一些工具比如编辑器中比较常见，其它场景用的比较少。 备忘录模式的通用实现 以一个编辑器为例，代码如下： 设计原则验证 状态对象与使用者分开，解耦; 符合开放封闭原则; （完）"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/in-depth-learning/design-patterns/memento-pattern.html",relativePath:"in-depth-learning/design-patterns/memento-pattern.md",key:"v-d2510d6e",path:"/in-depth-learning/design-patterns/memento-pattern/",headers:[{level:2,title:"介绍",slug:"介绍"},{level:2,title:"通俗的示例",slug:"通俗的示例"},{level:2,title:"备忘录模式的通用实现",slug:"备忘录模式的通用实现"},{level:2,title:"设计原则验证",slug:"设计原则验证"}],readingTime:{minutes:.89,words:266},updateTime:"2022年3月30日 10:59",updateTimeStamp:1648609148e3,createTime:"2022年3月30日 10:59",createTimeStamp:1648609148e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"观察者模式",frontmatter:{summary:'观察者模式 " 在众多设计模式中，可能最常见、最有名的就是观察者模式了。如果说前端只学一种设计模式，那一定非他莫属。" 介绍 观察者模式（Observer Pattern）又叫发布 - 订阅模式（Publish-Subscribe Pattern, pub-sub），它定义了一种一对多的关系，让多个订阅者对象（或者叫观察者对象）同时监听某一个发布者（或者叫主',meta:[{property:"og:url",content:"/in-depth-learning/design-patterns/observer-pattern.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"观察者模式"},{property:"og:description",content:'观察者模式 " 在众多设计模式中，可能最常见、最有名的就是观察者模式了。如果说前端只学一种设计模式，那一定非他莫属。" 介绍 观察者模式（Observer Pattern）又叫发布 - 订阅模式（Publish-Subscribe Pattern, pub-sub），它定义了一种一对多的关系，让多个订阅者对象（或者叫观察者对象）同时监听某一个发布者（或者叫主'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/in-depth-learning/design-patterns/observer-pattern.html",relativePath:"in-depth-learning/design-patterns/observer-pattern.md",key:"v-43544fcb",path:"/in-depth-learning/design-patterns/observer-pattern/",headers:[{level:2,title:"介绍",slug:"介绍"},{level:2,title:"通俗的示例",slug:"通俗的示例"},{level:2,title:"观察者模式的通用实现",slug:"观察者模式的通用实现"},{level:2,title:"观察者模式的实际应用",slug:"观察者模式的实际应用"},{level:3,title:"使用 jQuery 的方式来实现",slug:"使用-jquery-的方式来实现"},{level:3,title:"使用 Vue 的 EventBus",slug:"使用-vue-的-eventbus"},{level:3,title:"Vue 源码中的观察者模式",slug:"vue-源码中的观察者模式"},{level:2,title:"设计原则验证",slug:"设计原则验证"},{level:2,title:"观察者模式的优缺点",slug:"观察者模式的优缺点"},{level:2,title:"其他相关模式",slug:"其他相关模式"},{level:3,title:"观察者模式和发布 - 订阅模式",slug:"观察者模式和发布-订阅模式"},{level:3,title:"观察者模式和责任链模式",slug:"观察者模式和责任链模式"}],readingTime:{minutes:12.48,words:3744},updateTime:"2022年3月27日 11:13",updateTimeStamp:1648350816e3,createTime:"2022年3月27日 11:13",createTimeStamp:1648350816e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"原型模式",frontmatter:{summary:"原型模式 介绍 原型模式（Prototype Pattern）不是指的 JS 的原型，它是 clone 自己，生成一个新对象的操作。因为 new 一个新对象的时候开销会比较大，或者由于其他原因不合适，所以采用这种方式创建一个一模一样的对象。 Java 默认有 clone 接口，不用自己实现。JS 中有一个比较像的实现就是 Object.create 方法。 ",meta:[{property:"og:url",content:"/in-depth-learning/design-patterns/prototype-pattern.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"原型模式"},{property:"og:description",content:"原型模式 介绍 原型模式（Prototype Pattern）不是指的 JS 的原型，它是 clone 自己，生成一个新对象的操作。因为 new 一个新对象的时候开销会比较大，或者由于其他原因不合适，所以采用这种方式创建一个一模一样的对象。 Java 默认有 clone 接口，不用自己实现。JS 中有一个比较像的实现就是 Object.create 方法。 "},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/in-depth-learning/design-patterns/prototype-pattern.html",relativePath:"in-depth-learning/design-patterns/prototype-pattern.md",key:"v-42b299e9",path:"/in-depth-learning/design-patterns/prototype-pattern/",headers:[{level:2,title:"介绍",slug:"介绍"},{level:2,title:"原型模式的通用实现",slug:"原型模式的通用实现"},{level:2,title:"对比 JS 中的原型（prototype）",slug:"对比-js-中的原型-prototype"}],readingTime:{minutes:.96,words:287},updateTime:"2022年3月28日 18:17",updateTimeStamp:164846262e4,createTime:"2022年3月27日 22:17",createTimeStamp:1648390665e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"策略模式",frontmatter:{summary:"策略模式 介绍 策略模式（Strategy Pattern）又称政策模式，其定义一系列的算法，把它们一个个封装起来，并且使它们可以互相替换。封装的策略算法一般是独立的，策略模式根据输入来调整采用哪个算法。关键是策略的实现和使用分离。 通俗的示例 简单来说就是不同策略分开处理，避免出现大量 if...else 或者 switch... case。 例如电商网站",meta:[{property:"og:url",content:"/in-depth-learning/design-patterns/strategy-pattern.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"策略模式"},{property:"og:description",content:"策略模式 介绍 策略模式（Strategy Pattern）又称政策模式，其定义一系列的算法，把它们一个个封装起来，并且使它们可以互相替换。封装的策略算法一般是独立的，策略模式根据输入来调整采用哪个算法。关键是策略的实现和使用分离。 通俗的示例 简单来说就是不同策略分开处理，避免出现大量 if...else 或者 switch... case。 例如电商网站"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/in-depth-learning/design-patterns/strategy-pattern.html",relativePath:"in-depth-learning/design-patterns/strategy-pattern.md",key:"v-6a1c1c91",path:"/in-depth-learning/design-patterns/strategy-pattern/",headers:[{level:2,title:"介绍",slug:"介绍"},{level:2,title:"通俗的示例",slug:"通俗的示例"},{level:2,title:"策略模式的通用实现",slug:"策略模式的通用实现"},{level:2,title:"策略模式的实际应用",slug:"策略模式的实际应用"},{level:3,title:"表格 formatter",slug:"表格-formatter"},{level:3,title:"表单验证",slug:"表单验证"},{level:2,title:"设计原则验证",slug:"设计原则验证"},{level:2,title:"策略模式的优缺点",slug:"策略模式的优缺点"},{level:2,title:"策略模式的适用场景",slug:"策略模式的适用场景"},{level:2,title:"其他相关模式",slug:"其他相关模式"},{level:3,title:"策略模式和模板方法模式",slug:"策略模式和模板方法模式"},{level:3,title:"策略模式和享元模式",slug:"策略模式和享元模式"}],readingTime:{minutes:7.46,words:2239},updateTime:"2022年3月29日 14:05",updateTimeStamp:1648533906e3,createTime:"2022年3月29日 14:05",createTimeStamp:1648533906e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"单例模式",frontmatter:{summary:'单例模式 " 单例模式可能是设计模式里面最简单的模式了，虽然简单，但在我们日常生活和编程中却经常接触到。" 介绍 单例模式（Singleton Pattern）又称为单体模式，保证一个类只有一个实例，并提供一个访问它的全局访问点。也就是说，第二次使用同一个类创建新对象的时候，应该得到与第一次创建的对象完全相同的对象。 通俗的示例 登录框：一个系统有好多页面，',meta:[{property:"og:url",content:"/in-depth-learning/design-patterns/singleton-pattern.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"单例模式"},{property:"og:description",content:'单例模式 " 单例模式可能是设计模式里面最简单的模式了，虽然简单，但在我们日常生活和编程中却经常接触到。" 介绍 单例模式（Singleton Pattern）又称为单体模式，保证一个类只有一个实例，并提供一个访问它的全局访问点。也就是说，第二次使用同一个类创建新对象的时候，应该得到与第一次创建的对象完全相同的对象。 通俗的示例 登录框：一个系统有好多页面，'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/in-depth-learning/design-patterns/singleton-pattern.html",relativePath:"in-depth-learning/design-patterns/singleton-pattern.md",key:"v-32d6f809",path:"/in-depth-learning/design-patterns/singleton-pattern/",headers:[{level:2,title:"介绍",slug:"介绍"},{level:2,title:"通俗的示例",slug:"通俗的示例"},{level:2,title:"单例模式的通用实现",slug:"单例模式的通用实现"},{level:3,title:"Java 代码实现",slug:"java-代码实现"},{level:3,title:"JavaScript 代码实现",slug:"javascript-代码实现"},{level:3,title:"惰性单例、懒汉式-饿汉式",slug:"惰性单例、懒汉式-饿汉式"},{level:2,title:"单例模式的实际应用",slug:"单例模式的实际应用"},{level:3,title:"模拟登录框",slug:"模拟登录框"},{level:3,title:"ElementUI 中的 Loading",slug:"elementui-中的-loading"},{level:3,title:"其他",slug:"其他"},{level:2,title:"设计原则验证",slug:"设计原则验证"},{level:2,title:"单例模式的优缺点",slug:"单例模式的优缺点"},{level:2,title:"单例模式的适用场景",slug:"单例模式的适用场景"}],readingTime:{minutes:11.59,words:3476},updateTime:"2022年3月24日 21:58",updateTimeStamp:1648130335e3,createTime:"2022年3月20日 22:29",createTimeStamp:1647786566e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:4}]},{title:"访问者模式和解释器模式",frontmatter:{summary:"访问者模式和解释器模式 访问者模式 访问者模式（Visitor Pattern）的概念是将数据操作和数据结构进行分离，但不管是前端还是后端，使用场景都不多。 解释器模式 解释器模式（Interpreter Pattern）用于描述语言语法如何定义，如何解释和编译。主要用在一些专业场景（比如 babel 解析 ES6 语法，SCSS、LESS 解析成 CSS ",meta:[{property:"og:url",content:"/in-depth-learning/design-patterns/visitor-pattern-and-interpreter-pattern.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"访问者模式和解释器模式"},{property:"og:description",content:"访问者模式和解释器模式 访问者模式 访问者模式（Visitor Pattern）的概念是将数据操作和数据结构进行分离，但不管是前端还是后端，使用场景都不多。 解释器模式 解释器模式（Interpreter Pattern）用于描述语言语法如何定义，如何解释和编译。主要用在一些专业场景（比如 babel 解析 ES6 语法，SCSS、LESS 解析成 CSS "},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/in-depth-learning/design-patterns/visitor-pattern-and-interpreter-pattern.html",relativePath:"in-depth-learning/design-patterns/visitor-pattern-and-interpreter-pattern.md",key:"v-78b0322e",path:"/in-depth-learning/design-patterns/visitor-pattern-and-interpreter-pattern/",headers:[{level:2,title:"访问者模式",slug:"访问者模式"},{level:2,title:"解释器模式",slug:"解释器模式"}],readingTime:{minutes:.41,words:124},updateTime:"2022年3月30日 14:40",updateTimeStamp:1648622443e3,createTime:"2022年3月30日 14:13",createTimeStamp:1648620825e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"代理模式",frontmatter:{summary:"代理模式 介绍 代理模式（Proxy Pattern）又称委托模式，它为目标对象创造了一个代理对象，以控制对目标对象的访问。 代理模式把代理对象插入到访问者和目标对象之间，从而为访问者对目标对象的访问引入一定的间接性。正是这种间接性，给了代理对象很多操作空间，比如在调用目标对象前和调用后进行一些预操作和后操作，从而实现新的功能或者扩展目标的功能。 通俗的示例",meta:[{property:"og:url",content:"/in-depth-learning/design-patterns/proxy-pattern.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"代理模式"},{property:"og:description",content:"代理模式 介绍 代理模式（Proxy Pattern）又称委托模式，它为目标对象创造了一个代理对象，以控制对目标对象的访问。 代理模式把代理对象插入到访问者和目标对象之间，从而为访问者对目标对象的访问引入一定的间接性。正是这种间接性，给了代理对象很多操作空间，比如在调用目标对象前和调用后进行一些预操作和后操作，从而实现新的功能或者扩展目标的功能。 通俗的示例"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/in-depth-learning/design-patterns/proxy-pattern.html",relativePath:"in-depth-learning/design-patterns/proxy-pattern.md",key:"v-28dc6ce9",path:"/in-depth-learning/design-patterns/proxy-pattern/",headers:[{level:2,title:"介绍",slug:"介绍"},{level:2,title:"通俗的示例",slug:"通俗的示例"},{level:2,title:"代理模式的通用实现",slug:"代理模式的通用实现"},{level:2,title:"代理模式的实际应用",slug:"代理模式的实际应用"},{level:3,title:"拦截器",slug:"拦截器"},{level:3,title:"前端框架的数据响应式化",slug:"前端框架的数据响应式化"},{level:3,title:"缓存代理",slug:"缓存代理"},{level:3,title:"保护代理和虚拟代理",slug:"保护代理和虚拟代理"},{level:3,title:"正向代理与反向代理",slug:"正向代理与反向代理"},{level:2,title:"设计原则验证",slug:"设计原则验证"},{level:2,title:"代理模式的优缺点",slug:"代理模式的优缺点"},{level:2,title:"其他相关模式",slug:"其他相关模式"},{level:3,title:"代理模式与适配器模式",slug:"代理模式与适配器模式"},{level:3,title:"代理模式与装饰器模式",slug:"代理模式与装饰器模式"}],readingTime:{minutes:9.26,words:2779},updateTime:"2022年3月26日 14:53",updateTimeStamp:1648277634e3,createTime:"2022年3月24日 23:29",createTimeStamp:1648135765e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"模板方法模式",frontmatter:{summary:"模板方法模式 介绍 模板方法模式（Template Method Pattern）父类中定义一组操作算法骨架，而将一些实现步骤延迟到子类中，使得子类可以不改变父类的算法结构的同时，重新定义算法中的某些实现步骤。模板方法模式的关键是算法步骤的骨架和具体实现分离。 通俗的示例 这里举个经典的咖啡厅例子，咖啡厅制作饮料的过程有一些类似的步骤： 1. 先把水煮沸 2",meta:[{property:"og:url",content:"/in-depth-learning/design-patterns/template-method-pattern.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"模板方法模式"},{property:"og:description",content:"模板方法模式 介绍 模板方法模式（Template Method Pattern）父类中定义一组操作算法骨架，而将一些实现步骤延迟到子类中，使得子类可以不改变父类的算法结构的同时，重新定义算法中的某些实现步骤。模板方法模式的关键是算法步骤的骨架和具体实现分离。 通俗的示例 这里举个经典的咖啡厅例子，咖啡厅制作饮料的过程有一些类似的步骤： 1. 先把水煮沸 2"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/in-depth-learning/design-patterns/template-method-pattern.html",relativePath:"in-depth-learning/design-patterns/template-method-pattern.md",key:"v-5c048169",path:"/in-depth-learning/design-patterns/template-method-pattern/",headers:[{level:2,title:"介绍",slug:"介绍"},{level:2,title:"通俗的示例",slug:"通俗的示例"},{level:2,title:"模板方法模式的通用实现",slug:"模板方法模式的通用实现"},{level:2,title:"模板方法模式的优缺点",slug:"模板方法模式的优缺点"},{level:2,title:"模板方法模式的适用场景",slug:"模板方法模式的适用场景"},{level:2,title:"其他相关模式",slug:"其他相关模式"},{level:3,title:"模板方法模式与工厂模式",slug:"模板方法模式与工厂模式"},{level:3,title:"代理模式与装饰器模式",slug:"代理模式与装饰器模式"},{level:3,title:"模板方法模式与策略模式",slug:"模板方法模式与策略模式"}],readingTime:{minutes:5.21,words:1564},updateTime:"2022年3月30日 13:39",updateTimeStamp:1648618748e3,createTime:"2022年3月29日 16:52",createTimeStamp:1648543928e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"UML 类图",frontmatter:{summary:"UML 类图 UML 介绍 UML（Unified Modeling Language）中文名叫统一建模语言，是一种为面向对象系统的产品进行说明、可视化和编制文档的一种标准语言。 它本身包括很多类型的图，但在设计模式中，主要使用其中的一种 —— 类图，以及关系（泛化和关联）。 类图 + 表示 public：完全开放; # 表示 protected：对子类开放",meta:[{property:"og:url",content:"/in-depth-learning/design-patterns/uml-class-diagram.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"UML 类图"},{property:"og:description",content:"UML 类图 UML 介绍 UML（Unified Modeling Language）中文名叫统一建模语言，是一种为面向对象系统的产品进行说明、可视化和编制文档的一种标准语言。 它本身包括很多类型的图，但在设计模式中，主要使用其中的一种 —— 类图，以及关系（泛化和关联）。 类图 + 表示 public：完全开放; # 表示 protected：对子类开放"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/in-depth-learning/design-patterns/uml-class-diagram.html",relativePath:"in-depth-learning/design-patterns/uml-class-diagram.md",key:"v-5fa6c5e9",path:"/in-depth-learning/design-patterns/uml-class-diagram/",headers:[{level:2,title:"UML 介绍",slug:"uml-介绍"},{level:2,title:"类图",slug:"类图"},{level:2,title:"泛化和关联",slug:"泛化和关联"}],readingTime:{minutes:7.51,words:2254},updateTime:"2022年3月19日 22:35",updateTimeStamp:1647700522e3,createTime:"2022年3月19日 22:35",createTimeStamp:1647700522e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"状态模式",frontmatter:{summary:"状态模式 介绍 状态模式（State Pattern）允许一个对象在其内部状态改变时改变它的行为，对象看起来似乎修改了它的类，类的行为随着它的状态改变而改变。 当程序需要根据不同的外部情况来做出不同操作时，最直接的方法就是使用 switch-case 或 if-else 语句将这些可能发生的情况全部兼顾到，但是这种做法应付复杂一点的状态判断时就有点力不从心，",meta:[{property:"og:url",content:"/in-depth-learning/design-patterns/state-pattern.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"状态模式"},{property:"og:description",content:"状态模式 介绍 状态模式（State Pattern）允许一个对象在其内部状态改变时改变它的行为，对象看起来似乎修改了它的类，类的行为随着它的状态改变而改变。 当程序需要根据不同的外部情况来做出不同操作时，最直接的方法就是使用 switch-case 或 if-else 语句将这些可能发生的情况全部兼顾到，但是这种做法应付复杂一点的状态判断时就有点力不从心，"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/in-depth-learning/design-patterns/state-pattern.html",relativePath:"in-depth-learning/design-patterns/state-pattern.md",key:"v-01b2a5c9",path:"/in-depth-learning/design-patterns/state-pattern/",headers:[{level:2,title:"介绍",slug:"介绍"},{level:2,title:"通俗的示例",slug:"通俗的示例"},{level:2,title:"状态模式的通用实现",slug:"状态模式的通用实现"},{level:2,title:"状态模式的原理",slug:"状态模式的原理"},{level:2,title:"设计原则验证",slug:"设计原则验证"},{level:2,title:"状态模式的优缺点",slug:"状态模式的优缺点"},{level:2,title:"状态模式的适用场景",slug:"状态模式的适用场景"},{level:2,title:"其他相关模式",slug:"其他相关模式"},{level:3,title:"状态模式和策略模式",slug:"状态模式和策略模式"},{level:3,title:"状态模式和观察者模式",slug:"状态模式和观察者模式"},{level:3,title:"状态模式和单例模式",slug:"状态模式和单例模式"}],readingTime:{minutes:8.84,words:2651},updateTime:"2022年3月27日 15:56",updateTimeStamp:1648367766e3,createTime:"2022年3月27日 15:56",createTimeStamp:1648367766e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"未完待续",frontmatter:{summary:"未完待续 知识点正在火速整理中",meta:[{property:"og:url",content:"/in-depth-learning/source-code/to-be-continued.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"未完待续"},{property:"og:description",content:"未完待续 知识点正在火速整理中"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/in-depth-learning/source-code/to-be-continued.html",relativePath:"in-depth-learning/source-code/to-be-continued.md",key:"v-7192c809",path:"/in-depth-learning/source-code/to-be-continued/",headers:[{level:2,title:"知识点正在火速整理中",slug:"知识点正在火速整理中"}],readingTime:{minutes:.05,words:14},updateTime:"2021年11月19日 11:27",updateTimeStamp:1637292423e3,createTime:"2021年11月19日 11:27",createTimeStamp:1637292423e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"CSS 问题",frontmatter:{summary:'CSS 问题 " 本章节会持续收录 CSS 相关的问题，由笔者凭主观理解作答，答案仅供参考，如有存疑，欢迎提出 PR 进行建议和指正！" [[toc]] 1. CSS 样式（选择器）的优先级 计算权重确定; 带 !important 属性的优先级是最高的，唯一能覆盖它的是再加一个带 !important 属性的样式; 内联样式（直接写在元素属性上的样式）优先',meta:[{property:"og:url",content:"/interview/css/"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"CSS 问题"},{property:"og:description",content:'CSS 问题 " 本章节会持续收录 CSS 相关的问题，由笔者凭主观理解作答，答案仅供参考，如有存疑，欢迎提出 PR 进行建议和指正！" [[toc]] 1. CSS 样式（选择器）的优先级 计算权重确定; 带 !important 属性的优先级是最高的，唯一能覆盖它的是再加一个带 !important 属性的样式; 内联样式（直接写在元素属性上的样式）优先'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/interview/css/",relativePath:"interview/css/README.md",key:"v-6d8cc174",path:"/interview/css/",headers:[{level:3,title:"1. CSS 样式（选择器）的优先级",slug:"_1-css-样式-选择器-的优先级"},{level:3,title:"2. 什么是雪碧图",slug:"_2-什么是雪碧图"},{level:3,title:"3. 雪碧图的作用",slug:"_3-雪碧图的作用"},{level:3,title:"4. 自定义字体的使用场景",slug:"_4-自定义字体的使用场景"},{level:3,title:"5. base64 的使用",slug:"_5-base64-的使用"},{level:3,title:"6. 伪类和伪元素的区别",slug:"_6-伪类和伪元素的区别"},{level:3,title:"7. 如何美化 checkbox",slug:"_7-如何美化-checkbox"},{level:3,title:"8. 实现两栏（三栏）布局的方法",slug:"_8-实现两栏-三栏-布局的方法"},{level:3,title:"9. position: absolute / fixed 有什么区别",slug:"_9-position-absolute-fixed-有什么区别"},{level:3,title:"10. display: inline-block 的间隙",slug:"_10-display-inline-block-的间隙"},{level:3,title:"11. 为什么要清除浮动",slug:"_11-为什么要清除浮动"},{level:3,title:"12. 如何清除浮动",slug:"_12-如何清除浮动"},{level:3,title:"13. 如何适配移动端页面",slug:"_13-如何适配移动端页面"}],readingTime:{minutes:2.7,words:811},updateTime:"2020年10月7日 16:58",updateTimeStamp:1602061093e3,createTime:"2020年10月7日 16:58",createTimeStamp:1602061093e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"源码阅读与学习",frontmatter:{summary:"源码阅读与学习 为什么要阅读源码（Why）： 能够学习到高手的编程技巧，了解高手是如何组织代码的，了解一些算法思想和设计模式的应用。; 通过学习开源框架、开源项目的源码，可以学习到多种场景多种技术的解决方案，快速增加经验。; 在使用某个框架或工具进行开发时，如果你对其源码有所了解，可以最大化地减少出故障的可能。; 有利于你研究一个新系统的代码逻辑，快速接手一",meta:[{property:"og:url",content:"/in-depth-learning/source-code/"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"源码阅读与学习"},{property:"og:description",content:"源码阅读与学习 为什么要阅读源码（Why）： 能够学习到高手的编程技巧，了解高手是如何组织代码的，了解一些算法思想和设计模式的应用。; 通过学习开源框架、开源项目的源码，可以学习到多种场景多种技术的解决方案，快速增加经验。; 在使用某个框架或工具进行开发时，如果你对其源码有所了解，可以最大化地减少出故障的可能。; 有利于你研究一个新系统的代码逻辑，快速接手一"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/in-depth-learning/source-code/",relativePath:"in-depth-learning/source-code/README.md",key:"v-20056230",path:"/in-depth-learning/source-code/",readingTime:{minutes:2.67,words:802},updateTime:"2022年3月30日 14:40",updateTimeStamp:1648622443e3,createTime:"2021年11月19日 11:27",createTimeStamp:1637292423e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"解决方案",frontmatter:{summary:"解决方案 归纳总结在开发产品的过程中，常见需求的技术解决方案。",meta:[{property:"og:url",content:"/project/solutions/"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"解决方案"},{property:"og:description",content:"解决方案 归纳总结在开发产品的过程中，常见需求的技术解决方案。"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/project/solutions/",relativePath:"project/solutions/README.md",key:"v-1ff08130",path:"/project/solutions/",readingTime:{minutes:.41,words:123},updateTime:"2023年4月26日 10:53",updateTimeStamp:1682477615e3,createTime:"2022年2月24日 21:43",createTimeStamp:1645710201e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"关于本站",frontmatter:{sidebar:!1,anchorDisplay:!1,summary:"关于本站 前言 该小册是我的个人文档库，开源在 GitHub，它不是什么官方文档，仅仅是一本个人笔记，用于知识点的梳理。 小册是本人一边学习一边总结的，可能会存在错误，希望阅读的人能够「带着怀疑的态度」去阅读，如果有不同的看法，可以在 留言板 提出，大家共同进步，让这本小册日趋完善。 建立小册的目的 用输出倒逼输入，写文档的过程，是对自己所学知识的沉淀，分享",meta:[{property:"og:url",content:"/others/about.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"关于本站"},{property:"og:description",content:"关于本站 前言 该小册是我的个人文档库，开源在 GitHub，它不是什么官方文档，仅仅是一本个人笔记，用于知识点的梳理。 小册是本人一边学习一边总结的，可能会存在错误，希望阅读的人能够「带着怀疑的态度」去阅读，如果有不同的看法，可以在 留言板 提出，大家共同进步，让这本小册日趋完善。 建立小册的目的 用输出倒逼输入，写文档的过程，是对自己所学知识的沉淀，分享"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/others/about.html",relativePath:"others/about.md",key:"v-be21c10c",path:"/others/about/",headers:[{level:2,title:"前言",slug:"前言"},{level:2,title:"建立小册的目的",slug:"建立小册的目的"},{level:2,title:"编写小册的想法",slug:"编写小册的想法"},{level:2,title:"一些喜欢的语录",slug:"一些喜欢的语录"},{level:2,title:"小册的发展历程",slug:"小册的发展历程"},{level:2,title:"最后",slug:"最后"}],readingTime:{minutes:3.86,words:1159},updateTime:"2022年8月4日 14:39",updateTimeStamp:1659595158e3,createTime:"2022年8月4日 14:39",createTimeStamp:1659595158e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"Vue3 源码中的基础工具函数",frontmatter:{summary:"Vue3 源码中的基础工具函数 学习目标 学习调试源码：打包构建项目代码，生成 sourcemap 调试源码。; 学习优秀开源框架中工具函数是如何设计以达到优化的目的。; 工作中如果有用到类似的工具函数，可以借鉴参考。; 对 JavaScript 基础知识查漏补缺。; 复习巩固 TypeScript 语法和用法。; 前期准备 源码位置 Vue3 的源码仓库是",meta:[{property:"og:url",content:"/in-depth-learning/source-code/vue3-utils.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Vue3 源码中的基础工具函数"},{property:"og:description",content:"Vue3 源码中的基础工具函数 学习目标 学习调试源码：打包构建项目代码，生成 sourcemap 调试源码。; 学习优秀开源框架中工具函数是如何设计以达到优化的目的。; 工作中如果有用到类似的工具函数，可以借鉴参考。; 对 JavaScript 基础知识查漏补缺。; 复习巩固 TypeScript 语法和用法。; 前期准备 源码位置 Vue3 的源码仓库是"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/in-depth-learning/source-code/vue3-utils.html",relativePath:"in-depth-learning/source-code/vue3-utils.md",key:"v-48615196",path:"/in-depth-learning/source-code/vue3-utils/",headers:[{level:2,title:"学习目标",slug:"学习目标"},{level:2,title:"前期准备",slug:"前期准备"},{level:3,title:"源码位置",slug:"源码位置"},{level:3,title:"打包构建代码（非必须）",slug:"打包构建代码-非必须"},{level:2,title:"工具函数",slug:"工具函数"},{level:3,title:"babelParserDefaultPlugins",slug:"babelparserdefaultplugins"},{level:3,title:"EMPTY_OBJ",slug:"empty-obj"},{level:3,title:"EMPTY_ARR",slug:"empty-arr"},{level:3,title:"NOOP",slug:"noop"},{level:3,title:"NO",slug:"no"},{level:3,title:"isOn",slug:"ison"},{level:3,title:"isModelListener",slug:"ismodellistener"},{level:3,title:"extend",slug:"extend"},{level:3,title:"remove",slug:"remove"},{level:3,title:"hasOwn",slug:"hasown"},{level:3,title:"isArray",slug:"isarray"},{level:3,title:"isMap",slug:"ismap"},{level:3,title:"isSet",slug:"isset"},{level:3,title:"其它判断是否某种类型的函数",slug:"其它判断是否某种类型的函数"},{level:3,title:"toRawType",slug:"torawtype"},{level:3,title:"isPlainObject",slug:"isplainobject"},{level:3,title:"isIntegerKey",slug:"isintegerkey"},{level:3,title:"isReservedProp",slug:"isreservedprop"},{level:3,title:"cacheStringFunction",slug:"cachestringfunction"},{level:3,title:"hasChanged",slug:"haschanged"},{level:3,title:"invokeArrayFns",slug:"invokearrayfns"},{level:3,title:"def",slug:"def"},{level:3,title:"toNumber",slug:"tonumber"},{level:3,title:"getGlobalThis",slug:"getglobalthis"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:22.04,words:6612},updateTime:"2021年11月19日 11:27",updateTimeStamp:1637292423e3,createTime:"2021年11月19日 11:27",createTimeStamp:1637292423e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"问题排查",frontmatter:{summary:"问题排查 归纳总结在产品的开发和运维过程中，常见问题的排查思路和问题原因。",meta:[{property:"og:url",content:"/project/troubleshooting/"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"问题排查"},{property:"og:description",content:"问题排查 归纳总结在产品的开发和运维过程中，常见问题的排查思路和问题原因。"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/project/troubleshooting/",relativePath:"project/troubleshooting/README.md",key:"v-1fa66330",path:"/project/troubleshooting/",readingTime:{minutes:1.11,words:333},updateTime:"2023年4月26日 10:53",updateTimeStamp:1682477615e3,createTime:"2023年4月26日 10:53",createTimeStamp:1682477615e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"HTML 问题",frontmatter:{summary:'HTML 问题 " 本章节会持续收录 HTML 相关的问题，由笔者凭主观理解作答，答案仅供参考，如有存疑，欢迎提出 PR 进行建议和指正！" [[toc]] 1. doctype 的意义是什么 让浏览器以标准模式渲染; 针对 IE，设置 width: 200px; padding: 10px; 时，标准模式下盒子宽度会解析为 220px。; 让浏览器知道元素',meta:[{property:"og:url",content:"/interview/html/"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"HTML 问题"},{property:"og:description",content:'HTML 问题 " 本章节会持续收录 HTML 相关的问题，由笔者凭主观理解作答，答案仅供参考，如有存疑，欢迎提出 PR 进行建议和指正！" [[toc]] 1. doctype 的意义是什么 让浏览器以标准模式渲染; 针对 IE，设置 width: 200px; padding: 10px; 时，标准模式下盒子宽度会解析为 220px。; 让浏览器知道元素'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/interview/html/",relativePath:"interview/html/README.md",key:"v-43114c30",path:"/interview/html/",headers:[{level:3,title:"1. doctype 的意义是什么",slug:"_1-doctype-的意义是什么"},{level:3,title:"2. HTML XHTML HTML5 的关系",slug:"_2-html-xhtml-html5-的关系"},{level:3,title:"3. HTML5 有什么变化",slug:"_3-html5-有什么变化"},{level:3,title:"4. em 和 i 有什么区别",slug:"_4-em-和-i-有什么区别"},{level:3,title:"5. 语义化的意义是什么",slug:"_5-语义化的意义是什么"},{level:3,title:"6. 哪些元素可以自闭合",slug:"_6-哪些元素可以自闭合"},{level:3,title:"7. HTML 和 DOM 的关系",slug:"_7-html-和-dom-的关系"},{level:3,title:"8. property 和 attribute 的区别",slug:"_8-property-和-attribute-的区别"},{level:3,title:"9. form 的作用有哪些",slug:"_9-form-的作用有哪些"}],readingTime:{minutes:1.6,words:480},updateTime:"2020年10月7日 16:58",updateTimeStamp:1602061093e3,createTime:"2020年9月20日 22:25",createTimeStamp:1600611934e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"哈喽，欢迎你来到了这个页面",frontmatter:{sidebar:!1,anchorDisplay:!1,summary:"哈喽，欢迎你来到了这个页面 欢迎到来 首先：感谢你进入了这个页面~（因为这个页面的入口没有放到导航栏呀） 我是一名程序员，如果想了解更多关于我的资料，可以戳这里。 我平时喜欢阅读，每年都要买很多书。有些读完觉得想收藏的，会摆在书柜里；有些书的内容消化完，暂时不想收藏的，会在咸鱼或者多抓鱼平台低价出给有缘人；经常也会踩到坑，买到内容比较一般的书，就会凑满一箱论",meta:[{property:"og:url",content:"/others/sponsor.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"哈喽，欢迎你来到了这个页面"},{property:"og:description",content:"哈喽，欢迎你来到了这个页面 欢迎到来 首先：感谢你进入了这个页面~（因为这个页面的入口没有放到导航栏呀） 我是一名程序员，如果想了解更多关于我的资料，可以戳这里。 我平时喜欢阅读，每年都要买很多书。有些读完觉得想收藏的，会摆在书柜里；有些书的内容消化完，暂时不想收藏的，会在咸鱼或者多抓鱼平台低价出给有缘人；经常也会踩到坑，买到内容比较一般的书，就会凑满一箱论"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/others/sponsor.html",relativePath:"others/sponsor.md",key:"v-0f1977c0",path:"/others/sponsor/",headers:[{level:2,title:"欢迎到来",slug:"欢迎到来"},{level:2,title:"打赏方式",slug:"打赏方式"},{level:3,title:"方式一：支付宝扫一扫",slug:"方式一-支付宝扫一扫"},{level:3,title:"方式二：微信扫一扫",slug:"方式二-微信扫一扫"},{level:2,title:"Q & A",slug:"q-a"},{level:3,title:"我赞赏给你的钱真的会用来买书吗？",slug:"我赞赏给你的钱真的会用来买书吗"},{level:3,title:"你每年在学习上花多少钱？",slug:"你每年在学习上花多少钱"},{level:3,title:"阅读的话，都是买的实体书吗？",slug:"阅读的话-都是买的实体书吗"},{level:3,title:"赞赏你买的书，会反过来卖书赚钱吗？",slug:"赞赏你买的书-会反过来卖书赚钱吗"},{level:3,title:"你有公众号吗？",slug:"你有公众号吗"},{level:3,title:"可以加个微信吗？",slug:"可以加个微信吗"},{level:2,title:"最后",slug:"最后"}],readingTime:{minutes:4.85,words:1454},updateTime:"2022年8月4日 14:39",updateTimeStamp:1659595158e3,createTime:"2022年8月4日 14:39",createTimeStamp:1659595158e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"Code Format 工程化实践",frontmatter:{summary:"Code Format 工程化实践 代码规范和质量是工作中很重要的一部分，目前有很多工具可以帮助我们处理。 工具分类介绍 检测代码的工具很多，主要分为三类： 第一类：代码格式化工具，专注代码结构美化，不处理任何有关语法的内容; Prettier：专注代码格式化; Stylelint：专注 CSS 语法格式化; 第二类：lint 类，这些工具也支持处理代码格式",meta:[{property:"og:url",content:"/project/solutions/code-format.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Code Format 工程化实践"},{property:"og:description",content:"Code Format 工程化实践 代码规范和质量是工作中很重要的一部分，目前有很多工具可以帮助我们处理。 工具分类介绍 检测代码的工具很多，主要分为三类： 第一类：代码格式化工具，专注代码结构美化，不处理任何有关语法的内容; Prettier：专注代码格式化; Stylelint：专注 CSS 语法格式化; 第二类：lint 类，这些工具也支持处理代码格式"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/project/solutions/code-format.html",relativePath:"project/solutions/code-format.md",key:"v-bbdb8dee",path:"/project/solutions/code-format/",headers:[{level:2,title:"工具分类介绍",slug:"工具分类介绍"},{level:2,title:"工具原理和配置",slug:"工具原理和配置"},{level:3,title:"原理",slug:"原理"},{level:3,title:"配置对比",slug:"配置对比"},{level:2,title:"代码格式美化：Prettier",slug:"代码格式美化-prettier"},{level:3,title:"插件使用",slug:"插件使用"},{level:3,title:"覆盖配置",slug:"覆盖配置"},{level:3,title:"忽略文件",slug:"忽略文件"},{level:2,title:"代码质量检测：ESLint",slug:"代码质量检测-eslint"},{level:3,title:"插件使用",slug:"插件使用-2"},{level:3,title:"覆盖配置",slug:"覆盖配置-2"},{level:2,title:"Git 暂存区代码过滤：lint-staged",slug:"git-暂存区代码过滤-lint-staged"},{level:3,title:"插件使用",slug:"插件使用-3"},{level:2,title:"Git 提交规范自动化",slug:"git-提交规范自动化"}],readingTime:{minutes:5.57,words:1671},updateTime:"2022年8月29日 15:07",updateTimeStamp:1661756861e3,createTime:"2022年8月29日 15:07",createTimeStamp:1661756861e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"高性能渲染大量数据（虚拟列表）",frontmatter:{summary:"高性能渲染大量数据（虚拟列表） 场景描述 有一道看似无厘头的面试题：「后端一次性返回 10w 条数据，前端如何优雅展示？」 不过细细想来，有时确实会遇到一些不能使用分页方式来加载列表数据的业务情况（这种列表称为长列表）。比如在一些交易系统中，前端会实时的展示用户的持仓情况（收益、亏损、手数等），此时对于用户的持仓列表一般是不能分页的。再比如一个地图需要显示某",meta:[{property:"og:url",content:"/project/solutions/virtual-list.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"高性能渲染大量数据（虚拟列表）"},{property:"og:description",content:"高性能渲染大量数据（虚拟列表） 场景描述 有一道看似无厘头的面试题：「后端一次性返回 10w 条数据，前端如何优雅展示？」 不过细细想来，有时确实会遇到一些不能使用分页方式来加载列表数据的业务情况（这种列表称为长列表）。比如在一些交易系统中，前端会实时的展示用户的持仓情况（收益、亏损、手数等），此时对于用户的持仓列表一般是不能分页的。再比如一个地图需要显示某"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/project/solutions/virtual-list.html",relativePath:"project/solutions/virtual-list.md",key:"v-2b19575f",path:"/project/solutions/virtual-list/",headers:[{level:2,title:"场景描述",slug:"场景描述"},{level:3,title:"场景模拟",slug:"场景模拟"},{level:3,title:"传统做法",slug:"传统做法"},{level:2,title:"虚拟列表核心思想",slug:"虚拟列表核心思想"},{level:2,title:"固定高度虚拟列表实现",slug:"固定高度虚拟列表实现"},{level:3,title:"实现思路",slug:"实现思路"},{level:3,title:"代码实现",slug:"代码实现"},{level:2,title:"动态高度虚拟列表实现",slug:"动态高度虚拟列表实现"},{level:3,title:"实现思路",slug:"实现思路-2"},{level:3,title:"代码实现",slug:"代码实现-2"},{level:2,title:"生产中使用虚拟列表",slug:"生产中使用虚拟列表"}],readingTime:{minutes:13.49,words:4048},updateTime:"2023年5月9日 14:08",updateTimeStamp:1683612524e3,createTime:"2023年5月9日 14:08",createTimeStamp:1683612524e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"大文件分片上传和断点续传",frontmatter:{summary:"大文件分片上传和断点续传 场景描述 文件上传是一个很常见的需求，在文件相对比较小的情况下，可以直接把文件转化为字节流上传到服务器，但在文件比较大的情况下，用普通的方式进行上传就不是一个好的办法了。毕竟很少有人能忍受，当文件上传到一半中断后，继续上传却只能重头开始上传，这种体验很不友好。 本文将从零搭建前端和服务端，实现一个大文件分片上传和断点续传的小案例。 ",meta:[{property:"og:url",content:"/project/solutions/file-upload.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"大文件分片上传和断点续传"},{property:"og:description",content:"大文件分片上传和断点续传 场景描述 文件上传是一个很常见的需求，在文件相对比较小的情况下，可以直接把文件转化为字节流上传到服务器，但在文件比较大的情况下，用普通的方式进行上传就不是一个好的办法了。毕竟很少有人能忍受，当文件上传到一半中断后，继续上传却只能重头开始上传，这种体验很不友好。 本文将从零搭建前端和服务端，实现一个大文件分片上传和断点续传的小案例。 "},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/project/solutions/file-upload.html",relativePath:"project/solutions/file-upload.md",key:"v-20b735a9",path:"/project/solutions/file-upload/",headers:[{level:2,title:"场景描述",slug:"场景描述"},{level:2,title:"整体思路",slug:"整体思路"},{level:3,title:"前端",slug:"前端"},{level:3,title:"后端",slug:"后端"},{level:2,title:"前端代码",slug:"前端代码"},{level:3,title:"上传控件",slug:"上传控件"},{level:3,title:"转二进制",slug:"转二进制"},{level:3,title:"创建切片",slug:"创建切片"},{level:3,title:"发送请求",slug:"发送请求"},{level:3,title:"断点续传",slug:"断点续传-2"},{level:2,title:"后端代码",slug:"后端代码"},{level:2,title:"问题总结",slug:"问题总结"},{level:2,title:"不错的项目",slug:"不错的项目"}],readingTime:{minutes:9.78,words:2934},updateTime:"2022年2月24日 21:43",updateTimeStamp:1645710201e3,createTime:"2022年2月24日 21:43",createTimeStamp:1645710201e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"HTTP 错误状态码及排查路径",frontmatter:{summary:"HTTP 错误状态码及排查路径 502 Bad Gateway 产生原因 这个报错一般是由网关代理（Nginx）发出的，产生的原因是网关代理把客户端的请求转发给了服务端，但服务端却发出了「无效响应」。 展开解释：\r原本客户端到服务端是直连的，也就是每次请求是一个 TCP 连接；引入 Nginx 后，客户端需要先连接 Nginx，Nginx 再连接服务端，此时",meta:[{property:"og:url",content:"/project/troubleshooting/http-error-status-code.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"HTTP 错误状态码及排查路径"},{property:"og:description",content:"HTTP 错误状态码及排查路径 502 Bad Gateway 产生原因 这个报错一般是由网关代理（Nginx）发出的，产生的原因是网关代理把客户端的请求转发给了服务端，但服务端却发出了「无效响应」。 展开解释：\r原本客户端到服务端是直连的，也就是每次请求是一个 TCP 连接；引入 Nginx 后，客户端需要先连接 Nginx，Nginx 再连接服务端，此时"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/project/troubleshooting/http-error-status-code.html",relativePath:"project/troubleshooting/http-error-status-code.md",key:"v-0b0a36ba",path:"/project/troubleshooting/http-error-status-code/",headers:[{level:2,title:"502 Bad Gateway",slug:"_502-bad-gateway"},{level:3,title:"产生原因",slug:"产生原因"},{level:3,title:"排查路径",slug:"排查路径"}],readingTime:{minutes:4.39,words:1317},updateTime:"2023年5月3日 13:25",updateTimeStamp:1683091558e3,createTime:"2023年4月26日 10:53",createTimeStamp:1682477615e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"Git Hooks 工程化实践",frontmatter:{summary:"Git Hooks 工程化实践 Git hooks 是前端工程化中非常重要的一环，也衍生出了很多相关的工具包，比如 husky、lint-staged、commitizen、commitlint 等，本文介绍下这些工具的使用以及原理。 Git Hooks 是什么 hook 是计算机领域中一个很常见的概念，翻译过来的意思是钩子或者勾住，而在计算机领域中则要分为",meta:[{property:"og:url",content:"/project/solutions/git-hooks.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Git Hooks 工程化实践"},{property:"og:description",content:"Git Hooks 工程化实践 Git hooks 是前端工程化中非常重要的一环，也衍生出了很多相关的工具包，比如 husky、lint-staged、commitizen、commitlint 等，本文介绍下这些工具的使用以及原理。 Git Hooks 是什么 hook 是计算机领域中一个很常见的概念，翻译过来的意思是钩子或者勾住，而在计算机领域中则要分为"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/project/solutions/git-hooks.html",relativePath:"project/solutions/git-hooks.md",key:"v-4780d56e",path:"/project/solutions/git-hooks/",headers:[{level:2,title:"Git Hooks 是什么",slug:"git-hooks-是什么"},{level:2,title:"常见的 Git Hooks",slug:"常见的-git-hooks"},{level:2,title:"原生的 Git Hooks 的缺陷",slug:"原生的-git-hooks-的缺陷"},{level:2,title:"Husky 及相关工具库",slug:"husky-及相关工具库"},{level:3,title:"husky",slug:"husky"},{level:3,title:"lint-staged",slug:"lint-staged"},{level:3,title:"commitizen",slug:"commitizen"},{level:3,title:"commitlint",slug:"commitlint"}],readingTime:{minutes:8.97,words:2691},updateTime:"2022年8月25日 16:09",updateTimeStamp:1661414987e3,createTime:"2022年8月23日 16:25",createTimeStamp:1661243118e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"前端登录方案总结",frontmatter:{summary:"前端登录方案总结 场景描述 登录是几乎每个网站都有的一个基本功能，本文介绍几种常用的登录方式和背后的原理： Cookie + Session 登录; Token 登录; SSO 单点登录; OAuth 第三方登录; Cookie + Session 登录 HTTP 是一种无状态的协议，客户端每次发送请求时，首先要和服务器端建立一个连接，在请求完成后又会断开这",meta:[{property:"og:url",content:"/project/solutions/login.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"前端登录方案总结"},{property:"og:description",content:"前端登录方案总结 场景描述 登录是几乎每个网站都有的一个基本功能，本文介绍几种常用的登录方式和背后的原理： Cookie + Session 登录; Token 登录; SSO 单点登录; OAuth 第三方登录; Cookie + Session 登录 HTTP 是一种无状态的协议，客户端每次发送请求时，首先要和服务器端建立一个连接，在请求完成后又会断开这"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/project/solutions/login.html",relativePath:"project/solutions/login.md",key:"v-8501a46e",path:"/project/solutions/login/",headers:[{level:2,title:"场景描述",slug:"场景描述"},{level:2,title:"Cookie + Session 登录",slug:"cookie-session-登录"},{level:3,title:"实现流程",slug:"实现流程"},{level:3,title:"存在的问题",slug:"存在的问题"},{level:2,title:"Token 登录",slug:"token-登录"},{level:3,title:"Token 机制实现流程",slug:"token-机制实现流程"},{level:3,title:"Token 机制的特点",slug:"token-机制的特点"},{level:3,title:"Token 的生成方式",slug:"token-的生成方式"},{level:2,title:"SSO 单点登录",slug:"sso-单点登录"},{level:3,title:"SSO 机制实现流程",slug:"sso-机制实现流程"},{level:3,title:"SSO 单点登录退出",slug:"sso-单点登录退出"},{level:2,title:"OAuth 第三方登录",slug:"oauth-第三方登录"},{level:3,title:"OAuth 机制实现流程",slug:"oauth-机制实现流程"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:58.19,words:17457},updateTime:"2022年9月1日 14:33",updateTimeStamp:1662013996e3,createTime:"2022年3月17日 18:04",createTimeStamp:1647511443e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"接口设计",frontmatter:{sidebar:"auto",anchorDisplay:!1,summary:'接口设计 " 接口设计遵循 RESTful 规范，这是目前最流行的 API 设计规范。" 在 RESTful 风格中，URL 被视为「资源」，要求使用名词进行说明，一般标准如下： 其中版本号是可选项，用于版本控制，通常使用 v1 / v1.1 这样的格式进行表达。如果版本号没有写，则默认使用最新版本获取资源。 下面列几个 RESTful 接口设计的注意点。 ',meta:[{property:"og:url",content:"/style-guide/apis/"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"接口设计"},{property:"og:description",content:'接口设计 " 接口设计遵循 RESTful 规范，这是目前最流行的 API 设计规范。" 在 RESTful 风格中，URL 被视为「资源」，要求使用名词进行说明，一般标准如下： 其中版本号是可选项，用于版本控制，通常使用 v1 / v1.1 这样的格式进行表达。如果版本号没有写，则默认使用最新版本获取资源。 下面列几个 RESTful 接口设计的注意点。 '},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/style-guide/apis/",relativePath:"style-guide/apis/README.md",key:"v-07c26ec8",path:"/style-guide/apis/",headers:[{level:2,title:"域名",slug:"域名"},{level:2,title:"版本（Versioning）",slug:"版本-versioning"},{level:2,title:"路径（Endpoint）",slug:"路径-endpoint"},{level:2,title:"HTTP 动词",slug:"http-动词"},{level:2,title:"过滤信息（Filtering）",slug:"过滤信息-filtering"},{level:2,title:"状态码（Status Codes）",slug:"状态码-status-codes"},{level:2,title:"返回结果",slug:"返回结果"}],readingTime:{minutes:7.93,words:2379},updateTime:"2022年11月19日 15:02",updateTimeStamp:1668841364e3,createTime:"2021年8月21日 23:55",createTimeStamp:1629561313e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:4}]},{title:"文档规范",frontmatter:{sidebar:"auto",anchorDisplay:!1,summary:'文档规范 " 建议遵守行文规范，可以保证所有文章阅读体验的一致性，特别是复制到其他平台的样式一致性。" 本页介绍我遵循的写作规范和常用的文章结构，主要参考阮一峰老师的《中文技术文档的写作规范》和《如何写一本掘金小册》。 下面列几点比较重要常见的要点。 文章的标题分级 一级标题：文章的标题; 二级标题：文章主要内容的大标题; 三级标题：二级标题下面一级的小标题',meta:[{property:"og:url",content:"/style-guide/document/"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"文档规范"},{property:"og:description",content:'文档规范 " 建议遵守行文规范，可以保证所有文章阅读体验的一致性，特别是复制到其他平台的样式一致性。" 本页介绍我遵循的写作规范和常用的文章结构，主要参考阮一峰老师的《中文技术文档的写作规范》和《如何写一本掘金小册》。 下面列几点比较重要常见的要点。 文章的标题分级 一级标题：文章的标题; 二级标题：文章主要内容的大标题; 三级标题：二级标题下面一级的小标题'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/style-guide/document/",relativePath:"style-guide/document/README.md",key:"v-5884bff0",path:"/style-guide/document/",headers:[{level:2,title:"文章的标题分级",slug:"文章的标题分级"},{level:2,title:"段落与段落之间留空行",slug:"段落与段落之间留空行"},{level:2,title:"段首不进行缩进",slug:"段首不进行缩进"},{level:2,title:"换行的两种方式",slug:"换行的两种方式"},{level:2,title:"中英文前后留出空格",slug:"中英文前后留出空格"},{level:2,title:"代码缩进",slug:"代码缩进"},{level:2,title:"图片居中对齐并加注释",slug:"图片居中对齐并加注释"},{level:2,title:"标点符号",slug:"标点符号"},{level:2,title:"不要加粗标点符号",slug:"不要加粗标点符号"},{level:2,title:"字体大小与颜色",slug:"字体大小与颜色"},{level:2,title:"英文拼写要正确",slug:"英文拼写要正确"},{level:2,title:"文件名命名规范",slug:"文件名命名规范"},{level:2,title:"JavaScript 语句基本规则",slug:"javascript-语句基本规则"},{level:2,title:"附：参考大纲结构",slug:"附-参考大纲结构"}],readingTime:{minutes:13.82,words:4145},updateTime:"2021年12月6日 23:56",updateTimeStamp:1638806206e3,createTime:"2021年2月26日 14:03",createTimeStamp:1614319384e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:5}]},{title:"文案指南",frontmatter:{summary:"文案指南 文案不像机械生产加工，也不像计算机编程，它没有固定的标准，没有标准答案和通用模板。不过，每个领域总会有一些实用的技巧，文案也不例外。好的技巧能够让文案事半功倍，产生不错的效果。 在这个系列，通过借鉴各知名公司产品的文案，汲取其精华，整理出适合在不同领域的文案规则，梳理出了一份写文案时可以随时查阅的参考指南。 由于本人仅是开发，虽对一些产品有过观察和",meta:[{property:"og:url",content:"/style-guide/product/"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"文案指南"},{property:"og:description",content:"文案指南 文案不像机械生产加工，也不像计算机编程，它没有固定的标准，没有标准答案和通用模板。不过，每个领域总会有一些实用的技巧，文案也不例外。好的技巧能够让文案事半功倍，产生不错的效果。 在这个系列，通过借鉴各知名公司产品的文案，汲取其精华，整理出适合在不同领域的文案规则，梳理出了一份写文案时可以随时查阅的参考指南。 由于本人仅是开发，虽对一些产品有过观察和"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/style-guide/product/",relativePath:"style-guide/product/README.md",key:"v-6c8c1530",path:"/style-guide/product/",readingTime:{minutes:1.47,words:440},updateTime:"2021年12月8日 17:16",updateTimeStamp:1638955e6,createTime:"2021年12月8日 17:16",createTimeStamp:1638955e6,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"Code Review",frontmatter:{summary:"Code Review 目的 保证团队编码风格一致; 自己的代码要给别人看，开发过程中需要潜意识的注意代码规，以及逻辑严谨性。; 保证项目质量，扼杀潜在风险; 虽然功能完成后自己会自测，但难免会遗漏掉一些边界点，或者受思维限制的一些点。; 相互提升; 多学习别人代码，看高手是如何写出严谨、简洁、优美的代码，和自己做对照，取齐精髓，去其糟粕！; 便捷交叉维护;",meta:[{property:"og:url",content:"/style-guide/program/code-review.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Code Review"},{property:"og:description",content:"Code Review 目的 保证团队编码风格一致; 自己的代码要给别人看，开发过程中需要潜意识的注意代码规，以及逻辑严谨性。; 保证项目质量，扼杀潜在风险; 虽然功能完成后自己会自测，但难免会遗漏掉一些边界点，或者受思维限制的一些点。; 相互提升; 多学习别人代码，看高手是如何写出严谨、简洁、优美的代码，和自己做对照，取齐精髓，去其糟粕！; 便捷交叉维护;"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/style-guide/program/code-review.html",relativePath:"style-guide/program/code-review.md",key:"v-12719409",path:"/style-guide/program/code-review/",headers:[{level:2,title:"目的",slug:"目的"},{level:2,title:"如何开展",slug:"如何开展"},{level:2,title:"自测 check list",slug:"自测-check-list"},{level:2,title:"评分标准",slug:"评分标准"}],readingTime:{minutes:3.78,words:1134},updateTime:"2022年2月11日 17:16",updateTimeStamp:1644570968e3,createTime:"2022年2月11日 17:16",createTimeStamp:1644570968e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"B 端产品文案指南",frontmatter:{summary:'B 端产品文案指南 " B 端文案不同于 C 端，面对的用户都是企业为主，语言风格上要正式官方，以帮助用户高效地使用产品、完成工作为核心目标，据此来组织内容和语言。" 前言 本文主要面向 B 类业务、简体中文语境，提供实操性指南。; 行业内约定俗成的常用语请继续沿用，可以不依照这里的建议。; 本文所指的文案不包含营销推广类文案。; 原则 帮助用户高效操作 站',meta:[{property:"og:url",content:"/style-guide/product/tob.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"B 端产品文案指南"},{property:"og:description",content:'B 端产品文案指南 " B 端文案不同于 C 端，面对的用户都是企业为主，语言风格上要正式官方，以帮助用户高效地使用产品、完成工作为核心目标，据此来组织内容和语言。" 前言 本文主要面向 B 类业务、简体中文语境，提供实操性指南。; 行业内约定俗成的常用语请继续沿用，可以不依照这里的建议。; 本文所指的文案不包含营销推广类文案。; 原则 帮助用户高效操作 站'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/style-guide/product/tob.html",relativePath:"style-guide/product/tob.md",key:"v-1145cc49",path:"/style-guide/product/tob/",headers:[{level:2,title:"前言",slug:"前言"},{level:2,title:"原则",slug:"原则"},{level:3,title:"帮助用户高效操作",slug:"帮助用户高效操作"},{level:3,title:"一致性",slug:"一致性"},{level:3,title:"内容完整、语言精简",slug:"内容完整、语言精简"},{level:3,title:"用词专业、精准",slug:"用词专业、精准"},{level:3,title:"语气友好、正面",slug:"语气友好、正面"},{level:2,title:"词表",slug:"词表"},{level:2,title:"格式",slug:"格式"},{level:3,title:"段落",slug:"段落"},{level:3,title:"空格",slug:"空格"},{level:3,title:"标点",slug:"标点"},{level:2,title:"文案类型",slug:"文案类型"},{level:3,title:"系统通知",slug:"系统通知"},{level:3,title:"帮助/提示",slug:"帮助-提示"},{level:3,title:"操作引导",slug:"操作引导"},{level:3,title:"操作反馈",slug:"操作反馈"},{level:3,title:"报错信息",slug:"报错信息"},{level:2,title:"场景指南",slug:"场景指南"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:11.5,words:3451},updateTime:"2021年12月9日 16:46",updateTimeStamp:1639039573e3,createTime:"2021年12月8日 17:58",createTimeStamp:1638957483e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"代码风格",frontmatter:{summary:"代码风格 团队关于代码风格必须遵循两个基本原则：少数服从多数、用工具统一风格。 Tips： 在一个项目中，永远遵循同一套编码规范。; 这里整理的代码风格我在个人项目中遵循的，具体需要根据所在团队和项目的变化而调整。; 参与和维护其他人的项目时，秉承入乡随俗的原则，尊重别人代码的风格习惯。; 与其自己建立编码规范，更推荐选择社区沉淀下来的规范。因此，在制定代码",meta:[{property:"og:url",content:"/style-guide/program/"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"代码风格"},{property:"og:description",content:"代码风格 团队关于代码风格必须遵循两个基本原则：少数服从多数、用工具统一风格。 Tips： 在一个项目中，永远遵循同一套编码规范。; 这里整理的代码风格我在个人项目中遵循的，具体需要根据所在团队和项目的变化而调整。; 参与和维护其他人的项目时，秉承入乡随俗的原则，尊重别人代码的风格习惯。; 与其自己建立编码规范，更推荐选择社区沉淀下来的规范。因此，在制定代码"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/style-guide/program/",relativePath:"style-guide/program/README.md",key:"v-34deb206",path:"/style-guide/program/",readingTime:{minutes:2.67,words:802},updateTime:"2022年2月11日 17:16",updateTimeStamp:1644570968e3,createTime:"2021年2月26日 14:03",createTimeStamp:1614319384e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:2}]},{title:"CSS 规范",frontmatter:{summary:'CSS 规范 样式文件 样式文件必须写上 @charset 规则，并且一定要在样式文件的第一行首个字符位置开始写，编码名用 "UTF-8"。 推荐： 不推荐： 代码格式化 样式书写一般有两种：一种是紧凑格式（Compact），一种是展开格式（Expanded）。 推荐：展开格式（Expanded） 不推荐：紧凑格式（Compact） 代码大小写 样式选择器，',meta:[{property:"og:url",content:"/style-guide/program/css-spec.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"CSS 规范"},{property:"og:description",content:'CSS 规范 样式文件 样式文件必须写上 @charset 规则，并且一定要在样式文件的第一行首个字符位置开始写，编码名用 "UTF-8"。 推荐： 不推荐： 代码格式化 样式书写一般有两种：一种是紧凑格式（Compact），一种是展开格式（Expanded）。 推荐：展开格式（Expanded） 不推荐：紧凑格式（Compact） 代码大小写 样式选择器，'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/style-guide/program/css-spec.html",relativePath:"style-guide/program/css-spec.md",key:"v-74993e37",path:"/style-guide/program/css-spec/",headers:[{level:2,title:"样式文件",slug:"样式文件"},{level:2,title:"代码格式化",slug:"代码格式化"},{level:2,title:"代码大小写",slug:"代码大小写"},{level:2,title:"代码易读性",slug:"代码易读性"},{level:2,title:"属性值引号",slug:"属性值引号"},{level:2,title:"声明顺序",slug:"声明顺序"},{level:2,title:"CSS3 浏览器私有前缀",slug:"css3-浏览器私有前缀"},{level:2,title:"媒体查询的位置",slug:"媒体查询的位置"},{level:2,title:"注释规范",slug:"注释规范"},{level:3,title:"单行注释",slug:"单行注释"},{level:3,title:"模块注释",slug:"模块注释"},{level:3,title:"文件注释",slug:"文件注释"}],readingTime:{minutes:3.49,words:1046},updateTime:"2022年2月11日 15:47",updateTimeStamp:1644565634e3,createTime:"2021年2月26日 14:03",createTimeStamp:1614319384e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"HTML 规范",frontmatter:{summary:"HTML 规范 文件模板 HTML5 文件模板： 移动端： 属性顺序 HTML 属性应当按照以下给出的顺序依次排列，确保代码的易读性。 class; id，name; data-*; src，for，type，href，value; title，alt; role，aria-*; class 用于标识高度可复用组件，因此应该排在首位。 id 用于标识具体组件",meta:[{property:"og:url",content:"/style-guide/program/html-spec.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"HTML 规范"},{property:"og:description",content:"HTML 规范 文件模板 HTML5 文件模板： 移动端： 属性顺序 HTML 属性应当按照以下给出的顺序依次排列，确保代码的易读性。 class; id，name; data-*; src，for，type，href，value; title，alt; role，aria-*; class 用于标识高度可复用组件，因此应该排在首位。 id 用于标识具体组件"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/style-guide/program/html-spec.html",relativePath:"style-guide/program/html-spec.md",key:"v-37a94c69",path:"/style-guide/program/html-spec/",headers:[{level:2,title:"文件模板",slug:"文件模板"},{level:2,title:"属性顺序",slug:"属性顺序"},{level:2,title:"class 命名",slug:"class-命名"},{level:2,title:"id 命名",slug:"id-命名"},{level:2,title:"name 命名",slug:"name-命名"},{level:2,title:"标签类型属性",slug:"标签类型属性"},{level:2,title:"代码嵌套",slug:"代码嵌套"},{level:2,title:"注释规范",slug:"注释规范"},{level:3,title:"单行注释",slug:"单行注释"},{level:3,title:"模块注释",slug:"模块注释"},{level:3,title:"嵌套模块注释",slug:"嵌套模块注释"}],readingTime:{minutes:3.38,words:1013},updateTime:"2021年12月3日 15:01",updateTimeStamp:1638514916e3,createTime:"2021年2月26日 14:03",createTimeStamp:1614319384e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"JavaScript 规范",frontmatter:{summary:'JavaScript 规范 " 统一团队的编码规范，有助于代码的维护。 " " 没有什么规则是「必须」的。这些是风格偏好，而不是宗教教条。" 语法 下图是一个概要图，其中列出了一些建议的规范，更具体的请参阅下文： （JavaScript 编码规范） 花括号 在大多数的 JavaScript 项目中，花括号以「Egyptian」风格书写，即左花括号与相应的关键',meta:[{property:"og:url",content:"/style-guide/program/javascript-spec.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"JavaScript 规范"},{property:"og:description",content:'JavaScript 规范 " 统一团队的编码规范，有助于代码的维护。 " " 没有什么规则是「必须」的。这些是风格偏好，而不是宗教教条。" 语法 下图是一个概要图，其中列出了一些建议的规范，更具体的请参阅下文： （JavaScript 编码规范） 花括号 在大多数的 JavaScript 项目中，花括号以「Egyptian」风格书写，即左花括号与相应的关键'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/style-guide/program/javascript-spec.html",relativePath:"style-guide/program/javascript-spec.md",key:"v-55273769",path:"/style-guide/program/javascript-spec/",headers:[{level:2,title:"语法",slug:"语法"},{level:2,title:"花括号",slug:"花括号"},{level:2,title:"单行代码块",slug:"单行代码块"},{level:2,title:"缩进",slug:"缩进"},{level:2,title:"对象字面量的键值缩进",slug:"对象字面量的键值缩进"},{level:2,title:"构造函数首字母大写",slug:"构造函数首字母大写"},{level:2,title:"拖尾换行",slug:"拖尾换行"},{level:2,title:"空行",slug:"空行"},{level:2,title:"变量声明",slug:"变量声明"},{level:2,title:"分号",slug:"分号"},{level:2,title:"代码块空格",slug:"代码块空格"},{level:2,title:"函数声明的空格",slug:"函数声明的空格"},{level:2,title:"操作符的空格",slug:"操作符的空格"},{level:2,title:"函数位置",slug:"函数位置"},{level:2,title:"注释规范",slug:"注释规范"},{level:3,title:"单行注释",slug:"单行注释"},{level:3,title:"多行注释",slug:"多行注释"},{level:3,title:"特殊标记",slug:"特殊标记"},{level:3,title:"函数/方法注释",slug:"函数-方法注释"},{level:3,title:"文件注释",slug:"文件注释"}],readingTime:{minutes:6.22,words:1865},updateTime:"2022年4月18日 16:01",updateTimeStamp:1650268905e3,createTime:"2021年2月26日 14:03",createTimeStamp:1614319384e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:6}]},{title:"版本控制",frontmatter:{summary:"版本控制 版本控制系统是指对软件开发过程中程序代码、配置文件、文档等发生的变更进行管理的系统，它可以帮助团队更好的沟通协作，从而更好的进行交付，常见的版本控制系统分为集中式版本控制系统（如 SVN）和分布式版本控制系统（如 Git）。 目前业内大部分团队都使用 Git 作为版本库，管理好代码也是一种学问。尤其是涉及多人并发协作、需要管理多个软件版本的情况下，",meta:[{property:"og:url",content:"/style-guide/version-control/"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"版本控制"},{property:"og:description",content:"版本控制 版本控制系统是指对软件开发过程中程序代码、配置文件、文档等发生的变更进行管理的系统，它可以帮助团队更好的沟通协作，从而更好的进行交付，常见的版本控制系统分为集中式版本控制系统（如 SVN）和分布式版本控制系统（如 Git）。 目前业内大部分团队都使用 Git 作为版本库，管理好代码也是一种学问。尤其是涉及多人并发协作、需要管理多个软件版本的情况下，"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/style-guide/version-control/",relativePath:"style-guide/version-control/README.md",key:"v-4c5e9d84",path:"/style-guide/version-control/",readingTime:{minutes:1.46,words:438},updateTime:"2022年2月11日 14:03",updateTimeStamp:1644559403e3,createTime:"2021年11月22日 17:42",createTimeStamp:1637574178e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:3}]},{title:"Vue 项目规范",frontmatter:{summary:"Vue 项目规范 前言 根据入乡随俗原则，在 Vue 项目中 ： JavaScript 语句后不加分号; 缩进使用两个空格; 市面上常用的命名规范： camelCase（小驼峰式命名法 —— 首字母小写）; PascalCase（大驼峰式命名法 —— 首字母大写）; kebab-case（短横线连接式）; Snake（下划线连接式）; 工程目录 全局通用的组",meta:[{property:"og:url",content:"/style-guide/program/vuejs-spec.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Vue 项目规范"},{property:"og:description",content:"Vue 项目规范 前言 根据入乡随俗原则，在 Vue 项目中 ： JavaScript 语句后不加分号; 缩进使用两个空格; 市面上常用的命名规范： camelCase（小驼峰式命名法 —— 首字母小写）; PascalCase（大驼峰式命名法 —— 首字母大写）; kebab-case（短横线连接式）; Snake（下划线连接式）; 工程目录 全局通用的组"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/style-guide/program/vuejs-spec.html",relativePath:"style-guide/program/vuejs-spec.md",key:"v-4db8740f",path:"/style-guide/program/vuejs-spec/",headers:[{level:2,title:"前言",slug:"前言"},{level:2,title:"工程目录",slug:"工程目录"},{level:2,title:"命名规范",slug:"命名规范"},{level:3,title:"通用文件与文件夹",slug:"通用文件与文件夹"},{level:3,title:"Vue 特色文件夹",slug:"vue-特色文件夹"},{level:3,title:"Vue 组件命名",slug:"vue-组件命名"},{level:3,title:"Vue 组件内部参数命名",slug:"vue-组件内部参数命名"},{level:2,title:"Vue 代码规范",slug:"vue-代码规范"},{level:3,title:"代码结构",slug:"代码结构"},{level:3,title:"书写顺序",slug:"书写顺序"},{level:3,title:"书写格式",slug:"书写格式"},{level:3,title:"赋值要求",slug:"赋值要求"},{level:3,title:"API 用法要求",slug:"api-用法要求"}],readingTime:{minutes:15.9,words:4770},updateTime:"2022年6月16日 14:37",updateTimeStamp:1655361477e3,createTime:"2021年2月26日 14:03",createTimeStamp:1614319384e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:7}]},{title:"Git 提交信息规范",frontmatter:{summary:'Git 提交信息规范 " 无论是个人项目还是在团队协作中，commit message 都应该清晰明了，遵守一定规范。" "" " 目前，社区有多种 commit message 的写法规范。本文介绍 Angular 规范，这是目前使用最广的写法，比较合理和系统化，并且有配套的工具。" 规范 commit 的好处 提供更明确的历史信息，方便浏览和判断提交目的',meta:[{property:"og:url",content:"/style-guide/version-control/git-commit-message.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Git 提交信息规范"},{property:"og:description",content:'Git 提交信息规范 " 无论是个人项目还是在团队协作中，commit message 都应该清晰明了，遵守一定规范。" "" " 目前，社区有多种 commit message 的写法规范。本文介绍 Angular 规范，这是目前使用最广的写法，比较合理和系统化，并且有配套的工具。" 规范 commit 的好处 提供更明确的历史信息，方便浏览和判断提交目的'},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/style-guide/version-control/git-commit-message.html",relativePath:"style-guide/version-control/git-commit-message.md",key:"v-0fff6bb1",path:"/style-guide/version-control/git-commit-message/",headers:[{level:2,title:"规范 commit 的好处",slug:"规范-commit-的好处"},{level:2,title:"开源项目 commit 示例",slug:"开源项目-commit-示例"},{level:2,title:"commit 的格式",slug:"commit-的格式"},{level:3,title:"主题（Subject）",slug:"主题-subject"},{level:3,title:"正文（Body）",slug:"正文-body"},{level:3,title:"尾注（Footer）",slug:"尾注-footer"},{level:2,title:"模板参考",slug:"模板参考"},{level:2,title:"提交频率",slug:"提交频率"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:5.84,words:1751},updateTime:"2022年12月6日 18:06",updateTimeStamp:1670321178e3,createTime:"2021年11月22日 17:42",createTimeStamp:1637574178e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:10}]},{title:"版本号定义规范",frontmatter:{summary:"版本号定义规范 开源项目示例 下图是目前最流行的前端框架之一的 vue 近期版本发布记录，截图来自 npmjs.com： （vue 版本发布记录） 从上图不难看出： vue 的版本号通常由三位组成，形如：X.Y.Z; 版本是严格递增的，此处是：3.2.0 -> 3.2.1 -> 3.2.2; 在发布重要版本时，可以发布 alpha，rc 等先行版本; alp",meta:[{property:"og:url",content:"/style-guide/version-control/version-number.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"版本号定义规范"},{property:"og:description",content:"版本号定义规范 开源项目示例 下图是目前最流行的前端框架之一的 vue 近期版本发布记录，截图来自 npmjs.com： （vue 版本发布记录） 从上图不难看出： vue 的版本号通常由三位组成，形如：X.Y.Z; 版本是严格递增的，此处是：3.2.0 -> 3.2.1 -> 3.2.2; 在发布重要版本时，可以发布 alpha，rc 等先行版本; alp"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/style-guide/version-control/version-number.html",relativePath:"style-guide/version-control/version-number.md",key:"v-3c8c0ce6",path:"/style-guide/version-control/version-number/",headers:[{level:2,title:"开源项目示例",slug:"开源项目示例"},{level:2,title:"语义化版本",slug:"语义化版本"},{level:2,title:"先行版本",slug:"先行版本"},{level:2,title:"版本发布准则",slug:"版本发布准则"}],readingTime:{minutes:3.32,words:996},updateTime:"2022年2月10日 17:27",updateTimeStamp:1644485277e3,createTime:"2022年2月10日 17:27",createTimeStamp:1644485277e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:1}]},{title:"Git 工作流 — 分支策略",frontmatter:{summary:"Git 工作流 — 分支策略 前言 设想这样一个场景：某企业的开发团队使用 Git 管理日常开发工作，最初开发团队的代码有一条主干分支（master/main）。后来为了开发新功能，从主干分支拉出一条特性分支，但新功能完成后，该特性分支没有合入主干分支，而是作为下次开发的主干分支，重新拉出一条新的特性分支，导致主干分支一直形同虚设，团队没有一条稳定的代码分支",meta:[{property:"og:url",content:"/style-guide/version-control/git-workflow.html"},{property:"og:site_name",content:"前端修炼小册"},{property:"og:title",content:"Git 工作流 — 分支策略"},{property:"og:description",content:"Git 工作流 — 分支策略 前言 设想这样一个场景：某企业的开发团队使用 Git 管理日常开发工作，最初开发团队的代码有一条主干分支（master/main）。后来为了开发新功能，从主干分支拉出一条特性分支，但新功能完成后，该特性分支没有合入主干分支，而是作为下次开发的主干分支，重新拉出一条新的特性分支，导致主干分支一直形同虚设，团队没有一条稳定的代码分支"},{property:"og:type",content:"article"},{property:"og:locale",content:"zh-CN"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:image:alt",content:"前端修炼小册"},{property:"article:author",content:"wenyuan"}]},regularPath:"/style-guide/version-control/git-workflow.html",relativePath:"style-guide/version-control/git-workflow.md",key:"v-6aa1cc15",path:"/style-guide/version-control/git-workflow/",headers:[{level:2,title:"前言",slug:"前言"},{level:2,title:"GitFlow 策略",slug:"gitflow-策略"},{level:3,title:"分支定义",slug:"分支定义"},{level:3,title:"开发流程",slug:"开发流程"},{level:3,title:"优缺点",slug:"优缺点"},{level:2,title:"GitHubFlow 策略",slug:"githubflow-策略"},{level:3,title:"适用场景",slug:"适用场景"},{level:3,title:"开发流程",slug:"开发流程-2"},{level:3,title:"优缺点",slug:"优缺点-2"},{level:2,title:"GitLabFlow 策略",slug:"gitlabflow-策略"},{level:2,title:"团队定制的分支策略",slug:"团队定制的分支策略"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:17.45,words:5235},updateTime:"2022年12月22日 14:16",updateTimeStamp:1671689773e3,createTime:"2021年11月27日 15:45",createTimeStamp:1637999137e3,contributors:[{name:"wenyuan",email:"xuwenyuan2016@163.com",commits:6}]}],themeConfig:{docsRepo:"wenyuan/fedbook",docsDir:"docs",logo:"/img/logo.png",nav:[{text:"技术规范",items:[{text:"版本控制",link:"/style-guide/version-control/"},{text:"代码风格",link:"/style-guide/program/"},{text:"文档规范",link:"/style-guide/document/"},{text:"接口设计",link:"/style-guide/apis/"},{text:"文案指南",link:"/style-guide/product/"}]},{text:"前端知识",items:[{text:"基础",items:[{text:"HTML",link:"/frontend-knowledge/html/"},{text:"CSS",link:"/frontend-knowledge/css/"},{text:"JavaScript",link:"/frontend-knowledge/javascript/"}]},{text:"进阶",items:[{text:"ECMAScript 6+",link:"/frontend-knowledge/es6-and-beyond/"},{text:"TypeScript",link:"/frontend-knowledge/typescript/"},{text:"浏览器相关",link:"/frontend-knowledge/browser/"}]},{text:"手写",items:[{text:"JS 手写",link:"/frontend-knowledge/javascript-handwritten/"}]}]},{text:"工程化",items:[{text:"框架",items:[{text:"Vue.js",link:"/frontend-engineering/vuejs/"},{text:"React",link:"/frontend-engineering/react/"}]},{text:"工具",items:[{text:"Webpack",link:"/frontend-engineering/webpack/"},{text:"包管理工具",link:"/frontend-engineering/package/"}]}]},{text:"必知必会",items:[{text:"常用工具",items:[{text:"Git",link:"/basic-skills/git/"},{text:"Nginx",link:"/basic-skills/nginx/"},{text:"Linux",link:"/basic-skills/linux/common-commands/"},{text:"Docker",link:"/basic-skills/docker/docker-tutorial/"}]},{text:"网络知识",items:[{text:"计算机网络",link:"/basic-skills/network/"}]}]},{text:"深入学习",items:[{text:"数据结构与算法",link:"/in-depth-learning/algorithm/"},{text:"设计模式",link:"/in-depth-learning/design-patterns/"},{text:"源码阅读与学习",link:"/in-depth-learning/source-code/"}]},{text:"后端知识",items:[{text:"Python 技术栈",items:[{text:"Python",link:"/backend-knowledge/python/"},{text:"Django",link:"/backend-knowledge/django/"}]},{text:"数据库/中间件",items:[{text:"MySQL",link:"/backend-knowledge/mysql/"},{text:"Redis",link:"/backend-knowledge/redis/"},{text:"Elasticsearch",link:"/backend-knowledge/elasticsearch/"}]}]},{text:"项目相关",items:[{text:"解决方案",link:"/project/solutions/"},{text:"问题排查",link:"/project/troubleshooting/"}]},{text:"其它",items:[{text:"站内",items:[{text:"关于本站",link:"/others/about"},{text:"课外学习",link:"/extracurricular/"}]},{text:"站外",items:[{text:"GitHub",link:"https://github.com/wenyuan"}]}]}],sidebar:{"/style-guide/program/":[{title:"代码风格",path:"/style-guide/program/",collapsable:!1,children:[{title:"HTML 规范",path:"/style-guide/program/html-spec"},{title:"CSS 规范",path:"/style-guide/program/css-spec"},{title:"JavaScript 规范",path:"/style-guide/program/javascript-spec"},{title:"Vue 项目规范",path:"/style-guide/program/vuejs-spec"},{title:"Code Review",path:"/style-guide/program/code-review"}]}],"/style-guide/version-control/":[{title:"版本控制",collapsable:!1,children:[{title:"版本号定义规范",path:"/style-guide/version-control/version-number"},{title:"Git 工作流 — 分支策略",path:"/style-guide/version-control/git-workflow"},{title:"Git 提交信息规范",path:"/style-guide/version-control/git-commit-message"}]}],"/style-guide/product/":[{title:"文案指南",collapsable:!1,children:[{title:"B 端产品文案指南",path:"/style-guide/product/tob"}]}],"/frontend-knowledge/html/":[{title:"HTML",collapsable:!1,children:[{title:"HTML 基本结构",path:"/frontend-knowledge/html/html-basic-structure"},{title:"语义类标签",path:"/frontend-knowledge/html/semantic-elements"},{title:"未完待续",path:"/frontend-knowledge/html/to-be-continued"}]}],"/frontend-knowledge/css/":[{title:"CSS",collapsable:!1,children:[{title:"CSS 引入方式",path:"/frontend-knowledge/css/ways-to-insert-css"},{title:"选择器与样式优先级",path:"/frontend-knowledge/css/selectors-and-selector-priority"},{title:"伪元素和伪类",path:"/frontend-knowledge/css/pseudo-elements-and-pseudo-classes"},{title:"长度和单位",path:"/frontend-knowledge/css/length-and-units"},{title:"盒模型",path:"/frontend-knowledge/css/box-model"},{title:"定位（position）",path:"/frontend-knowledge/css/position-property"},{title:"浮动（float）",path:"/frontend-knowledge/css/float-property"},{title:"BFC",path:"/frontend-knowledge/css/bfc"},{title:"经典布局",path:"/frontend-knowledge/css/layout"},{title:"Flexbox 布局",path:"/frontend-knowledge/css/flexbox"},{title:"Grid 布局",path:"/frontend-knowledge/css/grid"},{title:"未完待续",path:"/frontend-knowledge/css/to-be-continued"}]}],"/frontend-knowledge/javascript/":[{title:"JavaScript 核心",collapsable:!0,children:[{title:"数据类型",path:"/frontend-knowledge/javascript/data-types"},{title:"栈空间和堆空间",path:"/frontend-knowledge/javascript/stack-and-heap"},{title:"执行上下文和调用栈",path:"/frontend-knowledge/javascript/execution-context"},{title:"作用域",path:"/frontend-knowledge/javascript/scope"},{title:"闭包",path:"/frontend-knowledge/javascript/closure"},{title:"this 指向",path:"/frontend-knowledge/javascript/this-keyword"},{title:"原型与原型链",path:"/frontend-knowledge/javascript/prototype-and-prototype-chain"},{title:"垃圾回收",path:"/frontend-knowledge/javascript/gc"},{title:"同步与异步",path:"/frontend-knowledge/javascript/sync-and-async"},{title:"事件循环机制",path:"/frontend-knowledge/javascript/event-loop"},{title:"浅克隆与深克隆",path:"/frontend-knowledge/javascript/shallow-clone-and-deep-clone"},{title:"高阶函数",path:"/frontend-knowledge/javascript/higher-order-function"},{title:"未完待续",path:"/frontend-knowledge/javascript/to-be-continued"}]},{title:"JavaScript 专题",collapsable:!0,children:[{title:"数组遍历的几种方式",path:"/frontend-knowledge/javascript/array-iteration"},{title:"对象遍历的几种方式",path:"/frontend-knowledge/javascript/object-iteration"},{title:"继承的八种实现方式",path:"/frontend-knowledge/javascript/inheritance"},{title:"声明函数的六种方式",path:"/frontend-knowledge/javascript/function-declare"},{title:"调用函数的四种方式",path:"/frontend-knowledge/javascript/function-invocation"},{title:"未完待续",path:"/frontend-knowledge/javascript/to-be-continued"}]}],"/frontend-knowledge/es6-and-beyond/":[{title:"ECMAScript2015(ES6)",collapsable:!0,children:[{title:"let 和 const",path:"/frontend-knowledge/es6-and-beyond/es6-let-const"},{title:"解构赋值",path:"/frontend-knowledge/es6-and-beyond/es6-destructuring"},{title:"Array 扩展",path:"/frontend-knowledge/es6-and-beyond/es6-array"},{title:"Function 扩展",path:"/frontend-knowledge/es6-and-beyond/es6-function"},{title:"Object 扩展",path:"/frontend-knowledge/es6-and-beyond/es6-object"},{title:"Class",path:"/frontend-knowledge/es6-and-beyond/es6-class"},{title:"Symbol",path:"/frontend-knowledge/es6-and-beyond/es6-symbol"},{title:"Set",path:"/frontend-knowledge/es6-and-beyond/es6-set"},{title:"Map",path:"/frontend-knowledge/es6-and-beyond/es6-map"},{title:"String 扩展",path:"/frontend-knowledge/es6-and-beyond/es6-string"},{title:"RegExp 扩展",path:"/frontend-knowledge/es6-and-beyond/es6-regexp"},{title:"Number 扩展",path:"/frontend-knowledge/es6-and-beyond/es6-number"},{title:"Proxy",path:"/frontend-knowledge/es6-and-beyond/es6-proxy"},{title:"Reflect",path:"/frontend-knowledge/es6-and-beyond/es6-reflect"},{title:"Promise",path:"/frontend-knowledge/es6-and-beyond/es6-promise"},{title:"Generator",path:"/frontend-knowledge/es6-and-beyond/es6-generator"},{title:"Module",path:"/frontend-knowledge/es6-and-beyond/es6-module"}]},{title:"ECMAScript2016(ES7)",collapsable:!0,children:[{title:"Array.prototype.includes()",path:"/frontend-knowledge/es6-and-beyond/es7-array"},{title:"幂运算符",path:"/frontend-knowledge/es6-and-beyond/es7-pow"}]},{title:"ECMAScript2017(ES8)",collapsable:!0,children:[{title:"async / await",path:"/frontend-knowledge/es6-and-beyond/es8-async-await"},{title:"Object 扩展",path:"/frontend-knowledge/es6-and-beyond/es8-object"},{title:"String 扩展",path:"/frontend-knowledge/es6-and-beyond/es8-string"},{title:"尾逗号 Trailing commas",path:"/frontend-knowledge/es6-and-beyond/es8-trailing-commas"}]},{title:"ECMAScript2018(ES9)",collapsable:!0,children:[{title:"for await of",path:"/frontend-knowledge/es6-and-beyond/es9-for-await-of"},{title:"RegExp 扩展",path:"/frontend-knowledge/es6-and-beyond/es9-regexp"},{title:"Object 扩展",path:"/frontend-knowledge/es6-and-beyond/es9-object"},{title:"Promise.prototype.finally()",path:"/frontend-knowledge/es6-and-beyond/es9-promise"}]},{title:"ECMAScript2019(ES10)",collapsable:!0,children:[{title:"Object.fromEntries()",path:"/frontend-knowledge/es6-and-beyond/es10-object"},{title:"String 扩展",path:"/frontend-knowledge/es6-and-beyond/es10-string"},{title:"Array 扩展",path:"/frontend-knowledge/es6-and-beyond/es10-array"},{title:"修订 Function.prototype.toString()",path:"/frontend-knowledge/es6-and-beyond/es10-function"},{title:"可选的 Catch Binding",path:"/frontend-knowledge/es6-and-beyond/es10-catch"},{title:"JSON 扩展",path:"/frontend-knowledge/es6-and-beyond/es10-json"},{title:"Symbol 扩展",path:"/frontend-knowledge/es6-and-beyond/es10-symbol"}]},{title:"ECMAScript2020(ES11)",collapsable:!0,children:[{title:"String 扩展",path:"/frontend-knowledge/es6-and-beyond/es11-string"},{title:"动态引入",path:"/frontend-knowledge/es6-and-beyond/es11-dynamic-import"},{title:"BigInt",path:"/frontend-knowledge/es6-and-beyond/es11-bigint"},{title:"Promise.allSettled()",path:"/frontend-knowledge/es6-and-beyond/es11-promise"},{title:"globalThis",path:"/frontend-knowledge/es6-and-beyond/es11-globalthis"},{title:"可选链 Optional chaining",path:"/frontend-knowledge/es6-and-beyond/es11-chaining"},{title:"空值合并运算符",path:"/frontend-knowledge/es6-and-beyond/es11-nullish"}]},{title:"ECMAScript2021(ES12)",collapsable:!0,children:[{title:"String 扩展",path:"/frontend-knowledge/es6-and-beyond/es12-string"},{title:"类的私有方法",path:"/frontend-knowledge/es6-and-beyond/es12-private-class-fields"},{title:"Promise.any() 和 AggregateError",path:"/frontend-knowledge/es6-and-beyond/es12-promise"},{title:"数字分隔符",path:"/frontend-knowledge/es6-and-beyond/es12-number"},{title:"新的逻辑操作符",path:"/frontend-knowledge/es6-and-beyond/es12-logical"}]}],"/frontend-knowledge/typescript/":[{title:"TypeScript 基础",collapsable:!1,children:[{title:"基础类型（始于 JS）",path:"/frontend-knowledge/typescript/basic-types"},{title:"字面量类型与枚举",path:"/frontend-knowledge/typescript/literal-and-enum"},{title:"函数与 class 类型",path:"/frontend-knowledge/typescript/function-and-class"},{title:"内置类型和类型断言",path:"/frontend-knowledge/typescript/any-unknown-never"}]},{title:"TypeScript 进阶",collapsable:!1,children:[{title:"类型创建",path:"/frontend-knowledge/typescript/to-create-type"},{title:"类型安全保护",path:"/frontend-knowledge/typescript/to-protect-type"},{title:"泛型",path:"/frontend-knowledge/typescript/generic-types"}]}],"/frontend-knowledge/browser/":[{title:"浏览器工作原理",collapsable:!1,children:[{title:"浏览器宏观认识",path:"/frontend-knowledge/browser/browser-macro-knowledge"},{title:"浏览器内核与 JavaScript 引擎",path:"/frontend-knowledge/browser/kernel-and-javascript-engine"},{title:"渲染引擎的工作原理",path:"/frontend-knowledge/browser/execution-details-of-rendering-process"},{title:"V8 引擎的工作原理",path:"/frontend-knowledge/browser/execution-details-of-v8-engine"}]},{title:"浏览器安全",collapsable:!1,children:[{title:"同源策略",path:"/frontend-knowledge/browser/same-origin-policy"},{title:"跨站脚本攻击（XSS）",path:"/frontend-knowledge/browser/xss"},{title:"CSRF 攻击",path:"/frontend-knowledge/browser/csrf"},{title:"网络安全协议（HTTPS）",path:"/frontend-knowledge/browser/https"}]},{title:"浏览器性能",collapsable:!1,children:[{title:"浏览器缓存机制",path:"/frontend-knowledge/browser/browser-caching-mechanism"},{title:"回流与重绘",path:"/frontend-knowledge/browser/reflow-and-repaint"}]}],"/frontend-knowledge/javascript-handwritten/":[{title:"常用函数",collapsable:!1,children:[{title:"实现节流函数（throttle）",path:"/frontend-knowledge/javascript-handwritten/实现节流函数-throttle"},{title:"实现防抖函数（debounce）",path:"/frontend-knowledge/javascript-handwritten/实现防抖函数-debounce"},{title:"实现浅拷贝（shallowClone）",path:"/frontend-knowledge/javascript-handwritten/实现浅拷贝-shallow-clone"},{title:"实现深拷贝（deepClone）",path:"/frontend-knowledge/javascript-handwritten/实现深拷贝-deep-clone"}]},{title:"原生运算符",collapsable:!0,children:[{title:"实现 instanceof 运算符",path:"/frontend-knowledge/javascript-handwritten/实现instanceof运算符"},{title:"实现 new 运算符",path:"/frontend-knowledge/javascript-handwritten/实现new运算符"}]},{title:"对象内置方法",collapsable:!0,children:[{title:"实现 call 方法",path:"/frontend-knowledge/javascript-handwritten/实现call方法"},{title:"实现 apply 方法",path:"/frontend-knowledge/javascript-handwritten/实现apply方法"},{title:"实现 bind 方法",path:"/frontend-knowledge/javascript-handwritten/实现bind方法"},{title:"实现 Object.create 方法",path:"/frontend-knowledge/javascript-handwritten/实现object-create方法"}]},{title:"数组相关方法",collapsable:!0,children:[{title:"实现数组扁平化 flat 方法",path:"/frontend-knowledge/javascript-handwritten/实现数组扁平化flat方法"},{title:"实现数组去重的方法",path:"/frontend-knowledge/javascript-handwritten/实现数组去重的方法"},{title:"实现对象数组去重的方法",path:"/frontend-knowledge/javascript-handwritten/实现对象数组去重的方法"}]},{title:"框架和类库相关",collapsable:!0,children:[{title:"实现符合 Promises/A+ 规范的 Promise",path:"/frontend-knowledge/javascript-handwritten/my-promise"}]}],"/frontend-engineering/vuejs/":[{title:"Vue.js",collapsable:!1,children:[{title:"基础用法要点",path:"/frontend-engineering/vuejs/basic-use"},{title:"高级用法特性",path:"/frontend-engineering/vuejs/advanced-use"},{title:"响应式原理",path:"/frontend-engineering/vuejs/reactive-data"},{title:"虚拟 DOM 与 diff 算法",path:"/frontend-engineering/vuejs/virtual-dom-and-diff"},{title:"模板编译",path:"/frontend-engineering/vuejs/template-compile"},{title:"组件渲染与更新",path:"/frontend-engineering/vuejs/component-render-and-update"},{title:"前端路由原理",path:"/frontend-engineering/vuejs/vue-router"}]}],"/frontend-engineering/react/":[{title:"React 基础",collapsable:!1,children:[{title:"React JSX",path:"/frontend-engineering/react/react-jsx"},{title:"React Hooks（内置）",path:"/frontend-engineering/react/react-internal-hooks"},{title:"React Hooks（自定义）",path:"/frontend-engineering/react/react-custom-hooks"},{title:"函数组件设计模式",path:"/frontend-engineering/react/function-component-design-patterns"},{title:"受控组件和非受控组件",path:"/frontend-engineering/react/controlled-and-uncontrolled-components"}]}],"/frontend-engineering/webpack/":[{title:"Webpack5",collapsable:!1,children:[{title:"核心概念",path:"/frontend-engineering/webpack/core-concept"},{title:"基本配置",path:"/frontend-engineering/webpack/basic-config"},{title:"高级配置",path:"/frontend-engineering/webpack/advanced-config"},{title:"性能优化 - 构建速度",path:"/frontend-engineering/webpack/performance-optimization-in-build"},{title:"性能优化 - 产出代码",path:"/frontend-engineering/webpack/performance-optimization-in-output"},{title:"最佳实践 - 通用模板",path:"/frontend-engineering/webpack/generic-template"}]}],"/frontend-engineering/package/":[{title:"包管理工具",collapsable:!1,children:[{title:"npm、yarn、pnpm 区别",path:"/frontend-engineering/package/npm-yarn-pnpm"}]}],"/basic-skills/git/":[{title:"Git 知识整理",collapsable:!1,children:[{title:"常用命令清单",path:"/basic-skills/git/common-command-manual"},{title:"配置密钥实现免密操作",path:"/basic-skills/git/add-ssh-key"},{title:"git rebase 的两种用法",path:"/basic-skills/git/git-rebase"}]},{title:"Git 常见问题",collapsable:!1,children:[{title:"clone 速度过慢影响效率",path:"/basic-skills/git/solution-to-clone-too-slow"},{title:"如何修改 commit 信息",path:"/basic-skills/git/solution-to-commit-info-mistake"},{title:"已 commit 未 push，想修改代码",path:"/basic-skills/git/solution-to-last-commit-code-mistake"},{title:"已 commit 未 push，漏提交文件",path:"/basic-skills/git/solution-to-missed-file-in-last-commit"},{title:"刚刚的 commit 有误，想要撤回",path:"/basic-skills/git/solution-to-withdraw-last-commit"},{title:"刚刚的 push 有误，想要撤回",path:"/basic-skills/git/solution-to-withdraw-last-push"},{title:"pull 时发现代码冲突，如何解决",path:"/basic-skills/git/solution-to-code-conflict"},{title:"如何修改历史 commits 中的用户名和邮箱",path:"/basic-skills/git/solution-to-change-name-and-email-in-history-commits"},{title:"如何迁移仓库并保留 commits 记录",path:"/basic-skills/git/solution-to-migrate-repository-without-losing-history-commits"},{title:"如何参与开源项目 - 提交 PR 与更新 Fork 分支",path:"/basic-skills/git/solution-to-participate-in-open-source-projects"},{title:"如何使用 GitFlow 工作流进行团队协作",path:"/basic-skills/git/solution-to-gitflow"}]}],"/basic-skills/nginx/":[{title:"Nginx 基础知识",collapsable:!1,children:[{title:"正向代理与反向代理",path:"/basic-skills/nginx/forward-proxy-and-reverse-proxy"},{title:"负载均衡",path:"/basic-skills/nginx/load-balancing"}]},{title:"Nginx 用法整理",collapsable:!1,children:[{title:"Nginx 的安装",path:"/basic-skills/nginx/installation-of-nginx"},{title:"Nginx 的卸载",path:"/basic-skills/nginx/uninstallation-of-nginx"},{title:"Nginx 常用命令",path:"/basic-skills/nginx/common-commands"},{title:"Nginx 设置开机自启",path:"/basic-skills/nginx/set-auto-start-after-server-reboot"},{title:"Nginx 配置文件详解",path:"/basic-skills/nginx/config-file-params-explanation"},{title:"Nginx 配置文件模板",path:"/basic-skills/nginx/config-file-generic-template"},{title:"Nginx 安全访问控制",path:"/basic-skills/nginx/ngx-http-access-module"},{title:"Nginx 文件列表功能",path:"/basic-skills/nginx/ngx-http-autoindex-module"},{title:"Nginx 页面安全认证",path:"/basic-skills/nginx/ngx-http-auth-basic-module"},{title:"Nginx 部署 Https 安全认证",path:"/basic-skills/nginx/deploy-https-security-auth"},{title:"Nginx 限流常用模块",path:"/basic-skills/nginx/traffic-limiting-modules"}]},{title:"Nginx 部署方案",collapsable:!1,children:[{title:"Nginx 部署前后端分离项目",path:"/basic-skills/nginx/practice-in-front-end-separation-project"}]}],"/basic-skills/linux/":[{title:"Linux 基础知识",collapsable:!1,children:[{title:"常用命令",path:"/basic-skills/linux/common-commands"},{title:"crontab 命令",path:"/basic-skills/linux/crontab"}]},{title:"Linux 常见问题",collapsable:!1,children:[{title:"解决 vim 中文乱码问题",path:"/basic-skills/linux/solution-to-vim-encoding"},{title:"如何限制用户可使用的命令",path:"/basic-skills/linux/restricted-shell"}]}],"/basic-skills/docker/":[{title:"Docker 基础知识",collapsable:!1,children:[{title:"基础入门",path:"/basic-skills/docker/docker-tutorial"},{title:"常用命令",path:"/basic-skills/docker/common-commands"}]},{title:"Docker 实战经验",collapsable:!1,children:[{title:"部署纯净的 Ubuntu 系统",path:"/basic-skills/docker/deploy-pure-ubuntu"}]}],"/basic-skills/network/":[{title:"网络基础",collapsable:!1,children:[{title:"网络分层模型",path:"/basic-skills/network/layered-network-model"},{title:"IP 地址",path:"/basic-skills/network/ip-address"},{title:"UDP 协议",path:"/basic-skills/network/udp"},{title:"TCP 协议",path:"/basic-skills/network/tcp"},{title:"TCP 协议重传机制",path:"/basic-skills/network/tcp-retransmission"}]},{title:"网络排查",collapsable:!1,children:[{title:"网络排查工具",path:"/basic-skills/network/network-troubleshooting-tools"},{title:"抓包与分析",path:"/basic-skills/network/tcpdump-and-wireshark"}]},{title:"经典问题",collapsable:!0,children:[{title:"Linux 系统是如何收发网络包的？",path:"/basic-skills/network/how-os-deal-with-network-packets"},{title:"输入 URL 到页面展示，中间发生了什么？",path:"/basic-skills/network/what-happens-after-url"},{title:"TCP 三次握手期间异常，会发生什么？",path:"/basic-skills/network/tcp-handshake-exception"},{title:"TCP 四次挥手期间异常，会发生什么？",path:"/basic-skills/network/tcp-wave-exception"},{title:"拔掉网线几秒再插回去，原本的 TCP 连接还在吗？",path:"/basic-skills/network/tcp-connection-after-unpluging-network-cable"},{title:"如果已经建立了连接，但是客户端突然出现故障了怎么办？",path:"/basic-skills/network/tcp-connection-after-client-break-down"},{title:"如果已经建立了连接，但是服务端的进程崩溃会发生什么？",path:"/basic-skills/network/tcp-connection-after-server-break-down"},{title:"TCP 和 UDP 可以使用同一个端口吗？",path:"/basic-skills/network/can-tcp-and-udp-use-the-same-port"}]}],"/in-depth-learning/algorithm/":[{title:"数据结构与算法",collapsable:!1,children:[{title:"复杂度分析",path:"/in-depth-learning/algorithm/complexity-analysis"},{title:"数据结构之数组",path:"/in-depth-learning/algorithm/array"},{title:"数据结构之链表",path:"/in-depth-learning/algorithm/linked-list"},{title:"未完待续",path:"/in-depth-learning/algorithm/to-be-continued"}]}],"/in-depth-learning/design-patterns/":[{title:"前置知识",collapsable:!1,children:[{title:"五大设计原则",path:"/in-depth-learning/design-patterns/5-principles"},{title:"23 种设计模式",path:"/in-depth-learning/design-patterns/23-patterns"},{title:"UML 类图",path:"/in-depth-learning/design-patterns/uml-class-diagram"}]},{title:"创建型模式",collapsable:!1,children:[{title:"工厂模式",path:"/in-depth-learning/design-patterns/factory-pattern"},{title:"抽象工厂模式",path:"/in-depth-learning/design-patterns/abstract-factory-pattern"},{title:"建造者模式",path:"/in-depth-learning/design-patterns/builder-pattern"},{title:"单例模式",path:"/in-depth-learning/design-patterns/singleton-pattern"},{title:"原型模式(前端不常用)",path:"/in-depth-learning/design-patterns/prototype-pattern"}]},{title:"结构型模式",collapsable:!1,children:[{title:"适配器模式",path:"/in-depth-learning/design-patterns/adapter-pattern"},{title:"装饰器模式",path:"/in-depth-learning/design-patterns/decorator-pattern"},{title:"代理模式",path:"/in-depth-learning/design-patterns/proxy-pattern"},{title:"外观模式",path:"/in-depth-learning/design-patterns/facade-pattern"},{title:"桥接模式(前端不常用)",path:"/in-depth-learning/design-patterns/bridge-pattern"},{title:"组合模式(前端不常用)",path:"/in-depth-learning/design-patterns/composite-pattern"},{title:"享元模式(前端不常用)",path:"/in-depth-learning/design-patterns/flyweight-pattern"}]},{title:"行为型模式",collapsable:!1,children:[{title:"观察者模式",path:"/in-depth-learning/design-patterns/observer-pattern"},{title:"迭代器模式",path:"/in-depth-learning/design-patterns/iterator-pattern"},{title:"状态模式",path:"/in-depth-learning/design-patterns/state-pattern"},{title:"策略模式(前端不常用)",path:"/in-depth-learning/design-patterns/strategy-pattern"},{title:"模板方法模式(前端不常用)",path:"/in-depth-learning/design-patterns/template-method-pattern"},{title:"职责链模式(前端不常用)",path:"/in-depth-learning/design-patterns/chain-of-responsibility-pattern"},{title:"命令模式(前端不常用)",path:"/in-depth-learning/design-patterns/command-pattern"},{title:"备忘录模式(前端不常用)",path:"/in-depth-learning/design-patterns/memento-pattern"},{title:"中介者模式(前端不常用)",path:"/in-depth-learning/design-patterns/mediator-pattern"},{title:"访问者模式和解释器模式(不常用)",path:"/in-depth-learning/design-patterns/visitor-pattern-and-interpreter-pattern"}]}],"/in-depth-learning/source-code/":[{title:"源码阅读与学习",collapsable:!1,children:[{title:"Vue3 源码中的基础工具函数",path:"/in-depth-learning/source-code/vue3-utils"},{title:"未完待续",path:"/in-depth-learning/source-code/to-be-continued"}]}],"/backend-knowledge/python/":[{title:"Python 基础知识",collapsable:!0,children:[{title:"编译器与解释器",path:"/backend-knowledge/python/compiler-and-interpreter"},{title:"语法规范",path:"/backend-knowledge/python/grammar"},{title:"PEP8 风格",path:"/backend-knowledge/python/pep-0008"},{title:"变量与常量",path:"/backend-knowledge/python/variables-and-constants"},{title:"数据类型",path:"/backend-knowledge/python/data-types"},{title:"函数参数",path:"/backend-knowledge/python/function-params"},{title:"函数装饰器",path:"/backend-knowledge/python/function-decorators"},{title:"错误和异常",path:"/backend-knowledge/python/try-exception"},{title:"类型提示 Type Hints",path:"/backend-knowledge/python/type-hints"},{title:"类型提示进阶：typing 模块",path:"/backend-knowledge/python/typing-for-type-hints"}]},{title:"Python 面向对象",collapsable:!0,children:[{title:"面向对象与面向过程",path:"/backend-knowledge/python/oop"},{title:"类和实例",path:"/backend-knowledge/python/class-and-instance"},{title:"类变量和实例变量",path:"/backend-knowledge/python/class-variables-and-instance-variables"},{title:"实例方法、类方法、静态方法",path:"/backend-knowledge/python/instancemethod-classmethod-staticmethod"},{title:"公共变量、私有变量、保护变量",path:"/backend-knowledge/python/public-private-protected"},{title:"@property 装饰器",path:"/backend-knowledge/python/decorator-property"},{title:"类的继承",path:"/backend-knowledge/python/class-inheritance"},{title:"super() 函数",path:"/backend-knowledge/python/method-super"},{title:"反射",path:"/backend-knowledge/python/reflect"},{title:"魔术方法（双下划线方法）",path:"/backend-knowledge/python/magic-methods"},{title:"实现单例模式",path:"/backend-knowledge/python/singleton-pattern"}]},{title:"Python 高级进阶",collapsable:!0,children:[{title:"切片",path:"/backend-knowledge/python/slicing"},{title:"多线程、多进程",path:"/backend-knowledge/python/threading-and-multiprocess"},{title:"全局解释器锁（GIL）",path:"/backend-knowledge/python/global-interpreter-lock"},{title:"协程",path:"/backend-knowledge/python/coroutine"},{title:"生成器 generator",path:"/backend-knowledge/python/generator"},{title:"迭代器 Iterator",path:"/backend-knowledge/python/iterator"}]},{title:"Python 常用模块",collapsable:!0,children:[{title:"Python 多版本虚拟环境共存",path:"/backend-knowledge/python/multiple-python-install-on-linux"},{title:"使用 logging 配置日志的方式",path:"/backend-knowledge/python/python-lib-logging"},{title:"使用 xlrd 处理旧版本 Excel",path:"/backend-knowledge/python/python-lib-xlrd"},{title:"使用 openpyxl 处理新版本 Excel",path:"/backend-knowledge/python/python-lib-openpyxl"},{title:"使用 smtplib 发送电子邮件",path:"/backend-knowledge/python/python-lib-smtplib"},{title:"使用 subprocess 执行 cmd",path:"/backend-knowledge/python/python-lib-subprocess"},{title:"使用 telnetlib 执行 Telnet",path:"/backend-knowledge/python/python-lib-telnetlib"},{title:"使用 Paramiko 执行 SSH",path:"/backend-knowledge/python/python-lib-paramiko"},{title:"使用 Fabric 执行 SSH",path:"/backend-knowledge/python/python-lib-fabric"},{title:"使用 Celery 实现任务调度",path:"/backend-knowledge/python/python-lib-celery"}]}],"/backend-knowledge/django/":[{title:"Django 基础知识",collapsable:!0,children:[{title:"model 字段与属性",path:"/backend-knowledge/django/django-model"},{title:"model 外键关系",path:"/backend-knowledge/django/django-model-relationship"},{title:"model 元数据 Meta",path:"/backend-knowledge/django/django-model-meta"},{title:"model 的继承",path:"/backend-knowledge/django/django-model-inheritance"},{title:"model 增删改操作",path:"/backend-knowledge/django/django-model-create-update-delete"},{title:"model 查询/检索操作",path:"/backend-knowledge/django/django-model-retrieve"},{title:"signal 监测 model 变化",path:"/backend-knowledge/django/django-signal"},{title:"Django 内置权限系统使用",path:"/backend-knowledge/django/django-auth"}]},{title:"Django 实战经验",collapsable:!0,children:[{title:"Django 用户模型扩展/重写",path:"/backend-knowledge/django/django-user-model-extension"},{title:"Django 内置权限系统扩展",path:"/backend-knowledge/django/django-auth-extension"},{title:"Django 与 Guardian 的集成",path:"/backend-knowledge/django/django-guardian"},{title:"Django+JWT 实现 Token 认证",path:"/backend-knowledge/django/django-jwt-auth"},{title:"Django 设置 Redis 作为缓存",path:"/backend-knowledge/django/django-redis-cache"},{title:"Django 与 Celery 的集成",path:"/backend-knowledge/django/django-integrate-celery"},{title:"Django 与 Channels 的集成",path:"/backend-knowledge/django/django-integrate-channels"}]},{title:"Django 常见问题",collapsable:!0,children:[{title:"导出/导入数据库表数据",path:"/backend-knowledge/django/dumpdata-and-loaddata"},{title:"如何查看 ORM 对应的 SQL 语句",path:"/backend-knowledge/django/convert-django-orm-to-sql"},{title:".filter() 使用 isnull 参数时返回重复对象",path:"/backend-knowledge/django/filter-returns-duplicated-objects"},{title:"执行 migrate 时报错 SQLite 版本过低",path:"/backend-knowledge/django/migrate-error-caused-by-sqlite3"}]}],"/backend-knowledge/mysql/":[{title:"MySQL 基础知识",collapsable:!0,children:[{title:"MySQL 数据类型",path:"/backend-knowledge/mysql/data-types"},{title:"MySQL 常用命令",path:"/backend-knowledge/mysql/common-commands"},{title:"库和表的基本操作",path:"/backend-knowledge/mysql/database-and-table-operations"},{title:"表中列的基本属性",path:"/backend-knowledge/mysql/column-properties"},{title:"数据的增删改",path:"/backend-knowledge/mysql/data-insert-delete-update"},{title:"简单查询语法",path:"/backend-knowledge/mysql/simple-query"},{title:"条件查询语法",path:"/backend-knowledge/mysql/query-by-search-conditions"},{title:"表达式和函数",path:"/backend-knowledge/mysql/expressions-and-functions"},{title:"分组查询语法",path:"/backend-knowledge/mysql/group-query"},{title:"子查询语法",path:"/backend-knowledge/mysql/sub-query"},{title:"连接查询语法",path:"/backend-knowledge/mysql/join-query"},{title:"组合查询语法",path:"/backend-knowledge/mysql/union-query"}]},{title:"MySQL 常见问题",collapsable:!0,children:[{title:"脏读、不可重复读和幻读",path:"/backend-knowledge/mysql/transaction-isolation-levels"}]},{title:"MySQL 日常运维",collapsable:!0,children:[{title:"MySQL 的安装与卸载",path:"/backend-knowledge/mysql/installation-of-mysql"},{title:"MySQL 主键和自增 ID",path:"/backend-knowledge/mysql/primary-key-and-increment-id"},{title:"MySQL 数据库设计规范",path:"/backend-knowledge/mysql/db-design-spec"}]}],"/backend-knowledge/redis/":[{title:"Redis 基础知识",collapsable:!1,children:[{title:"Redis 数据类型",path:"/backend-knowledge/redis/data-types"},{title:"Redis 常用命令",path:"/backend-knowledge/redis/common-commands"}]},{title:"Redis 常见问题",collapsable:!1,children:[{title:"Redis 缓存三大问题",path:"/backend-knowledge/redis/three-cache-problems"}]},{title:"Redis 日常运维",collapsable:!1,children:[{title:"Redis 的安装与卸载",path:"/backend-knowledge/redis/installation-of-redis"},{title:"Redis 的 ACL 安全策略",path:"/backend-knowledge/redis/access-control-list"}]}],"/backend-knowledge/elasticsearch/":[{title:"Elasticsearch 基础知识",collapsable:!1,children:[{title:"ES 中的概念与名词",path:"/backend-knowledge/elasticsearch/concepts-and-noun"},{title:"正排索引与倒排索引",path:"/backend-knowledge/elasticsearch/forward-and-inverted-index"},{title:"文档基本操作",path:"/backend-knowledge/elasticsearch/document-crud"},{title:"全文搜索语法",path:"/backend-knowledge/elasticsearch/match-query"},{title:"Term 查询语法",path:"/backend-knowledge/elasticsearch/term-query"},{title:"组合查询语法",path:"/backend-knowledge/elasticsearch/compound-query"},{title:"搜索词自动补全语法",path:"/backend-knowledge/elasticsearch/suggester-query"},{title:"统计语法：聚合查询",path:"/backend-knowledge/elasticsearch/aggregations"},{title:"嵌套类型和父子文档",path:"/backend-knowledge/elasticsearch/nested-and-join"},{title:"分词器的原理和使用",path:"/backend-knowledge/elasticsearch/analyzer"},{title:"分页查询的三种语法",path:"/backend-knowledge/elasticsearch/paging-query"}]},{title:"Elasticsearch 日常运维",collapsable:!1,children:[{title:"ES 的安装",path:"/backend-knowledge/elasticsearch/installation-of-elasticsearch"},{title:"命令行操作",path:"/backend-knowledge/elasticsearch/command-with-curl"},{title:"集群管理 API",path:"/backend-knowledge/elasticsearch/cluster-manage-apis"},{title:"索引管理 API",path:"/backend-knowledge/elasticsearch/index-manage-apis"},{title:"定义字段类型：Mapping",path:"/backend-knowledge/elasticsearch/mapping"},{title:"索引模板：Index Template",path:"/backend-knowledge/elasticsearch/index-template"},{title:"ES 集群性能优化小记录",path:"/backend-knowledge/elasticsearch/performance-optimization"}]}],"/project/solutions/":[{title:"前端解决方案",collapsable:!1,children:[{title:"前端登录方案总结",path:"/project/solutions/login"},{title:"大文件分片上传和断点续传",path:"/project/solutions/file-upload"},{title:"高性能渲染大量数据（虚拟列表）",path:"/project/solutions/virtual-list"},{title:"Code Format 工程化实践",path:"/project/solutions/code-format"},{title:"Git Hooks 工程化实践",path:"/project/solutions/git-hooks"}]}],"/project/troubleshooting/":[{title:"问题排查",collapsable:!1,children:[{title:"HTTP 错误状态码及排查路径",path:"/project/troubleshooting/http-error-status-code"}]}],"/extracurricular/":[{title:"课外学习",collapsable:!1,children:[{title:"认知偏差知识手册",path:"/extracurricular/cognitive-biases"},{title:"产品与人性 | 28个心理学效应",path:"/extracurricular/product-and-humanity"}]}],"/":[]},sidebarDepth:2,lastUpdated:"上次更新",searchMaxSuggestoins:10,editLinks:!0,editLinkText:"帮助我们改善此页面！",smoothScroll:!0,author:"wenyuan",hostname:"https://www.fedbook.cn",darkmode:"disable",themeColor:!1,blog:!1,pageInfo:!1,mdEnhance:{enableAll:!1,sub:!1,sup:!1},comment:!1,copyright:!1,git:{timezone:"Asia/Shanghai"},pwa:!1,copyCode:!1,photoSwipe:!1,repoDisplay:!1,fullscreen:!1,sidebarIcon:!1,breadcrumb:!1,contributor:!1,locales:{"/":{lang:"zh-CN",selectText:"选择语言",label:"简体中文",meta:{contributor:"贡献者",editLink:"编辑此页",updateTime:"上次编辑于"},themeColor:{themeColor:"主题色",themeMode:"主题模式"},encrypt:{title:"请输入密码",errorHint:"请输入正确密码"},error404:{hint:["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],back:"返回上一页",home:"带我回家"},blog:{article:"文章",articleList:"文章列表",category:"分类",tag:"标签",timeline:"时间轴",timelineText:"昨日不在",allText:"全部",intro:"个人介绍",star:"收藏",slides:"幻灯片",encrypt:"加密"}}}},locales:{"/":{lang:"zh-CN",path:"/"}}};n(156);const Rt={"/zh/":{backToTop:"返回顶部",pagination:{prev:"上一页",next:"下一页",navigate:"跳转到",button:"前往",errorText:"请输入 1 到 $page 之前的页码！"}},"/en/":{backToTop:"Back to top",pagination:{prev:"Prev",next:"Next",navigate:"Jump to",button:"Go",errorText:"Please enter a number between 1 and $page !"}},"/de/":{backToTop:"Zurück nach oben.",pagination:{prev:"Vorheriges",next:"Nächstes",navigate:"Springe zu",button:"Los",errorText:"Bitte gib eine Nummer zwischen 1 und $page ein!"}},"/vi/":{backToTop:"Trở lại đầu trang",pagination:{prev:"Bài kế",next:"Bài trước",navigate:"Đi đến",button:"Đi",errorText:"Xin hãy nhập 1 số từ 1 đến $page !"}},"/":{backToTop:"返回顶部",pagination:{prev:"上一页",next:"下一页",navigate:"跳转到",button:"前往",errorText:"请输入 1 到 $page 之前的页码！"}}};let Dt;var It=r.a.extend({name:"BackToTop",props:{threshold:{type:Number,default:300}},data:()=>({scrollTop:0}),computed:{thresholdDistance(){return"number"==typeof this.$themeConfig.backToTop?this.$themeConfig.backToTop:this.threshold},isDisplay(){const e=!1!==this.$themeConfig.backToTop,t=this.$page.frontmatter.backToTop;return(t||e&&!1!==t)&&this.scrollTop>this.thresholdDistance},hint(){return Rt[this.$localePath||"/"].backToTop}},mounted(){this.scrollTop=this.getScrollTop(),Dt=Pt()(()=>{this.scrollTop=this.getScrollTop()},100),window.addEventListener("scroll",Dt)},beforeDestroy(){window.removeEventListener("scroll",Dt)},methods:{getScrollTop:()=>window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,scrollToTop(){window.scrollTo({top:0,behavior:"smooth"}),this.scrollTop=0}}}),qt=(n(157),Object(Bt.a)(It,(function(){var e=this.$createElement,t=this._self._c||e;return t("transition",{attrs:{name:"fade"}},[this.isDisplay?t("button",{staticClass:"back-to-top",attrs:{"aria-label":this.hint,"data-balloon-pos":"left"},on:{click:this.scrollToTop}},[t("svg",{attrs:{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"}},[t("path",{attrs:{d:"M512 0C229.517 0 0 229.517 0 512s227.752 512 512 512c282.483 0 512-227.752 512-512C1024 229.517 794.483\n      0 512 0zM351.338 271.89h305.434c14.125 0 26.483 12.358 26.483 26.482s-12.358 26.483-26.483\n      26.483H351.338c-14.124 0-26.483-12.358-26.483-26.483 0-15.89 12.359-26.482 26.483-26.482z\n      m331.917 303.669c-12.358 12.358-33.545 12.358-45.903 0L531.42 471.393v270.124c0 14.124-12.359\n      26.483-26.483 26.483s-26.483-12.359-26.483-26.483v-271.89l-105.93 104.166c-12.36 12.359-33.546 12.359-45.904\n      0-12.359-12.359-12.359-31.78 0-45.903l155.365-151.835c7.062-7.062 14.124-8.827 22.952-8.827s15.89 3.53 22.952\n      8.827L683.255 527.89c12.359 15.89 12.359 35.31 0 47.669z",fill:"currentColor"}})])]):this._e()])}),[],!1,null,null,null).exports),$t=r.a.extend({name:"Badge",functional:!0,props:{type:{type:String,default:"tip"},text:{type:String,default:""},vertical:{type:String,default:"top"},color:{type:String,default:""}},render(e,{props:t,slots:n}){const r={class:["badge",t.type],style:{verticalAlign:t.vertical}};return t.color&&(r.class.push("diy"),r.style.backgroundColor=t.color,r["data-color"]=t.color),e("span",r,t.text||n().default)}}),Ht=(n(158),Object(Bt.a)($t,void 0,void 0,!1,null,"7b453e57",null).exports),Ft=r.a.extend({name:"BreadCrumb",computed:{enable(){const e=!1!==this.$themeConfig.breadcrumb,t=this.$page.frontmatter.breadcrumb;return(e&&!1!==t||!0===t)&&this.config.length>1},iconEnable(){const e=!1!==this.$themeConfig.breadcrumbIcon,t=this.$page.frontmatter.breadcrumbIcon;return this.enable&&(e&&!1!==t||!0===t)},iconPrefix(){const{iconPrefix:e}=this.$themeConfig;return""===e?"":e||"icon-"},config(){const e=[],{pages:t}=this.$site,n=this.getLinks(this.$route);for(let r=1;r<n.length;r++)for(let a=0;a<t.length;a++){const o=t[a];if(o.path===n[r]){e.push({title:o.title,icon:o.frontmatter.icon,url:o.path});break}}return e}},methods:{getLinks(e){const t=e.path.split("/"),n=[];let r="";return t.forEach((e,a)=>{a!==t.length-1?(r+=e+"/",n.push(r)):""!==e&&(r+=e,n.push(r))}),n}}}),Ut=(n(159),Object(Bt.a)(Ft,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("nav",{staticClass:"breadcrumb",class:{disable:!e.enable}},[e.enable?n("ol",{attrs:{vocab:"https://schema.org/",typeof:"BreadcrumbList"}},e._l(e.config,(function(t,r){return n("li",{key:t.url,class:{"is-active":e.config.length-1===r},attrs:{property:"itemListElement",typeof:"ListItem"}},[n("RouterLink",{attrs:{to:t.url,property:"item",typeof:"WebPage"}},[t.icon&&e.iconEnable?n("i",{class:"iconfont "+e.iconPrefix+t.icon}):e._e(),e._v(" "),n("span",{attrs:{property:"name"}},[e._v(e._s(t.title))])]),e._v(" "),n("meta",{attrs:{property:"position",content:r+1}})],1)})),0):e._e()])}),[],!1,null,null,null).exports),Jt=r.a.extend({name:"CodeGroup",data:()=>({codeTabs:[],activeTabIndex:-1}),watch:{activeTabIndex(e){this.activateCodeTab(e)}},mounted(){this.loadTabs()},methods:{loadTabs(){this.codeTabs=(this.$slots.default||[]).filter(e=>Boolean(e.componentOptions)).map((e,t)=>{const n=e.componentOptions.propsData;return n.active&&(this.activeTabIndex=t),{title:n.title,element:e.elm}}),-1===this.activeTabIndex&&this.codeTabs.length>0&&(this.activeTabIndex=0),this.activateCodeTab(0)},changeCodeTab(e){this.activeTabIndex=e},keyDownHandler(e,t){" "===e.key||"Enter"===e.key?(e.preventDefault(),this.activeTabIndex=t):"ArrowRight"===e.key?(e.preventDefault(),t+1<this.codeTabs.length&&(this.activeTabIndex=t+1,this.$refs.tab[t+1].focus())):"ArrowLeft"===e.key&&(e.preventDefault(),t-1>=0&&(this.activeTabIndex=t-1,this.$refs.tab[t-1].focus()))},activateCodeTab(e){this.codeTabs.forEach((t,n)=>{const{element:r}=t;r&&(e===n?r.classList.add("active"):r.classList.remove("active"))})}}}),Gt=(n(160),Object(Bt.a)(Jt,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ClientOnly",[n("div",{staticClass:"code-group"},[n("div",{staticClass:"code-group-nav",attrs:{"v:if":"codeTabs.length"}},e._l(e.codeTabs,(function(t,r){return n("button",{key:t.title,ref:"tab",refInFor:!0,staticClass:"code-group-nav-tab",class:{active:r===e.activeTabIndex},attrs:{"aria-pressed":r===e.activeTabIndex,"aria-expanded":r===e.activeTabIndex},domProps:{textContent:e._s(t.title)},on:{click:function(t){return e.changeCodeTab(r)},keydown:function(t){return e.keyDownHandler(t,r)}}})})),0),e._v(" "),e._t("default"),e._v(" "),e.codeTabs.length?e._e():n("pre",{staticClass:"hints",domProps:{textContent:e._s("// Make sure to add code blocks to your code group")}})],2)])}),[],!1,null,null,null).exports),Qt=r.a.extend({name:"CodeGroupItem",props:{title:{type:String,required:!0},active:{type:Boolean,required:!1,default:!1}},mounted(){this.$parent&&this.$parent.loadTabs&&this.$parent.loadTabs()}}),Vt=(n(161),Object(Bt.a)(Qt,(function(){var e=this.$createElement;return(this._self._c||e)("div",{staticClass:"code-group-item",class:{active:this.active},attrs:{"aria-selected":this.active}},[this._t("default")],2)}),[],!1,null,null,null).exports),Wt=r.a.extend({name:"Pagination",model:{prop:"currentPage",event:"change"},props:{total:{type:Number,default:10},perPage:{type:Number,default:10},currentPage:{type:Number,default:1}},data:()=>({input:""}),computed:{totalPages(){return Math.ceil(this.total/this.perPage)},enable(){return Boolean(this.totalPages)&&1!==this.totalPages},displayLeftEllipsis(){return!(this.totalPages<7)&&this.currentPage>4},displayRightEllipsis(){return!(this.totalPages<7)&&this.currentPage<this.totalPages-3},indexs(){const{currentPage:e,totalPages:t}=this;let n=1,r=t;const a=[];t>=7&&(e<=4&&e<t-3?(n=1,r=5):e>4&&e>=t-3?(r=t,n=t-4):t>7&&(n=e-2,r=e+2));for(let e=n;e<=r;e++)a.push(e);return a},i18n(){return Rt[this.$localePath||"/"].pagination}},mounted(){const{index:e}=this.$route.query;this.navigate(e?Number(e):1)},methods:{navigate(e){const t=Object.assign({},this.$route.query);t.page===e.toString()||1===e&&!t.page||(this.$emit("change",e),1===e?delete t.page:t.page=e.toString(),this.$router.push({path:this.$route.path,query:t}))},jumpPage(e){const t=parseInt(e);t<=this.totalPages&&t>0?this.navigate(t):alert(this.i18n.errorText.replace(/\$page/g,this.totalPages.toString()))}}}),Xt=(n(162),Object(Bt.a)(Wt,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"pagination-wrapper"},[e.enable?n("div",{staticClass:"pagination-list"},[n("div",{staticClass:"btn-group"},[e.currentPage>1?n("div",{staticClass:"prev",attrs:{role:"navigation",unselectable:"on"},on:{click:function(t){return e.navigate(e.currentPage-1)}}},[e._v("\n        "+e._s(e.i18n.prev)+"\n      ")]):e._e(),e._v(" "),e.displayLeftEllipsis?n("div",{attrs:{role:"navigation"},on:{click:function(t){return e.navigate(1)}}},[e._v("\n        1\n      ")]):e._e(),e._v(" "),e.displayLeftEllipsis?n("div",{staticClass:"ellipsis"},[e._v("...")]):e._e(),e._v(" "),e._l(e.indexs,(function(t){return n("div",{key:t,class:{active:e.currentPage===t},attrs:{role:"navigation"},on:{click:function(n){return e.navigate(t)}}},[e._v("\n        "+e._s(t)+"\n      ")])})),e._v(" "),e.displayRightEllipsis?n("div",{staticClass:"ellipsis"},[e._v("...")]):e._e(),e._v(" "),e.displayRightEllipsis?n("div",{attrs:{role:"navigation"},on:{click:function(t){return e.navigate(e.totalPages)}}},[e._v("\n        "+e._s(e.totalPages)+"\n      ")]):e._e(),e._v(" "),e.currentPage<e.totalPages?n("div",{staticClass:"next",attrs:{role:"navigation"},on:{click:function(t){return e.navigate(e.currentPage+1)}}},[e._v("\n        "+e._s(e.i18n.next)+"\n      ")]):e._e()],2),e._v(" "),n("div",{staticClass:"navigate-wrapper"},[n("label",{attrs:{for:"navigation-text"}},[e._v(e._s(e.i18n.navigate)+": ")]),e._v(" "),n("input",{directives:[{name:"model",rawName:"v-model",value:e.input,expression:"input"}],attrs:{id:"navigation-text",type:"text"},domProps:{value:e.input},on:{keypress:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:e.jumpPage(e.input)},input:function(t){t.target.composing||(e.input=t.target.value)}}}),e._v(" "),n("button",{staticClass:"navigate",attrs:{role:"navigation",title:e.i18n.button},on:{click:function(t){return e.jumpPage(e.input)}}},[e._v("\n        "+e._s(e.i18n.button)+"\n      ")])])]):e._e()])}),[],!1,null,null,null).exports),Kt=n(8),Yt=r.a.extend({name:"ScreenFull",data:()=>({canFullscreen:!1,isFullscreen:!1}),mounted(){this.canFullscreen=Kt.isEnabled&&!1!==this.$themeConfig.fullscreen},methods:{click(){Kt.isEnabled&&Kt.toggle().then(()=>{this.isFullscreen=Kt.isFullscreen})}}}),Zt=(n(163),Object(Bt.a)(Yt,(function(){var e=this.$createElement,t=this._self._c||e;return this.canFullscreen?t("button",{class:this.isFullscreen?"cancel-full-screen":"full-screen",attrs:{"aria-pressed":this.isFullscreen},on:{click:this.click}},[t("svg",{attrs:{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"}},[this.isFullscreen?t("path",{attrs:{d:"M778.46755555 78.62044445H247.92177778c-102.51377778 0-186.02666667 83.51288889-186.02666667 186.02666666v530.432c0 102.51377778 83.51288889 186.02666667 186.02666667 186.02666667h530.432c102.51377778 0 186.70933333-83.51288889 186.02666667-186.02666667V264.64711111c0.11377778-102.62755555-83.39911111-186.02666667-185.9128889-186.02666666zM250.88 574.35022222h171.12177778c23.32444445 0 43.12177778 19.11466667 43.80444444 43.80444445v171.12177778c0 24.00711111-19.11466667 43.12177778-43.12177777 43.12177777-12.06044445 0-22.64177778-5.00622222-30.37866667-12.74311111s-12.74311111-19.11466667-12.74311111-30.37866666v-66.44622223L224.59733333 877.90933333c-16.95288889 16.95288889-44.60088889 16.95288889-61.55377778 0-16.95288889-16.95288889-16.95288889-44.60088889 0-61.55377778l154.96533334-154.96533333h-66.44622222c-24.00711111 0-43.12177778-19.11466667-43.12177778-43.12177777 0-24.12088889 18.432-43.91822222 42.43911111-43.91822223z m521.89866667-98.87288889H601.65688889c-23.32444445 0-43.12177778-19.11466667-43.80444444-43.80444444V260.55111111c0-24.00711111 19.11466667-43.12177778 43.12177777-43.12177778 12.06044445 0 22.64177778 5.00622222 30.37866667 12.74311112s12.74311111 19.11466667 12.74311111 30.37866666v66.44622222l154.96533333-154.96533333c16.95288889-16.95288889 44.60088889-16.95288889 61.55377778 0 16.95288889 16.95288889 16.95288889 44.60088889 0 61.55377778L705.536 388.55111111h66.44622222c24.00711111 0 43.12177778 19.11466667 43.12177778 43.12177778 0.11377778 24.00711111-18.31822222 43.80444445-42.32533333 43.80444444z"}}):t("path",{attrs:{d:"M762.77333333 90.24H265.49333333c-96.10666667 0-174.4 78.29333333-174.4 174.4v497.28c0 96.10666667 78.29333333 174.4 174.4 174.4h497.28c96.10666667 0 175.04-78.29333333 174.4-174.4V264.64c0-96.21333333-78.18666667-174.4-174.4-174.4z m-387.2 761.17333333H215.04c-21.86666667 0-40.42666667-17.92-41.06666667-41.06666666V649.92c0-22.50666667 17.92-40.42666667 40.42666667-40.42666667 11.30666667 0 21.22666667 4.69333333 28.48 11.94666667 7.25333333 7.25333333 11.94666667 17.92 11.94666667 28.48v62.29333333l145.28-145.28c15.89333333-15.89333333 41.81333333-15.89333333 57.70666666 0 15.89333333 15.89333333 15.89333333 41.81333333 0 57.70666667L312.53333333 769.92h62.29333334c22.50666667 0 40.42666667 17.92 40.42666666 40.42666667s-17.17333333 41.06666667-39.68 41.06666666z m274.66666667-685.65333333H810.66666667c21.86666667 0 40.42666667 17.92 41.06666666 41.06666667v160.42666666c0 22.50666667-17.92 40.42666667-40.42666666 40.42666667-11.30666667 0-21.22666667-4.69333333-28.48-11.94666667-7.25333333-7.25333333-11.94666667-17.92-11.94666667-28.48V305.06666667L625.6 450.34666667c-15.89333333 15.89333333-41.81333333 15.89333333-57.70666667 0-15.89333333-15.89333333-15.89333333-41.81333333 0-57.70666667l145.28-145.28h-62.29333333c-22.50666667 0-40.42666667-17.92-40.42666667-40.42666667s17.17333333-41.17333333 39.78666667-41.17333333z"}})])]):this._e()}),[],!1,null,null,null).exports);var en=({Vue:e})=>{e.component("BackToTop",qt),e.component("Badge",Ht),e.component("BreadCrumb",Ut),e.component("CodeGroup",Gt),e.component("CodeGroupItem",Vt),e.component("Pagination",Xt),e.component("ScreenFull",Zt)};n(164);const tn=e=>{const t=document.documentElement.getBoundingClientRect(),n=e.getBoundingClientRect();return{x:n.left-t.left,y:n.top-t.top}};var nn=({Vue:e,router:t})=>{t.options.scrollBehavior=(t,n,r)=>{r?window.scrollTo({top:r.y,behavior:"smooth"}):t.hash?e.$vuepress.$get("disableScrollBehavior")||setTimeout(()=>{const e=decodeURI(t.hash.slice(1)),n=document.getElementById(e)||document.querySelector(`[name='${e}']`);n&&window.scrollTo({top:tn(n).y,behavior:"smooth"})},0):window.scrollTo({top:0,behavior:"smooth"})}};n(165),n(16),n(166);var rn=[{},({Vue:e})=>{e.mixin({computed:{$dataBlock(){return this.$options.__data__block__}}})},{},en,nn,{},({Vue:e})=>{}],an=["BackToTop"];class on extends class{constructor(){this.store=new r.a({data:{state:{}}})}$get(e){return this.store.state[e]}$set(e,t){r.a.set(this.store.state,e,t)}$emit(...e){this.store.$emit(...e)}$on(...e){this.store.$on(...e)}}{}Object.assign(on.prototype,{getPageAsyncComponent:st,getLayoutAsyncComponent:ct,getAsyncComponent:pt,getVueComponent:dt});var ln={install(e){const t=new on;e.$vuepress=t,e.prototype.$vuepress=t}};function sn(e,t){const n=t.toLowerCase();return e.options.routes.some(e=>e.path.toLowerCase()===n)}var cn={props:{pageKey:String,slotKey:{type:String,default:"default"}},render(e){const t=this.pageKey||this.$parent.$page.key;return ut("pageKey",t),r.a.component(t)||r.a.component(t,st(t)),r.a.component(t)?e(t):e("")}},pn={functional:!0,props:{slotKey:String,required:!0},render:(e,{props:t,slots:n})=>e("div",{class:["content__"+t.slotKey]},n()[t.slotKey])},dn={computed:{openInNewWindowTitle(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},mn=(n(167),n(168),Object(Bt.a)(dn,(function(){var e=this.$createElement,t=this._self._c||e;return t("span",[t("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[t("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),t("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),t("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports),un={functional:!0,render(e,{parent:t,children:n}){if(t._isMounted)return n;t.$once("hook:mounted",()=>{t.$forceUpdate()})}};r.a.config.productionTip=!1,r.a.use(Qe),r.a.use(ln),r.a.mixin(function(e,t,n=r.a){!function(e){e.locales&&Object.keys(e.locales).forEach(t=>{e.locales[t].path=t});Object.freeze(e)}(t),n.$vuepress.$set("siteData",t);const a=new(e(n.$vuepress.$get("siteData"))),o=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(a)),l={};return Object.keys(o).reduce((e,t)=>(t.startsWith("$")&&(e[t]=o[t].get),e),l),{computed:l}}(e=>class{setPage(e){this.__page=e}get $site(){return e}get $themeConfig(){return this.$site.themeConfig}get $frontmatter(){return this.$page.frontmatter}get $localeConfig(){const{locales:e={}}=this.$site;let t,n;for(const r in e)"/"===r?n=e[r]:0===this.$page.path.indexOf(r)&&(t=e[r]);return t||n||{}}get $siteTitle(){return this.$localeConfig.title||this.$site.title||""}get $canonicalUrl(){const{canonicalUrl:e}=this.$page.frontmatter;return"string"==typeof e&&e}get $title(){const e=this.$page,{metaTitle:t}=this.$page.frontmatter;if("string"==typeof t)return t;const n=this.$siteTitle,r=e.frontmatter.home?null:e.frontmatter.title||e.title;return n?r?r+" | "+n:n:r||"VuePress"}get $description(){const e=function(e){if(e){const t=e.filter(e=>"description"===e.name)[0];if(t)return t.content}}(this.$page.frontmatter.meta);return e||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}get $lang(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}get $localePath(){return this.$localeConfig.path||"/"}get $themeLocaleConfig(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}get $page(){return this.__page?this.__page:function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(r.path.toLowerCase()===t.toLowerCase())return r}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}},zt)),r.a.component("Content",cn),r.a.component("ContentSlotsDistributor",pn),r.a.component("OutboundLink",mn),r.a.component("ClientOnly",un),r.a.component("Layout",ct("Layout")),r.a.component("NotFound",ct("NotFound")),r.a.prototype.$withBase=function(e){const t=this.$site.base;return"/"===e.charAt(0)?t+e.slice(1):e},window.__VUEPRESS__={version:"1.9.7",hash:"5732e16"},async function(e){const t="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:zt.routerBase||zt.base,n=new Qe({base:t,mode:"history",fallback:!1,routes:Ot,scrollBehavior:(e,t,n)=>n||(e.hash?!r.a.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(e.hash)}:{x:0,y:0})});!function(e){e.beforeEach((t,n,r)=>{if(sn(e,t.path))r();else if(/(\/|\.html)$/.test(t.path))if(/\/$/.test(t.path)){const n=t.path.replace(/\/$/,"")+".html";sn(e,n)?r(n):r()}else r();else{const n=t.path+"/",a=t.path+".html";sn(e,a)?r(a):sn(e,n)?r(n):r()}})}(n);const a={};try{await Promise.all(rn.filter(e=>"function"==typeof e).map(t=>t({Vue:r.a,options:a,router:n,siteData:zt,isServer:e})))}catch(e){console.error(e)}return{app:new r.a(Object.assign(a,{router:n,render:e=>e("div",{attrs:{id:"app"}},[e("RouterView",{ref:"layout"}),e("div",{class:"global-ui"},an.map(t=>e(t)))])})),router:n}}(!1).then(({app:e,router:t})=>{t.onReady(()=>{e.$mount("#app")})})}]);
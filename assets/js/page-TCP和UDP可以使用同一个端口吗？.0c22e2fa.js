(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{475:function(t,s,a){t.exports=a.p+"assets/img/tcp-and-udp-modules.8cd1e9b8.png"},476:function(t,s,a){t.exports=a.p+"assets/img/tcp-and-udp-network-programming.41490a29.svg"},477:function(t,s,a){t.exports=a.p+"assets/img/client-port-selection-process.ec14683b.svg"},848:function(t,s,a){"use strict";a.r(s);var e=a(1),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"tcp-和-udp-可以使用同一个端口吗"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tcp-和-udp-可以使用同一个端口吗"}},[t._v("#")]),t._v(" TCP 和 UDP 可以使用同一个端口吗？")]),t._v(" "),e("p",[t._v("关于端口的知识点，还是挺多可以讲的，比如还可以牵扯到这几个问题：")]),t._v(" "),e("ul",[e("li",[t._v("多个 TCP 服务进程可以同时绑定同一个端口吗？")]),t._v(" "),e("li",[t._v("重启 TCP 服务进程时，为什么会出现 "),e("code",[t._v("Address in use")]),t._v(" 的报错信息？又该怎么避免？")]),t._v(" "),e("li",[t._v("客户端的端口可以重复使用吗？")]),t._v(" "),e("li",[t._v("多个客户端可以 bind 同一个端口吗？")]),t._v(" "),e("li",[t._v("客户端 TCP 连接 "),e("code",[t._v("TIME_WAIT")]),t._v(" 状态过多，会导致端口资源耗尽而无法建立新的连接吗？")])]),t._v(" "),e("p",[t._v("所以，这次就统一盘点下这些问题。")]),t._v(" "),e("h2",{attrs:{id:"tcp-和-udp-可以同时绑定相同的端口吗"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tcp-和-udp-可以同时绑定相同的端口吗"}},[t._v("#")]),t._v(" TCP 和 UDP 可以同时绑定相同的端口吗？")]),t._v(" "),e("h3",{attrs:{id:"参考答案"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考答案"}},[t._v("#")]),t._v(" 参考答案")]),t._v(" "),e("p",[e("strong",[t._v("可以的")]),t._v("。")]),t._v(" "),e("p",[t._v("回顾一下：")]),t._v(" "),e("ul",[e("li",[t._v("在数据链路层中，通过 MAC 地址来寻找局域网中的主机。")]),t._v(" "),e("li",[t._v("在网际层中，通过 IP 地址来寻找网络中互连的主机或路由器。")]),t._v(" "),e("li",[t._v("在传输层中，需要通过端口进行寻址，来识别同一计算机中同时通信的不同应用程序。")])]),t._v(" "),e("p",[t._v("所以，传输层的「端口号」的作用，是为了区分同一个主机上不同应用程序的数据包。而传输层有两个传输协议分别是 TCP 和 UDP，在内核中是两个完全独立的软件模块。")]),t._v(" "),e("p",[t._v("当主机收到数据包后，可以在 IP 包头的「协议号」字段知道该数据包是 TCP/UDP，然后可以根据这个信息确定送给哪个模块（TCP/UDP）处理，送给 TCP/UDP 模块的报文根据「端口号」确定送给哪个应用程序处理。")]),t._v(" "),e("p",[t._v("因此，TCP/UDP 各自的端口号也相互独立，互不影响。")]),t._v(" "),e("p",[t._v("如下图所示：")]),t._v(" "),e("div",{staticStyle:{"text-align":"center"}},[e("img",{staticStyle:{width:"460px"},attrs:{src:a(475),alt:"TCP 和 UDP 模块"}}),t._v(" "),e("p",{staticStyle:{"text-align":"center",color:"#888"}},[t._v("（TCP 和 UDP 模块）")])]),t._v(" "),e("p",[t._v("因此，TCP/UDP 各自的端口号也相互独立，如 TCP 有一个 "),e("code",[t._v("80")]),t._v(" 号端口，UDP 也可以有一个 "),e("code",[t._v("80")]),t._v(" 号端口，二者并不冲突。")]),t._v(" "),e("h3",{attrs:{id:"实验验证"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实验验证"}},[t._v("#")]),t._v(" 实验验证")]),t._v(" "),e("p",[t._v("使用 Python 的一个库 "),e("a",{attrs:{href:"https://docs.python.org/zh-cn/3/library/socketserver.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("socketserver"),e("OutboundLink")],1),t._v("，简单写一个 TCP 和 UDP 服务端的程序，它们都绑定同一个端口号 "),e("code",[t._v("9999")]),t._v("。")]),t._v(" "),e("p",[t._v("官方 TCP 服务端的实现 Demo：")]),t._v(" "),e("div",{staticClass:"language-python line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" socketserver\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyTCPHandler")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("socketserver"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BaseRequestHandler"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n    The request handler class for our server.\n\n    It is instantiated once per connection to the server, and must\n    override the handle() method to implement communication to the\n    client.\n    """')]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("handle")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# self.request is the TCP socket connected to the client")]),t._v("\n        self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("recv"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("strip"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{} wrote:"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("client_address"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# just send back the same data, but upper-cased")]),t._v("\n        self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sendall"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("upper"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" __name__ "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"__main__"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    HOST"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PORT "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("9999")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Create the server, binding to localhost on port 9999")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" socketserver"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TCPServer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HOST"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PORT"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MyTCPHandler"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" server"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Activate the server; this will keep running until you")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# interrupt the program with Ctrl-C")]),t._v("\n        server"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("serve_forever"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br")])]),e("p",[t._v("官方 UDP 服务端的实现 Demo：")]),t._v(" "),e("div",{staticClass:"language-python line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" socketserver\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyUDPHandler")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("socketserver"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BaseRequestHandler"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n    This class works similar to the TCP handler class, except that\n    self.request consists of a pair of data and client socket, and since\n    there is no connection the client address must be given explicitly\n    when sending data back via sendto().\n    """')]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("handle")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        data "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("strip"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        socket "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{} wrote:"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("client_address"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        socket"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sendto"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("upper"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("client_address"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" __name__ "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"__main__"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    HOST"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PORT "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("9999")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" socketserver"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("UDPServer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HOST"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PORT"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MyUDPHandler"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" server"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        server"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("serve_forever"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br")])]),e("p",[t._v("运行这两个程序后，通过 "),e("code",[t._v("netstat")]),t._v(" 命令可以看到，TCP 和 UDP 是可以同时绑定同一个端口号的。")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@study ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# netstat -anp | grep 9999")]),t._v("\ntcp        "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("      "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:9999          "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0:*           LISTEN      "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("19589")]),t._v("/python3\nudp        "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("      "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:9999          "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0:*                       "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("19669")]),t._v("/python3\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("h3",{attrs:{id:"「监听」还是「绑定」"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#「监听」还是「绑定」"}},[t._v("#")]),t._v(" 「监听」还是「绑定」")]),t._v(" "),e("p",[t._v("「监听」这个动作是在 TCP 服务端网络编程中才具有的，而 UDP 服务端网络编程中是没有「监听」这个动作的。")]),t._v(" "),e("p",[t._v("TCP 和 UDP 服务端网络相似的一个地方，就是会调用 bind 绑定端口。")]),t._v(" "),e("p",[t._v("两者的区别如下图，其中：")]),t._v(" "),e("ul",[e("li",[t._v("TCP 网络编程中，服务端执行 "),e("code",[t._v("listen()")]),t._v(" 系统调用就是监听端口的动作。")]),t._v(" "),e("li",[t._v("UDP 网络编程中，服务端是没有监听这个动作的，只有执行 "),e("code",[t._v("bind()")]),t._v(" 系统调用来绑定端口的动作。")])]),t._v(" "),e("div",{staticStyle:{"text-align":"center"}},[e("img",{attrs:{src:a(476),alt:"TCP 和 UDP 网络编程的区别"}}),t._v(" "),e("p",{staticStyle:{"text-align":"center",color:"#888"}},[t._v("（TCP 和 UDP 网络编程的区别）")])]),t._v(" "),e("h2",{attrs:{id:"多个-tcp-服务进程可以绑定同一个端口吗"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多个-tcp-服务进程可以绑定同一个端口吗"}},[t._v("#")]),t._v(" 多个 TCP 服务进程可以绑定同一个端口吗？")]),t._v(" "),e("h3",{attrs:{id:"参考答案-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考答案-2"}},[t._v("#")]),t._v(" 参考答案")]),t._v(" "),e("p",[e("strong",[t._v("如果两个 TCP 服务进程同时绑定的 IP 地址和端口都相同，那么执行 "),e("code",[t._v("bind()")]),t._v(" 时候就会出错，错误是 "),e("code",[t._v("Address already in use")])]),t._v("。如果两个 TCP 服务进程绑定的端口都相同，而 IP 地址不同，那么执行 "),e("code",[t._v("bind()")]),t._v(" 不会出错。")]),t._v(" "),e("p",[t._v("注意：如果 TCP 服务进程 A 绑定的地址是 "),e("code",[t._v("0.0.0.0")]),t._v(" 和端口 "),e("code",[t._v("9999")]),t._v("，而如果 TCP 服务进程 B 绑定的地址是 "),e("code",[t._v("192.168.1.100")]),t._v(" 地址（或者其他地址）和端口 "),e("code",[t._v("9999")]),t._v("，那么执行 "),e("code",[t._v("bind()")]),t._v(" 时候也会出错。")]),t._v(" "),e("p",[t._v("这是因为 "),e("code",[t._v("0.0.0.0")]),t._v(" 地址比较特殊，代表任意地址，意味着绑定了 "),e("code",[t._v("0.0.0.0")]),t._v(" 地址，相当于把主机上的所有 IP 地址都绑定了。")]),t._v(" "),e("h3",{attrs:{id:"实验验证-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实验验证-2"}},[t._v("#")]),t._v(" 实验验证")]),t._v(" "),e("p",[t._v("以前面的 TCP 服务端程序作为例子，启动两个同时绑定 "),e("code",[t._v("0.0.0.0")]),t._v(" 地址和 "),e("code",[t._v("9999")]),t._v(" 端口的服务进程，会出现报错：")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@study ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# netstat -anp | grep 9999")]),t._v("\ntcp        "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("      "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:9999          "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0:*            LISTEN      "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3915")]),t._v("/python3\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@study ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@study ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# python3 tcp_server.py ")]),t._v("\nTraceback "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("most recent call last"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":\n  File "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tcp_server.py"')]),t._v(", line "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v(", "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("module"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    with socketserver.TCPServer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("((")]),t._v("HOST, PORT"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", MyTCPHandler"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" as server:\n  File "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/usr/lib64/python3.6/socketserver.py"')]),t._v(", line "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("456")]),t._v(", "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" __init__\n    self.server_bind"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  File "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/usr/lib64/python3.6/socketserver.py"')]),t._v(", line "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("470")]),t._v(", "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" server_bind\n    self.socket.bind"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self.server_address"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nOSError: "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Errno "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("98")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Address already "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" use\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@study ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br")])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("小贴士")]),t._v(" "),e("p",[t._v("如果想多个进程绑定相同的 IP 地址和端口，也是有办法的，就是对 socket 设置 "),e("code",[t._v("SO_REUSEPORT")]),t._v(" 属性（内核 3.9 版本提供的新特性），本文不做具体介绍。")])]),t._v(" "),e("h3",{attrs:{id:"如何避免重启报错"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何避免重启报错"}},[t._v("#")]),t._v(" 如何避免重启报错")]),t._v(" "),e("p",[e("strong",[t._v("重启 TCP 服务进程时，为什么会有 "),e("code",[t._v("Address in use")]),t._v(" 的报错信息？")])]),t._v(" "),e("p",[t._v("这是在实际开发过程中经常会碰到的一个问题，当 TCP 服务进程重启之后，总是碰到 "),e("code",[t._v("Address in use")]),t._v(" 的报错信息，TCP 服务进程不能很快地重启，而是要过一会才能重启成功。")]),t._v(" "),e("p",[t._v("原因就是当我们重启 TCP 服务进程的时候，意味着通过服务器端发起了关闭连接操作，于是就会经过四次挥手，而对于主动关闭方，会在 "),e("code",[t._v("TIME_WAIT")]),t._v(" 这个状态里停留一段时间，这个时间大约为 2MSL（详情见"),e("RouterLink",{attrs:{to:"/basic-skills/network/tcp/#tcp-的四次挥手"}},[t._v("TCP 的四次挥手")]),t._v("）。"),e("code",[t._v("TIME_WAIT")]),t._v(" 这段时间里连接使用的 IP + PORT 仍然被认为是一个有效的 IP + PORT 组合，相同机器上不能够在该 IP + PORT 组合上进行绑定，那么执行 "),e("code",[t._v("bind()")]),t._v(" 函数的时候，就会返回了 "),e("code",[t._v("Address already in use")]),t._v(" 的错误。")],1),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("小贴士")]),t._v(" "),e("p",[t._v("重启 TCP 服务进程时如果想要秒启动成功，可以在调用 bind 前，对 socket 设置 "),e("code",[t._v("SO_REUSEADDR")]),t._v(" 属性，从而解决这个问题。")]),t._v(" "),e("p",[t._v("其原理就是如果当前启动进程绑定的 IP + PORT 与处于 "),e("code",[t._v("TIME_WAIT")]),t._v(" 状态的连接占用的 IP + PORT 存在冲突，但是新启动的进程使用了 "),e("code",[t._v("SO_REUSEADDR")]),t._v(" 选项，那么该进程就可以绑定成功。")]),t._v(" "),e("p",[t._v("这个方法还可以用来解决绑定了 "),e("code",[t._v("0.0.0.0:9999")]),t._v("，就不能绑定 "),e("code",[t._v("192.168.1.100:9999")]),t._v(" 的问题。")])]),t._v(" "),e("h2",{attrs:{id:"客户端的端口可以重复使用吗"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#客户端的端口可以重复使用吗"}},[t._v("#")]),t._v(" 客户端的端口可以重复使用吗？")]),t._v(" "),e("h3",{attrs:{id:"参考答案-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考答案-3"}},[t._v("#")]),t._v(" 参考答案")]),t._v(" "),e("p",[t._v("在客户端执行 "),e("code",[t._v("connect")]),t._v(" 函数的时候，只要客户端连接的服务器不是同一个，内核允许端口重复使用。")]),t._v(" "),e("p",[t._v("TCP 连接是由四元组（源IP地址，源端口，目的IP地址，目的端口）唯一确认的，那么只要四元组中其中一个元素发生了变化，那么就表示不同的 TCP 连接的。")]),t._v(" "),e("p",[t._v("所以，如果客户端已使用端口 "),e("code",[t._v("64992")]),t._v(" 与服务端 A 建立了连接，那么客户端要与服务端 B 建立连接，还是可以使用端口 "),e("code",[t._v("64992")]),t._v(" 的，因为内核是通过四元祖信息来定位一个 TCP 连接的，并不会因为客户端的端口号相同，而导致连接冲突的问题。")]),t._v(" "),e("h3",{attrs:{id:"理论验证"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#理论验证"}},[t._v("#")]),t._v(" 理论验证")]),t._v(" "),e("p",[t._v("客户端在执行 "),e("code",[t._v("connect")]),t._v(" 函数的时候，会在内核里随机选择一个端口，然后向服务端发起 SYN 报文，然后与服务端进行三次握手。")]),t._v(" "),e("div",{staticStyle:{"text-align":"center"}},[e("svg",{attrs:{id:"SvgjsSvg1006",width:"652",height:"624",xmlns:"http://www.w3.org/2000/svg",version:"1.1","xmlns:xlink":"http://www.w3.org/1999/xlink","xmlns:svgjs":"http://svgjs.com/svgjs"}},[e("defs",{attrs:{id:"SvgjsDefs1007"}},[e("marker",{attrs:{id:"SvgjsMarker1052",markerWidth:"14",markerHeight:"10",refX:"10",refY:"5",viewBox:"0 0 14 10",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[e("path",{attrs:{id:"SvgjsPath1053",d:"M0,0 L14,5 L0,10 L0,0",fill:"#323232",stroke:"#323232","stroke-width":"1"}})]),e("marker",{attrs:{id:"SvgjsMarker1056",markerWidth:"14",markerHeight:"10",refX:"10",refY:"5",viewBox:"0 0 14 10",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[e("path",{attrs:{id:"SvgjsPath1057",d:"M0,0 L14,5 L0,10 L0,0",fill:"#323232",stroke:"#323232","stroke-width":"1"}})]),e("marker",{attrs:{id:"SvgjsMarker1060",markerWidth:"14",markerHeight:"10",refX:"10",refY:"5",viewBox:"0 0 14 10",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[e("path",{attrs:{id:"SvgjsPath1061",d:"M0,0 L14,5 L0,10 L0,0",fill:"#323232",stroke:"#323232","stroke-width":"1"}})]),e("marker",{attrs:{id:"SvgjsMarker1070",markerWidth:"14",markerHeight:"10",refX:"10",refY:"5",viewBox:"0 0 14 10",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[e("path",{attrs:{id:"SvgjsPath1071",d:"M0,0 L14,5 L0,10 L0,0",fill:"#323232",stroke:"#323232","stroke-width":"1"}})]),e("marker",{attrs:{id:"SvgjsMarker1074",markerWidth:"14",markerHeight:"10",refX:"10",refY:"5",viewBox:"0 0 14 10",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[e("path",{attrs:{id:"SvgjsPath1075",d:"M0,0 L14,5 L0,10 L0,0",fill:"#323232",stroke:"#323232","stroke-width":"1"}})]),e("marker",{attrs:{id:"SvgjsMarker1090",markerWidth:"14",markerHeight:"10",refX:"10",refY:"5",viewBox:"0 0 14 10",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[e("path",{attrs:{id:"SvgjsPath1091",d:"M0,0 L14,5 L0,10 L0,0",fill:"#323232",stroke:"#323232","stroke-width":"1"}})]),e("marker",{attrs:{id:"SvgjsMarker1100",markerWidth:"14",markerHeight:"10",refX:"10",refY:"5",viewBox:"0 0 14 10",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[e("path",{attrs:{id:"SvgjsPath1101",d:"M0,0 L14,5 L0,10 L0,0",fill:"#323232",stroke:"#323232","stroke-width":"1"}})]),e("marker",{attrs:{id:"SvgjsMarker1104",markerWidth:"14",markerHeight:"10",refX:"10",refY:"5",viewBox:"0 0 14 10",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[e("path",{attrs:{id:"SvgjsPath1105",d:"M0,0 L14,5 L0,10 L0,0",fill:"#323232",stroke:"#323232","stroke-width":"1"}})]),e("marker",{attrs:{id:"SvgjsMarker1132",markerWidth:"14",markerHeight:"10",refX:"10",refY:"5",viewBox:"0 0 14 10",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[e("path",{attrs:{id:"SvgjsPath1133",d:"M0,0 L14,5 L0,10 L0,0",fill:"#323232",stroke:"#323232","stroke-width":"1"}})]),e("marker",{attrs:{id:"SvgjsMarker1136",markerWidth:"14",markerHeight:"10",refX:"10",refY:"5",viewBox:"0 0 14 10",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[e("path",{attrs:{id:"SvgjsPath1137",d:"M0,0 L14,5 L0,10 L0,0",fill:"#323232",stroke:"#323232","stroke-width":"1"}})]),e("marker",{attrs:{id:"SvgjsMarker1140",markerWidth:"14",markerHeight:"10",refX:"10",refY:"5",viewBox:"0 0 14 10",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[e("path",{attrs:{id:"SvgjsPath1141",d:"M0,0 L14,5 L0,10 L0,0",fill:"#323232",stroke:"#323232","stroke-width":"1"}})]),e("marker",{attrs:{id:"SvgjsMarker1150",markerWidth:"14",markerHeight:"10",refX:"10",refY:"5",viewBox:"0 0 14 10",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[e("path",{attrs:{id:"SvgjsPath1151",d:"M0,0 L14,5 L0,10 L0,0",fill:"#323232",stroke:"#323232","stroke-width":"1"}})]),e("marker",{attrs:{id:"SvgjsMarker1160",markerWidth:"14",markerHeight:"10",refX:"10",refY:"5",viewBox:"0 0 14 10",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[e("path",{attrs:{id:"SvgjsPath1161",d:"M0,0 L14,5 L0,10 L0,0",fill:"#323232",stroke:"#323232","stroke-width":"1"}})]),e("marker",{attrs:{id:"SvgjsMarker1170",markerWidth:"14",markerHeight:"10",refX:"10",refY:"5",viewBox:"0 0 14 10",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[e("path",{attrs:{id:"SvgjsPath1171",d:"M0,0 L14,5 L0,10 L0,0",fill:"#323232",stroke:"#323232","stroke-width":"1"}})]),e("marker",{attrs:{id:"SvgjsMarker1174",markerWidth:"14",markerHeight:"10",refX:"10",refY:"5",viewBox:"0 0 14 10",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[e("path",{attrs:{id:"SvgjsPath1175",d:"M0,0 L14,5 L0,10 L0,0",fill:"#323232",stroke:"#323232","stroke-width":"1"}})]),e("marker",{attrs:{id:"SvgjsMarker1178",markerWidth:"14",markerHeight:"10",refX:"10",refY:"5",viewBox:"0 0 14 10",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[e("path",{attrs:{id:"SvgjsPath1179",d:"M0,0 L14,5 L0,10 L0,0",fill:"#323232",stroke:"#323232","stroke-width":"1"}})])]),e("g",{attrs:{id:"SvgjsG1008",transform:"translate(69,25)"}},[e("path",{attrs:{id:"SvgjsPath1009",d:"M 0 0L 120 0L 120 40L 0 40Z",stroke:"none",fill:"none"}}),e("g",{attrs:{id:"SvgjsG1010"}},[e("text",{attrs:{id:"SvgjsText1011","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"120px",fill:"#323232","font-weight":"700",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"700","font-style":"",opacity:"1",y:"6",transform:"rotate(0)"}},[e("tspan",{attrs:{id:"SvgjsTspan1012",dy:"20",x:"60"}},[e("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1013"}},[t._v("TCP Client")])])])])]),e("g",{attrs:{id:"SvgjsG1014",transform:"translate(451,25)"}},[e("path",{attrs:{id:"SvgjsPath1015",d:"M 0 0L 120 0L 120 40L 0 40Z",stroke:"none",fill:"none"}}),e("g",{attrs:{id:"SvgjsG1016"}},[e("text",{attrs:{id:"SvgjsText1017","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"120px",fill:"#323232","font-weight":"700",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"700","font-style":"",opacity:"1",y:"6",transform:"rotate(0)"}},[e("tspan",{attrs:{id:"SvgjsTspan1018",dy:"20",x:"60"}},[e("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1019"}},[t._v("TCP Server")])])])])]),e("g",{attrs:{id:"SvgjsG1020",transform:"translate(88,71)"}},[e("path",{attrs:{id:"SvgjsPath1021",d:"M 0 0L 82 0L 82 44L 0 44Z",stroke:"rgba(144,165,182,1)","stroke-width":"2","fill-opacity":"1",fill:"#d8e8ff"}}),e("g",{attrs:{id:"SvgjsG1022"}},[e("text",{attrs:{id:"SvgjsText1023","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"62px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"8",transform:"rotate(0)"}},[e("tspan",{attrs:{id:"SvgjsTspan1024",dy:"20",x:"41"}},[e("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1025"}},[t._v("socket")])])])])]),e("g",{attrs:{id:"SvgjsG1026",transform:"translate(470,71)"}},[e("path",{attrs:{id:"SvgjsPath1027",d:"M 0 0L 82 0L 82 44L 0 44Z",stroke:"rgba(213,201,142,1)","stroke-width":"2","fill-opacity":"1",fill:"#fff2c7"}}),e("g",{attrs:{id:"SvgjsG1028"}},[e("text",{attrs:{id:"SvgjsText1029","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"62px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"8",transform:"rotate(0)"}},[e("tspan",{attrs:{id:"SvgjsTspan1030",dy:"20",x:"41"}},[e("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1031"}},[t._v("socket")])])])])]),e("g",{attrs:{id:"SvgjsG1032",transform:"translate(470,146)"}},[e("path",{attrs:{id:"SvgjsPath1033",d:"M 0 0L 82 0L 82 44L 0 44Z",stroke:"rgba(213,201,142,1)","stroke-width":"2","fill-opacity":"1",fill:"#fff2c7"}}),e("g",{attrs:{id:"SvgjsG1034"}},[e("text",{attrs:{id:"SvgjsText1035","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"62px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"8",transform:"rotate(0)"}},[e("tspan",{attrs:{id:"SvgjsTspan1036",dy:"20",x:"41"}},[e("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1037"}},[t._v("bind")])])])])]),e("g",{attrs:{id:"SvgjsG1038",transform:"translate(470,221)"}},[e("path",{attrs:{id:"SvgjsPath1039",d:"M 0 0L 82 0L 82 44L 0 44Z",stroke:"rgba(213,201,142,1)","stroke-width":"2","fill-opacity":"1",fill:"#fff2c7"}}),e("g",{attrs:{id:"SvgjsG1040"}},[e("text",{attrs:{id:"SvgjsText1041","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"62px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"8",transform:"rotate(0)"}},[e("tspan",{attrs:{id:"SvgjsTspan1042",dy:"20",x:"41"}},[e("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1043"}},[t._v("listen")])])])])]),e("g",{attrs:{id:"SvgjsG1044",transform:"translate(470,296)"}},[e("path",{attrs:{id:"SvgjsPath1045",d:"M 0 0L 82 0L 82 44L 0 44Z",stroke:"rgba(213,201,142,1)","stroke-width":"2","fill-opacity":"1",fill:"#fff2c7"}}),e("g",{attrs:{id:"SvgjsG1046"}},[e("text",{attrs:{id:"SvgjsText1047","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"62px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"8",transform:"rotate(0)"}},[e("tspan",{attrs:{id:"SvgjsTspan1048",dy:"20",x:"41"}},[e("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1049"}},[t._v("accept")])])])])]),e("g",{attrs:{id:"SvgjsG1050"}},[e("path",{attrs:{id:"SvgjsPath1051",d:"M511 116L511 130.5L511 130.5L511 142.4",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1052)"}})]),e("g",{attrs:{id:"SvgjsG1054"}},[e("path",{attrs:{id:"SvgjsPath1055",d:"M511 191L511 205.5L511 205.5L511 217.4",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1056)"}})]),e("g",{attrs:{id:"SvgjsG1058"}},[e("path",{attrs:{id:"SvgjsPath1059",d:"M511 266L511 280.5L511 280.5L511 292.4",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1060)"}})]),e("g",{attrs:{id:"SvgjsG1062",transform:"translate(88,296)"}},[e("path",{attrs:{id:"SvgjsPath1063",d:"M 0 0L 82 0L 82 44L 0 44Z",stroke:"rgba(144,165,182,1)","stroke-width":"2","fill-opacity":"1",fill:"#d8e8ff"}}),e("g",{attrs:{id:"SvgjsG1064"}},[e("text",{attrs:{id:"SvgjsText1065","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"62px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"8",transform:"rotate(0)"}},[e("tspan",{attrs:{id:"SvgjsTspan1066",dy:"20",x:"41"}},[e("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1067"}},[t._v("connect")])])])])]),e("g",{attrs:{id:"SvgjsG1068"}},[e("path",{attrs:{id:"SvgjsPath1069",d:"M129 116L129 205.5L129 205.5L129 292.4",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1070)"}})]),e("g",{attrs:{id:"SvgjsG1072"}},[e("path",{attrs:{id:"SvgjsPath1073",d:"M171 318L320 318L320 318L466.4 318","stroke-dasharray":"8,5",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1074)"}})]),e("g",{attrs:{id:"SvgjsG1076",transform:"translate(227.5,286)"}},[e("path",{attrs:{id:"SvgjsPath1077",d:"M 0 0L 185 0L 185 32L 0 32Z",stroke:"none",fill:"none"}}),e("g",{attrs:{id:"SvgjsG1078"}},[e("text",{attrs:{id:"SvgjsText1079","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"185px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"5.375",transform:"rotate(0)"}},[e("tspan",{attrs:{id:"SvgjsTspan1080",dy:"16",x:"92.5"}},[e("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1081"}},[t._v("连接请求（TCP 三次握手）")])])])])]),e("g",{attrs:{id:"SvgjsG1082",transform:"translate(159.5,402)"}},[e("path",{attrs:{id:"SvgjsPath1083",d:"M 0 0L 81.5 0L 81.5 44L 0 44Z",stroke:"rgba(144,165,182,1)","stroke-width":"2","fill-opacity":"1",fill:"#d8e8ff"}}),e("g",{attrs:{id:"SvgjsG1084"}},[e("text",{attrs:{id:"SvgjsText1085","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"62px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"8",transform:"rotate(0)"}},[e("tspan",{attrs:{id:"SvgjsTspan1086",dy:"20",x:"41"}},[e("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1087"}},[t._v("write")])])])])]),e("g",{attrs:{id:"SvgjsG1088"}},[e("path",{attrs:{id:"SvgjsPath1089",d:"M129.8079132523299 340.5893014311112L211.0915122916124 399.8785148479996",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1090)"}})]),e("g",{attrs:{id:"SvgjsG1092",transform:"translate(25,402)"}},[e("path",{attrs:{id:"SvgjsPath1093",d:"M 0 0L 82 0L 82 44L 0 44Z",stroke:"rgba(144,165,182,1)","stroke-width":"2","fill-opacity":"1",fill:"#d8e8ff"}}),e("g",{attrs:{id:"SvgjsG1094"}},[e("text",{attrs:{id:"SvgjsText1095","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"62px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"8",transform:"rotate(0)"}},[e("tspan",{attrs:{id:"SvgjsTspan1096",dy:"20",x:"41"}},[e("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1097"}},[t._v("read")])])])])]),e("g",{attrs:{id:"SvgjsG1098"}},[e("path",{attrs:{id:"SvgjsPath1099",d:"M66 401L66 379L176.37626262626264 379L176.37626262626264 398.4",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1100)"}})]),e("g",{attrs:{id:"SvgjsG1102"}},[e("path",{attrs:{id:"SvgjsPath1103",d:"M158.5 424L133.25 424L133.25 424L110.60000000000002 424",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1104)"}})]),e("g",{attrs:{id:"SvgjsG1106",transform:"translate(88,480)"}},[e("path",{attrs:{id:"SvgjsPath1107",d:"M 0 0L 82 0L 82 44L 0 44Z",stroke:"rgba(144,165,182,1)","stroke-width":"2","fill-opacity":"1",fill:"#d8e8ff"}}),e("g",{attrs:{id:"SvgjsG1108"}},[e("text",{attrs:{id:"SvgjsText1109","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"62px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"8",transform:"rotate(0)"}},[e("tspan",{attrs:{id:"SvgjsTspan1110",dy:"20",x:"41"}},[e("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1111"}},[t._v("close")])])])])]),e("g",{attrs:{id:"SvgjsG1112",transform:"translate(140.25,340)"}},[e("path",{attrs:{id:"SvgjsPath1113",d:"M 0 0L 120 0L 120 40L 0 40Z",stroke:"none",fill:"none"}}),e("g",{attrs:{id:"SvgjsG1114"}},[e("text",{attrs:{id:"SvgjsText1115","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"120px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"9.375",transform:"rotate(0)"}},[e("tspan",{attrs:{id:"SvgjsTspan1116",dy:"16",x:"60"}},[e("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1117"}},[t._v("连接建立")])])])])]),e("g",{attrs:{id:"SvgjsG1118",transform:"translate(403,402)"}},[e("path",{attrs:{id:"SvgjsPath1119",d:"M 0 0L 82 0L 82 44L 0 44Z",stroke:"rgba(213,201,142,1)","stroke-width":"2","fill-opacity":"1",fill:"#fff2c7"}}),e("g",{attrs:{id:"SvgjsG1120"}},[e("text",{attrs:{id:"SvgjsText1121","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"62px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"8",transform:"rotate(0)"}},[e("tspan",{attrs:{id:"SvgjsTspan1122",dy:"20",x:"41"}},[e("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1123"}},[t._v("read")])])])])]),e("g",{attrs:{id:"SvgjsG1124",transform:"translate(545,402)"}},[e("path",{attrs:{id:"SvgjsPath1125",d:"M 0 0L 82 0L 82 44L 0 44Z",stroke:"rgba(213,201,142,1)","stroke-width":"2","fill-opacity":"1",fill:"#fff2c7"}}),e("g",{attrs:{id:"SvgjsG1126"}},[e("text",{attrs:{id:"SvgjsText1127","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"62px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"8",transform:"rotate(0)"}},[e("tspan",{attrs:{id:"SvgjsTspan1128",dy:"20",x:"41"}},[e("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1129"}},[t._v("write")])])])])]),e("g",{attrs:{id:"SvgjsG1130"}},[e("path",{attrs:{id:"SvgjsPath1131",d:"M510.1954259204142 340.5938522968371L429.8964666865088 399.8621317313864",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1132)"}})]),e("g",{attrs:{id:"SvgjsG1134"}},[e("path",{attrs:{id:"SvgjsPath1135",d:"M586 401L586 375L471 375L471 398.4",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1136)"}})]),e("g",{attrs:{id:"SvgjsG1138"}},[e("path",{attrs:{id:"SvgjsPath1139",d:"M486 424L515 424L515 424L541.4 424",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1140)"}})]),e("g",{attrs:{id:"SvgjsG1142",transform:"translate(470,480)"}},[e("path",{attrs:{id:"SvgjsPath1143",d:"M 0 0L 82 0L 82 44L 0 44Z",stroke:"rgba(213,201,142,1)","stroke-width":"2","fill-opacity":"1",fill:"#fff2c7"}}),e("g",{attrs:{id:"SvgjsG1144"}},[e("text",{attrs:{id:"SvgjsText1145","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"62px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"8",transform:"rotate(0)"}},[e("tspan",{attrs:{id:"SvgjsTspan1146",dy:"20",x:"41"}},[e("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1147"}},[t._v("close")])])])])]),e("g",{attrs:{id:"SvgjsG1148"}},[e("path",{attrs:{id:"SvgjsPath1149",d:"M242 424L399.4 424","stroke-dasharray":"8,5",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1150)"}})]),e("g",{attrs:{id:"SvgjsG1152",transform:"translate(253,388)"}},[e("path",{attrs:{id:"SvgjsPath1153",d:"M 0 0L 120 0L 120 40L 0 40Z",stroke:"none",fill:"none"}}),e("g",{attrs:{id:"SvgjsG1154"}},[e("text",{attrs:{id:"SvgjsText1155","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"120px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"9.375",transform:"rotate(0)"}},[e("tspan",{attrs:{id:"SvgjsTspan1156",dy:"16",x:"60"}},[e("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1157"}},[t._v("数据发送")])])])])]),e("g",{attrs:{id:"SvgjsG1158"}},[e("path",{attrs:{id:"SvgjsPath1159",d:"M170.96214477496574 501.72746113670496L399.53627881012335 436.98113990786203",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1160)"}})]),e("g",{attrs:{id:"SvgjsG1162",transform:"translate(227.5,468)"}},[e("path",{attrs:{id:"SvgjsPath1163",d:"M 0 0L 120 0L 120 40L 0 40Z",stroke:"none",fill:"none"}}),e("g",{attrs:{id:"SvgjsG1164"}},[e("text",{attrs:{id:"SvgjsText1165","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"120px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"9.375",transform:"rotate(0)"}},[e("tspan",{attrs:{id:"SvgjsTspan1166",dy:"16",x:"60"}},[e("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1167"}},[t._v("EOF")])])])])]),e("g",{attrs:{id:"SvgjsG1168"}},[e("path",{attrs:{id:"SvgjsPath1169",d:"M461.82692650206957 446.56231002140726L508.02306459254964 477.9756839229338",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1170)"}})]),e("g",{attrs:{id:"SvgjsG1172"}},[e("path",{attrs:{id:"SvgjsPath1173",d:"M86.77556200371117 445.63127139836956L126.20797678663973 477.72742296586955",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1174)"}})]),e("g",{attrs:{id:"SvgjsG1176"}},[e("path",{attrs:{id:"SvgjsPath1177",d:"M586 447L586 561L66 561L66 449.6","stroke-dasharray":"8,5",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1178)"}})]),e("g",{attrs:{id:"SvgjsG1180",transform:"translate(253,559)"}},[e("path",{attrs:{id:"SvgjsPath1181",d:"M 0 0L 120 0L 120 40L 0 40Z",stroke:"none",fill:"none"}}),e("g",{attrs:{id:"SvgjsG1182"}},[e("text",{attrs:{id:"SvgjsText1183","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"120px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"9.375",transform:"rotate(0)"}},[e("tspan",{attrs:{id:"SvgjsTspan1184",dy:"16",x:"60"}},[e("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1185"}},[t._v("数据发送")])])])])])]),t._v(" "),e("p",{staticStyle:{"text-align":"center",color:"#888"}},[t._v("（客户端执行 TCP 连接请求后的数据流通过程）")])]),t._v(" "),e("p",[t._v("所以，客户端的端口选择发生在 "),e("code",[t._v("connect")]),t._v(" 函数，内核在选择端口的时候，会从 "),e("code",[t._v("net.ipv4.ip_local_port_range")]),t._v(" 这个内核参数指定的范围来选取一个端口作为客户端端口。")]),t._v(" "),e("p",[t._v("该参数的默认值是 "),e("code",[t._v("32768～61000")]),t._v("，意味着端口总可用的数量是 61000 - 32768 = 28232 个。")]),t._v(" "),e("p",[t._v("当客户端与服务端完成 TCP 连接建立后，我们可以通过 "),e("code",[t._v("netstat -anpt")]),t._v(" 命令查看 TCP 连接。")]),t._v(" "),e("p",[t._v("那问题来了，"),e("strong",[t._v("如果客户端已经用了某个端口，那么还可以继续使用该端口发起连接吗？")])]),t._v(" "),e("p",[t._v("如果说不可以继续使用该端口了，按这个理解的话，默认情况下客户端可以选择的端口是 28232 个，那么意味着客户端只能最多建立 28232 个 TCP 连接，如果真是这样的话，那么这个客户端并发连接也太少了，显然这是错误理解。")]),t._v(" "),e("p",[t._v("正确的理解是："),e("strong",[t._v("TCP 连接是由四元组（源IP地址，源端口，目的IP地址，目的端口）唯一确认的，那么只要四元组中其中一个元素发生了变化，那么就表示不同的 TCP 连接的。所以如果客户端已使用某个端口与服务端 A 建立了连接，那么客户端要与服务端 B 建立连接，还是可以使用该端口的，因为内核是通过四元祖信息来定位一个 TCP 连接的，并不会因为客户端的端口号相同，而导致连接冲突的问题。")])]),t._v(" "),e("p",[t._v("比如下面，使用 "),e("code",[t._v("nc")]),t._v(" 命令建立 2 个 TCP 连接，指定这两个连接都是从本地 "),e("code",[t._v("50001")]),t._v(" 端口发起的：")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 先开一个 shell 命令窗口")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@study ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# nc -p 50001 183.232.231.174 80")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 再开一个 shell 命令窗口")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@study ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# nc -p 50001 39.156.66.18 80")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[t._v("使用命令查看 TCP 连接，查询结果中，左边是客户端，右边是服务端，客户端使用了相同的端口 "),e("code",[t._v("50001")]),t._v(" 与两个服务端建立了 TCP 连接。而这两条 TCP 连接的四元组信息中的「目的 IP 地址」是不同的，一个是 "),e("code",[t._v("39.156.66.18")]),t._v("，另外一个是 "),e("code",[t._v("183.232.231.174")]),t._v("。")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@study ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# netstat -npt | grep 50001")]),t._v("\ntcp        "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("      "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.0")]),t._v(".16.7:50001         "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("39.156")]),t._v(".66.18:80         ESTABLISHED "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("30412")]),t._v("/nc\ntcp        "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("      "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.0")]),t._v(".16.7:50001         "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("183.232")]),t._v(".231.174:80      ESTABLISHED "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("30406")]),t._v("/nc\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("h2",{attrs:{id:"多个客户端可以-bind-同一个端口吗"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多个客户端可以-bind-同一个端口吗"}},[t._v("#")]),t._v(" 多个客户端可以 bind 同一个端口吗？")]),t._v(" "),e("h3",{attrs:{id:"参考答案-4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考答案-4"}},[t._v("#")]),t._v(" 参考答案")]),t._v(" "),e("p",[t._v("要看多个客户端绑定的 IP + PORT 是否都相同：")]),t._v(" "),e("ul",[e("li",[t._v("如果多个客户端同时绑定的 IP 地址和端口都是相同的，那么执行 "),e("code",[t._v("bind()")]),t._v(" 时候就会出错，错误是 "),e("code",[t._v("Address already in use")]),t._v("。")]),t._v(" "),e("li",[t._v("如果绑定的 IP 不相同，那么执行 "),e("code",[t._v("bind()")]),t._v(" 的时候，能正常绑定。")])]),t._v(" "),e("p",[t._v("一般而言，客户端不建议使用 bind 函数，应该交由 connect 函数来选择端口会比较好，因为客户端的端口通常都没什么意义。")]),t._v(" "),e("h3",{attrs:{id:"理论验证-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#理论验证-2"}},[t._v("#")]),t._v(" 理论验证")]),t._v(" "),e("p",[e("code",[t._v("bind")]),t._v(" 函数虽然常用于服务端网络编程中，但是它也是用于客户端的。")]),t._v(" "),e("p",[t._v("前面我们知道，客户端是在调用 "),e("code",[t._v("connect")]),t._v(" 函数的时候，由内核随机选取一个端口作为连接的端口。")]),t._v(" "),e("p",[t._v("而如果我们想自己指定连接的端口，就可以用 "),e("code",[t._v("bind")]),t._v(" 函数来实现：客户端先通过 "),e("code",[t._v("bind")]),t._v(" 函数绑定一个端口，然后调用 "),e("code",[t._v("connect")]),t._v(" 函数就会跳过端口选择的过程了，转而使用 "),e("code",[t._v("bind")]),t._v(" 时确定的端口。")]),t._v(" "),e("h2",{attrs:{id:"客户端-tcp-连接-time-wait-状态过多-会导致端口资源耗尽而无法建立新的连接吗"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#客户端-tcp-连接-time-wait-状态过多-会导致端口资源耗尽而无法建立新的连接吗"}},[t._v("#")]),t._v(" 客户端 TCP 连接 "),e("code",[t._v("TIME_WAIT")]),t._v(" 状态过多，会导致端口资源耗尽而无法建立新的连接吗？")]),t._v(" "),e("h3",{attrs:{id:"参考答案-5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考答案-5"}},[t._v("#")]),t._v(" 参考答案")]),t._v(" "),e("p",[t._v("针对这个问题要看，客户端是否都是与同一个服务器（目标地址和目标端口一样）建立连接。")]),t._v(" "),e("p",[t._v("如果客户端都是与同一个服务器（目标地址和目标端口一样）建立连接，那么如果客户端 "),e("code",[t._v("TIME_WAIT")]),t._v(" 状态的连接过多，当端口资源被耗尽，就无法与这个服务器再建立连接了。")]),t._v(" "),e("p",[t._v("但是，"),e("strong",[t._v("因为只要客户端连接的服务器不同，端口资源可以重复使用的")]),t._v("。")]),t._v(" "),e("p",[t._v("所以，如果客户端都是与不同的服务器建立连接，即使客户端端口资源只有几万个， 客户端发起百万级连接也是没问题的（当然这个过程还会受限于其他资源，比如文件描述符、内存、CPU 等）。")]),t._v(" "),e("h2",{attrs:{id:"如何解决客户端-tcp-连接-time-wait-过多-导致无法与同一个服务器建立连接的问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何解决客户端-tcp-连接-time-wait-过多-导致无法与同一个服务器建立连接的问题"}},[t._v("#")]),t._v(" 如何解决客户端 TCP 连接 "),e("code",[t._v("TIME_WAIT")]),t._v(" 过多，导致无法与同一个服务器建立连接的问题？")]),t._v(" "),e("h3",{attrs:{id:"参考答案-6"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考答案-6"}},[t._v("#")]),t._v(" 参考答案")]),t._v(" "),e("p",[t._v("前面提到，如果客户端都是与同一个服务器（目标地址和目标端口一样）建立连接，那么如果客户端 "),e("code",[t._v("TIME_WAIT")]),t._v(" 状态的连接过多，当端口资源被耗尽，就无法与这个服务器再建立连接了。")]),t._v(" "),e("p",[t._v("针对这个问题，也是有解决办法的，那就是打开 "),e("code",[t._v("net.ipv4.tcp_tw_reuse")]),t._v(" 这个内核参数。")]),t._v(" "),e("p",[e("strong",[t._v("因为开启了这个内核参数后，客户端调用 connect 函数时，如果选择到的端口，已经被相同四元组的连接占用的时候，就会判断该连接是否处于 "),e("code",[t._v("TIME_WAIT")]),t._v(" 状态，如果该连接处于 "),e("code",[t._v("TIME_WAIT")]),t._v(" 状态并且 "),e("code",[t._v("TIME_WAIT")]),t._v(" 状态持续的时间超过了 1 秒，那么就会重用这个连接，然后就可以正常使用该端口了。")])]),t._v(" "),e("h3",{attrs:{id:"实验验证-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实验验证-3"}},[t._v("#")]),t._v(" 实验验证")]),t._v(" "),e("p",[t._v("举个例子，假设客户端已经与服务器建立了一个 TCP 连接，并且这个状态处于 "),e("code",[t._v("TIME_WAIT")]),t._v(" 状态：")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("客户端地址:端口           服务端地址:端口         TCP 连接状态\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".1.100:2222     "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.19")]),t._v(".11.21:9999     TIME_WAIT\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[t._v("然后客户端又与该服务器（172.19.11.21:9999）发起了连接，"),e("strong",[t._v("在调用 "),e("code",[t._v("connect")]),t._v(" 函数时，内核刚好选择了 2222 端口，接着发现已经被相同四元组的连接占用了")]),t._v("：")]),t._v(" "),e("ul",[e("li",[t._v("如果"),e("strong",[t._v("没有开启")]),t._v(" "),e("code",[t._v("net.ipv4.tcp_tw_reuse")]),t._v(" 内核参数，那么内核就会选择下一个端口，然后继续判断，直到找到一个没有被相同四元组的连接使用的端口， 如果端口资源耗尽还是没找到，那么 connect 函数就会返回错误。")]),t._v(" "),e("li",[t._v("如果"),e("strong",[t._v("开启了")]),t._v(" "),e("code",[t._v("net.ipv4.tcp_tw_reuse")]),t._v(" 内核参数，就会判断该四元组的连接状态是否处于 "),e("code",[t._v("TIME_WAIT")]),t._v(" 状态，"),e("strong",[t._v("如果连接处于 "),e("code",[t._v("TIME_WAIT")]),t._v(" 状态并且该状态持续的时间超过了 1 秒，那么就会重用该连接")]),t._v("，于是就可以使用 2222 端口了，这时 connect 就会返回成功。")])]),t._v(" "),e("p",[t._v("再次提醒一次，开启了 "),e("code",[t._v("net.ipv4.tcp_tw_reuse")]),t._v(" 内核参数，是客户端（连接发起方）在调用 "),e("code",[t._v("connect()")]),t._v(" 函数时才起作用，所以在服务端开启这个参数是没有效果的。")]),t._v(" "),e("h3",{attrs:{id:"客户端端口选择的流程总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#客户端端口选择的流程总结"}},[t._v("#")]),t._v(" 客户端端口选择的流程总结")]),t._v(" "),e("p",[t._v("客户端在执行 connect 函数时，内核选择端口的过程如下图所示：")]),t._v(" "),e("div",{staticStyle:{"text-align":"center"}},[e("img",{attrs:{src:a(477),alt:"客户端端口的选择过程"}}),t._v(" "),e("p",{staticStyle:{"text-align":"center",color:"#888"}},[t._v("（客户端端口的选择过程）")])]),t._v(" "),e("p",[t._v("（完）")])])}),[],!1,null,null,null);s.default=r.exports}}]);
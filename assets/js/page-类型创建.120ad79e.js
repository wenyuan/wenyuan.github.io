(window.webpackJsonp=window.webpackJsonp||[]).push([[295],{1024:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"类型创建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型创建"}},[t._v("#")]),t._v(" 类型创建")]),t._v(" "),a("p",[t._v("所谓类型创建，就是基于已有类型，创建出新的类型。创建新类型需要用到的工具有类型别名、交叉类型、索引类型与映射类型。")]),t._v(" "),a("h2",{attrs:{id:"类型别名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型别名"}},[t._v("#")]),t._v(" 类型别名")]),t._v(" "),a("p",[t._v("类型别名的作用主要是对一组类型或一个特定类型结构进行封装，以便于在其它地方进行复用。")]),t._v(" "),a("p",[t._v("语法是使用 "),a("code",[t._v("type")]),t._v(" 关键字，例如：")]),t._v(" "),a("div",{staticClass:"language-typescript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StatusCode")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("301")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" status"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" StatusCode "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h3",{attrs:{id:"工具类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工具类型"}},[t._v("#")]),t._v(" 工具类型")]),t._v(" "),a("p",[t._v("类型别名结合泛型，就成了工具类型。")]),t._v(" "),a("p",[t._v("工具类型能够接受泛型参数（就像函数的参数），然后内部逻辑再基于入参进行某些操作，再返回一个新的类型。")]),t._v(" "),a("p",[t._v("比如这样：")]),t._v(" "),a("div",{staticClass:"language-typescript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义一个工具类型，返回一个包括 null 的联合类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MaybeNull"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 确保能处理可能为空值的属性读取与方法调用")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("process")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" MaybeNull"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("handler")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因为可能是 null，所以用可选链操作符来调用一个可能不存在的方法")]),t._v("\n    input"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?.")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("总之对于工具类型来说，它的主要意义是"),a("strong",[t._v("基于传入的泛型进行各种类型操作")]),t._v("，得到一个新的类型。")]),t._v(" "),a("h2",{attrs:{id:"联合类型与交叉类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#联合类型与交叉类型"}},[t._v("#")]),t._v(" 联合类型与交叉类型")]),t._v(" "),a("p",[t._v("联合类型的符号是 "),a("code",[t._v("|")]),t._v("，它代表了「或」，即只需要符合其中的一个类型，就可以认为实现了这个联合类型，例如：")]),t._v(" "),a("div",{staticClass:"language-typescript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myFavoriteNumber"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmyFavoriteNumber "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'seven'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmyFavoriteNumber "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("交叉类型的符号是 "),a("code",[t._v("&")]),t._v("，它代表了「与」，即需要符合这里的所有类型，才可以说实现了这个交叉类型，例如：")]),t._v(" "),a("div",{staticClass:"language-typescript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NameStruct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AgeStruct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProfileStruct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" NameStruct "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" AgeStruct"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" profile"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ProfileStruct "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"张三"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br")])]),a("p",[t._v("上面是对于对象类型的合并，如果是对原始类型进行合并，就会变成 "),a("code",[t._v("never")]),t._v("，因为会造出一个根本不存在的类型：")]),t._v(" "),a("div",{staticClass:"language-typescript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 世界上不存在既是 string 又是 number 的类型，所以是 never")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StrAndNum")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h2",{attrs:{id:"索引类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引类型"}},[t._v("#")]),t._v(" 索引类型")]),t._v(" "),a("p",[t._v("索引类型指的不是某一个特定的类型工具，它包含三个部分：索引签名类型、索引类型查询与索引类型访问。这三者都是独立的类型工具，唯一共同点是它们都通过索引的形式来进行类型操作。但索引签名类型是声明，后两者则是读取。")]),t._v(" "),a("h3",{attrs:{id:"索引签名类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引签名类型"}},[t._v("#")]),t._v(" 索引签名类型")]),t._v(" "),a("p",[t._v("索引签名类型，主要指的是在接口或类型别名中，通过以下语法来"),a("strong",[t._v("快速声明一个键值类型一致的类型结构")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-typescript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用在接口中")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AllStringTypes")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用在类型别名中")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AllStringTypes")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[t._v("这时即使还没声明具体的属性，也意味着在实现这个类型结构的变量中"),a("strong",[t._v("只能声明字符串类型的键")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-typescript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AllStringTypes")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" foo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" AllStringTypes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"张三"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h3",{attrs:{id:"索引类型查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引类型查询"}},[t._v("#")]),t._v(" 索引类型查询")]),t._v(" "),a("p",[t._v("索引类型查询，可以通过 "),a("code",[t._v("keyof")]),t._v(" 操作符，将对象中的所有键转换为对应字面量类型，然后再组合成联合类型。")]),t._v(" "),a("div",{staticClass:"language-typescript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FooKeys")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("keyof")]),t._v(" Foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "name" | "age" | 123')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" tmp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" FooKeys "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// tmp 的值只能是 "name"、"age"、123 中的一个')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[a("code",[t._v("keyof")]),t._v(" 的产物必定是一个联合类型，而 "),a("code",[t._v("keyof any")]),t._v(" 产生的联合类型，是由所有可用作对象键值的类型组成的，即 "),a("code",[t._v("string | number | symbol")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"索引类型访问"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引类型访问"}},[t._v("#")]),t._v(" 索引类型访问")]),t._v(" "),a("p",[t._v("在 JavaScript 中我们可以通过 "),a("code",[t._v("obj[expression]")]),t._v(" 的方式来动态访问一个对象属性，其中 expression 表达式会先被执行，然后使用返回值来访问属性。")]),t._v(" "),a("p",[t._v("在 TypeScript 中也可以通过类似的方式，只不过这里的 expression 要换成类型：")]),t._v(" "),a("div",{staticClass:"language-typescript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    propA"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    propB"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PropAType")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'propA'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// number")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PropBType")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'propB'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// boolean")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("要注意其访问方式与返回值均是类型。上面代码中的 "),a("code",[t._v("'propA'")]),t._v(" 和 "),a("code",[t._v("'propB'")]),t._v(" 都是字符串字面量类型，而不是一个 JavaScript 字符串值。")]),t._v(" "),a("p",[t._v("索引类型查询的本质其实就是，通过键的字面量类型（"),a("code",[t._v("'propA'")]),t._v("）访问这个键对应的键值类型（"),a("code",[t._v("number")]),t._v("）。")]),t._v(" "),a("h2",{attrs:{id:"映射类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#映射类型"}},[t._v("#")]),t._v(" 映射类型")]),t._v(" "),a("p",[t._v("映射类型的主要作用是基于键名，映射到键值类型。概念不好理解，直接看例子：")]),t._v(" "),a("div",{staticClass:"language-typescript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Stringify"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("K")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("keyof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("这个工具类型接受一个对象类型，使用 "),a("code",[t._v("keyof")]),t._v(" 获得这个对象类型的键名组成字面量联合类型，然后通过映射类型（即这里的 "),a("code",[t._v("in")]),t._v(" 关键字）将这个联合类型的每一个成员映射出来，并将其键值类型设置为 "),a("code",[t._v("string")]),t._v("。")]),t._v(" "),a("p",[t._v("放到代码中的用法：")]),t._v(" "),a("div",{staticClass:"language-typescript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  prop1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  prop2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  prop3"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("prop4")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringifiedFoo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Stringify"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Foo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 上述代码就等价于")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringifiedFoo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  prop1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  prop2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  prop3"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  prop4"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br")])]),a("p",[t._v("要说这个用法的实际场景的话，可能是这样：")]),t._v(" "),a("div",{staticClass:"language-typescript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Clone"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("K")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("keyof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("K")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("就是先拿到键，然后通过索引类型访问（"),a("code",[t._v("T[K]")]),t._v("）获得值的类型，最终实现了接口的克隆。这样就结合到了「索引类型」这一主题下的几个功能了：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("K in")]),t._v(" 是上面提到的映射类型的语法")]),t._v(" "),a("li",[a("code",[t._v("[K in keyof T]")]),t._v(" 的 "),a("code",[t._v("[]")]),t._v(" 是索引签名类型的语法")]),t._v(" "),a("li",[a("code",[t._v("keyof T")]),t._v(" 是索引类型查询的语法（keyof 操作符）")]),t._v(" "),a("li",[a("code",[t._v("T[K]")]),t._v(" 是索引类型访问的语法")])]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("类型别名、联合类型、索引类型以及映射类型，这些主要都用于创建新类型，它们的实现方式与常见搭配总结如下：")]),t._v(" "),a("p",[a("svg",{attrs:{id:"SvgjsSvg1006",width:"833",height:"372",xmlns:"http://www.w3.org/2000/svg",version:"1.1","xmlns:xlink":"http://www.w3.org/1999/xlink","xmlns:svgjs":"http://svgjs.com/svgjs"}},[a("defs",{attrs:{id:"SvgjsDefs1007"}}),a("g",{attrs:{id:"SvgjsG1008",transform:"translate(25.000015258789062,24.99999237060547)"}},[a("path",{attrs:{id:"SvgjsPath1009",d:"M0 0L126.9243 0L126.9243 35.76304312 L0 35.76304312Z",stroke:"rgba(201,208,227,1)","stroke-width":"1","fill-opacity":"1",fill:"#f5f7fb"}}),a("path",{attrs:{id:"SvgjsPath1010",d:"M126.9243 0L614.0286 0L614.0286 35.76304312 L126.9243 35.76304312Z",stroke:"rgba(201,208,227,1)","stroke-width":"1","fill-opacity":"1",fill:"#f5f7fb"}}),a("path",{attrs:{id:"SvgjsPath1011",d:"M613.9503 0L783 0L783 35.76304312 L613.9503 35.76304312Z",stroke:"rgba(201,208,227,1)","stroke-width":"1","fill-opacity":"1",fill:"#f5f7fb"}}),a("path",{attrs:{id:"SvgjsPath1012",d:"M0 35.76304312L126.9243 35.76304312L126.9243 71.52608624 L0 71.52608624Z",stroke:"rgba(201,208,227,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),a("path",{attrs:{id:"SvgjsPath1013",d:"M126.9243 35.76304312L614.0286 35.76304312L614.0286 71.52608624 L126.9243 71.52608624Z",stroke:"rgba(201,208,227,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),a("path",{attrs:{id:"SvgjsPath1014",d:"M613.9503 35.76304312L783 35.76304312L783 71.52608624 L613.9503 71.52608624Z",stroke:"rgba(201,208,227,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),a("path",{attrs:{id:"SvgjsPath1015",d:"M0 71.52608624L126.9243 71.52608624L126.9243 107.28912936 L0 107.28912936Z",stroke:"rgba(201,208,227,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),a("path",{attrs:{id:"SvgjsPath1016",d:"M126.9243 71.52608624L614.0286 71.52608624L614.0286 107.28912936 L126.9243 107.28912936Z",stroke:"rgba(201,208,227,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),a("path",{attrs:{id:"SvgjsPath1017",d:"M613.9503 71.52608624L783 71.52608624L783 107.28912936 L613.9503 107.28912936Z",stroke:"rgba(201,208,227,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),a("path",{attrs:{id:"SvgjsPath1018",d:"M0 107.28912936L126.9243 107.28912936L126.9243 143.05217248 L0 143.05217248Z",stroke:"rgba(201,208,227,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),a("path",{attrs:{id:"SvgjsPath1019",d:"M126.9243 107.28912936L614.0286 107.28912936L614.0286 143.05217248 L126.9243 143.05217248Z",stroke:"rgba(201,208,227,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),a("path",{attrs:{id:"SvgjsPath1020",d:"M613.9503 107.28912936L783 107.28912936L783 143.05217248 L613.9503 143.05217248Z",stroke:"rgba(201,208,227,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),a("path",{attrs:{id:"SvgjsPath1021",d:"M0 143.05217248L126.9243 143.05217248L126.9243 178.8152156 L0 178.8152156Z",stroke:"rgba(201,208,227,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),a("path",{attrs:{id:"SvgjsPath1022",d:"M126.9243 143.05217248L614.0286 143.05217248L614.0286 178.8152156 L126.9243 178.8152156Z",stroke:"rgba(201,208,227,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),a("path",{attrs:{id:"SvgjsPath1023",d:"M613.9503 143.05217248L783 143.05217248L783 178.8152156 L613.9503 178.8152156Z",stroke:"rgba(201,208,227,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),a("path",{attrs:{id:"SvgjsPath1024",d:"M0 178.81521560000002L126.9243 178.81521560000002L126.9243 214.57825872 L0 214.57825872Z",stroke:"rgba(201,208,227,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),a("path",{attrs:{id:"SvgjsPath1025",d:"M126.9243 178.81521560000002L614.0286 178.81521560000002L614.0286 214.57825872 L126.9243 214.57825872Z",stroke:"rgba(201,208,227,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),a("path",{attrs:{id:"SvgjsPath1026",d:"M613.9503 178.81521560000002L783 178.81521560000002L783 214.57825872 L613.9503 214.57825872Z",stroke:"rgba(201,208,227,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),a("path",{attrs:{id:"SvgjsPath1027",d:"M0 214.57825872L126.9243 214.57825872L126.9243 250.27697982 L0 250.27697982Z",stroke:"rgba(201,208,227,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),a("path",{attrs:{id:"SvgjsPath1028",d:"M126.9243 214.57825872L614.0286 214.57825872L614.0286 250.27697982 L126.9243 250.27697982Z",stroke:"rgba(201,208,227,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),a("path",{attrs:{id:"SvgjsPath1029",d:"M613.9503 214.57825872L783 214.57825872L783 250.27697982 L613.9503 250.27697982Z",stroke:"rgba(201,208,227,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),a("path",{attrs:{id:"SvgjsPath1030",d:"M0 250.27697981999998L126.9243 250.27697981999998L126.9243 285.97570092 L0 285.97570092Z",stroke:"rgba(201,208,227,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),a("path",{attrs:{id:"SvgjsPath1031",d:"M126.9243 250.27697981999998L614.0286 250.27697981999998L614.0286 285.97570092 L126.9243 285.97570092Z",stroke:"rgba(201,208,227,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),a("path",{attrs:{id:"SvgjsPath1032",d:"M613.9503 250.27697981999998L783 250.27697981999998L783 285.97570092 L613.9503 285.97570092Z",stroke:"rgba(201,208,227,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),a("path",{attrs:{id:"SvgjsPath1033",d:"M0 285.97570092L126.9243 285.97570092L126.9243 321.6101 L0 321.6101Z",stroke:"rgba(201,208,227,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),a("path",{attrs:{id:"SvgjsPath1034",d:"M126.9243 285.97570092L614.0286 285.97570092L614.0286 321.6101 L126.9243 321.6101Z",stroke:"rgba(201,208,227,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),a("path",{attrs:{id:"SvgjsPath1035",d:"M613.9503 285.97570092L783 285.97570092L783 321.6101 L613.9503 321.6101Z",stroke:"rgba(201,208,227,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),a("g",{attrs:{id:"SvgjsG1036"}},[a("text",{attrs:{id:"SvgjsText1037","font-family":"微软雅黑","text-anchor":"start","font-size":"14px",width:"127px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"start",family:"微软雅黑",size:"14px",weight:"400","font-style":"",opacity:"1",y:"6.1315215599999995",transform:"rotate(0)"}})]),a("g",{attrs:{id:"SvgjsG1038"}},[a("text",{attrs:{id:"SvgjsText1039","font-family":"微软雅黑","text-anchor":"start","font-size":"14px",width:"488px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"start",family:"微软雅黑",size:"14px",weight:"400","font-style":"",opacity:"1",y:"6.1315215599999995",transform:"rotate(0)"}})]),a("g",{attrs:{id:"SvgjsG1040"}},[a("text",{attrs:{id:"SvgjsText1041","font-family":"微软雅黑","text-anchor":"start","font-size":"14px",width:"170px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"start",family:"微软雅黑",size:"14px",weight:"400","font-style":"",opacity:"1",y:"6.1315215599999995",transform:"rotate(0)"}})]),a("g",{attrs:{id:"SvgjsG1042"}},[a("text",{attrs:{id:"SvgjsText1043","font-family":"微软雅黑","text-anchor":"start","font-size":"14px",width:"127px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"start",family:"微软雅黑",size:"14px",weight:"400","font-style":"",opacity:"1",y:"41.89456468",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1044",dy:"17",x:"0"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1045"}},[t._v("  类型别名")])])])]),a("g",{attrs:{id:"SvgjsG1046"}},[a("text",{attrs:{id:"SvgjsText1047","font-family":"微软雅黑","text-anchor":"start","font-size":"14px",width:"488px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"start",family:"微软雅黑",size:"14px",weight:"400","font-style":"",opacity:"1",y:"41.89456468",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1048",dy:"17",x:"126.9243"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1049"}},[t._v("  将一组类型/类型结构封装，作为一个新的类型")])])])]),a("g",{attrs:{id:"SvgjsG1050"}},[a("text",{attrs:{id:"SvgjsText1051","font-family":"微软雅黑","text-anchor":"start","font-size":"14px",width:"170px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"start",family:"微软雅黑",size:"14px",weight:"400","font-style":"",opacity:"1",y:"41.89456468",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1052",dy:"17",x:"613.9503"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1053"}},[t._v("  联合类型、映射类型")])])])]),a("g",{attrs:{id:"SvgjsG1054"}},[a("text",{attrs:{id:"SvgjsText1055","font-family":"微软雅黑","text-anchor":"start","font-size":"14px",width:"127px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"start",family:"微软雅黑",size:"14px",weight:"400","font-style":"",opacity:"1",y:"77.6576078",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1056",dy:"17",x:"0"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1057"}},[t._v("  工具类型")])])])]),a("g",{attrs:{id:"SvgjsG1058"}},[a("text",{attrs:{id:"SvgjsText1059","font-family":"微软雅黑","text-anchor":"start","font-size":"14px",width:"488px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"start",family:"微软雅黑",size:"14px",weight:"400","font-style":"",opacity:"1",y:"77.6576078",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1060",dy:"17",x:"126.9243"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1061"}},[t._v("  在类型别名的基础上，基于泛型去动态创建新类型")])])])]),a("g",{attrs:{id:"SvgjsG1062"}},[a("text",{attrs:{id:"SvgjsText1063","font-family":"微软雅黑","text-anchor":"start","font-size":"14px",width:"170px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"start",family:"微软雅黑",size:"14px",weight:"400","font-style":"",opacity:"1",y:"77.6576078",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1064",dy:"17",x:"613.9503"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1065"}},[t._v("  基本所有类型工具")])])])]),a("g",{attrs:{id:"SvgjsG1066"}},[a("text",{attrs:{id:"SvgjsText1067","font-family":"微软雅黑","text-anchor":"start","font-size":"14px",width:"127px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"start",family:"微软雅黑",size:"14px",weight:"400","font-style":"",opacity:"1",y:"113.42065092",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1068",dy:"17",x:"0"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1069"}},[t._v("  联合类型")])])])]),a("g",{attrs:{id:"SvgjsG1070"}},[a("text",{attrs:{id:"SvgjsText1071","font-family":"微软雅黑","text-anchor":"start","font-size":"14px",width:"488px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"start",family:"微软雅黑",size:"14px",weight:"400","font-style":"",opacity:"1",y:"113.42065092",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1072",dy:"17",x:"126.9243"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1073"}},[t._v("  创建一组类型集合，满足其中一个类型即满足这个联合类型（||）")])])])]),a("g",{attrs:{id:"SvgjsG1074"}},[a("text",{attrs:{id:"SvgjsText1075","font-family":"微软雅黑","text-anchor":"start","font-size":"14px",width:"170px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"start",family:"微软雅黑",size:"14px",weight:"400","font-style":"",opacity:"1",y:"113.42065092",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1076",dy:"17",x:"613.9503"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1077"}},[t._v("  类型别名、工具类型")])])])]),a("g",{attrs:{id:"SvgjsG1078"}},[a("text",{attrs:{id:"SvgjsText1079","font-family":"微软雅黑","text-anchor":"start","font-size":"14px",width:"127px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"start",family:"微软雅黑",size:"14px",weight:"400","font-style":"",opacity:"1",y:"149.18369404",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1080",dy:"17",x:"0"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1081"}},[t._v("  交叉类型")])])])]),a("g",{attrs:{id:"SvgjsG1082"}},[a("text",{attrs:{id:"SvgjsText1083","font-family":"微软雅黑","text-anchor":"start","font-size":"14px",width:"488px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"start",family:"微软雅黑",size:"14px",weight:"400","font-style":"",opacity:"1",y:"149.18369404",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1084",dy:"17",x:"126.9243"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1085"}},[t._v("  创建一组类型集合，满足其中所有类型才满足映射联合类型（&&）")])])])]),a("g",{attrs:{id:"SvgjsG1086"}},[a("text",{attrs:{id:"SvgjsText1087","font-family":"微软雅黑","text-anchor":"start","font-size":"14px",width:"170px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"start",family:"微软雅黑",size:"14px",weight:"400","font-style":"",opacity:"1",y:"149.18369404",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1088",dy:"17",x:"613.9503"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1089"}},[t._v("  类型别名、工具类型")])])])]),a("g",{attrs:{id:"SvgjsG1090"}},[a("text",{attrs:{id:"SvgjsText1091","font-family":"微软雅黑","text-anchor":"start","font-size":"14px",width:"127px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"start",family:"微软雅黑",size:"14px",weight:"400","font-style":"",opacity:"1",y:"184.94673716000003",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1092",dy:"17",x:"0"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1093"}},[t._v("  索引签名类型")])])])]),a("g",{attrs:{id:"SvgjsG1094"}},[a("text",{attrs:{id:"SvgjsText1095","font-family":"微软雅黑","text-anchor":"start","font-size":"14px",width:"488px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"start",family:"微软雅黑",size:"14px",weight:"400","font-style":"",opacity:"1",y:"184.94673716000003",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1096",dy:"17",x:"126.9243"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1097"}},[t._v("  声明一个拥有任意属性，键值类型一致的接口结构")])])])]),a("g",{attrs:{id:"SvgjsG1098"}},[a("text",{attrs:{id:"SvgjsText1099","font-family":"微软雅黑","text-anchor":"start","font-size":"14px",width:"170px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"start",family:"微软雅黑",size:"14px",weight:"400","font-style":"",opacity:"1",y:"184.94673716000003",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1100",dy:"17",x:"613.9503"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1101"}},[t._v("  映射类型")])])])]),a("g",{attrs:{id:"SvgjsG1102"}},[a("text",{attrs:{id:"SvgjsText1103","font-family":"微软雅黑","text-anchor":"start","font-size":"14px",width:"127px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"start",family:"微软雅黑",size:"14px",weight:"400","font-style":"",opacity:"1",y:"220.67761927",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1104",dy:"17",x:"0"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1105"}},[t._v("  索引类型查询")])])])]),a("g",{attrs:{id:"SvgjsG1106"}},[a("text",{attrs:{id:"SvgjsText1107","font-family":"微软雅黑","text-anchor":"start","font-size":"14px",width:"488px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"start",family:"微软雅黑",size:"14px",weight:"400","font-style":"",opacity:"1",y:"220.67761927",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1108",dy:"17",x:"126.9243"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1109"}},[t._v("  从一个接口结构，创建一个由其键名字符串字面量组成的联合类型")])])])]),a("g",{attrs:{id:"SvgjsG1110"}},[a("text",{attrs:{id:"SvgjsText1111","font-family":"微软雅黑","text-anchor":"start","font-size":"14px",width:"170px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"start",family:"微软雅黑",size:"14px",weight:"400","font-style":"",opacity:"1",y:"220.67761927",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1112",dy:"17",x:"613.9503"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1113"}},[t._v("  映射类型")])])])]),a("g",{attrs:{id:"SvgjsG1114"}},[a("text",{attrs:{id:"SvgjsText1115","font-family":"微软雅黑","text-anchor":"start","font-size":"14px",width:"127px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"start",family:"微软雅黑",size:"14px",weight:"400","font-style":"",opacity:"1",y:"256.37634037",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1116",dy:"17",x:"0"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1117"}},[t._v("  索引类型访问")])])])]),a("g",{attrs:{id:"SvgjsG1118"}},[a("text",{attrs:{id:"SvgjsText1119","font-family":"微软雅黑","text-anchor":"start","font-size":"14px",width:"488px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"start",family:"微软雅黑",size:"14px",weight:"400","font-style":"",opacity:"1",y:"256.37634037",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1120",dy:"17",x:"126.9243"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1121"}},[t._v("  从一个接口结构，使用键名字符串字面量访问到对应的键值类型")])])])]),a("g",{attrs:{id:"SvgjsG1122"}},[a("text",{attrs:{id:"SvgjsText1123","font-family":"微软雅黑","text-anchor":"start","font-size":"14px",width:"170px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"start",family:"微软雅黑",size:"14px",weight:"400","font-style":"",opacity:"1",y:"256.37634037",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1124",dy:"17",x:"613.9503"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1125"}},[t._v("  类型别名、映射类型")])])])]),a("g",{attrs:{id:"SvgjsG1126"}},[a("text",{attrs:{id:"SvgjsText1127","font-family":"微软雅黑","text-anchor":"start","font-size":"14px",width:"127px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"start",family:"微软雅黑",size:"14px",weight:"400","font-style":"",opacity:"1",y:"292.04290046",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1128",dy:"17",x:"0"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1129"}},[t._v("  映射类型")])])])]),a("g",{attrs:{id:"SvgjsG1130"}},[a("text",{attrs:{id:"SvgjsText1131","font-family":"微软雅黑","text-anchor":"start","font-size":"14px",width:"488px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"start",family:"微软雅黑",size:"14px",weight:"400","font-style":"",opacity:"1",y:"292.04290046",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1132",dy:"17",x:"126.9243"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1133"}},[t._v("  从一个联合类型依次映射到其内部的每一个类型")])])])]),a("g",{attrs:{id:"SvgjsG1134"}},[a("text",{attrs:{id:"SvgjsText1135","font-family":"微软雅黑","text-anchor":"start","font-size":"14px",width:"170px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"start",family:"微软雅黑",size:"14px",weight:"400","font-style":"",opacity:"1",y:"292.04290046",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1136",dy:"17",x:"613.9503"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1137"}},[t._v("  工具类型")])])])])]),a("g",{attrs:{id:"SvgjsG1138",transform:"translate(25.000015258789062,24.99999237060547)"}},[a("path",{attrs:{id:"SvgjsPath1139",d:"M0 0L126.9243 0L126.9243 35.760899999999985 L0 35.760899999999985Z",stroke:"rgba(201,208,227,1)","stroke-width":"1","fill-opacity":"1",fill:"#f5f7fb"}}),a("path",{attrs:{id:"SvgjsPath1140",d:"M126.9243 0L614.0286 0L614.0286 35.760899999999985 L126.9243 35.760899999999985Z",stroke:"rgba(201,208,227,1)","stroke-width":"1","fill-opacity":"1",fill:"#f5f7fb"}}),a("path",{attrs:{id:"SvgjsPath1141",d:"M614.0286 0L783 0L783 35.760899999999985 L614.0286 35.760899999999985Z",stroke:"rgba(201,208,227,1)","stroke-width":"1","fill-opacity":"1",fill:"#f5f7fb"}}),a("g",{attrs:{id:"SvgjsG1142"}},[a("text",{attrs:{id:"SvgjsText1143","font-family":"微软雅黑","text-anchor":"start","font-size":"14px",width:"127px",fill:"#323232","font-weight":"700",align:"middle",lineHeight:"125%",anchor:"start",family:"微软雅黑",size:"14px",weight:"700","font-style":"",opacity:"1",y:"6.130449999999993",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1144",dy:"17",x:"0"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1145"}},[t._v("  类型工具")])])])]),a("g",{attrs:{id:"SvgjsG1146"}},[a("text",{attrs:{id:"SvgjsText1147","font-family":"微软雅黑","text-anchor":"start","font-size":"14px",width:"488px",fill:"#323232","font-weight":"700",align:"middle",lineHeight:"125%",anchor:"start",family:"微软雅黑",size:"14px",weight:"700","font-style":"",opacity:"1",y:"6.130449999999993",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1148",dy:"17",x:"126.9243"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1149"}},[t._v("  创建新类型的方式")])])])]),a("g",{attrs:{id:"SvgjsG1150"}},[a("text",{attrs:{id:"SvgjsText1151","font-family":"微软雅黑","text-anchor":"start","font-size":"14px",width:"169px",fill:"#323232","font-weight":"700",align:"middle",lineHeight:"125%",anchor:"start",family:"微软雅黑",size:"14px",weight:"700","font-style":"",opacity:"1",y:"6.130449999999993",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1152",dy:"17",x:"614.0286"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1153"}},[t._v("  常见搭配")])])])])])])]),t._v(" "),a("p",[t._v("（完）")])])}),[],!1,null,null,null);s.default=e.exports}}]);
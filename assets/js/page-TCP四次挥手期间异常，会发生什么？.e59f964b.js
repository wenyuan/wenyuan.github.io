(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{491:function(t,e,s){t.exports=s.p+"assets/img/lost-in-first-wave.c639c167.png"},492:function(t,e,s){t.exports=s.p+"assets/img/lost-in-second-wave.27229796.png"},493:function(t,e,s){t.exports=s.p+"assets/img/fin_wait_2-by-close.59fd1ca9.png"},494:function(t,e,s){t.exports=s.p+"assets/img/fin_wait_2-by-shutdown.f485c6fb.png"},495:function(t,e,s){t.exports=s.p+"assets/img/lost-in-third-wave.b8f03061.png"},496:function(t,e,s){t.exports=s.p+"assets/img/lost-in-fourth-wave.80200bab.png"},838:function(t,e,s){"use strict";s.r(e);var a=s(1),i=Object(a.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"tcp-四次挥手期间异常-会发生什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp-四次挥手期间异常-会发生什么"}},[t._v("#")]),t._v(" TCP 四次挥手期间异常，会发生什么？")]),t._v(" "),a("h2",{attrs:{id:"复习四次挥手"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#复习四次挥手"}},[t._v("#")]),t._v(" 复习四次挥手")]),t._v(" "),a("p",[t._v("TCP 断开连接是通过"),a("strong",[t._v("四次挥手")]),t._v("方式。")]),t._v(" "),a("p",[t._v("双方都可以主动断开连接，断开连接后主机中的「资源」将被释放，四次挥手的过程如下图：")]),t._v(" "),a("div",{staticStyle:{"text-align":"center"}},[a("svg",{attrs:{id:"SvgjsSvg1009",width:"610.0000305175781",height:"550",xmlns:"http://www.w3.org/2000/svg",version:"1.1","xmlns:xlink":"http://www.w3.org/1999/xlink","xmlns:svgjs":"http://svgjs.com/svgjs"}},[a("defs",{attrs:{id:"SvgjsDefs1007"}},[a("marker",{attrs:{id:"SvgjsMarker1071",markerWidth:"14",markerHeight:"10",refX:"4",refY:"5",viewBox:"0 0 14 10",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[a("path",{attrs:{id:"SvgjsPath1072",d:"M14,0 L0,5 L14,10 L14,0",fill:"#323232",stroke:"#323232","stroke-width":"1"}})]),a("marker",{attrs:{id:"SvgjsMarker1073",markerWidth:"14",markerHeight:"10",refX:"10",refY:"5",viewBox:"0 0 14 10",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[a("path",{attrs:{id:"SvgjsPath1074",d:"M0,0 L14,5 L0,10 L0,0",fill:"#323232",stroke:"#323232","stroke-width":"1"}})]),a("marker",{attrs:{id:"SvgjsMarker1081",markerWidth:"14",markerHeight:"10",refX:"10",refY:"5",viewBox:"0 0 14 10",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[a("path",{attrs:{id:"SvgjsPath1082",d:"M0,0 L14,5 L0,10 L0,0",fill:"#323232",stroke:"#323232","stroke-width":"1"}})]),a("marker",{attrs:{id:"SvgjsMarker1089",markerWidth:"14",markerHeight:"10",refX:"10",refY:"5",viewBox:"0 0 14 10",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[a("path",{attrs:{id:"SvgjsPath1090",d:"M0,0 L14,5 L0,10 L0,0",fill:"#323232",stroke:"#323232","stroke-width":"1"}})]),a("marker",{attrs:{id:"SvgjsMarker1097",markerWidth:"14",markerHeight:"10",refX:"10",refY:"5",viewBox:"0 0 14 10",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[a("path",{attrs:{id:"SvgjsPath1098",d:"M0,0 L14,5 L0,10 L0,0",fill:"#323232",stroke:"#323232","stroke-width":"1"}})]),a("marker",{attrs:{id:"SvgjsMarker1105",markerWidth:"14",markerHeight:"10",refX:"10",refY:"5",viewBox:"0 0 14 10",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[a("path",{attrs:{id:"SvgjsPath1106",d:"M0,0 L14,5 L0,10 L0,0",fill:"#323232",stroke:"#323232","stroke-width":"1"}})])]),a("g",{attrs:{id:"SvgjsG1008",transform:"translate(25.000015258789062,65)"}},[a("path",{attrs:{id:"SvgjsPath1009",d:"M0 0L140 0L140 40.01641559999999 L0 40.01641559999999Z",stroke:"rgba(102, 102, 102,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),a("path",{attrs:{id:"SvgjsPath1010",d:"M0 40.01641559999999L140 40.01641559999999L140 193.04470835999996 L0 193.04470835999996Z",stroke:"rgba(102, 102, 102,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),a("path",{attrs:{id:"SvgjsPath1011",d:"M0 193.04470835999996L140 193.04470835999996L140 253.02333587999993 L0 253.02333587999993Z",stroke:"rgba(102, 102, 102,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),a("path",{attrs:{id:"SvgjsPath1012",d:"M0 253.02333587999996L140 253.02333587999996L140 414.97482935999994 L0 414.97482935999994Z",stroke:"rgba(102, 102, 102,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),a("path",{attrs:{id:"SvgjsPath1013",d:"M0 414.9748293599999L140 414.9748293599999L140 459.9587999999999 L0 459.9587999999999Z",stroke:"rgba(102, 102, 102,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),a("g",{attrs:{id:"SvgjsG1014"}},[a("text",{attrs:{id:"SvgjsText1015","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"140px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"6.008207799999994",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1016",dy:"20",x:"70"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1017"}},[t._v("ESTABLISHED")])])])]),a("g",{attrs:{id:"SvgjsG1018"}},[a("text",{attrs:{id:"SvgjsText1019","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"140px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"102.53056197999997",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1020",dy:"20",x:"70"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1021"}},[t._v("FIN_WAIT_1")])])])]),a("g",{attrs:{id:"SvgjsG1022"}},[a("text",{attrs:{id:"SvgjsText1023","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"140px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"209.03402211999995",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1024",dy:"20",x:"70"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1025"}},[t._v("FIN_WAIT_2")])])])]),a("g",{attrs:{id:"SvgjsG1026"}},[a("text",{attrs:{id:"SvgjsText1027","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"140px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"309.99908261999997",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1028",dy:"20",x:"70"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1029"}},[t._v("TIME_WAIT")])]),a("tspan",{attrs:{id:"SvgjsTspan1030",dy:"20",x:"70"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1031"}},[t._v("（等待 2MSL）")])])])]),a("g",{attrs:{id:"SvgjsG1032"}},[a("text",{attrs:{id:"SvgjsText1033","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"140px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"423.46681467999986",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1034",dy:"20",x:"70"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1035"}},[t._v("CLOSED")])])])])]),a("g",{attrs:{id:"SvgjsG1036",transform:"translate(35.00001525878906,25)"}},[a("path",{attrs:{id:"SvgjsPath1037",d:"M 0 0L 120 0L 120 40L 0 40Z",stroke:"none",fill:"none"}}),a("g",{attrs:{id:"SvgjsG1038"}},[a("text",{attrs:{id:"SvgjsText1039","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"120px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"6",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1040",dy:"20",x:"60"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1041"}},[t._v("客户端")])])])])]),a("g",{attrs:{id:"SvgjsG1042",transform:"translate(455.00001525878906,25)"}},[a("path",{attrs:{id:"SvgjsPath1043",d:"M 0 0L 120 0L 120 40L 0 40Z",stroke:"none",fill:"none"}}),a("g",{attrs:{id:"SvgjsG1044"}},[a("text",{attrs:{id:"SvgjsText1045","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"120px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"6",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1046",dy:"20",x:"60"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1047"}},[t._v("服务端")])])])])]),a("g",{attrs:{id:"SvgjsG1048",transform:"translate(445.00001525878906,65.49199999999996)"}},[a("path",{attrs:{id:"SvgjsPath1049",d:"M0 0L140 0L140 120.95114467999998 L0 120.95114467999998Z",stroke:"rgba(102, 102, 102,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),a("path",{attrs:{id:"SvgjsPath1050",d:"M0 120.95114467999998L140 120.95114467999998L140 193.99812527999998 L0 193.99812527999998Z",stroke:"rgba(102, 102, 102,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),a("path",{attrs:{id:"SvgjsPath1051",d:"M0 193.99812527999998L140 193.99812527999998L140 411.94833259999996 L0 411.94833259999996Z",stroke:"rgba(102, 102, 102,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),a("path",{attrs:{id:"SvgjsPath1052",d:"M0 411.94833259999996L140 411.94833259999996L140 457.97479999999996 L0 457.97479999999996Z",stroke:"rgba(102, 102, 102,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),a("g",{attrs:{id:"SvgjsG1053"}},[a("text",{attrs:{id:"SvgjsText1054","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"140px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"46.47557233999999",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1055",dy:"20",x:"70"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1056"}},[t._v("ESTABLISHED")])])])]),a("g",{attrs:{id:"SvgjsG1057"}},[a("text",{attrs:{id:"SvgjsText1058","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"140px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"143.47463498",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1059",dy:"20",x:"70"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1060"}},[t._v("CLOSE_WAIT")])])])]),a("g",{attrs:{id:"SvgjsG1061"}},[a("text",{attrs:{id:"SvgjsText1062","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"140px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"288.97322893999996",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1063",dy:"20",x:"70"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1064"}},[t._v("LAST_ACK")])])])]),a("g",{attrs:{id:"SvgjsG1065"}},[a("text",{attrs:{id:"SvgjsText1066","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"140px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"420.96156629999996",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1067",dy:"20",x:"70"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1068"}},[t._v("CLOSED")])])])])]),a("g",{attrs:{id:"SvgjsG1069"}},[a("path",{attrs:{id:"SvgjsPath1070",d:"M167.70000610351565 87L442.5000061035156 87",stroke:"#323232","stroke-width":"2",fill:"none","marker-start":"url(#SvgjsMarker1071)","marker-end":"url(#SvgjsMarker1073)"}}),a("rect",{attrs:{id:"SvgjsRect1075",width:"52",height:"16",x:"279.1000061035156",y:"79",fill:"#ffffff"}}),a("text",{attrs:{id:"SvgjsText1076","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"52px",fill:"#323232","font-weight":"400",align:"top",lineHeight:"16px",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"76.375",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1077",dy:"16",x:"305.1000061035156"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1078"}},[t._v("数据传输")])])])]),a("g",{attrs:{id:"SvgjsG1079"}},[a("path",{attrs:{id:"SvgjsPath1080",d:"M165.0808970237161 105.13690844703217L442.6184823982728 184.15116762840063",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1081)"}}),a("rect",{attrs:{id:"SvgjsRect1083",width:"68",height:"16",x:"269.8496897109944",y:"136.6440380377164",fill:"#ffffff"}}),a("text",{attrs:{id:"SvgjsText1084","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"68px",fill:"#323232","font-weight":"400",align:"top",lineHeight:"16px",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"134.0190380377164",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1085",dy:"16",x:"303.8496897109944"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1086"}},[t._v("FIN, seq=p")])])])]),a("g",{attrs:{id:"SvgjsG1087"}},[a("path",{attrs:{id:"SvgjsPath1088",d:"M443.6000061035156 189L167.614308642806 255.27613523250017",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1089)"}}),a("rect",{attrs:{id:"SvgjsRect1091",width:"89",height:"16",x:"261.1071573731608",y:"214.13806761625008",fill:"#ffffff"}}),a("text",{attrs:{id:"SvgjsText1092","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"89px",fill:"#323232","font-weight":"400",align:"top",lineHeight:"16px",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"211.51306761625008",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1093",dy:"16",x:"305.6071573731608"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1094"}},[t._v("ACK, ack=p+1")])])])]),a("g",{attrs:{id:"SvgjsG1095"}},[a("path",{attrs:{id:"SvgjsPath1096",d:"M445.11102863036683 259.10440800138406L167.63166643703818 318.35267039141866",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1097)"}}),a("rect",{attrs:{id:"SvgjsRect1099",width:"164",height:"16",x:"224.37134753370253",y:"280.72853919640136",fill:"#ffffff"}}),a("text",{attrs:{id:"SvgjsText1100","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"164px",fill:"#323232","font-weight":"400",align:"top",lineHeight:"16px",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"278.10353919640136",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1101",dy:"16",x:"306.37134753370253"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1102"}},[t._v("FIN, ACK, seq=q, ack=p+1")])])])]),a("g",{attrs:{id:"SvgjsG1103"}},[a("path",{attrs:{id:"SvgjsPath1104",d:"M165.03715810374337 322.2426893666745L442.88966370210346 476.4953259266182",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1105)"}}),a("rect",{attrs:{id:"SvgjsRect1107",width:"89",height:"16",x:"259.46341090292344",y:"391.3690076466463",fill:"#ffffff"}}),a("text",{attrs:{id:"SvgjsText1108","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"89px",fill:"#323232","font-weight":"400",align:"top",lineHeight:"16px",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"388.7440076466463",transform:"rotate(0)"}},[a("tspan",{attrs:{id:"SvgjsTspan1109",dy:"16",x:"303.96341090292344"}},[a("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1110"}},[t._v("ACK, ack=q+1")])])])])]),t._v(" "),a("p",{staticStyle:{"text-align":"center",color:"#888"}},[t._v("（四次挥手）")])]),t._v(" "),a("p",[t._v("一开始，客户端和服务端都处于 "),a("code",[t._v("ESTABLISHED")]),t._v(" 状态，双方正常进行数据传输。")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("第一次挥手")]),t._v("：\n"),a("ul",[a("li",[t._v("客户端打算关闭连接，此时会发送一个 TCP 首部 "),a("code",[t._v("FIN")]),t._v(" 标志位被置为 "),a("code",[t._v("1")]),t._v(" 的报文，也即 "),a("code",[t._v("FIN")]),t._v(" 报文，之后客户端进入 "),a("code",[t._v("FIN_WAIT_1")]),t._v(" 状态。")])])]),t._v(" "),a("li",[a("strong",[t._v("第二次挥手")]),t._v("：\n"),a("ul",[a("li",[t._v("服务端收到该报文后，就向客户端发送 "),a("code",[t._v("ACK")]),t._v(" 应答报文，接着服务端进入 "),a("code",[t._v("CLOSE_WAIT")]),t._v(" 状态。")]),t._v(" "),a("li",[t._v("客户端收到服务端的 "),a("code",[t._v("ACK")]),t._v(" 应答报文后，之后进入 "),a("code",[t._v("FIN_WAIT_2")]),t._v(" 状态。")])])]),t._v(" "),a("li",[a("strong",[t._v("第三次挥手")]),t._v("：\n"),a("ul",[a("li",[t._v("等待服务端处理完数据后，也向客户端发送 "),a("code",[t._v("FIN")]),t._v(" 报文，之后服务端进入 "),a("code",[t._v("LAST_ACK")]),t._v(" 状态。")])])]),t._v(" "),a("li",[a("strong",[t._v("第四次挥手")]),t._v("：\n"),a("ul",[a("li",[t._v("客户端收到服务端的 "),a("code",[t._v("FIN")]),t._v(" 报文后，回一个 "),a("code",[t._v("ACK")]),t._v(" 应答报文，之后进入 "),a("code",[t._v("TIME_WAIT")]),t._v(" 状态。")]),t._v(" "),a("li",[t._v("服务器收到了 "),a("code",[t._v("ACK")]),t._v(" 应答报文后，就进入了 "),a("code",[t._v("CLOSE")]),t._v(" 状态，至此服务端已经完成连接的关闭。")]),t._v(" "),a("li",[t._v("客户端在经过 "),a("code",[t._v("2MSL")]),t._v(" 一段时间后，自动进入 "),a("code",[t._v("CLOSE")]),t._v(" 状态，至此客户端也完成连接的关闭。")])])])]),t._v(" "),a("p",[t._v("可以看到，每个方向都需要"),a("strong",[t._v("一个 "),a("code",[t._v("FIN")]),t._v(" 和一个 "),a("code",[t._v("ACK")])]),t._v("，因此通常被称为"),a("strong",[t._v("四次挥手")]),t._v("。")]),t._v(" "),a("p",[t._v("这里一点需要注意是："),a("strong",[t._v("主动关闭连接的，才有 "),a("code",[t._v("TIME_WAIT")]),t._v(" 状态")]),t._v("。")]),t._v(" "),a("p",[t._v("但是如果在三次握手的过程中，发生了异常，会怎么样呢？下面分情况来讨论。")]),t._v(" "),a("h2",{attrs:{id:"第一次挥手丢失了-会发生什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一次挥手丢失了-会发生什么"}},[t._v("#")]),t._v(" 第一次挥手丢失了，会发生什么？")]),t._v(" "),a("p",[t._v("当客户端（主动关闭方）调用 close 函数后，就会向服务端发送 FIN 报文，试图与服务端断开连接，此时客户端的连接进入到 "),a("code",[t._v("FIN_WAIT_1")]),t._v(" 状态。")]),t._v(" "),a("p",[t._v("正常情况下，如果能及时收到服务端（被动关闭方）的 ACK，则会很快变为 "),a("code",[t._v("FIN_WAIT2")]),t._v(" 状态。")]),t._v(" "),a("p",[t._v("如果第一次挥手丢失了，那么客户端迟迟收不到被动方的 ACK 的话，也就会触发超时重传机制，重传 FIN 报文，重发次数由 "),a("code",[t._v("tcp_orphan_retries")]),t._v(" 参数控制。")]),t._v(" "),a("p",[t._v("当客户端重传 FIN 报文的次数超过 "),a("code",[t._v("tcp_orphan_retries")]),t._v(" 后，就不再发送 FIN 报文，则会在等待一段时间（时间为上一次超时时间的 2 倍），如果还是没能收到第二次挥手，那么直接进入到 "),a("code",[t._v("close")]),t._v(" 状态。")]),t._v(" "),a("p",[t._v("举个例子，假设 "),a("code",[t._v("tcp_orphan_retries")]),t._v(" 参数值为 3，当第一次挥手一直丢失时，发生的过程如下图：")]),t._v(" "),a("div",{staticStyle:{"text-align":"center"}},[a("img",{staticStyle:{width:"740px"},attrs:{src:s(491),alt:"第一次挥手丢失"}}),t._v(" "),a("p",{staticStyle:{"text-align":"center",color:"#888"}},[t._v("（第一次挥手丢失）")])]),t._v(" "),a("p",[t._v("具体过程：")]),t._v(" "),a("ul",[a("li",[t._v("当客户端超时重传 3 次 FIN 报文后，由于 "),a("code",[t._v("tcp_orphan_retries")]),t._v(" 为 3，已达到最大重传次数，于是再等待一段时间（时间为上一次超时时间的 2 倍），如果还是没能收到服务端的第二次挥手（ACK 报文），那么客户端就会断开连接。")])]),t._v(" "),a("h2",{attrs:{id:"第二次挥手丢失了-会发生什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二次挥手丢失了-会发生什么"}},[t._v("#")]),t._v(" 第二次挥手丢失了，会发生什么？")]),t._v(" "),a("p",[t._v("当服务端收到客户端的第一次挥手后，就会先回一个 ACK 确认报文，此时服务端的连接进入到 "),a("code",[t._v("CLOSE_WAIT")]),t._v(" 状态。")]),t._v(" "),a("p",[t._v("在前面我们也提了，ACK 报文是不会重传的，所以如果服务端的第二次挥手丢失了，客户端就会触发超时重传机制，重传 FIN 报文，直到收到服务端的第二次挥手，或者达到最大的重传次数。")]),t._v(" "),a("p",[t._v("举个例子，假设 "),a("code",[t._v("tcp_orphan_retries")]),t._v(" 参数值为 2，当第二次挥手一直丢失时，发生的过程如下图：")]),t._v(" "),a("div",{staticStyle:{"text-align":"center"}},[a("img",{staticStyle:{width:"740px"},attrs:{src:s(492),alt:"第二次挥手丢失"}}),t._v(" "),a("p",{staticStyle:{"text-align":"center",color:"#888"}},[t._v("（第二次挥手丢失）")])]),t._v(" "),a("p",[t._v("具体过程：")]),t._v(" "),a("ul",[a("li",[t._v("当客户端超时重传 2 次 FIN 报文后，由于 "),a("code",[t._v("tcp_orphan_retries")]),t._v(" 为 2，已达到最大重传次数，于是再等待一段时间（时间为上一次超时时间的 2 倍），如果还是没能收到服务端的第二次挥手（ACK 报文），那么客户端就会断开连接。")])]),t._v(" "),a("p",[t._v("这里提一下，当客户端收到第二次挥手，也就是收到服务端发送的 ACK 报文后，客户端就会处于 "),a("code",[t._v("FIN_WAIT2")]),t._v(" 状态，在这个状态需要等服务端发送第三次挥手，也就是服务端的 FIN 报文。")]),t._v(" "),a("p",[t._v("对于 close 函数关闭的连接，由于无法再发送和接收数据，所以 "),a("code",[t._v("FIN_WAIT2")]),t._v(" 状态不可以持续太久，而 "),a("code",[t._v("tcp_fin_timeout")]),t._v(" 控制了这个状态下连接的持续时长，默认值是 60 秒。")]),t._v(" "),a("p",[t._v("这意味着对于调用 close 关闭的连接，如果在 60 秒后还没有收到 FIN 报文，客户端（主动关闭方）的连接就会直接关闭，如下图：")]),t._v(" "),a("div",{staticStyle:{"text-align":"center"}},[a("img",{staticStyle:{width:"740px"},attrs:{src:s(493),alt:"调用 close 关闭的连接"}}),t._v(" "),a("p",{staticStyle:{"text-align":"center",color:"#888"}},[t._v("（调用 close 关闭的连接）")])]),t._v(" "),a("p",[t._v("但是注意，如果主动关闭方使用 shutdown 函数关闭连接，指定了只关闭发送方向，而接收方向并没有关闭，那么意味着主动关闭方还是可以接收数据的。")]),t._v(" "),a("p",[t._v("此时，如果主动关闭方一直没收到第三次挥手，那么主动关闭方的连接将会一直处于 "),a("code",[t._v("FIN_WAIT2")]),t._v(" 状态（"),a("code",[t._v("tcp_fin_timeout")]),t._v(" 无法控制 shutdown 关闭的连接）。如下图：")]),t._v(" "),a("div",{staticStyle:{"text-align":"center"}},[a("img",{staticStyle:{width:"740px"},attrs:{src:s(494),alt:"调用 shutdown 关闭的连接"}}),t._v(" "),a("p",{staticStyle:{"text-align":"center",color:"#888"}},[t._v("（调用 shutdown 关闭的连接）")])]),t._v(" "),a("h2",{attrs:{id:"第三次挥手丢失了-会发生什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三次挥手丢失了-会发生什么"}},[t._v("#")]),t._v(" 第三次挥手丢失了，会发生什么？")]),t._v(" "),a("p",[t._v("当服务端（被动关闭方）收到客户端（主动关闭方）的 FIN 报文后，内核会自动回复 ACK，同时连接处于 "),a("code",[t._v("CLOSE_WAIT")]),t._v(" 状态，顾名思义，它表示等待应用进程调用 close 函数关闭连接。")]),t._v(" "),a("p",[t._v("此时，内核是没有权利替代进程关闭连接，必须由进程主动调用 close 函数来触发服务端发送 FIN 报文。")]),t._v(" "),a("p",[t._v("服务端处于 "),a("code",[t._v("CLOSE_WAIT")]),t._v(" 状态时，调用了 close 函数，内核就会发出 FIN 报文，同时连接进入 "),a("code",[t._v("LAST_ACK")]),t._v(" 状态，等待客户端返回 ACK 来确认连接关闭。")]),t._v(" "),a("p",[t._v("如果迟迟收不到这个 ACK，服务端就会重发 FIN 报文，重发次数仍然由 "),a("code",[t._v("tcp_orphan_retries")]),t._v(" 参数控制，这与客户端重发 FIN 报文的重传次数控制方式是一样的。")]),t._v(" "),a("p",[t._v("举个例子，假设 "),a("code",[t._v("tcp_orphan_retries = 3")]),t._v("，当第三次挥手一直丢失时，发生的过程如下图：")]),t._v(" "),a("div",{staticStyle:{"text-align":"center"}},[a("img",{staticStyle:{width:"740px"},attrs:{src:s(495),alt:"第三次挥手丢失"}}),t._v(" "),a("p",{staticStyle:{"text-align":"center",color:"#888"}},[t._v("（第三次挥手丢失）")])]),t._v(" "),a("p",[t._v("具体过程：")]),t._v(" "),a("ul",[a("li",[t._v("当服务端重传第三次挥手报文的次数达到了 3 次后，由于 "),a("code",[t._v("tcp_orphan_retries")]),t._v(" 为 3，达到了重传最大次数，于是再等待一段时间（时间为上一次超时时间的 2 倍），如果还是没能收到客户端的第四次挥手（ACK报文），那么服务端就会断开连接。")]),t._v(" "),a("li",[t._v("客户端因为是通过 close 函数关闭连接的，处于 "),a("code",[t._v("FIN_WAIT_2")]),t._v(" 状态是有时长限制的，如果 "),a("code",[t._v("tcp_fin_timeout")]),t._v(" 时间内还是没能收到服务端的第三次挥手（FIN 报文），那么客户端就会断开连接。")])]),t._v(" "),a("h2",{attrs:{id:"第四次挥手丢失了-会发生什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第四次挥手丢失了-会发生什么"}},[t._v("#")]),t._v(" 第四次挥手丢失了，会发生什么？")]),t._v(" "),a("p",[t._v("当客户端收到服务端的第三次挥手的 FIN 报文后，就会回 ACK 报文，也就是第四次挥手，此时客户端连接进入 "),a("code",[t._v("TIME_WAIT")]),t._v(" 状态。")]),t._v(" "),a("p",[t._v("在 Linux 系统，"),a("code",[t._v("TIME_WAIT")]),t._v(" 状态会持续 2MSL 后才会进入关闭状态。")]),t._v(" "),a("p",[t._v("然后，服务端（被动关闭方）没有收到 ACK 报文前，还是处于 "),a("code",[t._v("LAST_ACK")]),t._v(" 状态。")]),t._v(" "),a("p",[t._v("如果第四次挥手的 ACK 报文没有到达服务端，服务端就会重发 FIN 报文，重发次数仍然由前面介绍过的 "),a("code",[t._v("tcp_orphan_retries")]),t._v(" 参数控制。")]),t._v(" "),a("p",[t._v("举个例子，假设 "),a("code",[t._v("tcp_orphan_retries")]),t._v(" 为 2，当第四次挥手一直丢失时，发生的过程如下：")]),t._v(" "),a("div",{staticStyle:{"text-align":"center"}},[a("img",{staticStyle:{width:"740px"},attrs:{src:s(496),alt:"第四次挥手丢失"}}),t._v(" "),a("p",{staticStyle:{"text-align":"center",color:"#888"}},[t._v("（第四次挥手丢失）")])]),t._v(" "),a("p",[t._v("具体过程：")]),t._v(" "),a("ul",[a("li",[t._v("当服务端重传第三次挥手报文达到 2 时，由于 "),a("code",[t._v("tcp_orphan_retries")]),t._v(" 为 2， 达到了最大重传次数，于是再等待一段时间（时间为上一次超时时间的 2 倍），如果还是没能收到客户端的第四次挥手（ACK 报文），那么服务端就会断开连接。")]),t._v(" "),a("li",[t._v("客户端在收到第三次挥手后，就会进入 "),a("code",[t._v("TIME_WAIT")]),t._v(" 状态，开启时长为 2MSL 的定时器，如果途中再次收到第三次挥手（FIN 报文）后，就会重置定时器，当等待 2MSL 时长后，客户端就会断开连接。")])]),t._v(" "),a("h2",{attrs:{id:"关于-time-wait"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于-time-wait"}},[t._v("#")]),t._v(" 关于 "),a("code",[t._v("TIME_WAIT")])]),t._v(" "),a("h3",{attrs:{id:"为什么-time-wait-等待的时间是-2msl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么-time-wait-等待的时间是-2msl"}},[t._v("#")]),t._v(" 为什么 "),a("code",[t._v("TIME_WAIT")]),t._v(" 等待的时间是 2MSL？")]),t._v(" "),a("p",[a("code",[t._v("MSL")]),t._v(" 是 Maximum Segment Lifetime，"),a("strong",[t._v("报文最大生存时间")]),t._v("，它是任何报文在网络上存在的最长时间，超过这个时间报文将被丢弃。因为 TCP 报文基于是 IP 协议的，而 IP 头中有一个 "),a("code",[t._v("TTL")]),t._v(" 字段，是 IP 数据报可以经过的最大路由数，每经过一个处理他的路由器此值就减 1，当此值为 0 则数据报将被丢弃，同时发送 ICMP 报文通知源主机。")]),t._v(" "),a("p",[t._v("MSL 与 TTL 的区别： MSL 的单位是时间，而 TTL 是经过路由跳数。所以 "),a("strong",[t._v("MSL 应该要大于等于 TTL 消耗为 0 的时间")]),t._v("，以确保报文已被自然消亡。")]),t._v(" "),a("p",[a("strong",[t._v("TTL 的值一般是 64，Linux 将 MSL 设置为 30 秒，意味着 Linux 认为数据报文经过 64 个路由器的时间不会超过 30 秒，如果超过了，就认为报文已经消失在网络中了")]),t._v("。")]),t._v(" "),a("p",[a("code",[t._v("TIME_WAIT")]),t._v(" 等待 2 倍的 MSL，比较合理的解释是： 网络中可能存在来自发送方的数据包，当这些发送方的数据包被接收方处理后又会向对方发送响应，所以"),a("strong",[t._v("一来一回需要等待 2 倍的时间")]),t._v("。")]),t._v(" "),a("p",[t._v("比如，如果被动关闭方没有收到断开连接的最后的 ACK 报文，就会触发超时重发 FIN 报文，另一方接收到 FIN 后，会重发 ACK 给被动关闭方， 一来一去正好 2 个 MSL。")]),t._v(" "),a("p",[t._v("可以看到 "),a("strong",[t._v("2MSL时长")]),t._v(" 这其实是相当于"),a("strong",[t._v("至少允许报文丢失一次")]),t._v("。比如，若 ACK 在一个 MSL 内丢失，这样被动方重发的 FIN 会在第 2 个 MSL 内到达，"),a("code",[t._v("TIME_WAIT")]),t._v(" 状态的连接可以应对。")]),t._v(" "),a("p",[t._v("为什么不是 4 或者 8 MSL 的时长呢？你可以想象一个丢包率达到百分之一的糟糕网络，连续两次丢包的概率只有万分之一，这个概率实在是太小了，忽略它比解决它更具性价比。")]),t._v(" "),a("p",[a("code",[t._v("2MSL")]),t._v(" 的时间是"),a("strong",[t._v("从客户端接收到 FIN 后发送 ACK 开始计时的")]),t._v("。如果在 "),a("code",[t._v("TIME_WAIT")]),t._v(" 时间内，因为客户端的 ACK 没有传输到服务端，客户端又接收到了服务端重发的 FIN 报文，那么 "),a("strong",[t._v("2MSL 时间将重新计时")]),t._v("。")]),t._v(" "),a("p",[t._v("在 Linux 系统里 "),a("code",[t._v("2MSL")]),t._v(" 默认是 "),a("code",[t._v("60")]),t._v(" 秒，那么一个 "),a("code",[t._v("MSL")]),t._v(" 也就是 "),a("code",[t._v("30")]),t._v(" 秒。"),a("strong",[t._v("Linux 系统停留在 "),a("code",[t._v("TIME_WAIT")]),t._v(" 的时间为固定的 60 秒")]),t._v("。")]),t._v(" "),a("p",[t._v("其定义在 Linux 内核代码里的名称为 "),a("code",[t._v("TCP_TIMEWAIT_LEN")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("TCP_TIMEWAIT_LEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("HZ"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* how long to wait to destroy TIME-WAIT \n                                    state, about 60 seconds  */")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("如果要修改 "),a("code",[t._v("TIME_WAIT")]),t._v(" 的时间长度，只能修改 Linux 内核代码里 "),a("code",[t._v("TCP_TIMEWAIT_LEN")]),t._v(" 的值，并重新编译 Linux 内核。")]),t._v(" "),a("h3",{attrs:{id:"为什么需要-time-wait-状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要-time-wait-状态"}},[t._v("#")]),t._v(" 为什么需要 "),a("code",[t._v("TIME_WAIT")]),t._v(" 状态？")]),t._v(" "),a("p",[t._v("主动发起关闭连接的一方，才会有 "),a("code",[t._v("TIME_WAIT")]),t._v(" 状态。")]),t._v(" "),a("p",[t._v("需要 "),a("code",[t._v("TIME_WAIT")]),t._v(" 状态，主要是两个原因：")]),t._v(" "),a("ul",[a("li",[t._v("防止历史连接中的数据，被后面相同四元组的连接错误的接收。")]),t._v(" "),a("li",[t._v("保证「被动关闭连接」的一方，能被正确的关闭。")])]),t._v(" "),a("h3",{attrs:{id:"time-wait-过多有什么危害"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#time-wait-过多有什么危害"}},[t._v("#")]),t._v(" "),a("code",[t._v("TIME_WAIT")]),t._v(" 过多有什么危害？")]),t._v(" "),a("p",[t._v("过多的 "),a("code",[t._v("TIME_WAIT")]),t._v(" 状态主要的危害有两种：")]),t._v(" "),a("ul",[a("li",[t._v("第一是占用系统资源，比如文件描述符、内存资源、CPU 资源、线程资源等。")]),t._v(" "),a("li",[t._v("第二是占用端口资源，端口资源也是有限的，一般可以开启的端口为 "),a("code",[t._v("32768～61000")]),t._v("，也可以通过 "),a("code",[t._v("net.ipv4.ip_local_port_range")]),t._v(" 参数指定范围。")])]),t._v(" "),a("p",[t._v("客户端和服务端 "),a("code",[t._v("TIME_WAIT")]),t._v(" 过多，造成的影响是不同的。")]),t._v(" "),a("p",[a("strong",[t._v("如果客户端（发起连接方）的 "),a("code",[t._v("TIME_WAIT")]),t._v(" 状态过多")]),t._v("，占满了所有端口资源，那么就无法对「目的IP + 目的PORT」都一样的服务器发起连接了，但是被使用的端口，还是可以继续对另外一个服务器发起连接的。具体可以看这篇文章："),a("a",{attrs:{href:"#%E8%BF%98%E6%B2%A1%E5%86%99"}},[t._v("客户端的端口可以重复使用吗？")])]),t._v(" "),a("p",[t._v("因此，客户端（发起连接方）都是和「目的IP + 目的PORT 」都一样的服务器建立连接的话，当客户端的 "),a("code",[t._v("TIME_WAIT")]),t._v(" 状态连接过多的话，就会受端口资源限制，如果占满了所有端口资源，那么就无法再跟「目的IP + 目的PORT」都一样的服务器建立连接了。")]),t._v(" "),a("p",[t._v("不过，即使是在这种场景下，只要连接的是不同的服务器，端口是可以重复使用的，所以客户端还是可以向其他服务器发起连接的，这是因为内核在定位一个连接的时候，是通过四元组（源IP、源端口、目的IP、目的端口）信息来定位的，并不会因为客户端的端口一样，而导致连接冲突。")]),t._v(" "),a("p",[a("strong",[t._v("如果服务端（发起连接方）的 "),a("code",[t._v("TIME_WAIT")]),t._v(" 状态过多")]),t._v("，并不会导致端口资源受限，因为服务端只监听一个端口，而且由于一个四元组唯一确定一个 TCP 连接，因此理论上服务端可以建立很多连接，但是 TCP 连接过多，会占用系统资源，比如文件描述符、内存资源、CPU 资源、线程资源等。")]),t._v(" "),a("h3",{attrs:{id:"如何优化-time-wait"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何优化-time-wait"}},[t._v("#")]),t._v(" 如何优化 "),a("code",[t._v("TIME_WAIT")]),t._v("？")]),t._v(" "),a("p",[t._v("这里给出优化 "),a("code",[t._v("TIME_WAIT")]),t._v(" 的几个方式，都是有利有弊：")]),t._v(" "),a("ul",[a("li",[t._v("打开 "),a("code",[t._v("net.ipv4.tcp_tw_reuse")]),t._v(" 和 "),a("code",[t._v("net.ipv4.tcp_timestamps")]),t._v(" 选项。")]),t._v(" "),a("li",[a("code",[t._v("net.ipv4.tcp_max_tw_buckets")])]),t._v(" "),a("li",[t._v("程序中使用 "),a("code",[t._v("SO_LINGER")]),t._v("，应用强制使用 "),a("code",[t._v("RST")]),t._v(" 关闭。")])]),t._v(" "),a("h4",{attrs:{id:"_1-方式一-net-ipv4-tcp-tw-reuse-和-tcp-timestamps"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-方式一-net-ipv4-tcp-tw-reuse-和-tcp-timestamps"}},[t._v("#")]),t._v(" 1）方式一："),a("code",[t._v("net.ipv4.tcp_tw_reuse")]),t._v(" 和 "),a("code",[t._v("tcp_timestamps")])]),t._v(" "),a("p",[t._v("如下的 Linux 内核参数开启后，则可以"),a("strong",[t._v("复用处于 "),a("code",[t._v("TIME_WAIT")]),t._v(" 的 socket 为新的连接所用")]),t._v("。")]),t._v(" "),a("p",[t._v("有一点需要注意的是，"),a("strong",[a("code",[t._v("tcp_tw_reuse")]),t._v(" 功能只能用客户端（连接发起方），因为开启了该功能，在调用 "),a("code",[t._v("connect()")]),t._v(" 函数时，内核会随机找一个 "),a("code",[t._v("time_wait")]),t._v(" 状态超过 "),a("code",[t._v("1")]),t._v(" 秒的连接给新的连接复用")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("net.ipv4.tcp_tw_reuse "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("使用这个选项，还有一个前提，需要打开对 TCP 时间戳的支持，即")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("net.ipv4.tcp_timestamps"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("（默认即为 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("）\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("这个时间戳的字段是在 TCP 头部的「选项」里，它由一共 8 个字节表示时间戳，其中第一个 4 字节字段用来保存发送该数据包的时间，第二个 4 字节字段用来保存最近一次接收对方发送到达数据的时间。")]),t._v(" "),a("p",[t._v("由于引入了时间戳，我们在前面提到的 "),a("code",[t._v("2MSL")]),t._v(" 问题就不复存在了，因为重复的数据包会因为时间戳过期被自然丢弃。")]),t._v(" "),a("h4",{attrs:{id:"_2-方式二-net-ipv4-tcp-max-tw-buckets"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-方式二-net-ipv4-tcp-max-tw-buckets"}},[t._v("#")]),t._v(" 2）方式二："),a("code",[t._v("net.ipv4.tcp_max_tw_buckets")])]),t._v(" "),a("p",[t._v("这个值默认为 18000，"),a("strong",[t._v("当系统中处于 "),a("code",[t._v("TIME_WAIT")]),t._v(" 的连接一旦超过这个值时，系统就会将后面的 "),a("code",[t._v("TIME_WAIT")]),t._v(" 连接状态重置")]),t._v("，这个方法比较暴力。")]),t._v(" "),a("h4",{attrs:{id:"_3-方式三-程序中使用-so-linger"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-方式三-程序中使用-so-linger"}},[t._v("#")]),t._v(" 3）方式三：程序中使用 "),a("code",[t._v("SO_LINGER")])]),t._v(" "),a("p",[t._v("我们可以通过设置 socket 选项，来设置调用 close 关闭连接行为。")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("struct linger so_linger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nso_linger.l_onoff "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nso_linger.l_linger "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nsetsockopt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s, SOL_SOCKET, SO_LINGER, "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("so_linger,sizeof"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so_linger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("如果 "),a("code",[t._v("l_onoff")]),t._v(" 为非 0， 且 "),a("code",[t._v("l_linger")]),t._v(" 值为 0，那么调用 "),a("code",[t._v("close")]),t._v(" 后，会立该发送一个 "),a("code",[t._v("RST")]),t._v(" 标志给对端，该 TCP 连接将跳过四次挥手，也就跳过了 "),a("code",[t._v("TIME_WAIT")]),t._v(" 状态，直接关闭。")]),t._v(" "),a("p",[t._v("但这为跨越 "),a("code",[t._v("TIME_WAIT")]),t._v(" 状态提供了一个可能，不过是一个非常危险的行为，不值得提倡。")]),t._v(" "),a("p",[t._v("前面介绍的方法都是试图越过 "),a("code",[t._v("TIME_WAIT")]),t._v(" 状态的，这样其实不太好。虽然 "),a("code",[t._v("TIME_WAIT")]),t._v(" 状态持续的时间是有一点长，显得很不友好，但是它被设计来就是用来避免发生乱七八糟的事情。")]),t._v(" "),a("p",[t._v("所以更好的方法应该是：")]),t._v(" "),a("p",[a("strong",[t._v("如果服务端要避免过多的 "),a("code",[t._v("TIME_WAIT")]),t._v(" 状态的连接，就永远不要主动断开连接，让客户端去断开，由分布在各处的客户端去承受 "),a("code",[t._v("TIME_WAIT")])]),t._v("。")]),t._v(" "),a("p",[t._v("（完）")])])}),[],!1,null,null,null);e.default=i.exports}}]);
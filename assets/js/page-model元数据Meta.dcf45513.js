(window.webpackJsonp=window.webpackJsonp||[]).push([[125],{723:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"model-元数据-meta"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#model-元数据-meta"}},[s._v("#")]),s._v(" model 元数据 Meta")]),s._v(" "),a("p",[s._v("在一个模型中，除了定义 model 的字段外还能定义一些其他属性，比如排序方式、数据库表名、人类可读的单数或者复数名等等，这些统称元数据。")]),s._v(" "),a("p",[s._v("元数据不是必须的。但有些元数据选项在实际使用中具有重要的作用。")]),s._v(" "),a("h2",{attrs:{id:"元数据的写法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#元数据的写法"}},[s._v("#")]),s._v(" 元数据的写法")]),s._v(" "),a("p",[s._v("元数据对于 models 来说是一个内部类 "),a("code",[s._v("Meta")]),s._v("，名字是固定，然后在这个 Meta 类下面增加各种元数据选项，下面是一个简单的例子：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("UserInfo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("models"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Model"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    nid "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" models"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("AutoField"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("primary_key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    username "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" models"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("CharField"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("max_length"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Meta")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 数据库中生成的表名默认是：app名称_类名")]),s._v("\n        db_table "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"table_name"')]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 联合索引")]),s._v("\n        index_together "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"pub_date"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"deadline"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 联合唯一索引")]),s._v("\n        unique_together "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"driver"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"restaurant"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Admin 中显示的表名称")]),s._v("\n        verbose_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"用户信息"')]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# verbose_name 加 s")]),s._v("\n        verbose_name_plural "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"用户信息"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("p",[s._v("注意：每个模型都可以有自己的元数据类，每个元数据类也只对自己所在模型起作用。")]),s._v(" "),a("h2",{attrs:{id:"meta-选项说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#meta-选项说明"}},[s._v("#")]),s._v(" Meta 选项说明")]),s._v(" "),a("p",[s._v("Meta 选项大致包含以下几类：")]),s._v(" "),a("h4",{attrs:{id:"_1-abstract"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-abstract"}},[s._v("#")]),s._v(" 1. "),a("strong",[s._v("abstract")])]),s._v(" "),a("p",[s._v("如果 "),a("code",[s._v("abstract=True")]),s._v("，那么模型会被认为是一个抽象模型。抽象模型本身不实际生成数据库表，而是作为其它模型的父类，被继承使用。一般我们用它来归纳一些公共属性字段，然后继承它的子类可以继承这些字段。")]),s._v(" "),a("h4",{attrs:{id:"_2-app-label"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-app-label"}},[s._v("#")]),s._v(" 2. "),a("strong",[s._v("app_label")])]),s._v(" "),a("p",[s._v("如果该模型所在的 app 没有在 "),a("code",[s._v("INSTALLED_APPS")]),s._v(" 中注册，则必须通过此元选项声明它属于哪个已注册的 app，例如：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("app_label "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'myapp'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h4",{attrs:{id:"_3-base-manager-name"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-base-manager-name"}},[s._v("#")]),s._v(" 3. "),a("strong",[s._v("base_manager_name")])]),s._v(" "),a("p",[s._v("模型的 "),a("code",[s._v("_base_manager")]),s._v(" 管理器的名字，默认是 "),a("code",[s._v("'objects'")]),s._v("。模型管理器是 Django 为模型提供的 API 所在。")]),s._v(" "),a("h4",{attrs:{id:"_4-db-table"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-db-table"}},[s._v("#")]),s._v(" 4. "),a("strong",[s._v("db_table")])]),s._v(" "),a("p",[s._v("指定在数据库中，当前模型生成的数据表的表名。比如：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("db_table "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'my_freinds'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("如果没有指定这个选项，那么 Django 会自动使用 app 名和模型名，通过下划线连接生成数据表名，比如 "),a("code",[s._v("app_book")]),s._v("。")]),s._v(" "),a("p",[s._v("注意不能使用 SQL 语言或者 Python 的保留字，注意冲突。")]),s._v(" "),a("p",[s._v("一般建议使用 MySQL 和 MariaDB 数据库时，"),a("code",[s._v("db_table")]),s._v(" 用小写英文。")]),s._v(" "),a("h4",{attrs:{id:"_5-db-tablespace"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-db-tablespace"}},[s._v("#")]),s._v(" 5. "),a("strong",[s._v("db_tablespace")])]),s._v(" "),a("p",[s._v("自定义数据库表空间的名字。默认值是项目的 "),a("code",[s._v("DEFAULT_TABLESPACE")]),s._v(" 配置项指定的值。")]),s._v(" "),a("h4",{attrs:{id:"_6-default-manager-name"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-default-manager-name"}},[s._v("#")]),s._v(" 6. "),a("strong",[s._v("default_manager_name")])]),s._v(" "),a("p",[s._v("模型的 "),a("code",[s._v("_default_manager")]),s._v(" 管理器的名字。")]),s._v(" "),a("h4",{attrs:{id:"_7-default-related-name"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-default-related-name"}},[s._v("#")]),s._v(" 7. "),a("strong",[s._v("default_related_name")])]),s._v(" "),a("p",[s._v("默认情况下，从一个模型反向关联设置有关系字段的源模型，我们使用 "),a("code",[s._v("<model_name>_set")]),s._v("，也就是：源模型的名字+下划线+set。")]),s._v(" "),a("p",[s._v("这个元数据选项可以让你自定义反向关系名，同时也影响反向查询关系名，如下面的例子：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" django"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("db "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" models\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("models"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Model"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("pass")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Bar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("models"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Model"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" models"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ForeignKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" on_delete"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("models"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("CASCADE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Meta")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        default_related_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bars'")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 关键在这里")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("反向关联使用时：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("bar "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Bar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("objects"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("first"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 不能再使用 "bar" 作为反向查询的关键字了')]),s._v("\nFoo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("objects"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bar"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("bar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 而要使用你自己定义的 "bars" 了')]),s._v("\nFoo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("objects"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bars"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("bar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h4",{attrs:{id:"_8-get-latest-by"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-get-latest-by"}},[s._v("#")]),s._v(" 8. "),a("strong",[s._v("get_latest_by")])]),s._v(" "),a("p",[s._v("Django 管理器给我们提供有 "),a("code",[s._v("latest()")]),s._v(" 和 "),a("code",[s._v("earliest()")]),s._v(" 方法，分别表示获取最近一个和最前一个数据对象。但是它是根据什么来排序呢？")]),s._v(" "),a("p",[a("code",[s._v("get_latest_by")]),s._v(" 元数据选项可以指定一个类似 "),a("code",[s._v("DateField")]),s._v("、"),a("code",[s._v("DateTimeField")]),s._v(" 或者 "),a("code",[s._v("IntegerField")]),s._v(" 这种可以排序的字段，作为 "),a("code",[s._v("latest()")]),s._v(" 和 "),a("code",[s._v("earliest()")]),s._v(" 方法的排序依据，从而得出最近一个或最前面一个对象。例如：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 根据 order_date 升序排列")]),s._v("\nget_latest_by "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"order_date"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 根据 priority 降序排列，如果发生同序，则接着使用 order_date 升序排列")]),s._v("\nget_latest_by "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-priority'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'order_date'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h4",{attrs:{id:"_9-managed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-managed"}},[s._v("#")]),s._v(" 9. "),a("strong",[s._v("managed")])]),s._v(" "),a("p",[s._v("该元数据默认值为 "),a("code",[s._v("True")]),s._v("，表示 Django 将按照既定的规则，管理数据库表的生命周期。")]),s._v(" "),a("p",[s._v("如果设置为 "),a("code",[s._v("False")]),s._v("，将不会针对当前模型创建和删除数据库表，也就是说 Django 暂时不管这个模型了。")]),s._v(" "),a("p",[s._v("目前还没有遇到需要修改它的场景，可能某些场景下会有用。")]),s._v(" "),a("h4",{attrs:{id:"_10-order-with-respect-to"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-order-with-respect-to"}},[s._v("#")]),s._v(" 10. "),a("strong",[s._v("order_with_respect_to")])]),s._v(" "),a("p",[s._v("这个选项不好理解。其用途是根据指定的字段进行排序，通常用于关系字段。看下面的例子：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" django"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("db "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" models\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Question")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("models"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Model"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    text "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" models"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("TextField"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ...")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Answer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("models"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Model"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    question "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" models"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ForeignKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Question"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" on_delete"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("models"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("CASCADE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ...")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Meta")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        order_with_respect_to "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'question'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("上面在 Answer 模型中设置了 "),a("code",[s._v("order_with_respect_to = 'question'")]),s._v("，这样的话，Django 会自动提供两个 API，"),a("code",[s._v("get_RELATED_order()")]),s._v(" 和 "),a("code",[s._v("set_RELATED_order()")]),s._v("，其中的 "),a("code",[s._v("RELATED")]),s._v(" 用小写的模型名代替。")]),s._v(" "),a("p",[s._v("假设现在有一个 Question 对象，它关联着多个 Answer 对象，下面的操作返回包含关联的 Answer 对象的主键的列表 "),a("code",[s._v("[1,2,3]")]),s._v("：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("question "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Question"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("objects"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nquestion"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("get_answer_order"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("我们可以通过 "),a("code",[s._v("set_RELATED_order()")]),s._v(" 方法，指定上面这个列表的顺序：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("question"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("set_answer_order"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("同样的，关联的对象也获得了两个方法 "),a("code",[s._v("get_next_in_order()")]),s._v(" 和 "),a("code",[s._v("get_previous_in_order()")]),s._v("，用于通过特定的顺序访问对象，如下所示：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("answer "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Answer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("objects"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nanswer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("get_next_in_order"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -> <Answer: 3>")]),s._v("\nanswer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("get_previous_in_order"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -> <Answer: 1>")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("同样，这个元数据目前还没有遇到需要使用它的场景。")]),s._v(" "),a("h4",{attrs:{id:"_11-ordering"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-ordering"}},[s._v("#")]),s._v(" 11. "),a("strong",[s._v("ordering")])]),s._v(" "),a("p",[s._v("这是最常用的元数据之一。")]),s._v(" "),a("p",[s._v("用于指定该模型生成的所有对象的排序方式，接收一个字段名组成的元组或列表。默认按升序排列，如果在字段名前加上字符 "),a("code",[s._v("-")]),s._v(" 则表示按降序排列，如果使用字符问号 "),a("code",[s._v("？")]),s._v(" 表示随机排列。")]),s._v(" "),a("p",[s._v("这个顺序是你通过查询语句，获得 QuerySet 后的列表内元素的顺序，切不可和前面的 "),a("code",[s._v("get_latest_by")]),s._v(" 等混淆。")]),s._v(" "),a("p",[s._v("看下面的例子：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("ordering "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'pub_date'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 表示按 'pub_date' 字段进行升序排列")]),s._v("\nordering "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-pub_date'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 表示按 'pub_date' 字段进行降序排列")]),s._v("\nordering "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-pub_date'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'author'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 表示先按 'pub_date' 字段进行降序排列，再按 'author' 字段进行升序排列")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h4",{attrs:{id:"_12-permissions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-permissions"}},[s._v("#")]),s._v(" 12. "),a("strong",[s._v("permissions")])]),s._v(" "),a("p",[s._v("该元数据用于当创建对象时增加额外的权限。它接收一个所有元素都是二元元组的列表或元组，每个元素都是 "),a("code",[s._v("(权限代码, 直观的权限名称)")]),s._v(" 的格式。")]),s._v(" "),a("p",[s._v("这个 Meta 选项非常重要，和 auth 框架的权限系统紧密相关。比如下面的例子：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("permissions "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"can_deliver_pizzas"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"可以送披萨"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h4",{attrs:{id:"_13-default-permissions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-default-permissions"}},[s._v("#")]),s._v(" 13. "),a("strong",[s._v("default_permissions")])]),s._v(" "),a("p",[s._v("Django 默认会在建立数据表的时候就自动给所有的模型设置 "),a("code",[s._v("('add', 'change', 'delete')")]),s._v(" 的权限，也就是增删改。你可以自定义这个选项，比如设置为一个空列表，表示你不需要默认的权限，但是这一操作必须在执行 migrate 命令之前。也是配合 auth 框架使用。")]),s._v(" "),a("h4",{attrs:{id:"_14-proxy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-proxy"}},[s._v("#")]),s._v(" 14. "),a("strong",[s._v("proxy")])]),s._v(" "),a("p",[s._v("如果设置了 "),a("code",[s._v("proxy = True")]),s._v("，表示使用代理模式的模型继承方式，即该 model 是其父的代理 model。具体内容与 "),a("code",[s._v("abstract")]),s._v(" 选项一样。")]),s._v(" "),a("h4",{attrs:{id:"_15-required-db-features"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-required-db-features"}},[s._v("#")]),s._v(" 15. "),a("strong",[s._v("required_db_features")])]),s._v(" "),a("p",[s._v("声明模型依赖的数据库功能。比如 "),a("code",[s._v("['gis_enabled']")]),s._v("，表示模型的建立依赖 GIS 功能。")]),s._v(" "),a("h4",{attrs:{id:"_16-required-db-vendor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16-required-db-vendor"}},[s._v("#")]),s._v(" 16. "),a("strong",[s._v("required_db_vendor")])]),s._v(" "),a("p",[s._v("声明模型支持的数据库。Django 默认支持 "),a("code",[s._v("sqlite")]),s._v(", "),a("code",[s._v("postgresql")]),s._v(", "),a("code",[s._v("mysql")]),s._v(", "),a("code",[s._v("oracle")]),s._v("。")]),s._v(" "),a("h4",{attrs:{id:"_17-select-on-save"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_17-select-on-save"}},[s._v("#")]),s._v(" 17. "),a("strong",[s._v("select_on_save")])]),s._v(" "),a("p",[s._v("决定是否使用 1.6 版本之前的 "),a("code",[s._v("django.db.models.Model.save()")]),s._v(" 算法保存对象。默认值为 False。这个选项我们通常不用关心。")]),s._v(" "),a("h4",{attrs:{id:"_18-indexes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_18-indexes"}},[s._v("#")]),s._v(" 18. "),a("strong",[s._v("indexes")])]),s._v(" "),a("p",[s._v("接收一个应用在当前模型上的索引列表，如下例所示：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" django"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("db "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" models\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Customer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("models"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Model"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    first_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" models"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("CharField"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("max_length"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    last_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" models"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("CharField"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("max_length"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Meta")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        indexes "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n            models"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fields"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'last_name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'first_name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            models"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fields"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'first_name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'first_name_idx'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h4",{attrs:{id:"_19-unique-together"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-unique-together"}},[s._v("#")]),s._v(" 19. "),a("strong",[s._v("unique_together")])]),s._v(" "),a("p",[s._v("这个元数据是非常重要的一个，它等同于数据库的联合约束。")]),s._v(" "),a("p",[s._v("当你需要通过两个字段保持唯一性时可以使用这个选项。比如假设你希望，一个 Person 对象的 FirstName 和 LastName 两者的组合必须是唯一的，那么需要这样设置：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("unique_together"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"first_name"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"last_name"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这个元数据接收一个二维的元组，每个元素都是一维元组，表示一组联合唯一约束，可以同时设置多组约束。")]),s._v(" "),a("p",[s._v("最后需要注意，ManyToManyField 字段不能包含在 "),a("code",[s._v("unique_together")]),s._v(" 中。如果你需要验证关联到 ManyToManyField 字段的唯一验证，可以尝试使用 signal（信号）或者明确指定 through 属性。")]),s._v(" "),a("h4",{attrs:{id:"_20-index-together"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_20-index-together"}},[s._v("#")]),s._v(" 20. "),a("strong",[s._v("index_together")])]),s._v(" "),a("p",[s._v("联合索引，用法和特性类似 "),a("code",[s._v("unique_together")]),s._v("。")]),s._v(" "),a("h4",{attrs:{id:"_21-constraints"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_21-constraints"}},[s._v("#")]),s._v(" 21. "),a("strong",[s._v("constraints")])]),s._v(" "),a("p",[s._v("为模型添加约束条件。通常是列表的形式，每个列表元素就是一个约束。")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" django"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("db "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" models\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Customer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("models"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Model"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    age "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" models"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("IntegerField"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Meta")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        constraints "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n            models"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("CheckConstraint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("check"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("models"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Q"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("age__gte"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'age_gte_18'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("上例中，会检查 age 年龄的大小，不得低于 18。")]),s._v(" "),a("h4",{attrs:{id:"_22-verbose-name"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_22-verbose-name"}},[s._v("#")]),s._v(" 22. "),a("strong",[s._v("verbose_name")])]),s._v(" "),a("p",[s._v("最常用的元数据之一，用于设置模型对象的直观、人类可读的名称，用于在各种打印、页面展示等场景。可以用中文。例如：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("verbose_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"story"')]),s._v("\nverbose_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"披萨"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("如果你不指定它，那么 Django 会使用小写的模型名作为默认值。")]),s._v(" "),a("h4",{attrs:{id:"_23-verbose-name-plural"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_23-verbose-name-plural"}},[s._v("#")]),s._v(" 23. "),a("strong",[s._v("verbose_name_plural")])]),s._v(" "),a("p",[s._v("英语有单数和复数形式。这个就是模型对象的复数名，比如 apples。因为我们中文通常不区分单复数，所以保持和 "),a("code",[s._v("verbose_name")]),s._v(" 一致也可以。")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("verbose_name_plural "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"stories"')]),s._v("\nverbose_name_plural "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"披萨"')]),s._v("\nverbose_name_plural "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" verbose_name\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("如果不指定该选项，那么默认的复数名字是 "),a("code",[s._v("verbose_name")]),s._v(" 加上 "),a("code",[s._v("s")]),s._v("。")]),s._v(" "),a("h4",{attrs:{id:"_24-label"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_24-label"}},[s._v("#")]),s._v(" 24. "),a("strong",[s._v("label")])]),s._v(" "),a("p",[s._v("前面介绍的元数据都是可修改和设置的，但还有两个只读的元数据，label 就是其中之一。")]),s._v(" "),a("p",[s._v("label 等同于 "),a("code",[s._v("app_label.object_name")]),s._v("。例如 "),a("code",[s._v("polls.Question")]),s._v("，"),a("code",[s._v("polls")]),s._v(" 是应用名，"),a("code",[s._v("Question")]),s._v(" 是模型名。")]),s._v(" "),a("h4",{attrs:{id:"_25-label-lower"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_25-label-lower"}},[s._v("#")]),s._v(" 25. "),a("strong",[s._v("label_lower")])]),s._v(" "),a("p",[s._v("同上，不过是小写的模型名。")]),s._v(" "),a("p",[s._v("（完）")])])}),[],!1,null,null,null);t.default=e.exports}}]);
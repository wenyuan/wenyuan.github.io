(window.webpackJsonp=window.webpackJsonp||[]).push([[144],{429:function(s,t,a){s.exports=a.p+"assets/img/run-celery-worker.207be9f2.png"},430:function(s,t,a){s.exports=a.p+"assets/img/celery-run-async-task.784aad96.png"},431:function(s,t,a){s.exports=a.p+"assets/img/celery-run-worker-multi-tasks.94d65714.png"},432:function(s,t,a){s.exports=a.p+"assets/img/celery-run-multi-tasks.2fc35c7b.png"},433:function(s,t,a){s.exports=a.p+"assets/img/period-task-run-celery-worker.96e47a48.png"},434:function(s,t,a){s.exports=a.p+"assets/img/period-task-run-celery-beat.6a656765.png"},435:function(s,t,a){s.exports=a.p+"assets/img/celery-beat-crontab-source-code.b39258e6.png"},436:function(s,t,a){s.exports=a.p+"assets/img/celery-delay-source-code.19055148.png"},437:function(s,t,a){s.exports=a.p+"assets/img/celery-task-decorator-with-options.520ae33a.png"},797:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"使用-celery-实现任务调度"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用-celery-实现任务调度"}},[s._v("#")]),s._v(" 使用 Celery 实现任务调度")]),s._v(" "),n("blockquote",[n("p",[s._v("这个库的使用需要基于 Linux 环境，本案例的环境为：")]),s._v(" "),n("ul",[n("li",[s._v("CentOS 7")]),s._v(" "),n("li",[s._v("Python 3.8.9")]),s._v(" "),n("li",[s._v("Redis 7")]),s._v(" "),n("li",[s._v("其中 Celery 大版本为 5，更低的版本可能用法会略微不同，具体参考官方文档。")])])]),s._v(" "),n("h2",{attrs:{id:"celery-介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#celery-介绍"}},[s._v("#")]),s._v(" Celery 介绍")]),s._v(" "),n("p",[s._v("Celery 是 Python 的一个第三方模块，它本质上是一个任务调度框架。一般用来实现：")]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("异步任务")]),s._v("：一些耗时的操作可以交给 celery 异步执行，而不用等着程序处理完才知道结果。比如：视频转码、邮件发送、消息推送等等。")]),s._v(" "),n("li",[n("strong",[s._v("定时任务")]),s._v("：比如定时推送消息、定时爬取数据、定时统计数据等等。")])]),s._v(" "),n("h3",{attrs:{id:"模块特点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#模块特点"}},[s._v("#")]),s._v(" 模块特点")]),s._v(" "),n("ul",[n("li",[s._v("灵活：是一个强大的分布式任务队列，它可以让任务的执行完全脱离主程序，甚至可以被分配到其他主机上运行。")]),s._v(" "),n("li",[s._v("高可用：当任务执行失败或执行过程中发生连接中断，celery 会自动尝试重新执行任务。")]),s._v(" "),n("li",[s._v("快速：一个单进程的 celery 每分钟可处理上百万个任务。")]),s._v(" "),n("li",[s._v("开源：是一个完全基于 Python 语言编写的开源项目。")])]),s._v(" "),n("h3",{attrs:{id:"使用场景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用场景"}},[s._v("#")]),s._v(" 使用场景")]),s._v(" "),n("p",[s._v("前面刚提到，celery 适用于一些耗时耗资源的操作，为了避免它们阻塞主程序的运行，我们经常会采用多线程或异步任务。比如：")]),s._v(" "),n("ul",[n("li",[s._v("场景一：在 Web 开发中，对新用户的注册，我们通常会给他发一封激活邮件，而发邮件是个 IO 阻塞式任务，如果直接把它放到应用当中，就需要等邮件发出去之后才能进行下一步操作，此时用户只能等待再等待。更好的方式是在业务逻辑中触发一个发邮件的异步任务，而主程序可以继续往下运行。")]),s._v(" "),n("li",[s._v("场景二：接口自动化测试平台中，当选择 N 条 case 后点击执行按钮，因为运行选择的多条 case 是一个比较耗时的过程，所以不可能在点击按钮后，页面一直处于等待运行结果的状态，那样会给用户一个页面卡住或者夯住的体验，所以运行用例的过程就应该是一个异步任务去处理。")])]),s._v(" "),n("h3",{attrs:{id:"工作流程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#工作流程"}},[s._v("#")]),s._v(" 工作流程")]),s._v(" "),n("p",[s._v("有一点需要注意，celery 是用来调度任务的，但它本身并不具备存储任务的功能，而调度任务的时候肯定是要把任务存起来的。因此要使用 celery 的话，还需要搭配一些具备存储、访问功能的工具，比如：消息队列、Redis 缓存、数据库等等。")]),s._v(" "),n("p",[s._v("一般最常用的是 RabbitMQ 或者 Redis，而我接下来的演示都会使用 Redis。")]),s._v(" "),n("p",[s._v("先来看一下 celery 的工作流程图：")]),s._v(" "),n("div",{staticStyle:{"text-align":"center"}},[n("svg",{attrs:{id:"SvgjsSvg1006",width:"517",height:"535.390625",xmlns:"http://www.w3.org/2000/svg",version:"1.1","xmlns:xlink":"http://www.w3.org/1999/xlink","xmlns:svgjs":"http://svgjs.com/svgjs"}},[n("defs",{attrs:{id:"SvgjsDefs1007"}},[n("marker",{attrs:{id:"SvgjsMarker1034",markerWidth:"12",markerHeight:"8",refX:"9",refY:"4",viewBox:"0 0 12 8",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[n("path",{attrs:{id:"SvgjsPath1035",d:"M0,0 L12,4 L0,8 L0,0",fill:"#323232",stroke:"#323232","stroke-width":"1"}})]),n("marker",{attrs:{id:"SvgjsMarker1038",markerWidth:"12",markerHeight:"8",refX:"9",refY:"4",viewBox:"0 0 12 8",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[n("path",{attrs:{id:"SvgjsPath1039",d:"M0,0 L12,4 L0,8 L0,0",fill:"#323232",stroke:"#323232","stroke-width":"1"}})]),n("marker",{attrs:{id:"SvgjsMarker1064",markerWidth:"12",markerHeight:"8",refX:"9",refY:"4",viewBox:"0 0 12 8",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[n("path",{attrs:{id:"SvgjsPath1065",d:"M0,0 L12,4 L0,8 L0,0",fill:"#323232",stroke:"#323232","stroke-width":"1"}})]),n("marker",{attrs:{id:"SvgjsMarker1068",markerWidth:"12",markerHeight:"8",refX:"9",refY:"4",viewBox:"0 0 12 8",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[n("path",{attrs:{id:"SvgjsPath1069",d:"M0,0 L12,4 L0,8 L0,0",fill:"#323232",stroke:"#323232","stroke-width":"1"}})]),n("marker",{attrs:{id:"SvgjsMarker1072",markerWidth:"12",markerHeight:"8",refX:"9",refY:"4",viewBox:"0 0 12 8",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[n("path",{attrs:{id:"SvgjsPath1073",d:"M0,0 L12,4 L0,8 L0,0",fill:"#323232",stroke:"#323232","stroke-width":"1"}})]),n("marker",{attrs:{id:"SvgjsMarker1084",markerWidth:"12",markerHeight:"8",refX:"9",refY:"4",viewBox:"0 0 12 8",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[n("path",{attrs:{id:"SvgjsPath1085",d:"M0,0 L12,4 L0,8 L0,0",fill:"#323232",stroke:"#323232","stroke-width":"1"}})]),n("marker",{attrs:{id:"SvgjsMarker1088",markerWidth:"12",markerHeight:"8",refX:"9",refY:"4",viewBox:"0 0 12 8",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[n("path",{attrs:{id:"SvgjsPath1089",d:"M0,0 L12,4 L0,8 L0,0",fill:"#323232",stroke:"#323232","stroke-width":"1"}})]),n("marker",{attrs:{id:"SvgjsMarker1092",markerWidth:"12",markerHeight:"8",refX:"9",refY:"4",viewBox:"0 0 12 8",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[n("path",{attrs:{id:"SvgjsPath1093",d:"M0,0 L12,4 L0,8 L0,0",fill:"#323232",stroke:"#323232","stroke-width":"1"}})])]),n("g",{attrs:{id:"SvgjsG1008",transform:"translate(66.20000457763672,25)"}},[n("path",{attrs:{id:"SvgjsPath1009",d:"M 0 4Q 0 0 4 0L 127 0Q 131 0 131 4L 131 50Q 131 54 127 54L 4 54Q 0 54 0 50Z",stroke:"none","fill-opacity":"1",fill:"#d1f0eb"}}),n("g",{attrs:{id:"SvgjsG1010"}},[n("text",{attrs:{id:"SvgjsText1011","font-family":"微软雅黑","text-anchor":"middle","font-size":"14px",width:"111px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"150%",anchor:"middle",family:"微软雅黑",size:"14px",weight:"400","font-style":"",opacity:"1",y:"1.5",transform:"rotate(0)"}},[n("tspan",{attrs:{id:"SvgjsTspan1012",dy:"21",x:"65.5"}},[n("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1013"}},[s._v("异步任务")])]),n("tspan",{attrs:{id:"SvgjsTspan1014",dy:"21",x:"65.5"}},[n("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1015"}},[s._v("（Async Task）")])])])])]),n("g",{attrs:{id:"SvgjsG1016",transform:"translate(334.7999954223633,25)"}},[n("path",{attrs:{id:"SvgjsPath1017",d:"M 0 4Q 0 0 4 0L 127 0Q 131 0 131 4L 131 50Q 131 54 127 54L 4 54Q 0 54 0 50Z",stroke:"none","fill-opacity":"1",fill:"#d0d8ff"}}),n("g",{attrs:{id:"SvgjsG1018"}},[n("text",{attrs:{id:"SvgjsText1019","font-family":"微软雅黑","text-anchor":"middle","font-size":"14px",width:"111px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"150%",anchor:"middle",family:"微软雅黑",size:"14px",weight:"400","font-style":"",opacity:"1",y:"1.5",transform:"rotate(0)"}},[n("tspan",{attrs:{id:"SvgjsTspan1020",dy:"21",x:"65.5"}},[n("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1021"}},[s._v("定时任务")])]),n("tspan",{attrs:{id:"SvgjsTspan1022",dy:"21",x:"65.5"}},[n("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1023"}},[s._v("（Celery Beat）")])])])])]),n("g",{attrs:{id:"SvgjsG1024",transform:"translate(193,168.4000015258789)"}},[n("path",{attrs:{id:"SvgjsPath1025",d:"M 0 4Q 0 0 4 0L 127 0Q 131 0 131 4L 131 50Q 131 54 127 54L 4 54Q 0 54 0 50Z",stroke:"none","fill-opacity":"1",fill:"#ffd9d8"}}),n("g",{attrs:{id:"SvgjsG1026"}},[n("text",{attrs:{id:"SvgjsText1027","font-family":"微软雅黑","text-anchor":"middle","font-size":"14px",width:"111px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"150%",anchor:"middle",family:"微软雅黑",size:"14px",weight:"400","font-style":"",opacity:"1",y:"1.5",transform:"rotate(0)"}},[n("tspan",{attrs:{id:"SvgjsTspan1028",dy:"21",x:"65.5"}},[n("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1029"}},[s._v("消息中间件")])]),n("tspan",{attrs:{id:"SvgjsTspan1030",dy:"21",x:"65.5"}},[n("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1031"}},[s._v("（Broker）")])])])])]),n("g",{attrs:{id:"SvgjsG1032"}},[n("path",{attrs:{id:"SvgjsPath1033",d:"M131.70000457763672 79L227.64550206243132 167.71741637342308","stroke-dasharray":"8,5",stroke:"#323232","stroke-width":"1",fill:"none","marker-end":"url(#SvgjsMarker1034)"}})]),n("g",{attrs:{id:"SvgjsG1036"}},[n("path",{attrs:{id:"SvgjsPath1037",d:"M400.2999954223633 79L288.6175821519105 167.79098182933336","stroke-dasharray":"8,5",stroke:"#323232","stroke-width":"1",fill:"none","marker-end":"url(#SvgjsMarker1038)"}})]),n("g",{attrs:{id:"SvgjsG1040",transform:"translate(25,308)"}},[n("path",{attrs:{id:"SvgjsPath1041",d:"M 0 4Q 0 0 4 0L 140 0Q 144 0 144 4L 144 49.599998474121094Q 144 53.599998474121094 140 53.599998474121094L 4 53.599998474121094Q 0 53.599998474121094 0 49.599998474121094Z",stroke:"none","fill-opacity":"1",fill:"#ffedd2"}}),n("g",{attrs:{id:"SvgjsG1042"}},[n("text",{attrs:{id:"SvgjsText1043","font-family":"微软雅黑","text-anchor":"middle","font-size":"14px",width:"124px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"150%",anchor:"middle",family:"微软雅黑",size:"14px",weight:"400","font-style":"",opacity:"1",y:"1.2999992370605469",transform:"rotate(0)"}},[n("tspan",{attrs:{id:"SvgjsTspan1044",dy:"21",x:"72"}},[n("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1045"}},[s._v("任务执行单元")])]),n("tspan",{attrs:{id:"SvgjsTspan1046",dy:"21",x:"72"}},[n("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1047"}},[s._v("（Celery Worker）")])])])])]),n("g",{attrs:{id:"SvgjsG1048",transform:"translate(348,308)"}},[n("path",{attrs:{id:"SvgjsPath1049",d:"M 0 4Q 0 0 4 0L 140 0Q 144 0 144 4L 144 49.599998474121094Q 144 53.599998474121094 140 53.599998474121094L 4 53.599998474121094Q 0 53.599998474121094 0 49.599998474121094Z",stroke:"none","fill-opacity":"1",fill:"#ffedd2"}}),n("g",{attrs:{id:"SvgjsG1050"}},[n("text",{attrs:{id:"SvgjsText1051","font-family":"微软雅黑","text-anchor":"middle","font-size":"14px",width:"124px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"150%",anchor:"middle",family:"微软雅黑",size:"14px",weight:"400","font-style":"",opacity:"1",y:"1.2999992370605469",transform:"rotate(0)"}},[n("tspan",{attrs:{id:"SvgjsTspan1052",dy:"21",x:"72"}},[n("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1053"}},[s._v("任务执行单元")])]),n("tspan",{attrs:{id:"SvgjsTspan1054",dy:"21",x:"72"}},[n("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1055"}},[s._v("（Celery Worker）")])])])])]),n("g",{attrs:{id:"SvgjsG1056",transform:"translate(189.20000457763672,308)"}},[n("path",{attrs:{id:"SvgjsPath1057",d:"M 0 4Q 0 0 4 0L 134.59999084472656 0Q 138.59999084472656 0 138.59999084472656 4L 138.59999084472656 49.599998474121094Q 138.59999084472656 53.599998474121094 134.59999084472656 53.599998474121094L 4 53.599998474121094Q 0 53.599998474121094 0 49.599998474121094Z",stroke:"none","fill-opacity":"1",fill:"#ffedd2"}}),n("g",{attrs:{id:"SvgjsG1058"}},[n("text",{attrs:{id:"SvgjsText1059","font-family":"微软雅黑","text-anchor":"middle","font-size":"14px",width:"119px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"150%",anchor:"middle",family:"微软雅黑",size:"14px",weight:"400","font-style":"",opacity:"1",y:"11.799999237060547",transform:"rotate(0)"}},[n("tspan",{attrs:{id:"SvgjsTspan1060",dy:"21",x:"69.5"}},[n("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1061"}},[s._v("......")])])])])]),n("g",{attrs:{id:"SvgjsG1062"}},[n("path",{attrs:{id:"SvgjsPath1063",d:"M97 308L224.51936081777558 222.72266087817997","stroke-dasharray":"8,5",stroke:"#323232","stroke-width":"1",fill:"none","marker-end":"url(#SvgjsMarker1064)"}})]),n("g",{attrs:{id:"SvgjsG1066"}},[n("path",{attrs:{id:"SvgjsPath1067",d:"M258.5 308L258.5 223.70000152587892","stroke-dasharray":"8,5",stroke:"#323232","stroke-width":"1",fill:"none","marker-end":"url(#SvgjsMarker1068)"}})]),n("g",{attrs:{id:"SvgjsG1070"}},[n("path",{attrs:{id:"SvgjsPath1071",d:"M420 308L298.66368427027874 222.7473662398296","stroke-dasharray":"8,5",stroke:"#323232","stroke-width":"1",fill:"none","marker-end":"url(#SvgjsMarker1072)"}})]),n("g",{attrs:{id:"SvgjsG1074",transform:"translate(193,456.4000015258789)"}},[n("path",{attrs:{id:"SvgjsPath1075",d:"M 0 4Q 0 0 4 0L 127 0Q 131 0 131 4L 131 50Q 131 54 127 54L 4 54Q 0 54 0 50Z",stroke:"none","fill-opacity":"1",fill:"#f2c32b"}}),n("g",{attrs:{id:"SvgjsG1076"}},[n("text",{attrs:{id:"SvgjsText1077","font-family":"微软雅黑","text-anchor":"middle","font-size":"14px",width:"111px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"150%",anchor:"middle",family:"微软雅黑",size:"14px",weight:"400","font-style":"",opacity:"1",y:"1.5",transform:"rotate(0)"}},[n("tspan",{attrs:{id:"SvgjsTspan1078",dy:"21",x:"65.5"}},[n("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1079"}},[s._v("结果存储")])]),n("tspan",{attrs:{id:"SvgjsTspan1080",dy:"21",x:"65.5"}},[n("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1081"}},[s._v("（Backend）")])])])])]),n("g",{attrs:{id:"SvgjsG1082"}},[n("path",{attrs:{id:"SvgjsPath1083",d:"M258.5 361.5999984741211L258.5 455.10000152587895","stroke-dasharray":"8,5",stroke:"#323232","stroke-width":"1",fill:"none","marker-end":"url(#SvgjsMarker1084)"}})]),n("g",{attrs:{id:"SvgjsG1086"}},[n("path",{attrs:{id:"SvgjsPath1087",d:"M97 361.5999984741211L216.57877686225174 455.79555953796876","stroke-dasharray":"8,5",stroke:"#323232","stroke-width":"1",fill:"none","marker-end":"url(#SvgjsMarker1088)"}})]),n("g",{attrs:{id:"SvgjsG1090"}},[n("path",{attrs:{id:"SvgjsPath1091",d:"M420 361.5999984741211L294.63920106589376 455.8189465448478","stroke-dasharray":"8,5",stroke:"#323232","stroke-width":"1",fill:"none","marker-end":"url(#SvgjsMarker1092)"}})]),n("g",{attrs:{id:"SvgjsG1094",transform:"translate(149.60001373291016,104.10000228881836)"}},[n("path",{attrs:{id:"SvgjsPath1095",d:"M 0 0L 47.59999084472656 0L 47.59999084472656 31.199996948242188L 0 31.199996948242188Z","stroke-dasharray":"10,6",stroke:"rgba(50,50,50,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),n("g",{attrs:{id:"SvgjsG1096"}},[n("text",{attrs:{id:"SvgjsText1097","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"28px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"4.974998474121094",transform:"rotate(0)"}},[n("tspan",{attrs:{id:"SvgjsTspan1098",dy:"16",x:"24"}},[n("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1099"}},[s._v("发送")])])])])]),n("g",{attrs:{id:"SvgjsG1100",transform:"translate(327.7999954223633,104.10000228881836)"}},[n("path",{attrs:{id:"SvgjsPath1101",d:"M 0 0L 47.399986267089844 0L 47.399986267089844 31.199996948242188L 0 31.199996948242188Z","stroke-dasharray":"10,6",stroke:"rgba(50,50,50,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),n("g",{attrs:{id:"SvgjsG1102"}},[n("text",{attrs:{id:"SvgjsText1103","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"28px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"4.974998474121094",transform:"rotate(0)"}},[n("tspan",{attrs:{id:"SvgjsTspan1104",dy:"16",x:"24"}},[n("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1105"}},[s._v("发送")])])])])]),n("g",{attrs:{id:"SvgjsG1106",transform:"translate(135.20000457763672,251.8000030517578)"}},[n("path",{attrs:{id:"SvgjsPath1107",d:"M 0 0L 47.399986267089844 0L 47.399986267089844 31.199996948242188L 0 31.199996948242188Z","stroke-dasharray":"10,6",stroke:"rgba(50,50,50,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),n("g",{attrs:{id:"SvgjsG1108"}},[n("text",{attrs:{id:"SvgjsText1109","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"28px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"4.974998474121094",transform:"rotate(0)"}},[n("tspan",{attrs:{id:"SvgjsTspan1110",dy:"16",x:"24"}},[n("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1111"}},[s._v("监控")])])])])]),n("g",{attrs:{id:"SvgjsG1112",transform:"translate(234.80000686645508,251.8000030517578)"}},[n("path",{attrs:{id:"SvgjsPath1113",d:"M 0 0L 47.399986267089844 0L 47.399986267089844 31.199996948242188L 0 31.199996948242188Z","stroke-dasharray":"10,6",stroke:"rgba(50,50,50,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),n("g",{attrs:{id:"SvgjsG1114"}},[n("text",{attrs:{id:"SvgjsText1115","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"28px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"4.974998474121094",transform:"rotate(0)"}},[n("tspan",{attrs:{id:"SvgjsTspan1116",dy:"16",x:"24"}},[n("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1117"}},[s._v("监控")])])])])]),n("g",{attrs:{id:"SvgjsG1118",transform:"translate(334.7999954223633,251.8000030517578)"}},[n("path",{attrs:{id:"SvgjsPath1119",d:"M 0 0L 47.399986267089844 0L 47.399986267089844 31.199996948242188L 0 31.199996948242188Z","stroke-dasharray":"10,6",stroke:"rgba(50,50,50,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),n("g",{attrs:{id:"SvgjsG1120"}},[n("text",{attrs:{id:"SvgjsText1121","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"28px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"4.974998474121094",transform:"rotate(0)"}},[n("tspan",{attrs:{id:"SvgjsTspan1122",dy:"16",x:"24"}},[n("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1123"}},[s._v("监控")])])])])]),n("g",{attrs:{id:"SvgjsG1124",transform:"translate(337.7999954223633,392.5999984741211)"}},[n("path",{attrs:{id:"SvgjsPath1125",d:"M 0 0L 47.399986267089844 0L 47.399986267089844 31.199996948242188L 0 31.199996948242188Z","stroke-dasharray":"10,6",stroke:"rgba(50,50,50,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),n("g",{attrs:{id:"SvgjsG1126"}},[n("text",{attrs:{id:"SvgjsText1127","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"28px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"4.974998474121094",transform:"rotate(0)"}},[n("tspan",{attrs:{id:"SvgjsTspan1128",dy:"16",x:"24"}},[n("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1129"}},[s._v("存储")])])])])]),n("g",{attrs:{id:"SvgjsG1130",transform:"translate(130.20000457763672,392.5999984741211)"}},[n("path",{attrs:{id:"SvgjsPath1131",d:"M 0 0L 47.399986267089844 0L 47.399986267089844 31.199996948242188L 0 31.199996948242188Z","stroke-dasharray":"10,6",stroke:"rgba(50,50,50,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),n("g",{attrs:{id:"SvgjsG1132"}},[n("text",{attrs:{id:"SvgjsText1133","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"28px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"4.974998474121094",transform:"rotate(0)"}},[n("tspan",{attrs:{id:"SvgjsTspan1134",dy:"16",x:"24"}},[n("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1135"}},[s._v("存储")])])])])]),n("g",{attrs:{id:"SvgjsG1136",transform:"translate(234.80000686645508,392.5999984741211)"}},[n("path",{attrs:{id:"SvgjsPath1137",d:"M 0 0L 47.399986267089844 0L 47.399986267089844 31.199996948242188L 0 31.199996948242188Z","stroke-dasharray":"10,6",stroke:"rgba(50,50,50,1)","stroke-width":"1","fill-opacity":"1",fill:"#ffffff"}}),n("g",{attrs:{id:"SvgjsG1138"}},[n("text",{attrs:{id:"SvgjsText1139","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"28px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"4.974998474121094",transform:"rotate(0)"}},[n("tspan",{attrs:{id:"SvgjsTspan1140",dy:"16",x:"24"}},[n("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1141"}},[s._v("存储")])])])])])]),s._v(" "),n("p",{staticStyle:{"text-align":"center",color:"#888"}},[s._v("（celery 工作流程图）")])]),s._v(" "),n("p",[s._v("主要包含以下几个模块：")]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("任务模块 Task")]),s._v("：包含异步任务和定时任务。其中，异步任务通常在业务逻辑中被触发并发往任务队列，而定时任务由 Celery Beat 进程周期性地将任务发往任务队列。")]),s._v(" "),n("li",[n("strong",[s._v("消息中间件 Broker")]),s._v("：即为任务调度队列，接收任务生产者发来的消息（即任务），将任务存入队列。Celery 本身不提供队列服务，官方推荐使用 RabbitMQ 和 Redis 等。")]),s._v(" "),n("li",[n("strong",[s._v("任务执行单元 Worker")]),s._v("：是任务的执行单元，它实时监控消息队列，会将任务从队列中顺序取出并执行。")]),s._v(" "),n("li",[n("strong",[s._v("任务结果存储 Backend")]),s._v("：用于在任务结束之后保存状态信息和结果，以便查询，一般是数据库，当然只要具备存储功能都可以作为 Backend，比如 RabbitMQ，Redis 和 MongoDB 等。")])]),s._v(" "),n("h3",{attrs:{id:"安装-celery"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装-celery"}},[s._v("#")]),s._v(" 安装 Celery")]),s._v(" "),n("p",[s._v("Celery 的安装比较简单，直接 "),n("code",[s._v("pip install celery")]),s._v(" 即可。这里我本地的 Python 版本是 3.8.9，celery 版本是 5.2.7。")]),s._v(" "),n("p",[s._v("另外，由于 celery 本身不提供任务存储的功能，所以这里我使用 Redis 作为消息队列，负责存储任务。")]),s._v(" "),n("p",[s._v("后续 celery 就会将任务存到 broker 里面，要想实现这一点，就必须还要有能够操作相应 broker 的驱动。Python 操作 Redis 的驱动也叫 redis，操作 RabbitMQ 的驱动叫 pika，根据实际情况选择，安装方式如下：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Redis 驱动")]),s._v("\npip "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" redis\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# RabbitMQ 驱动")]),s._v("\npip "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" pika\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h2",{attrs:{id:"实现异步任务示例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实现异步任务示例"}},[s._v("#")]),s._v(" 实现异步任务示例")]),s._v(" "),n("h3",{attrs:{id:"最简易代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#最简易代码"}},[s._v("#")]),s._v(" 最简易代码")]),s._v(" "),n("p",[s._v("使用 celery 实现异步任务主要包含三个步骤：")]),s._v(" "),n("ul",[n("li",[s._v("创建一个 celery 实例，并编写要变成异步任务的函数")]),s._v(" "),n("li",[s._v("启动 celery worker")]),s._v(" "),n("li",[s._v("调用异步任务")])]),s._v(" "),n("h4",{attrs:{id:"_1-编写任务"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-编写任务"}},[s._v("#")]),s._v(" 1）编写任务")]),s._v(" "),n("p",[s._v("新建一个工程，就叫 "),n("code",[s._v("celery_demo")]),s._v("，然后在里面新建一个 "),n("code",[s._v("app.py")]),s._v(" 文件。")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# celery_demo/app.py")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" time\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" celery "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Celery\n\nbroker_url "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"redis://127.0.0.1:6379/1"')]),s._v("\nresult_backend "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"redis://127.0.0.1:6379/2"')]),s._v("\n\napp "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Celery"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"celery_demo"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    broker"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("broker_url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    backend"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("result_backend\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[s._v("@app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("task")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("my_task")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"准备执行任务啦"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sleep"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string-interpolation"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('f"name is ')]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v(", age is ")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("age"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')])]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("p",[s._v("在这个文件里的代码做了这三件事：")]),s._v(" "),n("ul",[n("li",[s._v("定义 celery 所需的配置信息\n"),n("ul",[n("li",[n("code",[s._v("broker_url")]),s._v(" 配置 Redis 数据库地址，格式为 "),n("code",[s._v("redis://:password@hostname:port/db_number")]),s._v("。")]),s._v(" "),n("li",[n("code",[s._v("result_backend")]),s._v(" 配置任务结果存储位置，将保存每个任务的执行结果。")])])]),s._v(" "),n("li",[s._v("实例化 "),n("code",[s._v("Celery")]),s._v(" 类\n"),n("ul",[n("li",[s._v("第一个参数是指定一个 "),n("code",[s._v("name")]),s._v("，名称可自定义")]),s._v(" "),n("li",[s._v("后面两个参数分别是 broker 的地址、backend 的地址")])])]),s._v(" "),n("li",[s._v("编写一个异步任务，这个任务先写在这里，以后再考虑是否抽离到专门写任务的模块里\n"),n("ul",[n("li",[s._v("只有通过 "),n("code",[s._v("@app.task")]),s._v(" 装饰后的函数，才能成为可被 celery 调度的任务")]),s._v(" "),n("li",[s._v("需要注意的是，"),n("strong",[s._v("如果使用了多个装饰器，那么要确保 task 装饰器最后被应用，即写在最上面")])])])])]),s._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[s._v("小贴士")]),s._v(" "),n("p",[s._v("函数被 "),n("code",[s._v("@app.task")]),s._v(" 装饰之后，可以理解为它就变成了一个任务工厂，然后调用任务工厂的 "),n("code",[s._v("delay")]),s._v(" 方法即可创建任务并发送到队列里面。我们也可以创建很多个任务工厂，但是这些任务工厂必须要让 worker 知道，否则不会生效。所以如果修改了某个任务工厂、或者添加、删除了某个任务工厂，那么一定要让 worker 知道，而做法就是先停止 celery worker 进程，然后再重新启动。")]),s._v(" "),n("p",[s._v("如果我们新建了一个任务工厂，然后在没有重启 worker 的情况下，就用调用它的 delay 方法创建任务、并发送到队列的话，那么会抛出一个 "),n("code",[s._v("KeyError")]),s._v("，提示找不到相应的任务工厂。")]),s._v(" "),n("p",[s._v("这点其实很好理解，因为代码已经加载到内存里面了，光修改了源文件而不重启是没用的。因为加载到内存里面的还是原来的代码，不是修改过后的。")])]),s._v(" "),n("h4",{attrs:{id:"_2-启动-worker"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-启动-worker"}},[s._v("#")]),s._v(" 2）启动 worker")]),s._v(" "),n("p",[s._v("我们说执行任务的对象是 worker，那么我们是不是需要创建一个 worker 呢？显然是需要的，而创建 worker 可以使用如下命令创建：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("celery -A app worker -l info\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("解释一下：")]),s._v(" "),n("ul",[n("li",[s._v("-A 参数：表示 celery 对象所在的 py 文件的文件名，本例是在 "),n("code",[s._v("app.py")]),s._v(" 中，celery 会自动在该文件中寻找 celery 对象实例。当然，我们也可以自己指定，如对于本例可使用 "),n("code",[s._v("-A app.app")]),s._v("。")]),s._v(" "),n("li",[s._v("-l 参数：指定日志级别，"),n("code",[s._v("--loglevel")]),s._v(" 的缩写，默认为 warning。")]),s._v(" "),n("li",[s._v("-c 参数：表示明发数量，比如再加上 "),n("code",[s._v("-c 10")]),s._v("，表示限制并发数量为 10。")]),s._v(" "),n("li",[s._v("-D：启动 worker 默认是前台启动，加上 "),n("code",[s._v("-D")]),s._v(" 会后台启动。")])]),s._v(" "),n("p",[s._v("执行命令后可以看到输出如下：")]),s._v(" "),n("div",{staticStyle:{"text-align":"center"}},[n("img",{attrs:{src:a(429),alt:"启动 worker"}}),s._v(" "),n("p",{staticStyle:{"text-align":"center",color:"#888"}},[s._v("（启动 worker）")])]),s._v(" "),n("p",[s._v("以上就是在前台启动了一个 worker，正在等待从队列中获取任务，图中也显示了相应的信息。然而此时队列中并没有任务，所以我们需要在另一个文件中创建任务并发送到队列里面去。")]),s._v(" "),n("h4",{attrs:{id:"_3-创建并调用任务"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-创建并调用任务"}},[s._v("#")]),s._v(" 3）创建并调用任务")]),s._v(" "),n("p",[s._v("再新建一个 Python 文件用来调用上面编写的异步任务：")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# celery_demo/run_async_task.py")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" time\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" app "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" my_task\n\nstart "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("perf_counter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nmy_task"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("delay"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"张三"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("perf_counter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("这个文件没几行，主要做了三件事：")]),s._v(" "),n("ul",[n("li",[s._v("从刚才的 "),n("code",[s._v("app.py")]),s._v(" 中导入 "),n("code",[s._v("my_task")]),s._v("。")]),s._v(" "),n("li",[s._v("通过 "),n("code",[s._v("delay()")]),s._v(" 方法 或 "),n("code",[s._v("apply_async()")]),s._v(" 方法（这个方法后面会讲）来调用任务。")]),s._v(" "),n("li",[s._v("统计任务执行时间。")])]),s._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[s._v("小贴士")]),s._v(" "),n("p",[s._v("这里要注意，创建任务不是直接调用 "),n("code",[s._v("my_task")]),s._v(" 函数，因为那样的话就是在本地执行了，我们的目的是将任务发送到队列里面去，进而让监听队列的 worker 从队列里面获取任务并执行。")]),s._v(" "),n("p",[s._v("因为在 "),n("code",[s._v("app.py")]),s._v(" 里面，"),n("code",[s._v("my_task")]),s._v(" 被 "),n("code",[s._v("@app.task")]),s._v(" 装饰了，所以我们需要调用它的 "),n("code",[s._v("delay")]),s._v(" 方法。")]),s._v(" "),n("p",[s._v("调用 "),n("code",[s._v("delay")]),s._v(" 之后，就会创建一个任务，然后发送到队列里面去（也就是我们这里的 Redis）。至于参数，普通函数调用的时候怎么传，在 "),n("code",[s._v("delay")]),s._v(" 里面依旧怎么传。")])]),s._v(" "),n("p",[s._v("现在，执行该文件，发现只用了约 0.06 秒，而 "),n("code",[s._v("my_task")]),s._v(" 函数里面明明 sleep 了 3 秒。所以说明这一步是不会阻塞的，调用 "),n("code",[s._v("my_task.delay()")]),s._v(" 只是创建一个任务并发送至队列。再看一下 worker 的输出信息：")]),s._v(" "),n("div",{staticStyle:{"text-align":"center"}},[n("img",{attrs:{src:a(430),alt:"调用异步任务时 work 的输出信息"}}),s._v(" "),n("p",{staticStyle:{"text-align":"center",color:"#888"}},[s._v("（调用异步任务时 work 的输出信息）")])]),s._v(" "),n("p",[s._v("可以看到任务已经被消费者接收并且消费了，而且调用 delay 方法是不会阻塞的，花费的那 0.008 秒是用在了其他地方，比如连接 Redis 发送任务等等。")]),s._v(" "),n("h4",{attrs:{id:"_4-redis-中存储的信息"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-redis-中存储的信息"}},[s._v("#")]),s._v(" 4）Redis 中存储的信息")]),s._v(" "),n("p",[s._v("再看看 Redis 中存储的信息，1 号库用作 broker，负责存储任务；2 号库用作 backend，负责存储执行结果。我们来看 2 号库：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 选择 2 号库")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\nOK\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6379"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看里面所有的 key")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 因为我只将任务执行了一遍，所以只有一个 key")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6379"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" keys *\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"celery-task-meta-7b74ed26-eaac-45cb-9079-938f4b7bc101"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6379"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看任务的相关信息，会返回一个 JSON 字符串")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 里面包含了任务的状态、返回值、异常回溯信息（如果执行没有出错则为 None）等等")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6379"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" get celery-task-meta-7b74ed26-eaac-45cb-9079-938f4b7bc101\n"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{'),n("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v("status"),n("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v(": "),n("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v("SUCCESS"),n("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v(", "),n("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v("result"),n("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v(": "),n("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v("name is "),n("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[s._v("\\\\")]),s._v("u5f20"),n("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[s._v("\\\\")]),s._v("u4e09, age is 13"),n("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v(", "),n("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v("traceback"),n("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v(": null, "),n("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v("children"),n("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v(": [], "),n("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v("date_done"),n("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v(": "),n("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v("2022-09-23T02:51:11.851307"),n("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v(", "),n("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v("task_id"),n("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v(": "),n("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v("7b74ed26-eaac-45cb-9079-938f4b7bc101"),n("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v('}"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6379"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 再看看这个 key 是否有过期时间")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 瞧，原来它会在大约 24 小时后过期（celery 默认设置的是 24h，该值是可配置的）")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6379"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ttl celery-task-meta-7b74ed26-eaac-45cb-9079-938f4b7bc101\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("86074")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6379"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("p",[s._v("以上我们就启动了一个 worker 并成功消费了队列中的任务，并且还从 Redis 里面拿到了执行信息。当然啦，如果只能通过查询 backend 才能拿到信息的话，那 celery 就太不智能了。我们也可以直接从程序中获取。")]),s._v(" "),n("h4",{attrs:{id:"_5-查询任务执行信息"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-查询任务执行信息"}},[s._v("#")]),s._v(" 5）查询任务执行信息")]),s._v(" "),n("p",[s._v("Redis（backend）里面存储了很多关于任务的信息，这些信息我们可以直接在程序中获取。")]),s._v(" "),n("p",[s._v("比如修改此时的 "),n("code",[s._v("run_async_task.py")]),s._v("，让它在调用任务的同时打印一些结果看看：")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# celery_demo/run_async_task")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" app "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" my_task\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 调用任务")]),s._v("\nres "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" my_task"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("delay"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"张三"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 打印返回值类型")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n<class \'celery.result.AsyncResult\'>\n"""')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 直接打印，显示任务的 id")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n7a7c8473-d918-4387-b759-f042fccced7e\n"""')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取状态, 显然此刻没有执行完")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 因此结果是PENDING, 表示等待状态")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("status"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\nPENDING\n"""')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取 id，两种方式均可")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("task_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n7a7c8473-d918-4387-b759-f042fccced7e\n7a7c8473-d918-4387-b759-f042fccced7e\n"""')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取任务执行结束时的时间")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 任务还没有结束, 所以返回None")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("date_done"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\nNone\n"""')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取任务的返回值, 可以通过 result 或者 get()")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注意: 如果是 result, 那么任务还没有执行完的话会直接返回 None")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果是 get(), 那么会阻塞直到任务完成")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("get"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\nNone\nname is 张三, age is 13\n"""')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 再次查看状态和执行结束时的时间")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 发现 status 变成 SUCCESS")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# date_done 变成了执行结束时的时间")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("status"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 但显示的是 UTC 时间")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("date_done"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\nSUCCESS\n2022-09-23 03:35:26.867303\n"""')]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br")])]),n("p",[s._v("可以打印结果可以发现，调用完任务工厂的 "),n("code",[s._v("delay")]),s._v(" 方法之后，会创建一个任务并发送至队列，同时返回一个 "),n("code",[s._v("AsyncResult")]),s._v(" 对象，基于此对象我们可以拿到任务执行时的所有信息，具体可参考"),n("a",{attrs:{href:"https://docs.celeryq.dev/en/stable/reference/celery.result.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方文档 - celery.result"),n("OutboundLink")],1),s._v("。")]),s._v(" "),n("p",[s._v("另外我们说结果需要存储在 backend 中，如果没有配置 backend，那么获取结果的时候会报错。至于 backend，因为它是存储结果的，所以一般会保存在数据库中，因为要持久化。我这里为了方便，就还是保存在 Redis 中。")]),s._v(" "),n("h3",{attrs:{id:"生产用代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#生产用代码"}},[s._v("#")]),s._v(" 生产用代码")]),s._v(" "),n("p",[s._v("上面的最简易代码示例主要是实现功能，让代码能跑通。而在实际开发中，我们需要做一些封装和抽象。")]),s._v(" "),n("p",[s._v("封装过后的项目目录如下：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("celery_demo/\n├── app.py\n├── config.py\n├── run_async_task.py\n├── tasks/\n│   └── my_tasks.py\n└── ...\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("下面逐一讲解这些文件里都是哪些内容。")]),s._v(" "),n("h4",{attrs:{id:"_1-提取配置文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-提取配置文件"}},[s._v("#")]),s._v(" 1）提取配置文件")]),s._v(" "),n("p",[s._v("实际开发中，一般都会将配置项统一写入到一个配置文件中，然后通过加载配置文件的方式来指定这些配置项。")]),s._v(" "),n("p",[s._v("配置文件 "),n("code",[s._v("celery_demo/config.py")]),s._v("：")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# celery_demo/config.py")]),s._v("\nbroker_url "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"redis://127.0.0.1:6379/1"')]),s._v("\nresult_backend "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"redis://127.0.0.1:6379/2"')]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("主文件 "),n("code",[s._v("app.py")]),s._v("：")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# celery_demo/app.py")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" celery "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Celery\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" config\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定一个 name 即可")]),s._v("\napp "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Celery"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"celery_demo"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 其它参数通过加载配置文件的方式指定")]),s._v("\napp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("config_from_object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("config"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("h4",{attrs:{id:"_2-将任务抽离出来"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-将任务抽离出来"}},[s._v("#")]),s._v(" 2）将任务抽离出来")]),s._v(" "),n("p",[s._v("celery 可以支持非常多的定时任务，而不同种类的定时任务我们一般都会写在不同的模块中（当然这里的案例目前只有一个），然后再将这些模块组织在一个单独的目录中。")]),s._v(" "),n("p",[s._v("比如单独创建一个 "),n("code",[s._v("celery_demo/tasks/my_tasks.py")]),s._v(" 用来放置一部分任务，随便往里面写点东西，当然你也可以创建更多的文件：")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# celery_demo/tasks/my_tasks.py")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" app "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" app\n\n\n"),n("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[s._v("@app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("task")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("task1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"我是task1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"task1你好"')]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[s._v("@app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("task")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("task2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-interpolation"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('f"我是')]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string-interpolation"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('f"')]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('你好"')])]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[s._v("@app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("task")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("task3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"我是task3"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"task3你好"')]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[s._v("@app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("task")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("task4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-interpolation"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('f"我是')]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string-interpolation"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('f"')]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('你好"')])]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br")])]),n("p",[s._v("然后回到 "),n("code",[s._v("celery_demo/app.py")]),s._v("，通过 "),n("code",[s._v("include")]),s._v(" 来加载这些任务：")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("div",{staticClass:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("div",{staticClass:"highlighted"},[s._v(" ")]),n("div",{staticClass:"highlighted"},[s._v(" ")]),n("br"),n("br"),n("br"),n("br")]),n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# celery_demo/app.py")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" celery "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Celery\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" config\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 通过 include 指定存放任务的 py 文件")]),s._v("\napp "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Celery"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"celery_demo"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" include"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tasks.my_tasks"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 其它参数通过加载配置文件的方式指定")]),s._v("\napp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("config_from_object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("config"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("这里需要注意，通过 "),n("code",[s._v("include")]),s._v(" 指定存放任务的 py 文件时，它和 worker 启动路径之间的关系：")]),s._v(" "),n("ul",[n("li",[s._v("我们是在 "),n("code",[s._v("celery_demo/")]),s._v(" 目录下启动的 worker，所以上面应该写成 "),n("code",[s._v('"tasks.my_tasks"')]),s._v(" "),n("ul",[n("li",[s._v("启动时的 -A 参数就是 "),n("code",[s._v("-A app")])])])]),s._v(" "),n("li",[s._v("如果是在 "),n("code",[s._v("celery_demo/")]),s._v(" 的上一级目录启动 worker，这里就要写成 "),n("code",[s._v('"celery_demo.tasks.my_tasks"')]),s._v(" "),n("ul",[n("li",[s._v("启动时的 -A 参数也要换成 "),n("code",[s._v("-A celery_demo.app")])])])])]),s._v(" "),n("p",[s._v("如果还有其它文件，比如 "),n("code",[s._v("second_tasks.py")]),s._v("，"),n("code",[s._v("third_tasks.py")]),s._v("，按照同样的方式加进这个参数列表就行了。")]),s._v(" "),n("p",[s._v("注意修改完后要重新启动 worker：")]),s._v(" "),n("div",{staticStyle:{"text-align":"center"}},[n("img",{attrs:{src:a(431),alt:"work 输出信息：此时可以看到任务工厂中有多个任务"}}),s._v(" "),n("p",{staticStyle:{"text-align":"center",color:"#888"}},[s._v("（work 输出信息：此时可以看到任务工厂中有多个任务）")])]),s._v(" "),n("p",[s._v("输出结果显示，任务工厂都已经被加载进来了，接下来我们调用这些任务并发送至队列。")]),s._v(" "),n("h4",{attrs:{id:"_3-调用任务"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-调用任务"}},[s._v("#")]),s._v(" 3）调用任务")]),s._v(" "),n("p",[s._v("要调用这些任务，编辑现在的 "),n("code",[s._v("run_async_task.py")]),s._v(" 如下：")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# celery_demo/run_async_task.py")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" tasks"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("my_tasks "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# get() 方法用于获取任务的返回值，前面讲过")]),s._v("\ntask1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("delay"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("get"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ntask2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("delay"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"张三"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("get"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ntask3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("delay"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("get"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ntask4"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("delay"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"李四"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("get"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("执行脚本，可以发现结果正常返回了，再来看看此时的 worker 的输出：")]),s._v(" "),n("div",{staticStyle:{"text-align":"center"}},[n("img",{attrs:{src:a(432),alt:"调用多个任务时，work 输出"}}),s._v(" "),n("p",{staticStyle:{"text-align":"center",color:"#888"}},[s._v("（调用多个任务时，work 输出）")])]),s._v(" "),n("p",[s._v("通过上面这些微小的抽象封装，添加任务就更加方便和优雅一些了。")]),s._v(" "),n("h2",{attrs:{id:"实现定时任务示例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实现定时任务示例"}},[s._v("#")]),s._v(" 实现定时任务示例")]),s._v(" "),n("h3",{attrs:{id:"生产用代码-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#生产用代码-2"}},[s._v("#")]),s._v(" 生产用代码")]),s._v(" "),n("h4",{attrs:{id:"_1-后台启动-worker"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-后台启动-worker"}},[s._v("#")]),s._v(" 1）后台启动 worker")]),s._v(" "),n("p",[s._v("既然是定时任务，那么就意味着 worker 要后台启动，否则一旦远程连接断开，就停掉了。因此 celery 是支持我们后台启动的，并且可以启动多个。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动 worker")]),s._v("\ncelery multi start w1 -A main -l info \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可以同时启动多个")]),s._v("\ncelery multi start w2 w3 -A main -l info\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 以上我们就启动了 3 个 worker")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果想停止的话")]),s._v("\ncelery multi stop w1 w2 w3 -A main -l info\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("这样启动后，celery 会默认创建两个目录，分别是 "),n("code",[s._v("/var/log/celery")]),s._v(" 和 "),n("code",[s._v("/var/run/celery")]),s._v("。")]),s._v(" "),n("p",[s._v("不过为了更好地观察到输出，我们还是用之前的方式，选择前台启动。")]),s._v(" "),n("h4",{attrs:{id:"_2-编写任务"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-编写任务"}},[s._v("#")]),s._v(" 2）编写任务")]),s._v(" "),n("p",[s._v("编写定时任务时，延续使用上面的生产用代码，当前的项目目录如下：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("celery_demo/\n├── app.py\n├── config.py\n├── run_async_task.py\n├── tasks/\n│   └── my_tasks.py\n└── ...\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("然后回顾一下 celery 的架构，里面还有一个 celery beat。在前面的例子里，我们调用任务工厂的 delay 方法，手动将任务发送到队列，此时就相当于手动调用异步任务。如果是设置定时任务，那么 celery beat 进程就会通过读取配置文件的内容，周期性地将定时任务发往任务队列。")]),s._v(" "),n("p",[s._v("现在，在 "),n("code",[s._v("tasks/")]),s._v(" 目录里面再创建一个 "),n("code",[s._v("period_task.py")]),s._v(" 文件，此时的项目目录如下：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("div",{staticClass:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{staticClass:"highlighted"},[s._v(" ")]),n("br"),n("br")]),n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("celery_demo/\n├── app.py\n├── config.py\n├── run_async_task.py\n├── tasks/\n│   │── my_tasks.py\n│   └── period_task.py\n└── ...\n")])]),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("其中，"),n("code",[s._v("period_task.py")]),s._v(" 里面的代码如下：")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# celery_demo/tasks/period_task.py")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" celery"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("schedules "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" crontab\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" app "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" app\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" my_tasks "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" task1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" task2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" task3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" task4\n\n\n"),n("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[s._v("@app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("on_after_configure"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("connect")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("period_task")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sender"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("**")]),s._v("kwargs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第一个参数为 schedule，可以是 float 或者 crontab")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第二个参数是任务，第三个参数是名字")]),s._v("\n    sender"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("add_periodic_task"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" task1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                             name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"每10秒执行一次"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    sender"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("add_periodic_task"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("15.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" task2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"task2"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                             name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"每15秒执行一次"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    sender"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("add_periodic_task"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" task3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                             name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"每20秒执行一次"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    sender"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("add_periodic_task"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n        crontab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("hour"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" minute"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" day_of_week"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        task4"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"task4"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"每个星期天的18:05运行一次"')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("p",[s._v("其他文件里的代码暂时不变。")]),s._v(" "),n("h4",{attrs:{id:"_3-设置时区"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-设置时区"}},[s._v("#")]),s._v(" 3）设置时区")]),s._v(" "),n("p",[s._v("既然使用了定时任务，那么一定要设置时区。")]),s._v(" "),n("p",[s._v("在 "),n("code",[s._v("config.py")]),s._v(" 里面增加时区相关的配置项：")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# celery_demo/config.py")]),s._v("\nbroker_url "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"redis://127.0.0.1:6379/1"')]),s._v("\nresult_backend "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"redis://127.0.0.1:6379/2"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 之前说过，celery 默认使用 utc 时间")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 其实我们是可以手动禁用的，然后手动指定时区")]),s._v("\nenable_utc "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),s._v("\ntimezone "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Asia/Shanghai"')]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h4",{attrs:{id:"_4-修改-app-增加定时任务"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-修改-app-增加定时任务"}},[s._v("#")]),s._v(" 4）修改 app，增加定时任务")]),s._v(" "),n("p",[s._v("最后是修改 "),n("code",[s._v("app.py")]),s._v("，将定时任务加进去。")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("div",{staticClass:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{staticClass:"highlighted"},[s._v(" ")]),n("br"),n("br"),n("br"),n("br")]),n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# celery_demo/app.py")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" celery "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Celery\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" config\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 通过 include 指定存放任务的 py 文件，这里在前面的基础上新增了定时任务")]),s._v("\napp "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Celery"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__name__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" include"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tasks.my_tasks"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tasks.period_task"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 其它参数通过加载配置文件的方式指定")]),s._v("\napp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("config_from_object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("config"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("h4",{attrs:{id:"_5-启动任务"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-启动任务"}},[s._v("#")]),s._v(" 5）启动任务")]),s._v(" "),n("p",[s._v("下面就来启动任务，先来启动 worker，生产上应该后台启动，这里为了看到信息，选择前台启动。")]),s._v(" "),n("p",[s._v("启动 celery worker 进程，在项目的根目录下执行下面命令：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("celery -A app worker -l info\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("发现 "),n("code",[s._v("tasks.my_tasks")]),s._v(" 里面的 4 个任务工厂都被添加进来了。")]),s._v(" "),n("div",{staticStyle:{"text-align":"center"}},[n("img",{attrs:{src:a(433),alt:"启动 celery worker"}}),s._v(" "),n("p",{staticStyle:{"text-align":"center",color:"#888"}},[s._v("（启动 celery worker）")])]),s._v(" "),n("p",[s._v("然后再来启动 celery beat 进程，定时地将任务发送到 broker，在项目根目录下执行下面命令：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("celery -A tasks.period_task beat -l info\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("解释一下：")]),s._v(" "),n("ul",[n("li",[s._v("-A 参数：\n"),n("ul",[n("li",[s._v("对于 celery worker 而言，-A 后面跟的时 app.py")]),s._v(" "),n("li",[s._v("对于 celery beat 而言，-A 后面跟的时定时任务所在的 py 文件")]),s._v(" "),n("li",[s._v("共同点是，-A 必须放在 worker 和 beat 的前面，表示它是一个全局选项")])])]),s._v(" "),n("li",[s._v("-l info：这个参数显然不是全局的，worker 和 beat 子命令都有 -l 选项，所以它要放在后面")]),s._v(" "),n("li",[s._v("如果想让 celery beat 后台启动，那么可以在结尾加上 --deatch 参数")])]),s._v(" "),n("p",[s._v("启动之后，在 Worker 窗口可以看到：")]),s._v(" "),n("ul",[n("li",[s._v("任务 task1 每 10 秒执行一次")]),s._v(" "),n("li",[s._v("任务 task2 每 15 秒执行一次")]),s._v(" "),n("li",[s._v("任务 task3 每 20 秒执行一次")]),s._v(" "),n("li",[s._v("而任务 task4 每个星期天的 18:05 执行一次")])]),s._v(" "),n("div",{staticStyle:{"text-align":"center"}},[n("img",{attrs:{src:a(434),alt:"启动 celery beat"}}),s._v(" "),n("p",{staticStyle:{"text-align":"center",color:"#888"}},[s._v("（启动 celery beat）")])]),s._v(" "),n("p",[s._v("此时我们就成功实现了定时任务，并且是通过定义定时函数、打上装饰器的方式实现的。")]),s._v(" "),n("h3",{attrs:{id:"crontab-参数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#crontab-参数"}},[s._v("#")]),s._v(" crontab 参数")]),s._v(" "),n("p",[s._v("定时任务除了指定一个浮点数之外（表示每隔多少秒执行一次），还可以指定 crontab。关于 crontab 应该都知道是什么，我们在 Linux 上想启动定时任务的话，直接 "),n("code",[s._v("crontab -e")]),s._v(" 然后添加即可。")]),s._v(" "),n("p",[s._v("而 celery 的 crontab 和 Linux 高度相似，我们看一下源码就知道了。")]),s._v(" "),n("div",{staticStyle:{"text-align":"center"}},[n("img",{staticStyle:{width:"640px"},attrs:{src:a(435),alt:"crontab 的源码"}}),s._v(" "),n("p",{staticStyle:{"text-align":"center",color:"#888"}},[s._v("（crontab 的源码）")])]),s._v(" "),n("p",[s._v("简单解释一下：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("minute")]),s._v("：0-59，表示第几分钟触发，"),n("code",[s._v("*")]),s._v(" 表示每分钟触发一次。")]),s._v(" "),n("li",[n("code",[s._v("hour")]),s._v("：0-23，表示第几个小时触发，"),n("code",[s._v("*")]),s._v(" 表示每小时都会触发。比如 "),n("code",[s._v("minute=2, hour=*")]),s._v("，表示每小时的第 2 分钟触发一次。")]),s._v(" "),n("li",[n("code",[s._v("day_of_week")]),s._v("：0-6，表示一周的第几天触发，0 是星期天，1-6 分别是星期一到星期六，不习惯的话也可以用字符串 mon，tue，wed，thu，fri，sat，sun 表示。")]),s._v(" "),n("li",[n("code",[s._v("month_of_year")]),s._v("：当前年份的第几个月。")])]),s._v(" "),n("p",[s._v("以上就是这些参数的含义，并且参数接收的值还可以是一些特殊的通配符：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("*")]),s._v("：所有，比如 "),n("code",[s._v("minute=*")]),s._v("，表示每分钟触发。")]),s._v(" "),n("li",[n("code",[s._v("*/a")]),s._v("：所有可被 a 整除的时候触发。")]),s._v(" "),n("li",[n("code",[s._v("a-b")]),s._v("：a 到 b 范围内触发。")]),s._v(" "),n("li",[n("code",[s._v("a-b/c")]),s._v("：范围 a-b 且能够被 c 整除的时候触发。")]),s._v(" "),n("li",[n("code",[s._v("2,10,40")]),s._v("：比如 "),n("code",[s._v("minute=2,10,40")]),s._v(" 表示第 2、10、40 分钟的时候触发。")])]),s._v(" "),n("p",[s._v("通配符之间是可以自由组合的，比如 "),n("code",[s._v("*/3,8-17")]),s._v(" 就表示能被 3 整除，或范围处于 8-17 的时候触发。")]),s._v(" "),n("h2",{attrs:{id:"其他常用要点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#其他常用要点"}},[s._v("#")]),s._v(" 其他常用要点")]),s._v(" "),n("p",[s._v("下面整理一些开发过程中可能会用到的东西。")]),s._v(" "),n("h3",{attrs:{id:"调用任务-delay-和-apply-async"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#调用任务-delay-和-apply-async"}},[s._v("#")]),s._v(" 调用任务：delay 和 apply_async")]),s._v(" "),n("p",[s._v("在上面的例子中，基本都是使用了 "),n("code",[s._v("delay()")]),s._v(" 方法来调用任务。事实上，还有一个 "),n("code",[s._v("apply_async()")]),s._v(" 方法也可以用来调用任务。并且前者是封装了后者。")]),s._v(" "),n("p",[s._v("它们的区别是：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("delay")]),s._v(" 方法只接收函数的参数，调用的时候里面直接传递函数所需的参数即可。")]),s._v(" "),n("li",[n("code",[s._v("apply_async")]),s._v(" 方法除了接收函数的参数，该方法自身也能接收很多参数。")])]),s._v(" "),n("p",[s._v("看看它们的"),n("a",{attrs:{href:"https://github.com/celery/celery/blob/master/celery/app/task.py",target:"_blank",rel:"noopener noreferrer"}},[s._v("源码"),n("OutboundLink")],1),s._v("：")]),s._v(" "),n("div",{staticStyle:{"text-align":"center"}},[n("img",{staticStyle:{width:"640px"},attrs:{src:a(436),alt:"delay 方法和 apply_async 方法的源码"}}),s._v(" "),n("p",{staticStyle:{"text-align":"center",color:"#888"}},[s._v("（delay 方法和 apply_async 方法的源码）")])]),s._v(" "),n("p",[s._v("源码中，"),n("code",[s._v("delay")]),s._v(" 方法的 "),n("code",[s._v("*args")]),s._v(" 和 "),n("code",[s._v("**kwargs")]),s._v(" 就是函数的参数，它会传递给 "),n("code",[s._v("apply_async")]),s._v(" 的 "),n("code",[s._v("args")]),s._v(" 和 "),n("code",[s._v("kwargs")]),s._v("，而其它的参数就是发送任务时所设置的一些参数。")]),s._v(" "),n("p",[s._v("调用 "),n("code",[s._v("apply_async")]),s._v(" 的一般形式如下：")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[s._v("apply_async"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("args"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" kwargs"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" route_name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("**")]),s._v("options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("这里重点介绍几个常用参数：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("countdown")]),s._v("：倒计时，表示任务延迟多少秒之后再执行，参数为整型。"),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[s._v("my_task"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("apply_async"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("args"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("张三"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" countdown"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 5 秒后执行任务")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])]),s._v(" "),n("li",[n("code",[s._v("eta")]),s._v("：指定任务被调度的具体时间（estimated time of arrival），参数为 datetime 类型，如果指定了 countdown，那么这个参数就不应该再指定。\n"),n("ul",[n("li",[s._v("如果我们手动指定了这个参数，那么一定要注意时区的问题，要保证 celery 所使用的时区和你传递的 datetime 的时区是统一的。")])]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" datetime "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" datetime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" timedelta\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当前 UTC 时间再加 10 秒后执行任务")]),s._v("\ntask1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("multiply"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("apply_async"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("args"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("张三"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" eta"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("datetime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("utcnow"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" timedelta"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("seconds"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])])]),s._v(" "),n("li",[n("code",[s._v("expires")]),s._v("：如果到规定时间、或者未来的多少秒之内，任务还没有发送到队列被 worker 执行，那么该任务将被丢弃。参数为 datetime 或者整型。")]),s._v(" "),n("li",[n("code",[s._v("retry")]),s._v("：任务失败之后是否重试，bool 类型。")]),s._v(" "),n("li",[n("code",[s._v("retry_policy")]),s._v("：重试所采用的策略，如果指定这个参数，那么 retry 必须要为 True。参数类型是一个字典，里面参数如下：\n"),n("ul",[n("li",[n("code",[s._v("max_retries")]),s._v("：最大重试次数，默认为 3 次。")]),s._v(" "),n("li",[n("code",[s._v("interval_start")]),s._v("：重试等待的时间间隔秒数，默认为 0，表示直接重试不等待。")]),s._v(" "),n("li",[n("code",[s._v("interval_step")]),s._v("：每次重试让重试间隔增加的秒数，可以是数字或浮点数，默认为 0.2。")]),s._v(" "),n("li",[n("code",[s._v("interval_max")]),s._v("：重试间隔最大的秒数，即通过 "),n("code",[s._v("interval_step")]),s._v(" 增大到多少秒之后, 就不在增加了, 可以是数字或者浮点数。")])])])]),s._v(" "),n("p",[s._v("其它的参数可以自己手动测试一下，这里不细说了，根据自身的业务选择合适的参数即可。")]),s._v(" "),n("p",[s._v("对了，使用 "),n("code",[s._v("apply_async")]),s._v("，要注意参数的传递。位置参数使用元组或者列表，关键字参数使用字典。因为它接收的是 "),n("code",[s._v("args")]),s._v(" 和 "),n("code",[s._v("kwargs")]),s._v("，不是 "),n("code",[s._v("*args")]),s._v(" 和 "),n("code",[s._v("**kwargs")]),s._v("。")]),s._v(" "),n("p",[s._v("随便举个例子：")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[s._v("my_task"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("apply_async"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'张三'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"age"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" task_id"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"小家伙"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" countdown"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("get"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h3",{attrs:{id:"celery-的配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#celery-的配置"}},[s._v("#")]),s._v(" celery 的配置")]),s._v(" "),n("p",[s._v("celery 都有那些配置呢？列一些相对常用的：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('broker_url：broker 的地址，就是类 Celery 里面传入的 broker 参数。\nresult_backend：存储结果地址，就是类 Celery 里面传入的 backend 参数。\n\ntask_serializer：任务序列化方式，支持以下几种：\n    binary：二进制序列化方式，pickle 模块默认的序列化方法；\n    json：支持多种语言，可解决多语言的问题，但通用性不高；\n    xml：标签语言，和 json 定位相似；\n    msgpack：二进制的类 json 序列化，但比 json 更小、更快；\n    yaml：表达能力更强、支持的类型更多，但是在 Python里面的性能不如 json；\n根据情况，选择合适的类型。如果不是跨语言的话，直接选择 binary 即可，默认是 json。\n\nresult_serializer：任务执行结果序列化方式，支持的方式和任务序列化方式一致。\nresult_expires：任务结果的过期时间，单位是秒。\naccept_content：指定任务接受的内容序列化类型(序列化)，一个列表，比如：["msgpack", "binary", "json"]。\ntimezone：时区，默认是 UTC 时区。\nenable_utc：是否开启 UTC 时区，默认为 True；如果为 False，则使用本地时区。\ntask_publish_retry：发送消息失败时是否重试，默认为 True。\nworker_concurrency：并发的 worker 数量。\nworker_prefetch_multiplier：每次 worker 从任务队列中获取的任务数量。\nworker_max_tasks_per_child：每个 worker 执行多少次就会被杀掉，默认是无限的。\ntask_time_limit：单个任务执行的最大时间，单位是秒。\ntask_default_queue：设置默认的队列名称，如果一个消息不符合其它的队列规则，就会放在默认队列里面。如果什么都不设置的话，数据都会发送到默认的队列中。\ntask_queues：设置详细的队列（将 RabbitMQ 作为 broker 时需要使用）\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br")])]),n("p",[s._v("可以看到 celery 的配置非常多而且不止我们上面说的那些，更多配置可以"),n("a",{attrs:{href:"https://docs.celeryq.dev/en/stable/userguide/configuration.html#general-settings",target:"_blank",rel:"noopener noreferrer"}},[s._v("查看官网"),n("OutboundLink")],1),s._v("，写的比较详细。")]),s._v(" "),n("p",[s._v("值得一提的是，在 celery 版本 5.0 之前配置项都是大写的，而从 5.0 开始配置项改成小写了。不过老的写法目前仍然支持，只是启动的时候会抛警告，并且在 6.0 的时候不再兼容老的写法。")]),s._v(" "),n("p",[s._v("关于这一块的说明可以参见"),n("a",{attrs:{href:"https://docs.celeryq.dev/en/latest/userguide/configuration.html#new-lowercase-settings",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方文档 - New lowercase settings"),n("OutboundLink")],1),s._v("。")]),s._v(" "),n("p",[s._v("官网很贴心地将老版本的配置和新版本的配置罗列了出来，尽管配置有很多，但并不是每一个都要用，可以根据自身的业务合理选择。")]),s._v(" "),n("h3",{attrs:{id:"task-对象"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#task-对象"}},[s._v("#")]),s._v(" Task 对象")]),s._v(" "),n("p",[s._v("我们之前通过对一个函数使用 "),n("code",[s._v("@app.task")]),s._v(" 即可将其变成一个任务工厂，而这个任务工厂就是一个 Task 实例对象。而我们在使用 "),n("code",[s._v("@app.task")]),s._v(" 的时候，其实是可以加上很多的参数的，常用参数如下：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("name")]),s._v("：默认的任务名是一个 uuid，我们可以通过 name 参数指定任务名，当然这个 name 就是 "),n("code",[s._v("apply_async")]),s._v(" 的参数 name。如果在 "),n("code",[s._v("apply_async")]),s._v(" 中指定了，那么以 "),n("code",[s._v("apply_async")]),s._v(" 指定的为准。")]),s._v(" "),n("li",[n("code",[s._v("bind")]),s._v("：一个 bool 值，表示这个任务函数是否和任务实例进行绑定。如果绑定，任务实例会作为参数（"),n("code",[s._v("self")]),s._v("）传递到这个函数。")]),s._v(" "),n("li",[n("code",[s._v("base")]),s._v("：定义任务的基类，用于定义回调函数，当任务到达某个状态时触发不同的回调函数，默认是 Task，所以我们一般会自己写一个类然后继承 Task。")]),s._v(" "),n("li",[n("code",[s._v("default_retry_delay")]),s._v("：设置该任务重试的延迟机制，当任务执行失败后，会自动重试，单位是秒，默认是 3 分钟。")]),s._v(" "),n("li",[n("code",[s._v("serializer")]),s._v("：指定序列化的方法。")])]),s._v(" "),n("p",[s._v("当然 "),n("code",[s._v("app.task")]),s._v(" 还有很多不常用的参数，这里就不说了，有兴趣可以去查看"),n("a",{attrs:{href:"https://docs.celeryq.dev/en/stable/userguide/tasks.html#list-of-options",target:"_blank",rel:"noopener noreferrer"}},[s._v("官网 - Tasks"),n("OutboundLink")],1),s._v("或"),n("a",{attrs:{href:"https://github.com/celery/celery/blob/master/celery/app/task.py",target:"_blank",rel:"noopener noreferrer"}},[s._v("源码"),n("OutboundLink")],1),s._v("。")]),s._v(" "),n("p",[s._v("下面演示一下几个常用的参数：")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# celery_demo/main.py")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" celery "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Celery\n\nbroker_url "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"redis://127.0.0.1:6379/1"')]),s._v("\nresult_backend "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"redis://127.0.0.1:6379/2"')]),s._v("\n\napp "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Celery"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"celery_demo"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    broker"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("broker_url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    backend"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("result_backend\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[s._v("@app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("task")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"加法运算"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" y\n\n\n"),n("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[s._v("@app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("task")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"减法运算"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" bind"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sub")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n    如果 bind=True，则需要多指定一个 self\n    这个 self 就是对应的任务工厂\n    """')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# self.request 是一个 celery.task.Context 对象")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取它的属性字典，即可拿到该任务的所有属性")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("request"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("__dict__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" y\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br")])]),n("p",[s._v("重新启动 worker：")]),s._v(" "),n("div",{staticStyle:{"text-align":"center"}},[n("img",{attrs:{src:a(437),alt:"@app.task 传参后，启动 worker 观察输出"}}),s._v(" "),n("p",{staticStyle:{"text-align":"center",color:"#888"}},[s._v("（@app.task 传参后，启动 worker 观察输出）")])]),s._v(" "),n("p",[s._v("然后创建任务发送至队列，再由 worker 取出执行：")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# celery_demo/test.py")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" main "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" add"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sub\n\n\nadd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("delay"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("111")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("222")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("get"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nsub"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("delay"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("111")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("222")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("get"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("执行成功后，可以观察一下 worker 的输出，这里就不贴图了。")]),s._v(" "),n("p",[s._v("需要注意的是，创建任务工厂时，如果指定了 "),n("code",[s._v("bind=True")]),s._v("，那么执行任务时会将任务实例本身作为第一个参数（"),n("code",[s._v("self")]),s._v("）传过去。任务实例本质上就是 Task 实例对象，调用它的 "),n("code",[s._v("delay")]),s._v(" 方法即可创建任务。")]),s._v(" "),n("p",[s._v("所以如果我们在 sub 内部继续调用 "),n("code",[s._v("self.delay(11, 22)")]),s._v("，会有什么后果呢？没错，worker 会进入无限递归。因为执行任务的时候，在任务的内部又创建了任务，所以会死循环下去。")]),s._v(" "),n("p",[s._v("当然 self 还有很多其它属性和方法，具体有哪些可以通过 Task 这个类来查看。这里面比较重要的是 self.request，它包含了某个具体任务的相关信息，而且信息非常多。")]),s._v(" "),n("p",[s._v("比如当前传递的参数是什么，就可以通过 self.request 拿到。当然啦，self.request 是一个 Context 对象，因为不同任务获取 self.request 的结果肯定是不同的，但 self（任务工厂）却只有一个，所以要基于 Context 进行隔离。")]),s._v(" "),n("p",[s._v("我们可以通过 "),n("code",[s._v("__dict__")]),s._v(" 拿到 Context 对象的属性字典，然后再进行操作。")]),s._v(" "),n("p",[n("strong",[s._v("最后再来说一说 "),n("code",[s._v("@app.task")]),s._v(" 里面的 "),n("code",[s._v("base")]),s._v(" 参数")]),s._v("。")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# celery_demo/main.py")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" celery "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Celery"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Task\n\nbroker_url "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"redis://127.0.0.1:6379/1"')]),s._v("\nresult_backend "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"redis://127.0.0.1:6379/2"')]),s._v("\n\napp "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Celery"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"celery_demo"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    broker"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("broker_url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    backend"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("result_backend\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyTask")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Task"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n    自定义一个类，继承自celery.Task\n    exc: 失败时的错误的类型；\n    task_id: 任务的id；\n    args: 任务函数的位置参数；\n    kwargs: 任务函数的关键字参数；\n    einfo: 失败时的异常详细信息；\n    retval: 任务成功执行的返回值；\n    """')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("on_failure")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" exc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" task_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" kwargs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" einfo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""任务失败时执行"""')]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("on_success")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" retval"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" task_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" kwargs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""任务成功时执行"""')]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"任务执行成功"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("on_retry")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" exc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" task_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" kwargs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" einfo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""任务重试时执行"""')]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用 @app.task 的时候，指定 base 即可")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 然后任务在执行的时候，会触发 MyTask 里面的回调函数")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[s._v("@app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("task")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"地灵殿"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" base"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("MyTask"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"加法计算"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" y\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br")])]),n("p",[s._v("没错，现在指定了 base 为自定义的 MyTask 后，任务在执行的时候会根据执行状态的不同，触发 MyTask 里面的不同方法。")]),s._v(" "),n("h3",{attrs:{id:"任务分组"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#任务分组"}},[s._v("#")]),s._v(" 任务分组")]),s._v(" "),n("p",[s._v("有时候我们也可以将执行的多个任务，划分到一个组中。")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# celery_demo/tasks/math_tasks.py")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" app "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" app\n\n\n"),n("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[s._v("@app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("task")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"加法计算"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" y\n\n\n"),n("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[s._v("@app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("task")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sub")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"减法计算"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" y\n\n\n"),n("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[s._v("@app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("task")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mul")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"乘法计算"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" y\n\n\n"),n("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[s._v("@app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("task")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"除法计算"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("//")]),s._v(" y\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br")])]),n("p",[s._v("记得重启 worker，因为我们修改了任务工厂。")]),s._v(" "),n("p",[s._v("然后来导入它们，创建任务，并将这些任务划分到一个组中。")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" celery "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" group\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" tasks"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("math_tasks "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" add"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sub"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" mul"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" div\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 调用 signature 方法，得到 signature 对象")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 此时 t1.delay() 和 add.delay(2, 3) 是等价的")]),s._v("\nt1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" add"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("signature"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("args"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nt2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" sub"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("signature"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("args"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nt3 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" mul"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("signature"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("args"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nt4 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" div"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("signature"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("args"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 但是变成 signature 对象之后，我们可以将其放到一个组里面")]),s._v("\ngp "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" group"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("t1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" t2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" t3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" t4"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行组任务，返回 celery.result.GroupResult 对象")]),s._v("\nres "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" gp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 每个组也有一个唯一 id")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"组id:"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n组id: 65f32cc4-b8ce-4bf8-916b-f5cc359a901a\n"""')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 调用 get 方法也会阻塞，知道组里面任务全部完成")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"组结果:"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("get"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n组结果: [5, -1, 6, 2]\n"""')]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br")])]),n("p",[s._v("可以看到整个组也是有唯一 id 的，另外 "),n("code",[s._v("signature")]),s._v(" 也可以写成 "),n("code",[s._v("subtask")]),s._v(" 或者 "),n("code",[s._v("s")]),s._v("，在源码里面这几个是等价的。")]),s._v(" "),n("p",[s._v("观察一下 worker 的输出，任务是并发执行的，所以哪个先完成不好说。但是调用组的 "),n("code",[s._v("get")]),s._v(" 方法时，里面的返回值顺序一定和任务添加时候的顺序保持一致。")]),s._v(" "),n("h3",{attrs:{id:"任务链式调用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#任务链式调用"}},[s._v("#")]),s._v(" 任务链式调用")]),s._v(" "),n("p",[s._v("除此之外，celery 还支持将多个任务像链子一样串起来，第一个任务的输出会作为第二个任务的输入，传递给下一个任务的第一个参数。")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# celery_demo/tasks/chain_tasks.py")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" app "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" app\n\n\n"),n("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[s._v("@app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("task")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("task1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    l "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" l\n\n\n"),n("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[s._v("@app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("task")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# task1 的返回值会传递给这里的 task1_return")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("task2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("task1_return"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    task1_return"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("append"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" task1_return\n\n\n"),n("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[s._v("@app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("task")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# task2 的返回值会传递给这里的 task2_return")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("task3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("task2_return"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" num"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" num "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" task2_return"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[s._v("@app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("task")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# task3 的返回值会传递给这里的 task3_return")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("task4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("task3_return"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("sum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("task3_return"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br")])]),n("p",[s._v("然后我们看怎么将这些任务像链子一样串起来：")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" celery "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" chain\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" tasks"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("chain_tasks "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将多个 signature 对象进行与运算")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当然内部肯定重写了 __or__ 这个魔法方法")]),s._v("\nmy_chain "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" chain"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    task1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" task2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" task3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" task4"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行任务链")]),s._v("\nres "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" my_chain"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取返回值")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("get"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n128\n"""')]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("p",[s._v("这种链式处理的场景非常常见。")]),s._v(" "),n("h2",{attrs:{id:"完整代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#完整代码"}},[s._v("#")]),s._v(" 完整代码")]),s._v(" "),n("p",[s._v("完整代码我放到 GitHub 了，详见 "),n("a",{attrs:{href:"https://github.com/wenyuan/celery_demo",target:"_blank",rel:"noopener noreferrer"}},[s._v("celery_demo"),n("OutboundLink")],1),s._v("。")]),s._v(" "),n("h2",{attrs:{id:"参考资料"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[s._v("#")]),s._v(" 参考资料")]),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://docs.celeryq.dev",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方文档"),n("OutboundLink")],1)])]),s._v(" "),n("p",[s._v("（完）")])])}),[],!1,null,null,null);t.default=e.exports}}]);